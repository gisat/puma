
Ext.define('Ext.Layer',{extend:'Ext.Element',uses:['Ext.Shadow'],statics:{shims:[]},isLayer:true,constructor:function(config,existingEl){config=config||{};var me=this,dh=Ext.DomHelper,cp=config.parentEl,pel=cp?Ext.getDom(cp):document.body,hm=config.hideMode;if(existingEl){me.dom=Ext.getDom(existingEl);}
if(!me.dom){me.dom=dh.append(pel,config.dh||{tag:'div',cls:Ext.baseCSSPrefix+'layer'});}else{me.addCls(Ext.baseCSSPrefix+'layer');if(!me.dom.parentNode){pel.appendChild(me.dom);}}
if(config.id){me.id=me.dom.id=config.id;}else{me.id=Ext.id(me.dom);}
Ext.Element.addToCache(me);if(config.cls){me.addCls(config.cls);}
me.constrain=config.constrain!==false;if(hm){me.setVisibilityMode(Ext.Element[hm.toUpperCase()]);if(me.visibilityMode==Ext.Element.ASCLASS){me.visibilityCls=config.visibilityCls;}}else if(config.useDisplay){me.setVisibilityMode(Ext.Element.DISPLAY);}else{me.setVisibilityMode(Ext.Element.VISIBILITY);}
if(config.shadow){me.shadowOffset=config.shadowOffset||4;me.shadow=new Ext.Shadow({offset:me.shadowOffset,mode:config.shadow});me.disableShadow();}else{me.shadowOffset=0;}
me.useShim=config.shim!==false&&Ext.useShims;if(config.hidden===true){me.hide();}else{me.show();}},getZIndex:function(){return parseInt((this.getShim()||this).getStyle('z-index'),10);},getShim:function(){var me=this,shim,pn;if(!me.useShim){return null;}
if(!me.shim){shim=me.self.shims.shift();if(!shim){shim=me.createShim();shim.enableDisplayMode('block');shim.hide();}
pn=me.dom.parentNode;if(shim.dom.parentNode!=pn){pn.insertBefore(shim.dom,me.dom);}
me.shim=shim;}
return me.shim;},hideShim:function(){var me=this;if(me.shim){me.shim.setDisplayed(false);me.self.shims.push(me.shim);delete me.shim;}},disableShadow:function(){var me=this;if(me.shadow&&!me.shadowDisabled){me.shadowDisabled=true;me.shadow.hide();me.lastShadowOffset=me.shadowOffset;me.shadowOffset=0;}},enableShadow:function(show){var me=this;if(me.shadow&&me.shadowDisabled){me.shadowDisabled=false;me.shadowOffset=me.lastShadowOffset;delete me.lastShadowOffset;if(show){me.sync(true);}}},sync:function(doShow){var me=this,shadow=me.shadow,shadowPos,shimStyle,shadowSize,shim,l,t,w,h,shimIndex;if(!me.updating&&me.isVisible()&&(shadow||me.useShim)){shim=me.getShim();l=me.getLocalX();t=me.getLocalY();w=me.dom.offsetWidth;h=me.dom.offsetHeight;if(shadow&&!me.shadowDisabled){if(doShow&&!shadow.isVisible()){shadow.show(me);}else{shadow.realign(l,t,w,h);}
if(shim){shimIndex=shim.getStyle('z-index');if(shimIndex>me.zindex){me.shim.setStyle('z-index',me.zindex-2);}
shim.show();if(shadow.isVisible()){shadowPos=shadow.el.getXY();shimStyle=shim.dom.style;shadowSize=shadow.el.getSize();if(Ext.supports.CSS3BoxShadow){shadowSize.height+=6;shadowSize.width+=4;shadowPos[0]-=2;shadowPos[1]-=4;}
shimStyle.left=(shadowPos[0])+'px';shimStyle.top=(shadowPos[1])+'px';shimStyle.width=(shadowSize.width)+'px';shimStyle.height=(shadowSize.height)+'px';}else{shim.setSize(w,h);shim.setLeftTop(l,t);}}}else if(shim){shimIndex=shim.getStyle('z-index');if(shimIndex>me.zindex){me.shim.setStyle('z-index',me.zindex-2);}
shim.show();shim.setSize(w,h);shim.setLeftTop(l,t);}}
return me;},remove:function(){this.hideUnders();this.callParent();},beginUpdate:function(){this.updating=true;},endUpdate:function(){this.updating=false;this.sync(true);},hideUnders:function(){if(this.shadow){this.shadow.hide();}
this.hideShim();},constrainXY:function(){if(this.constrain){var vw=Ext.Element.getViewWidth(),vh=Ext.Element.getViewHeight(),s=Ext.getDoc().getScroll(),xy=this.getXY(),x=xy[0],y=xy[1],so=this.shadowOffset,w=this.dom.offsetWidth+so,h=this.dom.offsetHeight+so,moved=false;if((x+w)>vw+s.left){x=vw-w-so;moved=true;}
if((y+h)>vh+s.top){y=vh-h-so;moved=true;}
if(x<s.left){x=s.left;moved=true;}
if(y<s.top){y=s.top;moved=true;}
if(moved){Ext.Layer.superclass.setXY.call(this,[x,y]);this.sync();}}
return this;},getConstrainOffset:function(){return this.shadowOffset;},setVisible:function(visible,animate,duration,callback,easing){var me=this,cb;cb=function(){if(visible){me.sync(true);}
if(callback){callback();}};if(!visible){me.hideUnders(true);}
me.callParent([visible,animate,duration,callback,easing]);if(!animate){cb();}
return me;},beforeFx:function(){this.beforeAction();return this.callParent(arguments);},afterFx:function(){this.callParent(arguments);this.sync(this.isVisible());},beforeAction:function(){if(!this.updating&&this.shadow){this.shadow.hide();}},setLeft:function(left){this.callParent(arguments);return this.sync();},setTop:function(top){this.callParent(arguments);return this.sync();},setLeftTop:function(left,top){this.callParent(arguments);return this.sync();},setXY:function(xy,animate,duration,callback,easing){var me=this;callback=me.createCB(callback);me.fixDisplay();me.beforeAction();me.callParent([xy,animate,duration,callback,easing]);if(!animate){callback();}
return me;},createCB:function(callback){var me=this,showShadow=me.shadow&&me.shadow.isVisible();return function(){me.constrainXY();me.sync(showShadow);if(callback){callback();}};},setX:function(x,animate,duration,callback,easing){this.setXY([x,this.getY()],animate,duration,callback,easing);return this;},setY:function(y,animate,duration,callback,easing){this.setXY([this.getX(),y],animate,duration,callback,easing);return this;},setSize:function(w,h,animate,duration,callback,easing){var me=this;callback=me.createCB(callback);me.beforeAction();me.callParent([w,h,animate,duration,callback,easing]);if(!animate){callback();}
return me;},setWidth:function(w,animate,duration,callback,easing){var me=this;callback=me.createCB(callback);me.beforeAction();me.callParent([w,animate,duration,callback,easing]);if(!animate){callback();}
return me;},setHeight:function(h,animate,duration,callback,easing){var me=this;callback=me.createCB(callback);me.beforeAction();me.callParent([h,animate,duration,callback,easing]);if(!animate){callback();}
return me;},setBounds:function(x,y,width,height,animate,duration,callback,easing){var me=this;callback=me.createCB(callback);me.beforeAction();if(!animate){Ext.Layer.superclass.setXY.call(me,[x,y]);Ext.Layer.superclass.setSize.call(me,width,height);callback();}else{me.callParent([x,y,width,height,animate,duration,callback,easing]);}
return me;},setZIndex:function(zindex){var me=this;me.zindex=zindex;if(me.getShim()){me.shim.setStyle('z-index',zindex++);}
if(me.shadow){me.shadow.setZIndex(zindex++);}
return me.setStyle('z-index',zindex);},onOpacitySet:function(opacity){var shadow=this.shadow;if(shadow){shadow.setOpacity(opacity);}}});Ext.define('Ext.util.CSS',(function(){var rules=null,doc=document,camelRe=/(-[a-z])/gi,camelFn=function(m,a){return a.charAt(1).toUpperCase();};return{singleton:true,constructor:function(){this.rules={};this.initialized=false;},createStyleSheet:function(cssText,id){var ss,head=doc.getElementsByTagName("head")[0],styleEl=doc.createElement("style");styleEl.setAttribute("type","text/css");if(id){styleEl.setAttribute("id",id);}
if(Ext.isIE){head.appendChild(styleEl);ss=styleEl.styleSheet;ss.cssText=cssText;}else{try{styleEl.appendChild(doc.createTextNode(cssText));}catch(e){styleEl.cssText=cssText;}
head.appendChild(styleEl);ss=styleEl.styleSheet?styleEl.styleSheet:(styleEl.sheet||doc.styleSheets[doc.styleSheets.length-1]);}
this.cacheStyleSheet(ss);return ss;},removeStyleSheet:function(id){var existing=document.getElementById(id);if(existing){existing.parentNode.removeChild(existing);}},swapStyleSheet:function(id,url){var doc=document,ss;this.removeStyleSheet(id);ss=doc.createElement("link");ss.setAttribute("rel","stylesheet");ss.setAttribute("type","text/css");ss.setAttribute("id",id);ss.setAttribute("href",url);doc.getElementsByTagName("head")[0].appendChild(ss);},refreshCache:function(){return this.getRules(true);},cacheStyleSheet:function(ss){if(!rules){rules={};}
try{var ssRules=ss.cssRules||ss.rules,selectorText,i=ssRules.length-1,j,selectors;for(;i>=0;--i){selectorText=ssRules[i].selectorText;if(selectorText){selectorText=selectorText.split(',');selectors=selectorText.length;for(j=0;j<selectors;j++){rules[Ext.String.trim(selectorText[j]).toLowerCase()]=ssRules[i];}}}}catch(e){}},getRules:function(refreshCache){if(rules===null||refreshCache){rules={};var ds=doc.styleSheets,i=0,len=ds.length;for(;i<len;i++){try{if(!ds[i].disabled){this.cacheStyleSheet(ds[i]);}}catch(e){}}}
return rules;},getRule:function(selector,refreshCache){var rs=this.getRules(refreshCache),i;if(!Ext.isArray(selector)){return rs[selector.toLowerCase()];}
for(i=0;i<selector.length;i++){if(rs[selector[i]]){return rs[selector[i].toLowerCase()];}}
return null;},updateRule:function(selector,property,value){var rule,i;if(!Ext.isArray(selector)){rule=this.getRule(selector);if(rule){rule.style[property.replace(camelRe,camelFn)]=value;return true;}}else{for(i=0;i<selector.length;i++){if(this.updateRule(selector[i],property,value)){return true;}}}
return false;}};}()));Ext.define('Ext.grid.PagingScroller',{percentageFromEdge:0.35,variableRowHeight:false,numFromEdge:2,trailingBufferZone:5,leadingBufferZone:15,scrollToLoadBuffer:200,viewSize:0,rowHeight:21,tableStart:0,tableEnd:0,constructor:function(config){var me=this;Ext.apply(me,config);me.bindView(config.view);me.callParent(arguments);},bindView:function(view){var me=this,viewListeners={scroll:{fn:me.onViewScroll,element:'el',scope:me},render:{fn:me.onViewRender,scope:me,single:true},resize:me.onViewResize,boxready:{fn:me.onViewResize,scope:me,single:true},beforerefresh:me.beforeViewRefresh,refresh:me.onViewRefresh,scope:me,destroyable:true},storeListeners={guaranteedrange:me.onGuaranteedRange,scope:me,destroyable:true},partner;me.view=view;me.grid=me.view.up('tablepanel');me.store=view.store;if(view.rendered){delete viewListeners.render;me.store.setViewSize(me.viewSize=Math.ceil(view.getHeight()/me.rowHeight)+me.trailingBufferZone+(me.numFromEdge*2)+me.leadingBufferZone);me.onViewRender();}
partner=view.lockingPartner;if(partner){partner.on('refresh',me.onLockRefresh,me);}
me.view.mon(me.store.pageMap,{scope:me,clear:me.onCacheClear});me.view.refreshSize=Ext.Function.createInterceptor(me.view.refreshSize,me.beforeViewrefreshSize,me);me.position=0;if(!me.grid){me.view.on({added:function(){me.grid=me.view.up('tablepanel');},single:true});}
me.viewListeners=me.view.on(viewListeners);me.storeListeners=me.store.on(storeListeners);},unbindView:function(){var me=this,partner,view=me.view;if(view){if(view.el){view.el.un('scroll',me.onViewScroll,me);if(me.stretcher.dom&&(me.stretcher.dom.parentNode===view.el.dom)){view.fixedNodes-=1;me.stretcher.remove();}}
partner=view.lockingPartner;if(partner){partner.un('refresh',me.onLockRefresh,me);}
delete view.refreshSize;delete me.rowHeight;}
Ext.destroy(me.viewListeners,me.storeListeners);},onCacheClear:function(){var me=this;if(me.view.rendered&&!me.store.isDestroyed){me.ignoreNextScrollEvent=me.view.el.dom.scrollTop!==0;me.view.el.dom.scrollTop=0;delete me.lastScrollDirection;delete me.scrollOffset;delete me.scrollProportion;delete me.rowHeight;if(me.stretcher){me.stretcher.setHeight(0);}}},onViewRender:function(){var me=this,view=me.view,stretcher;me.stretcher=me.createStretcher(view);view=view.lockingPartner;if(view){stretcher=me.stretcher;me.stretcher=new Ext.CompositeElement(stretcher);me.stretcher.add(me.createStretcher(view));}},createStretcher:function(view){var el=view.el;el.setStyle('position','relative');if(view.refreshCounter){view.fixedNodes++;}
return el.createChild({style:{position:'absolute',width:'1px',height:view.refreshCounter?this.getScrollHeight()+'px':0,top:0,left:0}},el.dom.firstChild);},onViewResize:function(view,width,height){var me=this,newViewSize=me.viewSize=Math.ceil(height/me.rowHeight)+me.trailingBufferZone+(me.numFromEdge*2)+me.leadingBufferZone;me.store.setViewSize(newViewSize);me.tableEnd=me.tableStart+newViewSize-1;me.handleViewScroll(me.lastScrollDirection||1);},beforeViewRefresh:function(){var me=this,view=me.view,rows,direction;me.focusOnRefresh=Ext.Element.getActiveElement===view.el.dom;if(me.variableRowHeight){direction=me.lastScrollDirection;me.commonRecordIndex=undefined;if(direction&&(me.previousStart!==undefined)&&(me.scrollProportion===undefined)&&(rows=view.getNodes()).length){if(direction===1){if(me.tableStart<=me.previousEnd){me.commonRecordIndex=rows.length-1;}}
else if(direction===-1){if(me.tableEnd>=me.previousStart){me.commonRecordIndex=0;}}
me.scrollOffset=-view.el.getOffsetsTo(rows[me.commonRecordIndex])[1];me.commonRecordIndex-=(me.tableStart-me.previousStart);}else{me.scrollOffset=undefined;}}},onLockRefresh:function(view){view.table.dom.style.position='absolute';},onViewRefresh:function(){var me=this,store=me.store,newScrollHeight,view=me.view,viewEl=view.el,viewDom=viewEl.dom,rows,newScrollOffset,scrollDelta,table=view.table.dom,tableTop,scrollTop;if(me.focusOnRefresh){viewEl.focus();me.focusOnRefresh=false;}
me.disabled=true;if(store.getCount()===store.getTotalCount()||(store.isFiltered()&&!store.remoteFilter)){me.stretcher.setHeight(0);me.position=viewDom.scrollTop=0;me.setTablePosition('absolute');return;}
me.stretcher.setHeight(newScrollHeight=me.getScrollHeight());scrollTop=viewDom.scrollTop;me.isScrollRefresh=(scrollTop>0);if(me.scrollProportion!==undefined){me.setTablePosition('absolute');me.setTableTop((me.scrollProportion&&me.tableStart>0?(newScrollHeight*me.scrollProportion)-(table.offsetHeight*me.scrollProportion):0)+'px');}else{me.setTablePosition('absolute');me.setTableTop((tableTop=(me.tableStart||0)*me.rowHeight)+'px');if(me.scrollOffset){rows=view.getNodes();newScrollOffset=-viewEl.getOffsetsTo(rows[me.commonRecordIndex])[1];scrollDelta=newScrollOffset-me.scrollOffset;me.position=(viewDom.scrollTop+=scrollDelta);}
else if((tableTop>scrollTop)||((tableTop+table.offsetHeight)<scrollTop+viewDom.clientHeight)){me.lastScrollDirection=-1;me.position=viewDom.scrollTop=tableTop;}}
me.disabled=false;},setTablePosition:function(position){this.setViewTableStyle(this.view,'position',position);},setTableTop:function(top){this.setViewTableStyle(this.view,'top',top);},setViewTableStyle:function(view,prop,value){view.el.child('table',true).style[prop]=value;view=view.lockingPartner;if(view){view.el.child('table',true).style[prop]=value;}},beforeViewrefreshSize:function(){if(this.isScrollRefresh){this.view.table.attach(this.view.el.child('table',true));return(this.isScrollRefresh=false);}},scrollTo:function(recordIdx,doSelect,callback,scope){var me=this,view=me.view,viewDom=view.el.dom,store=me.store,total=store.getTotalCount(),startIdx,endIdx,targetRec,tableTop;recordIdx=Math.min(Math.max(recordIdx,0),total-1);startIdx=Math.max(Math.min(recordIdx-((me.leadingBufferZone+me.trailingBufferZone)/2),total-me.viewSize+1),0);tableTop=startIdx*me.rowHeight;endIdx=startIdx+me.viewSize-1;me.lastScrollDirection=undefined;me.disabled=true;store.guaranteeRange(startIdx,endIdx,function(){targetRec=store.pageMap.getRange(recordIdx,recordIdx)[0];view.table.dom.style.top=tableTop+'px';viewDom.scrollTop=tableTop=Math.min(Math.max(0,tableTop-view.table.getOffsetsTo(view.getNode(targetRec))[1]),viewDom.scrollHeight-viewDom.clientHeight);if(Ext.isIE){viewDom.scrollTop=tableTop;}
me.disabled=false;if(doSelect){me.grid.selModel.select(targetRec);}
if(callback){callback.call(scope||me,recordIdx,targetRec);}});},onGuaranteedRange:function(range,start,end,options){var me=this,ds=me.store;if(range.length&&me.visibleStart<range[0].index){return;}
me.previousStart=me.tableStart;me.previousEnd=me.tableEnd;me.tableStart=start;me.tableEnd=end;me.view.skipNewTemplate=!!me.view.refreshCounter;ds.loadRecords(range,Ext.apply({start:start},options));me.view.skipNewTemplate=false;},onViewScroll:function(e,t){var me=this,view=me.view,lastPosition=me.position;me.position=view.el.dom.scrollTop;if(me.ignoreNextScrollEvent){me.ignoreNextScrollEvent=false;return;}
if(!me.disabled){me.lastScrollDirection=me.position>lastPosition?1:-1;if(lastPosition!==me.position){me.handleViewScroll(me.lastScrollDirection);}}},handleViewScroll:function(direction){var me=this,store=me.store,view=me.view,viewSize=me.viewSize,totalCount=store.getTotalCount(),highestStartPoint=totalCount-viewSize,visibleStart=me.getFirstVisibleRowIndex(),visibleEnd=me.getLastVisibleRowIndex(),el=view.el.dom,requestStart,requestEnd;if(totalCount>=viewSize){me.scrollProportion=undefined;if(direction==-1){if(me.tableStart){if(visibleStart!==undefined){if(visibleStart<(me.tableStart+me.numFromEdge)){requestStart=Math.max(0,visibleEnd+me.trailingBufferZone-viewSize);}}
else{me.scrollProportion=el.scrollTop/(el.scrollHeight-el.clientHeight);requestStart=Math.max(0,totalCount*me.scrollProportion-(viewSize/2)-me.numFromEdge-((me.leadingBufferZone+me.trailingBufferZone)/2));}}}
else{if(visibleStart!==undefined){if(visibleEnd>(me.tableEnd-me.numFromEdge)){requestStart=Math.max(0,visibleStart-me.trailingBufferZone);}}
else{me.scrollProportion=el.scrollTop/(el.scrollHeight-el.clientHeight);requestStart=totalCount*me.scrollProportion-(viewSize/2)-me.numFromEdge-((me.leadingBufferZone+me.trailingBufferZone)/2);}}
if(requestStart!==undefined){if(requestStart>highestStartPoint){requestStart=highestStartPoint&~1;requestEnd=totalCount-1;}
else{requestStart=requestStart&~1;requestEnd=requestStart+viewSize-1;}
if(store.rangeCached(requestStart,requestEnd)){me.cancelLoad();store.guaranteeRange(requestStart,requestEnd);}
else{me.attemptLoad(requestStart,requestEnd);}}}},getFirstVisibleRowIndex:function(){var me=this,view=me.view,scrollTop=view.el.dom.scrollTop,rows,count,i,rowBottom,grouped=me.store.isGrouped();if(me.variableRowHeight){rows=view.getNodes();count=rows.length;if(!count){return;}
rowBottom=Ext.fly(rows[0]).getOffsetsTo(view.el)[1];for(i=0;i<count;i++){if(grouped){rowBottom=Ext.fly(rows[i]).getOffsetsTo(view.el)[1];}
rowBottom+=rows[i].offsetHeight;if(rowBottom>view.el.dom.clientHeight){return;}
if(rowBottom>0){return view.getRecord(rows[i]).index;}}}else{return Math.floor(scrollTop/me.rowHeight);}},getLastVisibleRowIndex:function(){var me=this,store=me.store,view=me.view,clientHeight=view.el.dom.clientHeight,rows,count,i,rowTop,grouped=me.store.isGrouped();if(me.variableRowHeight){rows=view.getNodes();if(!rows.length){return;}
count=store.getCount()-1;rowTop=Ext.fly(rows[count]).getOffsetsTo(view.el)[1]+rows[count].offsetHeight;for(i=count;i>=0;i--){if(grouped){rowTop=Ext.fly(rows[i]).getOffsetsTo(view.el)[1];}else{rowTop-=rows[i].offsetHeight;}
if(rowTop<0){return;}
if(rowTop<clientHeight){return view.getRecord(rows[i]).index;}}}else{return me.getFirstVisibleRowIndex()+Math.ceil(clientHeight/me.rowHeight)+1;}},getScrollHeight:function(){var me=this,view=me.view,table,firstRow,store=me.store,deltaHeight=0,doCalcHeight=!me.hasOwnProperty('rowHeight'),storeCount=me.store.getCount();if(!storeCount){return 0;}
if(me.variableRowHeight){table=me.view.table.dom;if(doCalcHeight){me.initialTableHeight=table.offsetHeight;me.rowHeight=me.initialTableHeight/storeCount;}else{deltaHeight=table.offsetHeight-me.initialTableHeight;if(store.getCount()>me.viewSize){deltaHeight-=me.rowHeight;}}}else if(doCalcHeight){firstRow=view.el.down(view.getItemSelector());if(firstRow){me.rowHeight=firstRow.getHeight(false,true);}}
return Math.floor(store.getTotalCount()*me.rowHeight)+deltaHeight;},attemptLoad:function(start,end){var me=this;if(me.scrollToLoadBuffer){if(!me.loadTask){me.loadTask=new Ext.util.DelayedTask(me.doAttemptLoad,me,[]);}
me.loadTask.delay(me.scrollToLoadBuffer,me.doAttemptLoad,me,[start,end]);}else{me.store.guaranteeRange(start,end);}},cancelLoad:function(){if(this.loadTask){this.loadTask.cancel();}},doAttemptLoad:function(start,end){this.store.guaranteeRange(start,end);},destroy:function(){this.unbindView();}});Ext.define('Ext.data.Request',{action:undefined,params:undefined,method:'GET',url:undefined,constructor:function(config){Ext.apply(this,config);}});Ext.define('Puma.patch.EventManager',{override:'Ext.EventManager',createListenerWrap:function(dom,ename,fn,scope,options){options=options||{};var f,gen,escapeRx=/\\/g,wrap=function(e,args){if(!gen){f=['if(!'+Ext.name+') {return;}'];f.push('if(Config.contextHelp && e.type=="mouseover") {PumaMain.controller.Help.onHelpOver(e);return;}')
f.push('if(Config.contextHelp && e.type=="click") {PumaMain.controller.Help.onHelpClick(e);return;}')
if(options.buffer||options.delay||options.freezeEvent){if(options.freezeEvent){f.push('e = X.EventObject.setEvent(e);');}
f.push('e = new X.EventObjectImpl(e, '+(options.freezeEvent?'true':'false')+');');}else{f.push('e = X.EventObject.setEvent(e);');}
if(options.delegate){f.push('var result, t = e.getTarget("'+(options.delegate+'').replace(escapeRx,'\\\\')+'", this);');f.push('if(!t) {return;}');}else{f.push('var t = e.target, result;');}
if(options.target){f.push('if(e.target !== options.target) {return;}');}
if(options.stopEvent){f.push('e.stopEvent();');}else{if(options.preventDefault){f.push('e.preventDefault();');}
if(options.stopPropagation){f.push('e.stopPropagation();');}}
if(options.normalized===false){f.push('e = e.browserEvent;');}
if(options.buffer){f.push('(wrap.task && clearTimeout(wrap.task));');f.push('wrap.task = setTimeout(function() {');}
if(options.delay){f.push('wrap.tasks = wrap.tasks || [];');f.push('wrap.tasks.push(setTimeout(function() {');}
f.push('result = fn.call(scope || dom, e, t, options);');if(options.single){f.push('evtMgr.removeListener(dom, ename, fn, scope);');}
if(ename!=='mousemove'&&ename!=='unload'){f.push('if (evtMgr.idleEvent.listeners.length) {');f.push('evtMgr.idleEvent.fire();');f.push('}');}
if(options.delay){f.push('}, '+options.delay+'));');}
if(options.buffer){f.push('}, '+options.buffer+');');}
f.push('return result;')
gen=Ext.cacheableFunctionFactory('e','options','fn','scope','ename','dom','wrap','args','X','evtMgr',f.join('\n'));}
return gen.call(dom,e,options,fn,scope,ename,dom,wrap,args,Ext,Ext.EventManager);};return wrap;}})
Ext.define('Ext.util.Sorter',{direction:"ASC",constructor:function(config){var me=this;Ext.apply(me,config);if(me.property===undefined&&me.sorterFn===undefined){Ext.Error.raise("A Sorter requires either a property or a sorter function");}
me.updateSortFunction();},createSortFunction:function(sorterFn){var me=this,property=me.property,direction=me.direction||"ASC",modifier=direction.toUpperCase()=="DESC"?-1:1;return function(o1,o2){return modifier*sorterFn.call(me,o1,o2);};},defaultSorterFn:function(o1,o2){var me=this,transform=me.transform,v1=me.getRoot(o1)[me.property],v2=me.getRoot(o2)[me.property];if(transform){v1=transform(v1);v2=transform(v2);}
return v1>v2?1:(v1<v2?-1:0);},getRoot:function(item){return this.root===undefined?item:item[this.root];},setDirection:function(direction){var me=this;me.direction=direction?direction.toUpperCase():direction;me.updateSortFunction();},toggle:function(){var me=this;me.direction=Ext.String.toggle(me.direction,"ASC","DESC");me.updateSortFunction();},updateSortFunction:function(fn){var me=this;fn=fn||me.sorterFn||me.defaultSorterFn;me.sort=me.createSortFunction(fn);}});Ext.define('Ext.util.Queue',{constructor:function(){this.clear();},add:function(obj){var me=this,key=me.getKey(obj);if(!me.map[key]){++me.length;me.items.push(obj);me.map[key]=obj;}
return obj;},clear:function(){var me=this,items=me.items;me.items=[];me.map={};me.length=0;return items;},contains:function(obj){var key=this.getKey(obj);return this.map.hasOwnProperty(key);},getCount:function(){return this.length;},getKey:function(obj){return obj.id;},remove:function(obj){var me=this,key=me.getKey(obj),items=me.items,index;if(me.map[key]){index=Ext.Array.indexOf(items,obj);Ext.Array.erase(items,index,1);delete me.map[key];--me.length;}
return obj;}});Ext.define('Ext.util.Observable',function(Observable){var ListenerRemover=function(observable){if(observable instanceof ListenerRemover){return observable;}
this.observable=observable;if(arguments[1].isObservable){this.managedListeners=true;}
this.args=Ext.Array.slice(arguments,1);};ListenerRemover.prototype.destroy=function(){this.observable[this.managedListeners?'mun':'un'].apply(this.observable,this.args);}
return{requires:['Ext.util.Event','Ext.EventManager'],statics:{releaseCapture:function(o){o.fireEvent=this.prototype.fireEvent;},capture:function(o,fn,scope){o.fireEvent=Ext.Function.createInterceptor(o.fireEvent,fn,scope);},observe:function(cls,listeners){if(cls){if(!cls.isObservable){Ext.applyIf(cls,new this());this.capture(cls.prototype,cls.fireEvent,cls);}
if(Ext.isObject(listeners)){cls.on(listeners);}}
return cls;},prepareClass:function(T,mixin){if(!T.HasListeners){var HasListeners=function(){},SuperHL=T.superclass.HasListeners||(mixin&&mixin.HasListeners)||Observable.HasListeners;T.prototype.HasListeners=T.HasListeners=HasListeners;HasListeners.prototype=T.hasListeners=new SuperHL();}}},isObservable:true,eventsSuspended:0,constructor:function(config){var me=this;Ext.apply(me,config);if(!me.hasListeners){me.hasListeners=new me.HasListeners();}
me.events=me.events||{};if(me.listeners){me.on(me.listeners);me.listeners=null;}
if(me.bubbleEvents){me.enableBubble(me.bubbleEvents);}},onClassExtended:function(T){if(!T.HasListeners){Observable.prepareClass(T);}},eventOptionsRe:/^(?:scope|delay|buffer|single|stopEvent|preventDefault|stopPropagation|normalized|args|delegate|element|destroyable|vertical|horizontal|freezeEvent)$/,addManagedListener:function(item,ename,fn,scope,options,noDestroy){var me=this,managedListeners=me.managedListeners=me.managedListeners||[],config;if(typeof ename!=='string'){options=ename;for(ename in options){if(options.hasOwnProperty(ename)){config=options[ename];if(!me.eventOptionsRe.test(ename)){me.addManagedListener(item,ename,config.fn||config,config.scope||options.scope,config.fn?config:options,true);}}}
if(options&&options.destroyable){return new ListenerRemover(me,item,options);}}
else{managedListeners.push({item:item,ename:ename,fn:fn,scope:scope,options:options});item.on(ename,fn,scope,options);if(!noDestroy&&options&&options.destroyable){return new ListenerRemover(me,item,ename,fn,scope);}}},removeManagedListener:function(item,ename,fn,scope){var me=this,options,config,managedListeners,length,i;if(typeof ename!=='string'){options=ename;for(ename in options){if(options.hasOwnProperty(ename)){config=options[ename];if(!me.eventOptionsRe.test(ename)){me.removeManagedListener(item,ename,config.fn||config,config.scope||options.scope);}}}}
managedListeners=me.managedListeners?me.managedListeners.slice():[];for(i=0,length=managedListeners.length;i<length;i++){me.removeManagedListenerItem(false,managedListeners[i],item,ename,fn,scope);}},fireEvent:function(eventName){eventName=eventName.toLowerCase();var me=this,events=me.events,event=events&&events[eventName],ret=true;if(event&&me.hasListeners[eventName]){ret=me.continueFireEvent(eventName,Ext.Array.slice(arguments,1),event.bubble);}
return ret;},continueFireEvent:function(eventName,args,bubbles){var target=this,queue,event,ret=true;do{if(target.eventsSuspended){if((queue=target.eventQueue)){queue.push([eventName,args,bubbles]);}
return ret;}else{event=target.events[eventName];if(event&&event!=true){if((ret=event.fire.apply(event,args))===false){break;}}}}while(bubbles&&(target=target.getBubbleParent()));return ret;},getBubbleParent:function(){var me=this,parent=me.getBubbleTarget&&me.getBubbleTarget();if(parent&&parent.isObservable){return parent;}
return null;},addListener:function(ename,fn,scope,options){var me=this,config,event,hasListeners,prevListenerCount=0;if(typeof ename!=='string'){options=ename;for(ename in options){if(options.hasOwnProperty(ename)){config=options[ename];if(!me.eventOptionsRe.test(ename)){me.addListener(ename,config.fn||config,config.scope||options.scope,config.fn?config:options);}}}
if(options&&options.destroyable){return new ListenerRemover(me,options);}}
else{ename=ename.toLowerCase();event=me.events[ename];if(event&&event.isEvent){prevListenerCount=event.listeners.length;}else{me.events[ename]=event=new Ext.util.Event(me,ename);}
if(!fn){Ext.Error.raise('No function passed for event '+me.$className+'.'+ename);}
if(typeof fn==='string'){if(!(scope[fn]||me[fn])){Ext.Error.raise('No method named "'+fn+'"');}
fn=scope[fn]||me[fn];}
event.addListener(fn,scope,options);if(event.listeners.length!==prevListenerCount){hasListeners=me.hasListeners;if(hasListeners.hasOwnProperty(ename)){++hasListeners[ename];}else{hasListeners[ename]=1;}}
if(options&&options.destroyable){return new ListenerRemover(me,ename,fn,scope,options);}}},removeListener:function(ename,fn,scope){var me=this,config,event,options;if(typeof ename!=='string'){options=ename;for(ename in options){if(options.hasOwnProperty(ename)){config=options[ename];if(!me.eventOptionsRe.test(ename)){me.removeListener(ename,config.fn||config,config.scope||options.scope);}}}}else{ename=ename.toLowerCase();event=me.events[ename];if(event&&event.isEvent){if(event.removeListener(fn,scope)&&!--me.hasListeners[ename]){delete me.hasListeners[ename];}}}},clearListeners:function(){var events=this.events,hasListeners=this.hasListeners,event,key;for(key in events){if(events.hasOwnProperty(key)){event=events[key];if(event.isEvent){delete hasListeners[key];event.clearListeners();}}}
this.clearManagedListeners();},purgeListeners:function(){if(Ext.global.console){Ext.global.console.warn('Observable: purgeListeners has been deprecated. Please use clearListeners.');}
return this.clearListeners.apply(this,arguments);},clearManagedListeners:function(){var managedListeners=this.managedListeners||[],i=0,len=managedListeners.length;for(;i<len;i++){this.removeManagedListenerItem(true,managedListeners[i]);}
this.managedListeners=[];},removeManagedListenerItem:function(isClear,managedListener,item,ename,fn,scope){if(isClear||(managedListener.item===item&&managedListener.ename===ename&&(!fn||managedListener.fn===fn)&&(!scope||managedListener.scope===scope))){managedListener.item.un(managedListener.ename,managedListener.fn,managedListener.scope);if(!isClear){Ext.Array.remove(this.managedListeners,managedListener);}}},purgeManagedListeners:function(){if(Ext.global.console){Ext.global.console.warn('Observable: purgeManagedListeners has been deprecated. Please use clearManagedListeners.');}
return this.clearManagedListeners.apply(this,arguments);},addEvents:function(o){var me=this,events=me.events||(me.events={}),arg,args,i;if(typeof o=='string'){for(args=arguments,i=args.length;i--;){arg=args[i];if(!events[arg]){events[arg]=true;}}}else{Ext.applyIf(me.events,o);}},hasListener:function(ename){return!!this.hasListeners[ename.toLowerCase()];},suspendEvents:function(queueSuspended){this.eventsSuspended+=1;if(queueSuspended&&!this.eventQueue){this.eventQueue=[];}},resumeEvents:function(){var me=this,queued=me.eventQueue,qLen,q;if(me.eventsSuspended&&!--me.eventsSuspended){delete me.eventQueue;if(queued){qLen=queued.length;for(q=0;q<qLen;q++){me.continueFireEvent.apply(me,queued[q]);}}}},relayEvents:function(origin,events,prefix){var me=this,len=events.length,i=0,oldName,relayers={};for(;i<len;i++){oldName=events[i];relayers[oldName]=me.createRelayer(prefix?prefix+oldName:oldName);}
me.mon(origin,relayers);return new ListenerRemover(me,origin,relayers);},createRelayer:function(newName,beginEnd){var me=this;return function(){return me.fireEvent.apply(me,[newName].concat(Array.prototype.slice.apply(arguments,beginEnd||[0,-1])));};},enableBubble:function(eventNames){if(eventNames){var me=this,names=(typeof eventNames=='string')?arguments:eventNames,length=names.length,events=me.events,ename,event,i;for(i=0;i<length;++i){ename=names[i].toLowerCase();event=events[ename];if(!event||typeof event=='boolean'){events[ename]=event=new Ext.util.Event(me,ename);}
me.hasListeners[ename]=(me.hasListeners[ename]||0)+1;event.bubble=true;}}}};},function(){var Observable=this,proto=Observable.prototype,HasListeners=function(){},prepareMixin=function(T){if(!T.HasListeners){var proto=T.prototype;Observable.prepareClass(T,this);T.onExtended(function(U){Observable.prepareClass(U);});if(proto.onClassMixedIn){Ext.override(T,{onClassMixedIn:function(U){prepareMixin.call(this,U);this.callParent(arguments);}});}else{proto.onClassMixedIn=function(U){prepareMixin.call(this,U);};}}};HasListeners.prototype={};proto.HasListeners=Observable.HasListeners=HasListeners;Observable.createAlias({on:'addListener',un:'removeListener',mon:'addManagedListener',mun:'removeManagedListener'});Observable.observeClass=Observable.observe;Ext.globalEvents=new Observable({events:{idle:Ext.EventManager.idleEvent}});function getMethodEvent(method){var e=(this.methodEvents=this.methodEvents||{})[method],returnValue,v,cancel,obj=this,makeCall;if(!e){this.methodEvents[method]=e={};e.originalFn=this[method];e.methodName=method;e.before=[];e.after=[];makeCall=function(fn,scope,args){if((v=fn.apply(scope||obj,args))!==undefined){if(typeof v=='object'){if(v.returnValue!==undefined){returnValue=v.returnValue;}else{returnValue=v;}
cancel=!!v.cancel;}
else
if(v===false){cancel=true;}
else{returnValue=v;}}};this[method]=function(){var args=Array.prototype.slice.call(arguments,0),b,i,len;returnValue=v=undefined;cancel=false;for(i=0,len=e.before.length;i<len;i++){b=e.before[i];makeCall(b.fn,b.scope,args);if(cancel){return returnValue;}}
if((v=e.originalFn.apply(obj,args))!==undefined){returnValue=v;}
for(i=0,len=e.after.length;i<len;i++){b=e.after[i];makeCall(b.fn,b.scope,args);if(cancel){return returnValue;}}
return returnValue;};}
return e;}
Ext.apply(proto,{onClassMixedIn:prepareMixin,beforeMethod:function(method,fn,scope){getMethodEvent.call(this,method).before.push({fn:fn,scope:scope});},afterMethod:function(method,fn,scope){getMethodEvent.call(this,method).after.push({fn:fn,scope:scope});},removeMethodListener:function(method,fn,scope){var e=this.getMethodEvent(method),i,len;for(i=0,len=e.before.length;i<len;i++){if(e.before[i].fn==fn&&e.before[i].scope==scope){Ext.Array.erase(e.before,i,1);return;}}
for(i=0,len=e.after.length;i<len;i++){if(e.after[i].fn==fn&&e.after[i].scope==scope){Ext.Array.erase(e.after,i,1);return;}}},toggleEventLogging:function(toggle){Ext.util.Observable[toggle?'capture':'releaseCapture'](this,function(en){if(Ext.isDefined(Ext.global.console)){Ext.global.console.log(en,arguments);}});}});});Ext.define('Ext.grid.LockingView',{mixins:{observable:'Ext.util.Observable'},eventRelayRe:/^(beforeitem|beforecontainer|item|container|cell)/,constructor:function(config){var me=this,eventNames=[],eventRe=me.eventRelayRe,locked=config.locked.getView(),normal=config.normal.getView(),events,event;Ext.apply(me,{lockedView:locked,normalView:normal,lockedGrid:config.locked,normalGrid:config.normal,panel:config.panel});me.mixins.observable.constructor.call(me,config);events=locked.events;for(event in events){if(events.hasOwnProperty(event)&&eventRe.test(event)){eventNames.push(event);}}
me.relayEvents(locked,eventNames);me.relayEvents(normal,eventNames);normal.on({scope:me,itemmouseleave:me.onItemMouseLeave,itemmouseenter:me.onItemMouseEnter});locked.on({scope:me,itemmouseleave:me.onItemMouseLeave,itemmouseenter:me.onItemMouseEnter});},getGridColumns:function(){var cols=this.lockedGrid.headerCt.getGridColumns();return cols.concat(this.normalGrid.headerCt.getGridColumns());},getEl:function(column){return this.getViewForColumn(column).getEl();},getViewForColumn:function(column){var view=this.lockedView,inLocked;view.headerCt.cascade(function(col){if(col===column){inLocked=true;return false;}});return inLocked?view:this.normalView;},onItemMouseEnter:function(view,record){var me=this,locked=me.lockedView,other=me.normalView,item;if(view.trackOver){if(view!==locked){other=locked;}
item=other.getNode(record);other.highlightItem(item);}},onItemMouseLeave:function(view,record){var me=this,locked=me.lockedView,other=me.normalView;if(view.trackOver){if(view!==locked){other=locked;}
other.clearHighlight();}},relayFn:function(name,args){args=args||[];var view=this.lockedView;view[name].apply(view,args||[]);view=this.normalView;view[name].apply(view,args||[]);},getSelectionModel:function(){return this.panel.getSelectionModel();},getStore:function(){return this.panel.store;},getNode:function(nodeInfo){return this.normalView.getNode(nodeInfo);},getCell:function(record,column){var view=this.getViewForColumn(column),row=view.getNode(record);return Ext.fly(row).down(column.getCellSelector());},getRecord:function(node){var result=this.lockedView.getRecord(node);if(!node){result=this.normalView.getRecord(node);}
return result;},scrollBy:function(){var normal=this.normalView;normal.scrollBy.apply(normal,arguments);},addElListener:function(eventName,fn,scope){this.relayFn('addElListener',arguments);},refreshNode:function(){this.relayFn('refreshNode',arguments);},refresh:function(){this.relayFn('refresh',arguments);},bindStore:function(){this.relayFn('bindStore',arguments);},addRowCls:function(){this.relayFn('addRowCls',arguments);},removeRowCls:function(){this.relayFn('removeRowCls',arguments);}});Ext.define('Ext.AbstractPlugin',{disabled:false,constructor:function(config){this.initialConfig=config;Ext.apply(this,config);},clone:function(){return new this.self(this.initialConfig);},getCmp:function(){return this.cmp;},init:Ext.emptyFn,destroy:Ext.emptyFn,enable:function(){this.disabled=false;},disable:function(){this.disabled=true;}});Ext.define('Ext.grid.feature.Feature',{extend:'Ext.util.Observable',alias:'feature.feature',isFeature:true,disabled:false,hasFeatureEvent:true,eventPrefix:null,eventSelector:null,view:null,grid:null,collectData:false,constructor:function(config){this.initialConfig=config;this.callParent(arguments);},clone:function(){return new this.self(this.initialConfig);},init:Ext.emptyFn,getFeatureTpl:function(){return'';},getFireEventArgs:function(eventName,view,featureTarget,e){return[eventName,view,featureTarget,e];},attachEvents:function(){},getFragmentTpl:Ext.emptyFn,mutateMetaRowTpl:Ext.emptyFn,getMetaRowTplFragments:function(){return{};},getTableFragments:function(){return{};},getAdditionalData:function(data,idx,record,orig){return{};},enable:function(){this.disabled=false;},disable:function(){this.disabled=true;}});Ext.define('Ext.ux.grid.filter.Filter',{extend:'Ext.util.Observable',active:false,dataIndex:null,menu:null,updateBuffer:500,constructor:function(config){Ext.apply(this,config);this.addEvents('activate','deactivate','serialize','update');Ext.ux.grid.filter.Filter.superclass.constructor.call(this);this.menu=this.createMenu(config);this.init(config);if(config&&config.value){this.setValue(config.value);this.setActive(config.active!==false,true);delete config.value;}},destroy:function(){if(this.menu){this.menu.destroy();}
this.clearListeners();},init:Ext.emptyFn,createMenu:function(config){return Ext.create('Ext.menu.Menu',config);},getValue:Ext.emptyFn,setValue:Ext.emptyFn,isActivatable:function(){return true;},getSerialArgs:Ext.emptyFn,validateRecord:function(){return true;},serialize:function(){var args=this.getSerialArgs();this.fireEvent('serialize',args,this);return args;},fireUpdate:function(){if(this.active){this.fireEvent('update',this);}
this.setActive(this.isActivatable());},setActive:function(active,suppressEvent){if(this.active!=active){this.active=active;if(suppressEvent!==true){this.fireEvent(active?'activate':'deactivate',this);}}}});Ext.define('Ext.util.ClickRepeater',{extend:'Ext.util.Observable',constructor:function(el,config){var me=this;me.el=Ext.get(el);me.el.unselectable();Ext.apply(me,config);me.callParent();me.addEvents("mousedown","click","mouseup");if(!me.disabled){me.disabled=true;me.enable();}
if(me.handler){me.on("click",me.handler,me.scope||me);}},interval:20,delay:250,preventDefault:true,stopDefault:false,timer:0,enable:function(){if(this.disabled){this.el.on('mousedown',this.handleMouseDown,this);if(Ext.isIE&&!(Ext.isStrict&&Ext.isIE9)){this.el.on('dblclick',this.handleDblClick,this);}
if(this.preventDefault||this.stopDefault){this.el.on('click',this.eventOptions,this);}}
this.disabled=false;},disable:function(force){if(force||!this.disabled){clearTimeout(this.timer);if(this.pressedCls){this.el.removeCls(this.pressedCls);}
Ext.getDoc().un('mouseup',this.handleMouseUp,this);this.el.removeAllListeners();}
this.disabled=true;},setDisabled:function(disabled){this[disabled?'disable':'enable']();},eventOptions:function(e){if(this.preventDefault){e.preventDefault();}
if(this.stopDefault){e.stopEvent();}},destroy:function(){this.disable(true);Ext.destroy(this.el);this.clearListeners();},handleDblClick:function(e){clearTimeout(this.timer);this.el.blur();this.fireEvent("mousedown",this,e);this.fireEvent("click",this,e);},handleMouseDown:function(e){clearTimeout(this.timer);this.el.blur();if(this.pressedCls){this.el.addCls(this.pressedCls);}
this.mousedownTime=new Date();Ext.getDoc().on("mouseup",this.handleMouseUp,this);this.el.on("mouseout",this.handleMouseOut,this);this.fireEvent("mousedown",this,e);this.fireEvent("click",this,e);if(this.accelerate){this.delay=400;}
e=new Ext.EventObjectImpl(e);this.timer=Ext.defer(this.click,this.delay||this.interval,this,[e]);},click:function(e){this.fireEvent("click",this,e);this.timer=Ext.defer(this.click,this.accelerate?this.easeOutExpo(Ext.Date.getElapsed(this.mousedownTime),400,-390,12000):this.interval,this,[e]);},easeOutExpo:function(t,b,c,d){return(t==d)?b+c:c*(-Math.pow(2,-10*t/d)+1)+b;},handleMouseOut:function(){clearTimeout(this.timer);if(this.pressedCls){this.el.removeCls(this.pressedCls);}
this.el.on("mouseover",this.handleMouseReturn,this);},handleMouseReturn:function(){this.el.un("mouseover",this.handleMouseReturn,this);if(this.pressedCls){this.el.addCls(this.pressedCls);}
this.click();},handleMouseUp:function(e){clearTimeout(this.timer);this.el.un("mouseover",this.handleMouseReturn,this);this.el.un("mouseout",this.handleMouseOut,this);Ext.getDoc().un("mouseup",this.handleMouseUp,this);if(this.pressedCls){this.el.removeCls(this.pressedCls);}
this.fireEvent("mouseup",this,e);}});Ext.define('Ext.ux.grid.filter.DateFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.date',uses:['Ext.picker.Date','Ext.menu.Menu'],afterText:'After',beforeText:'Before',compareMap:{before:'lt',after:'gt',on:'eq'},dateFormat:'m/d/Y',menuItems:['before','after','-','on'],menuItemCfgs:{selectOnFocus:true,width:125},onText:'On',pickerOpts:{},init:function(config){var me=this,pickerCfg,i,len,item,cfg;pickerCfg=Ext.apply(me.pickerOpts,{xtype:'datepicker',minDate:me.minDate,maxDate:me.maxDate,format:me.dateFormat,listeners:{scope:me,select:me.onMenuSelect}});me.fields={};for(i=0,len=me.menuItems.length;i<len;i++){item=me.menuItems[i];if(item!=='-'){cfg={itemId:'range-'+item,text:me[item+'Text'],menu:Ext.create('Ext.menu.Menu',{items:[Ext.apply(pickerCfg,{itemId:item,listeners:{select:me.onPickerSelect,scope:me}})]}),listeners:{scope:me,checkchange:me.onCheckChange}};item=me.fields[item]=Ext.create('Ext.menu.CheckItem',cfg);}
me.menu.add(item);}
me.values={};},onCheckChange:function(item,checked){var me=this,picker=item.menu.items.first(),itemId=picker.itemId,values=me.values;if(checked){values[itemId]=picker.getValue();}else{delete values[itemId]}
me.setActive(me.isActivatable());me.fireEvent('update',me);},onInputKeyUp:function(field,e){var k=e.getKey();if(k==e.RETURN&&field.isValid()){e.stopEvent();this.menu.hide();}},onMenuSelect:function(picker,date){var fields=this.fields,field=this.fields[picker.itemId];field.setChecked(true);if(field==fields.on){fields.before.setChecked(false,true);fields.after.setChecked(false,true);}else{fields.on.setChecked(false,true);if(field==fields.after&&this.getFieldValue('before')<date){fields.before.setChecked(false,true);}else if(field==fields.before&&this.getFieldValue('after')>date){fields.after.setChecked(false,true);}}
this.fireEvent('update',this);picker.up('menu').hide();},getValue:function(){var key,result={};for(key in this.fields){if(this.fields[key].checked){result[key]=this.getFieldValue(key);}}
return result;},setValue:function(value,preserve){var key;for(key in this.fields){if(value[key]){this.getPicker(key).setValue(value[key]);this.fields[key].setChecked(true);}else if(!preserve){this.fields[key].setChecked(false);}}
this.fireEvent('update',this);},isActivatable:function(){var key;for(key in this.fields){if(this.fields[key].checked){return true;}}
return false;},getSerialArgs:function(){var args=[];for(var key in this.fields){if(this.fields[key].checked){args.push({type:'date',comparison:this.compareMap[key],value:Ext.Date.format(this.getFieldValue(key),this.dateFormat)});}}
return args;},getFieldValue:function(item){return this.values[item];},getPicker:function(item){return this.fields[item].menu.items.first();},validateRecord:function(record){var key,pickerValue,val=record.get(this.dataIndex),clearTime=Ext.Date.clearTime;if(!Ext.isDate(val)){return false;}
val=clearTime(val,true).getTime();for(key in this.fields){if(this.fields[key].checked){pickerValue=clearTime(this.getFieldValue(key),true).getTime();if(key=='before'&&pickerValue<=val){return false;}
if(key=='after'&&pickerValue>=val){return false;}
if(key=='on'&&pickerValue!=val){return false;}}}
return true;},onPickerSelect:function(picker,date){this.values[picker.itemId]=date;this.fireEvent('update',this);}});Ext.define('Ext.data.association.Association',{alternateClassName:'Ext.data.Association',primaryKey:'id',defaultReaderType:'json',isAssociation:true,initialConfig:null,statics:{AUTO_ID:1000,create:function(association){if(Ext.isString(association)){association={type:association};}
switch(association.type){case'belongsTo':return new Ext.data.association.BelongsTo(association);case'hasMany':return new Ext.data.association.HasMany(association);case'hasOne':return new Ext.data.association.HasOne(association);default:Ext.Error.raise('Unknown Association type: "'+association.type+'"');}
return association;}},constructor:function(config){Ext.apply(this,config);var me=this,types=Ext.ModelManager.types,ownerName=config.ownerModel,associatedName=config.associatedModel,ownerModel=types[ownerName],associatedModel=types[associatedName];me.initialConfig=config;if(ownerModel===undefined){Ext.Error.raise("The configured ownerModel was not valid (you tried "+ownerName+")");}
if(associatedModel===undefined){Ext.Error.raise("The configured associatedModel was not valid (you tried "+associatedName+")");}
me.ownerModel=ownerModel;me.associatedModel=associatedModel;Ext.applyIf(me,{ownerName:ownerName,associatedName:associatedName});me.associationId='association'+(++me.statics().AUTO_ID);},getReader:function(){var me=this,reader=me.reader,model=me.associatedModel;if(reader){if(Ext.isString(reader)){reader={type:reader};}
if(reader.isReader){reader.setModel(model);}else{Ext.applyIf(reader,{model:model,type:me.defaultReaderType});}
me.reader=Ext.createByAlias('reader.'+reader.type,reader);}
return me.reader||null;}});Ext.define('Ext.data.IdGenerator',{isGenerator:true,constructor:function(config){var me=this;Ext.apply(me,config);if(me.id){Ext.data.IdGenerator.all[me.id]=me;}},getRecId:function(rec){return rec.modelName+'-'+rec.internalId;},statics:{all:{},get:function(config){var generator,id,type;if(typeof config=='string'){id=type=config;config=null;}else if(config.isGenerator){return config;}else{id=config.id||config.type;type=config.type;}
generator=this.all[id];if(!generator){generator=Ext.create('idgen.'+type,config);}
return generator;}}});Ext.define('Ext.data.Operation',{synchronous:true,action:undefined,filters:undefined,sorters:undefined,groupers:undefined,start:undefined,limit:undefined,batch:undefined,callback:undefined,scope:undefined,started:false,running:false,complete:false,success:undefined,exception:false,error:undefined,actionCommitRecordsRe:/^(?:create|update)$/i,actionSkipSyncRe:/^destroy$/i,constructor:function(config){Ext.apply(this,config||{});},commitRecords:function(serverRecords){var me=this,mc,index,clientRecords,serverRec,clientRec,i,len;if(!me.actionSkipSyncRe.test(me.action)){clientRecords=me.records;if(clientRecords&&clientRecords.length){if(clientRecords.length>1){if(me.action=='update'||clientRecords[0].clientIdProperty){mc=new Ext.util.MixedCollection();mc.addAll(serverRecords);for(index=clientRecords.length;index--;){clientRec=clientRecords[index];serverRec=mc.findBy(me.matchClientRec,clientRec);clientRec.copyFrom(serverRec);}}else{for(i=0,len=clientRecords.length;i<len;++i){clientRec=clientRecords[i];serverRec=serverRecords[i];if(clientRec&&serverRec){me.updateRecord(clientRec,serverRec);}}}}else{this.updateRecord(clientRecords[0],serverRecords[0]);}
if(me.actionCommitRecordsRe.test(me.action)){for(index=clientRecords.length;index--;){clientRecords[index].commit();}}}}},updateRecord:function(clientRec,serverRec){if(serverRec&&(clientRec.phantom||clientRec.getId()===serverRec.getId())){clientRec.copyFrom(serverRec);}},matchClientRec:function(record){var clientRec=this,clientRecordId=clientRec.getId();if(clientRecordId&&record.getId()===clientRecordId){return true;}
return record.internalId===clientRec.internalId;},setStarted:function(){this.started=true;this.running=true;},setCompleted:function(){this.complete=true;this.running=false;},setSuccessful:function(){this.success=true;},setException:function(error){this.exception=true;this.success=false;this.running=false;this.error=error;},hasException:function(){return this.exception===true;},getError:function(){return this.error;},getRecords:function(){var resultSet=this.getResultSet();return this.records||(resultSet?resultSet.records:null);},getResultSet:function(){return this.resultSet;},isStarted:function(){return this.started===true;},isRunning:function(){return this.running===true;},isComplete:function(){return this.complete===true;},wasSuccessful:function(){return this.isComplete()&&this.success===true;},setBatch:function(batch){this.batch=batch;},allowWrite:function(){return this.action!='read';}});Ext.define('Ext.data.validations',{singleton:true,presenceMessage:'must be present',lengthMessage:'is the wrong length',formatMessage:'is the wrong format',inclusionMessage:'is not included in the list of acceptable values',exclusionMessage:'is not an acceptable value',emailMessage:'is not a valid email address',emailRe:/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/,presence:function(config,value){if(arguments.length===1){value=config;}
return!!value||value===0||value===false;},length:function(config,value){if(value===undefined||value===null){return false;}
var length=value.length,min=config.min,max=config.max;if((min&&length<min)||(max&&length>max)){return false;}else{return true;}},email:function(config,email){return Ext.data.validations.emailRe.test(email);},format:function(config,value){return!!(config.matcher&&config.matcher.test(value));},inclusion:function(config,value){return config.list&&Ext.Array.indexOf(config.list,value)!=-1;},exclusion:function(config,value){return config.list&&Ext.Array.indexOf(config.list,value)==-1;}});Ext.define('Ext.data.ResultSet',{loaded:true,count:0,total:0,success:false,constructor:function(config){Ext.apply(this,config);this.totalRecords=this.total;if(config.count===undefined){this.count=this.records.length;}}});Ext.define('Ext.util.Offset',{statics:{fromObject:function(obj){return new this(obj.x,obj.y);}},constructor:function(x,y){this.x=(x!=null&&!isNaN(x))?x:0;this.y=(y!=null&&!isNaN(y))?y:0;return this;},copy:function(){return new Ext.util.Offset(this.x,this.y);},copyFrom:function(p){this.x=p.x;this.y=p.y;},toString:function(){return"Offset["+this.x+","+this.y+"]";},equals:function(offset){if(!(offset instanceof this.statics())){Ext.Error.raise('Offset must be an instance of Ext.util.Offset');}
return(this.x==offset.x&&this.y==offset.y);},round:function(to){if(!isNaN(to)){var factor=Math.pow(10,to);this.x=Math.round(this.x*factor)/factor;this.y=Math.round(this.y*factor)/factor;}else{this.x=Math.round(this.x);this.y=Math.round(this.y);}},isZero:function(){return this.x==0&&this.y==0;}});Ext.define('Ext.dd.DragTracker',{uses:['Ext.util.Region'],mixins:{observable:'Ext.util.Observable'},active:false,trackOver:false,tolerance:5,autoStart:false,constructor:function(config){var me=this;Ext.apply(me,config);me.addEvents('mouseover','mouseout','mousedown','mouseup','mousemove','beforedragstart','dragstart','dragend','drag');me.dragRegion=new Ext.util.Region(0,0,0,0);if(me.el){me.initEl(me.el);}
me.mixins.observable.constructor.call(me);if(me.disabled){me.disable();}},initEl:function(el){var me=this;me.el=Ext.get(el);me.handle=Ext.get(me.delegate);me.delegate=me.handle?undefined:me.delegate;if(!me.handle){me.handle=me.el;}
me.mon(me.handle,{mousedown:me.onMouseDown,delegate:me.delegate,scope:me});if(me.trackOver||me.overCls){me.mon(me.handle,{mouseover:me.onMouseOver,mouseout:me.onMouseOut,delegate:me.delegate,scope:me});}},disable:function(){this.disabled=true;},enable:function(){this.disabled=false;},destroy:function(){this.clearListeners();delete this.el;},onMouseOver:function(e,target){var me=this;if(!me.disabled){if(Ext.EventManager.contains(e)||me.delegate){me.mouseIsOut=false;if(me.overCls){me.el.addCls(me.overCls);}
me.fireEvent('mouseover',me,e,me.delegate?e.getTarget(me.delegate,target):me.handle);}}},onMouseOut:function(e){var me=this;if(me.mouseIsDown){me.mouseIsOut=true;}else{if(me.overCls){me.el.removeCls(me.overCls);}
me.fireEvent('mouseout',me,e);}},onMouseDown:function(e,target){var me=this,el;if(me.disabled||e.dragTracked){return;}
me.dragTarget=me.delegate?target:me.handle.dom;me.startXY=me.lastXY=e.getXY();me.startRegion=Ext.fly(me.dragTarget).getRegion();if(me.fireEvent('mousedown',me,e)===false||me.fireEvent('beforedragstart',me,e)===false||me.onBeforeStart(e)===false){return;}
me.mouseIsDown=true;e.dragTracked=true;el=me.el.dom;if(Ext.isIE&&el.setCapture){el.setCapture();}
if(me.preventDefault!==false){e.preventDefault();}
Ext.getDoc().on({scope:me,mouseup:me.onMouseUp,mousemove:me.onMouseMove,selectstart:me.stopSelect});if(me.autoStart){me.timer=Ext.defer(me.triggerStart,me.autoStart===true?1000:me.autoStart,me,[e]);}},onMouseMove:function(e,target){var me=this,xy=e.getXY(),s=me.startXY;e.preventDefault();me.lastXY=xy;if(!me.active){if(Math.max(Math.abs(s[0]-xy[0]),Math.abs(s[1]-xy[1]))>me.tolerance){me.triggerStart(e);}else{return;}}
if(me.fireEvent('mousemove',me,e)===false){me.onMouseUp(e);}else{me.onDrag(e);me.fireEvent('drag',me,e);}},onMouseUp:function(e){var me=this;me.mouseIsDown=false;if(me.mouseIsOut){me.mouseIsOut=false;me.onMouseOut(e);}
e.preventDefault();if(Ext.isIE&&document.releaseCapture){document.releaseCapture();}
me.fireEvent('mouseup',me,e);me.endDrag(e);},endDrag:function(e){var me=this,doc=Ext.getDoc(),wasActive=me.active;doc.un('mousemove',me.onMouseMove,me);doc.un('mouseup',me.onMouseUp,me);doc.un('selectstart',me.stopSelect,me);me.clearStart();me.active=false;if(wasActive){me.onEnd(e);me.fireEvent('dragend',me,e);}
delete me._constrainRegion;delete Ext.EventObject.dragTracked;},triggerStart:function(e){var me=this;me.clearStart();me.active=true;me.onStart(e);me.fireEvent('dragstart',me,e);},clearStart:function(){var timer=this.timer;if(timer){clearTimeout(timer);delete this.timer;}},stopSelect:function(e){e.stopEvent();return false;},onBeforeStart:function(e){},onStart:function(xy){},onDrag:function(e){},onEnd:function(e){},getDragTarget:function(){return this.dragTarget;},getDragCt:function(){return this.el;},getConstrainRegion:function(){var me=this;if(me.constrainTo){if(me.constrainTo instanceof Ext.util.Region){return me.constrainTo;}
if(!me._constrainRegion){me._constrainRegion=Ext.fly(me.constrainTo).getViewRegion();}}else{if(!me._constrainRegion){me._constrainRegion=me.getDragCt().getViewRegion();}}
return me._constrainRegion;},getXY:function(constrain){return constrain?this.constrainModes[constrain](this,this.lastXY):this.lastXY;},getOffset:function(constrain){var xy=this.getXY(constrain),s=this.startXY;return[xy[0]-s[0],xy[1]-s[1]];},constrainModes:{point:function(me,xy){var dr=me.dragRegion,constrainTo=me.getConstrainRegion();if(!constrainTo){return xy;}
dr.x=dr.left=dr[0]=dr.right=xy[0];dr.y=dr.top=dr[1]=dr.bottom=xy[1];dr.constrainTo(constrainTo);return[dr.left,dr.top];},dragTarget:function(me,xy){var s=me.startXY,dr=me.startRegion.copy(),constrainTo=me.getConstrainRegion(),adjust;if(!constrainTo){return xy;}
dr.translateBy(xy[0]-s[0],xy[1]-s[1]);if(dr.right>constrainTo.right){xy[0]+=adjust=(constrainTo.right-dr.right);dr.left+=adjust;}
if(dr.left<constrainTo.left){xy[0]+=(constrainTo.left-dr.left);}
if(dr.bottom>constrainTo.bottom){xy[1]+=adjust=(constrainTo.bottom-dr.bottom);dr.top+=adjust;}
if(dr.top<constrainTo.top){xy[1]+=(constrainTo.top-dr.top);}
return xy;}}});Ext.define('Ext.util.KeyMap',{alternateClassName:'Ext.KeyMap',eventName:'keydown',constructor:function(config){var me=this;if((arguments.length!==1)||(typeof config==='string')||config.dom||config.tagName||config===document||config.isComponent){me.legacyConstructor.apply(me,arguments);return;}
Ext.apply(me,config);me.bindings=[];if(!me.target.isComponent){me.target=Ext.get(me.target);}
if(me.binding){me.addBinding(me.binding);}else if(config.key){me.addBinding(config);}
me.enable();},legacyConstructor:function(el,binding,eventName){var me=this;Ext.apply(me,{target:Ext.get(el),eventName:eventName||me.eventName,bindings:[]});if(binding){me.addBinding(binding);}
me.enable();},addBinding:function(binding){var keyCode=binding.key,processed=false,key,keys,keyString,i,len;if(Ext.isArray(binding)){for(i=0,len=binding.length;i<len;i++){this.addBinding(binding[i]);}
return;}
if(Ext.isString(keyCode)){keys=[];keyString=keyCode.toUpperCase();for(i=0,len=keyString.length;i<len;++i){keys.push(keyString.charCodeAt(i));}
keyCode=keys;processed=true;}
if(!Ext.isArray(keyCode)){keyCode=[keyCode];}
if(!processed){for(i=0,len=keyCode.length;i<len;++i){key=keyCode[i];if(Ext.isString(key)){keyCode[i]=key.toUpperCase().charCodeAt(0);}}}
this.bindings.push(Ext.apply({keyCode:keyCode},binding));},handleTargetEvent:(function(){var tagRe=/input|textarea/i;return function(event){var me=this,bindings,i,len,target,contentEditable;if(this.enabled){bindings=this.bindings;i=0;len=bindings.length;event=me.processEvent.apply(me||me.processEventScope,arguments);if(me.ignoreInputFields){target=event.target;contentEditable=target.contentEditable;if(tagRe.test(target.tagName)||(contentEditable===''||contentEditable==='true')){return;}}
if(!event.getKey){return event;}
for(;i<len;++i){this.processBinding(bindings[i],event);}}}}()),processEvent:Ext.identityFn,processBinding:function(binding,event){if(this.checkModifiers(binding,event)){var key=event.getKey(),handler=binding.fn||binding.handler,scope=binding.scope||this,keyCode=binding.keyCode,defaultEventAction=binding.defaultEventAction,i,len,keydownEvent=new Ext.EventObjectImpl(event);for(i=0,len=keyCode.length;i<len;++i){if(key===keyCode[i]){if(handler.call(scope,key,event)!==true&&defaultEventAction){keydownEvent[defaultEventAction]();}
break;}}}},checkModifiers:function(binding,e){var keys=['shift','ctrl','alt'],i=0,len=keys.length,val,key;for(;i<len;++i){key=keys[i];val=binding[key];if(!(val===undefined||(val===e[key+'Key']))){return false;}}
return true;},on:function(key,fn,scope){var keyCode,shift,ctrl,alt;if(Ext.isObject(key)&&!Ext.isArray(key)){keyCode=key.key;shift=key.shift;ctrl=key.ctrl;alt=key.alt;}else{keyCode=key;}
this.addBinding({key:keyCode,shift:shift,ctrl:ctrl,alt:alt,fn:fn,scope:scope});},isEnabled:function(){return this.enabled;},enable:function(){var me=this;if(!me.enabled){me.target.on(me.eventName,me.handleTargetEvent,me);me.enabled=true;}},disable:function(){var me=this;if(me.enabled){me.target.removeListener(me.eventName,me.handleTargetEvent,me);me.enabled=false;}},setDisabled:function(disabled){if(disabled){this.disable();}else{this.enable();}},destroy:function(removeTarget){var me=this,target=me.target;me.bindings=[];me.disable();if(removeTarget===true){if(target.isComponent){target.destroy();}else{target.remove();}}
delete me.target;}});Ext.define('Ext.util.Memento',(function(){function captureOne(src,target,prop,prefix){src[prefix?prefix+prop:prop]=target[prop];}
function removeOne(src,target,prop){delete src[prop];}
function restoreOne(src,target,prop,prefix){var name=prefix?prefix+prop:prop,value=src[name];if(value||src.hasOwnProperty(name)){restoreValue(target,prop,value);}}
function restoreValue(target,prop,value){if(Ext.isDefined(value)){target[prop]=value;}else{delete target[prop];}}
function doMany(doOne,src,target,props,prefix){if(src){if(Ext.isArray(props)){var p,pLen=props.length;for(p=0;p<pLen;p++){doOne(src,target,props[p],prefix);}}else{doOne(src,target,props,prefix);}}}
return{data:null,target:null,constructor:function(target,props){if(target){this.target=target;if(props){this.capture(props);}}},capture:function(props,target,prefix){var me=this;doMany(captureOne,me.data||(me.data={}),target||me.target,props,prefix);},remove:function(props){doMany(removeOne,this.data,null,props);},restore:function(props,clear,target,prefix){doMany(restoreOne,this.data,target||this.target,props,prefix);if(clear!==false){this.remove(props);}},restoreAll:function(clear,target){var me=this,t=target||this.target,data=me.data,prop;for(prop in data){if(data.hasOwnProperty(prop)){restoreValue(t,prop,data[prop]);}}
if(clear!==false){delete me.data;}}};}()));Ext.define('Ext.data.proxy.Proxy',{alias:'proxy.proxy',alternateClassName:['Ext.data.DataProxy','Ext.data.Proxy'],uses:['Ext.data.Batch','Ext.data.Operation','Ext.data.Model'],mixins:{observable:'Ext.util.Observable'},batchOrder:'create,update,destroy',batchActions:true,defaultReaderType:'json',defaultWriterType:'json',isProxy:true,constructor:function(config){var me=this;config=config||{};me.mixins.observable.constructor.call(me,config);if(me.model!==undefined&&!(me.model instanceof Ext.data.Model)){me.setModel(me.model);}else{if(me.reader){me.setReader(me.reader);}
if(me.writer){me.setWriter(me.writer);}}},setModel:function(model,setOnStore){var me=this;me.model=Ext.ModelManager.getModel(model);me.setReader(this.reader);me.setWriter(this.writer);if(setOnStore&&me.store){me.store.setModel(me.model);}},getModel:function(){return this.model;},setReader:function(reader){var me=this,needsCopy=true,current=me.reader;if(reader===undefined||typeof reader=='string'){reader={type:reader};needsCopy=false;}
if(reader.isReader){reader.setModel(me.model);}else{if(needsCopy){reader=Ext.apply({},reader);}
Ext.applyIf(reader,{proxy:me,model:me.model,type:me.defaultReaderType});reader=Ext.createByAlias('reader.'+reader.type,reader);}
if(reader!==current&&reader.onMetaChange){reader.onMetaChange=Ext.Function.createSequence(reader.onMetaChange,this.onMetaChange,this);}
me.reader=reader;return me.reader;},getReader:function(){return this.reader;},onMetaChange:function(meta){this.fireEvent('metachange',this,meta);},setWriter:function(writer){var me=this,needsCopy=true;if(writer===undefined||typeof writer=='string'){writer={type:writer};needsCopy=false;}
if(!writer.isWriter){if(needsCopy){writer=Ext.apply({},writer);}
Ext.applyIf(writer,{model:me.model,type:me.defaultWriterType});writer=Ext.createByAlias('writer.'+writer.type,writer);}
me.writer=writer;return me.writer;},getWriter:function(){return this.writer;},create:Ext.emptyFn,read:Ext.emptyFn,update:Ext.emptyFn,destroy:Ext.emptyFn,batch:function(options,listeners){var me=this,useBatch=me.batchActions,batch,records,actions,aLen,action,a,r,rLen,record;if(options.operations===undefined){options={operations:options,listeners:listeners};}
if(options.batch){if(Ext.isDefined(options.batch.runOperation)){batch=Ext.applyIf(options.batch,{proxy:me,listeners:{}});}}else{options.batch={proxy:me,listeners:options.listeners||{}};}
if(!batch){batch=new Ext.data.Batch(options.batch);}
batch.on('complete',Ext.bind(me.onBatchComplete,me,[options],0));actions=me.batchOrder.split(',');aLen=actions.length;for(a=0;a<aLen;a++){action=actions[a];records=options.operations[action];if(records){if(useBatch){batch.add(new Ext.data.Operation({action:action,records:records}));}else{rLen=records.length;for(r=0;r<rLen;r++){record=records[r];batch.add(new Ext.data.Operation({action:action,records:[record]}));}}}}
batch.start();return batch;},onBatchComplete:function(batchOptions,batch){var scope=batchOptions.scope||this;if(batch.hasException){if(Ext.isFunction(batchOptions.failure)){Ext.callback(batchOptions.failure,scope,[batch,batchOptions]);}}else if(Ext.isFunction(batchOptions.success)){Ext.callback(batchOptions.success,scope,[batch,batchOptions]);}
if(Ext.isFunction(batchOptions.callback)){Ext.callback(batchOptions.callback,scope,[batch,batchOptions]);}}},function(){Ext.data.DataProxy=this;});Ext.define('Ext.util.HashMap',{mixins:{observable:'Ext.util.Observable'},constructor:function(config){config=config||{};var me=this,keyFn=config.keyFn;me.addEvents('add','clear','remove','replace');me.mixins.observable.constructor.call(me,config);me.clear(true);if(keyFn){me.getKey=keyFn;}},getCount:function(){return this.length;},getData:function(key,value){if(value===undefined){value=key;key=this.getKey(value);}
return[key,value];},getKey:function(o){return o.id;},add:function(key,value){var me=this;if(arguments.length===1){value=key;key=me.getKey(value);}
if(me.containsKey(key)){return me.replace(key,value);}
me.map[key]=value;++me.length;if(me.hasListeners.add){me.fireEvent('add',me,key,value);}
return value;},replace:function(key,value){var me=this,map=me.map,old;if(arguments.length===1){value=key;key=me.getKey(value);}
if(!me.containsKey(key)){me.add(key,value);}
old=map[key];map[key]=value;if(me.hasListeners.replace){me.fireEvent('replace',me,key,value,old);}
return value;},remove:function(o){var key=this.findKey(o);if(key!==undefined){return this.removeAtKey(key);}
return false;},removeAtKey:function(key){var me=this,value;if(me.containsKey(key)){value=me.map[key];delete me.map[key];--me.length;if(me.hasListeners.remove){me.fireEvent('remove',me,key,value);}
return true;}
return false;},get:function(key){return this.map[key];},clear:function(initial){var me=this;me.map={};me.length=0;if(initial!==true&&me.hasListeners.clear){me.fireEvent('clear',me);}
return me;},containsKey:function(key){return this.map[key]!==undefined;},contains:function(value){return this.containsKey(this.findKey(value));},getKeys:function(){return this.getArray(true);},getValues:function(){return this.getArray(false);},getArray:function(isKey){var arr=[],key,map=this.map;for(key in map){if(map.hasOwnProperty(key)){arr.push(isKey?key:map[key]);}}
return arr;},each:function(fn,scope){var items=Ext.apply({},this.map),key,length=this.length;scope=scope||this;for(key in items){if(items.hasOwnProperty(key)){if(fn.call(scope,key,items[key],length)===false){break;}}}
return this;},clone:function(){var hash=new this.self(),map=this.map,key;hash.suspendEvents();for(key in map){if(map.hasOwnProperty(key)){hash.add(key,map[key]);}}
hash.resumeEvents();return hash;},findKey:function(value){var key,map=this.map;for(key in map){if(map.hasOwnProperty(key)&&map[key]===value){return key;}}
return undefined;}});Ext.define('Ext.util.LruCache',{extend:'Ext.util.HashMap',constructor:function(config){Ext.apply(this,config);this.callParent([config]);},add:function(key,newValue){var me=this,existingKey=me.findKey(newValue),entry;if(existingKey){me.unlinkEntry(entry=me.map[existingKey]);entry.prev=me.last;entry.next=null;}
else{entry={prev:me.last,next:null,key:key,value:newValue};}
if(me.last){me.last.next=entry;}
else{me.first=entry;}
me.last=entry;me.callParent([key,entry]);me.prune();return newValue;},insertBefore:function(key,newValue,sibling){var me=this,existingKey,entry;if(sibling=this.map[this.findKey(sibling)]){existingKey=me.findKey(newValue);if(existingKey){me.unlinkEntry(entry=me.map[existingKey]);}
else{entry={prev:sibling.prev,next:sibling,key:key,value:newValue};}
if(sibling.prev){entry.prev.next=entry;}else{me.first=entry;}
entry.next=sibling;sibling.prev=entry;me.prune();return newValue;}
else{return me.add(key,newValue);}},get:function(key){var entry=this.map[key];if(entry){if(entry.next){this.moveToEnd(entry);}
return entry.value;}},removeAtKey:function(key){this.unlinkEntry(this.map[key]);return this.callParent(arguments);},clear:function(initial){this.first=this.last=null;return this.callParent(arguments);},unlinkEntry:function(entry){if(entry){if(entry.next){entry.next.prev=entry.prev;}else{this.last=entry.prev;}
if(entry.prev){entry.prev.next=entry.next;}else{this.first=entry.next;}
entry.prev=entry.next=null;}},moveToEnd:function(entry){this.unlinkEntry(entry);if(entry.prev=this.last){this.last.next=entry;}
else{this.first=entry;}
this.last=entry;},getArray:function(isKey){var arr=[],entry=this.first;while(entry){arr.push(isKey?entry.key:entry.value);entry=entry.next;}
return arr;},each:function(fn,scope,reverse){var me=this,entry=reverse?me.last:me.first,length=me.length;scope=scope||me;while(entry){if(fn.call(scope,entry.key,entry.value,length)===false){break;}
entry=reverse?entry.prev:entry.next;}
return me;},findKey:function(value){var key,map=this.map;for(key in map){if(map.hasOwnProperty(key)&&map[key].value===value){return key;}}
return undefined;},prune:function(){var me=this,purgeCount=me.maxSize?(me.length-me.maxSize):0;if(purgeCount>0){for(;me.first&&purgeCount;purgeCount--){me.removeAtKey(me.first.key);}}}});Ext.define('Ext.util.Floating',{uses:['Ext.Layer','Ext.window.Window'],focusOnToFront:true,shadow:'sides',constructor:function(dom){var me=this;me.el=new Ext.Layer(Ext.apply({hideMode:me.hideMode,hidden:me.hidden,shadow:(typeof me.shadow!='undefined')?me.shadow:'sides',shadowOffset:me.shadowOffset,constrain:false,shim:(me.shim===false)?false:undefined},me.floating),dom);if(me.modal&&!(Ext.FocusManager&&Ext.FocusManager.enabled)){me.el.on({keydown:me.onKeyDown,scope:me});}
me.floating=true;me.registerWithOwnerCt();},registerWithOwnerCt:function(){var me=this;if(me.zIndexParent){me.zIndexParent.unregisterFloatingItem(me);}
me.zIndexParent=me.up('[floating]');me.setFloatParent(me.ownerCt);delete me.ownerCt;if(me.zIndexParent){me.zIndexParent.registerFloatingItem(me);}else{Ext.WindowManager.register(me);}},onKeyDown:function(e){var me=this,shift,focusables,first,last;if(e.getKey()==Ext.EventObject.TAB){shift=e.shiftKey;focusables=me.el.query(':focusable');first=focusables[0];last=focusables[focusables.length-1];if(first&&last&&e.target===(shift?first:last)){e.stopEvent();(shift?last:first).focus(false,true);}}},setFloatParent:function(floatParent){var me=this;if(me.floatParent){me.mun(me.floatParent,{hide:me.onFloatParentHide,show:me.onFloatParentShow,scope:me});}
me.floatParent=floatParent;if(floatParent){me.mon(me.floatParent,{hide:me.onFloatParentHide,show:me.onFloatParentShow,scope:me});}
if((me.constrain||me.constrainHeader)&&!me.constrainTo){me.constrainTo=floatParent?floatParent.getTargetEl():me.container;}},onAfterFloatLayout:function(){this.syncShadow();},onFloatParentHide:function(){var me=this;if(me.hideOnParentHide!==false&&me.isVisible()){me.hide();me.showOnParentShow=true;}},onFloatParentShow:function(){if(this.showOnParentShow){delete this.showOnParentShow;this.show();}},setZIndex:function(index){var me=this;me.el.setZIndex(index);index+=10;if(me.floatingDescendants){index=Math.floor(me.floatingDescendants.setBase(index)/100)*100+10000;}
return index;},doConstrain:function(constrainTo){var me=this,vector=me.getConstrainVector(constrainTo),xy;if(vector){xy=me.getPosition(!!me.floatParent);xy[0]+=vector[0];xy[1]+=vector[1];me.setPosition(xy);}},getConstrainVector:function(constrainTo){var me=this;if(me.constrain||me.constrainHeader){constrainTo=constrainTo||me.constrainTo||(me.floatParent&&me.floatParent.getTargetEl())||me.container||me.el.getScopeParent();return(me.constrainHeader?me.header.el:me.el).getConstrainVector(constrainTo);}},alignTo:function(element,position,offsets){this.setPagePosition(this.el.getAlignToXY(element.el||element,position,offsets));return this;},toFront:function(preventFocus){var me=this;if(me.zIndexParent&&me.bringParentToFront!==false){me.zIndexParent.toFront(true);}
if(!Ext.isDefined(preventFocus)){preventFocus=!me.focusOnToFront;}
if(preventFocus){me.preventFocusOnActivate=true;}
if(me.zIndexManager.bringToFront(me)){if(!preventFocus){me.focus(false,true);}}
delete me.preventFocusOnActivate;return me;},setActive:function(active,newActive){var me=this;if(active){if(me.el.shadow&&!me.maximized){me.el.enableShadow(true);}
if(me.modal&&!me.preventFocusOnActivate){me.focus(false,true);}
me.fireEvent('activate',me);}else{if(me.isWindow&&(newActive&&newActive.isWindow)&&me.hideShadowOnDeactivate){me.el.disableShadow();}
me.fireEvent('deactivate',me);}},toBack:function(){this.zIndexManager.sendToBack(this);return this;},center:function(){var me=this,xy;if(me.isVisible()){xy=me.el.getAlignToXY(me.container,'c-c');me.setPagePosition(xy);}else{me.needsCenter=true;}
return me;},onFloatShow:function(){if(this.needsCenter){this.center();}
delete this.needsCenter;},syncShadow:function(){if(this.floating){this.el.sync(true);}},fitContainer:function(){var me=this,parent=me.floatParent,container=parent?parent.getTargetEl():me.container;me.setSize(container.getViewSize(false));me.setPosition.apply(me,parent||(container.dom!==document.body)?[0,0]:container.getXY());}});Ext.define('Ext.fx.CubicBezier',{singleton:true,cubicBezierAtTime:function(t,p1x,p1y,p2x,p2y,duration){var cx=3*p1x,bx=3*(p2x-p1x)-cx,ax=1-cx-bx,cy=3*p1y,by=3*(p2y-p1y)-cy,ay=1-cy-by;function sampleCurveX(t){return((ax*t+bx)*t+cx)*t;}
function solve(x,epsilon){var t=solveCurveX(x,epsilon);return((ay*t+by)*t+cy)*t;}
function solveCurveX(x,epsilon){var t0,t1,t2,x2,d2,i;for(t2=x,i=0;i<8;i++){x2=sampleCurveX(t2)-x;if(Math.abs(x2)<epsilon){return t2;}
d2=(3*ax*t2+2*bx)*t2+cx;if(Math.abs(d2)<1e-6){break;}
t2=t2-x2/d2;}
t0=0;t1=1;t2=x;if(t2<t0){return t0;}
if(t2>t1){return t1;}
while(t0<t1){x2=sampleCurveX(t2);if(Math.abs(x2-x)<epsilon){return t2;}
if(x>x2){t0=t2;}else{t1=t2;}
t2=(t1-t0)/2+t0;}
return t2;}
return solve(t,1/(200*duration));},cubicBezier:function(x1,y1,x2,y2){var fn=function(pos){return Ext.fx.CubicBezier.cubicBezierAtTime(pos,x1,y1,x2,y2,1);};fn.toCSS3=function(){return'cubic-bezier('+[x1,y1,x2,y2].join(',')+')';};fn.reverse=function(){return Ext.fx.CubicBezier.cubicBezier(1-x2,1-y2,1-x1,1-y1);};return fn;}});Ext.define('Ext.layout.ClassList',(function(){var splitWords=Ext.String.splitWords,toMap=Ext.Array.toMap;return{dirty:false,constructor:function(owner){this.owner=owner;this.map=toMap(this.classes=splitWords(owner.el.className));},add:function(cls){var me=this;if(!me.map[cls]){me.map[cls]=true;me.classes.push(cls);if(!me.dirty){me.dirty=true;me.owner.markDirty();}}},addMany:function(classes){Ext.each(splitWords(classes),this.add,this);},contains:function(cls){return this.map[cls];},flush:function(){this.owner.el.className=this.classes.join(' ');this.dirty=false;},remove:function(cls){var me=this;if(me.map[cls]){delete me.map[cls];me.classes=Ext.Array.filter(me.classes,function(c){return c!=cls;});if(!me.dirty){me.dirty=true;me.owner.markDirty();}}},removeMany:function(classes){var me=this,remove=toMap(splitWords(classes));me.classes=Ext.Array.filter(me.classes,function(c){if(!remove[c]){return true;}
delete me.map[c];if(!me.dirty){me.dirty=true;me.owner.markDirty();}
return false;});}};}()));Ext.define('Ext.fx.Queue',{requires:['Ext.util.HashMap'],constructor:function(){this.targets=new Ext.util.HashMap();this.fxQueue={};},getFxDefaults:function(targetId){var target=this.targets.get(targetId);if(target){return target.fxDefaults;}
return{};},setFxDefaults:function(targetId,obj){var target=this.targets.get(targetId);if(target){target.fxDefaults=Ext.apply(target.fxDefaults||{},obj);}},stopAnimation:function(targetId){var me=this,queue=me.getFxQueue(targetId),ln=queue.length;while(ln){queue[ln-1].end();ln--;}},getActiveAnimation:function(targetId){var queue=this.getFxQueue(targetId);return(queue&&!!queue.length)?queue[0]:false;},hasFxBlock:function(targetId){var queue=this.getFxQueue(targetId);return queue&&queue[0]&&queue[0].block;},getFxQueue:function(targetId){if(!targetId){return false;}
var me=this,queue=me.fxQueue[targetId],target=me.targets.get(targetId);if(!target){return false;}
if(!queue){me.fxQueue[targetId]=[];if(target.type!='element'){target.target.on('destroy',function(){me.fxQueue[targetId]=[];});}}
return me.fxQueue[targetId];},queueFx:function(anim){var me=this,target=anim.target,queue,ln;if(!target){return;}
queue=me.getFxQueue(target.getId());ln=queue.length;if(ln){if(anim.concurrent){anim.paused=false;}
else{queue[ln-1].on('afteranimate',function(){anim.paused=false;});}}
else{anim.paused=false;}
anim.on('afteranimate',function(){Ext.Array.remove(queue,anim);if(anim.remove){if(target.type=='element'){var el=Ext.get(target.id);if(el){el.remove();}}}},this);queue.push(anim);}});Ext.define('Ext.util.Bindable',{bindStore:function(store,initial){var me=this,oldStore=me.store;if(!initial&&me.store){me.onUnbindStore(oldStore,initial);if(store!==oldStore&&oldStore.autoDestroy){oldStore.destroyStore();}else{me.unbindStoreListeners(oldStore);}}
if(store){store=Ext.data.StoreManager.lookup(store);me.bindStoreListeners(store);me.onBindStore(store,initial);}
me.store=store||null;return me;},getStore:function(){return this.store;},unbindStoreListeners:function(store){var listeners=this.storeListeners;if(listeners){store.un(listeners);}},bindStoreListeners:function(store){var me=this,listeners=Ext.apply({},me.getStoreListeners(store));if(!listeners.scope){listeners.scope=me;}
me.storeListeners=listeners;store.on(listeners);},getStoreListeners:Ext.emptyFn,onUnbindStore:Ext.emptyFn,onBindStore:Ext.emptyFn});Ext.define('Ext.Template',{requires:['Ext.dom.Helper','Ext.util.Format'],inheritableStatics:{from:function(el,config){el=Ext.getDom(el);return new this(el.value||el.innerHTML,config||'');}},constructor:function(html){var me=this,args=arguments,buffer=[],i=0,length=args.length,value;me.initialConfig={};if(length===1&&Ext.isArray(html)){args=html;length=args.length;}
if(length>1){for(;i<length;i++){value=args[i];if(typeof value=='object'){Ext.apply(me.initialConfig,value);Ext.apply(me,value);}else{buffer.push(value);}}}else{buffer.push(html);}
me.html=buffer.join('');if(me.compiled){me.compile();}},isTemplate:true,disableFormats:false,re:/\{([\w\-]+)(?:\:([\w\.]*)(?:\((.*?)?\))?)?\}/g,apply:function(values){var me=this,useFormat=me.disableFormats!==true,fm=Ext.util.Format,tpl=me,ret;if(me.compiled){return me.compiled(values).join('');}
function fn(m,name,format,args){if(format&&useFormat){if(args){args=[values[name]].concat(Ext.functionFactory('return ['+args+'];')());}else{args=[values[name]];}
if(format.substr(0,5)=="this."){return tpl[format.substr(5)].apply(tpl,args);}
else{return fm[format].apply(fm,args);}}
else{return values[name]!==undefined?values[name]:"";}}
ret=me.html.replace(me.re,fn);return ret;},applyOut:function(values,out){var me=this;if(me.compiled){out.push.apply(out,me.compiled(values));}else{out.push(me.apply(values));}
return out;},applyTemplate:function(){return this.apply.apply(this,arguments);},set:function(html,compile){var me=this;me.html=html;me.compiled=null;return compile?me.compile():me;},compileARe:/\\/g,compileBRe:/(\r\n|\n)/g,compileCRe:/'/g,compile:function(){var me=this,fm=Ext.util.Format,useFormat=me.disableFormats!==true,body,bodyReturn;function fn(m,name,format,args){if(format&&useFormat){args=args?','+args:"";if(format.substr(0,5)!="this."){format="fm."+format+'(';}
else{format='this.'+format.substr(5)+'(';}}
else{args='';format="(values['"+name+"'] == undefined ? '' : ";}
return"',"+format+"values['"+name+"']"+args+") ,'";}
bodyReturn=me.html.replace(me.compileARe,'\\\\').replace(me.compileBRe,'\\n').replace(me.compileCRe,"\\'").replace(me.re,fn);body="this.compiled = function(values){ return ['"+bodyReturn+"'];};";eval(body);return me;},insertFirst:function(el,values,returnElement){return this.doInsert('afterBegin',el,values,returnElement);},insertBefore:function(el,values,returnElement){return this.doInsert('beforeBegin',el,values,returnElement);},insertAfter:function(el,values,returnElement){return this.doInsert('afterEnd',el,values,returnElement);},append:function(el,values,returnElement){return this.doInsert('beforeEnd',el,values,returnElement);},doInsert:function(where,el,values,returnElement){var newNode=Ext.DomHelper.insertHtml(where,Ext.getDom(el),this.apply(values));return returnElement?Ext.get(newNode):newNode;},overwrite:function(el,values,returnElement){var newNode=Ext.DomHelper.overwrite(Ext.getDom(el),this.apply(values));return returnElement?Ext.get(newNode):newNode;}});Ext.define('Ext.data.Tree',{alias:'data.tree',mixins:{observable:"Ext.util.Observable"},root:null,constructor:function(root){var me=this;me.mixins.observable.constructor.call(me);if(root){me.setRootNode(root);}},getRootNode:function(){return this.root;},setRootNode:function(node){var me=this;me.root=node;if(node.rootOf){node.rootOf.removeRootNode();}
else if(node.parentNode){node.parentNode.removeChild(node);}
node.rootOf=me;if(me.fireEvent('beforeappend',null,node)!==false){node.set('root',true);node.updateInfo();node.commit();node.on({scope:me,insert:me.onNodeInsert,append:me.onNodeAppend,remove:me.onNodeRemove});me.rootRelayers=me.relayEvents(node,["append","remove","move","insert","beforeappend","beforeremove","beforemove","beforeinsert","expand","collapse","beforeexpand","beforecollapse","sort","rootchange"]);me.nodeHash={};me.registerNode(node,true);me.fireEvent('append',null,node);me.fireEvent('rootchange',node);}
return node;},removeRootNode:function(){var me=this,root=me.root;root.set('root',false);delete root.rootOf;delete me.root;root.un({scope:me,insert:me.onNodeInsert,append:me.onNodeAppend,remove:me.onNodeRemove});Ext.destroy(me.rootRelayers);me.unregisterNode(root,true);me.fireEvent('remove',null,root,false);me.fireEvent('rootchange',null);return root;},flatten:function(){return Ext.Object.getValues(this.nodeHash);},onNodeInsert:function(parent,node){this.registerNode(node,true);},onNodeAppend:function(parent,node){this.registerNode(node,true);},onNodeRemove:function(parent,node){this.unregisterNode(node,true);},onNodeIdChanged:function(node,oldId,newId){var nodeHash=this.nodeHash;nodeHash[newId]=node;delete nodeHash[oldId||node.internalId];},getNodeById:function(id){return this.nodeHash[id];},registerNode:function(node,includeChildren){var me=this;me.nodeHash[node.getId()||node.internalId]=node;node.on('idchanged',me.onNodeIdChanged,me);if(includeChildren===true){node.eachChild(function(child){me.registerNode(child,true);});}},unregisterNode:function(node,includeChildren){var me=this;delete this.nodeHash[node.getId()||node.internalId];node.un('idchanged',me.onNodeIdChanged,me);if(includeChildren===true){node.eachChild(function(child){me.unregisterNode(child,true);});}},sort:function(sorterFn,recursive){this.getRootNode().sort(sorterFn,recursive);},filter:function(filters,recursive){this.getRootNode().filter(filters,recursive);}});Ext.define('Ext.util.ElementContainer',{childEls:[],constructor:function(){var me=this,childEls;if(me.hasOwnProperty('childEls')){childEls=me.childEls;delete me.childEls;me.addChildEls.apply(me,childEls);}},destroy:function(){var me=this,childEls=me.getChildEls(),child,childName,i,k;for(i=childEls.length;i--;){childName=childEls[i];if(typeof childName!='string'){childName=childName.name;}
child=me[childName];if(child){me[childName]=null;child.remove();}}},addChildEls:function(){var me=this,args=arguments;if(me.hasOwnProperty('childEls')){me.childEls.push.apply(me.childEls,args);}else{me.childEls=me.getChildEls().concat(Array.prototype.slice.call(args));}
me.prune(me.childEls,false);},applyChildEls:function(el,id){var me=this,childEls=me.getChildEls(),baseId,childName,i,selector,value;baseId=(id||me.id)+'-';for(i=childEls.length;i--;){childName=childEls[i];if(typeof childName=='string'){value=el.getById(baseId+childName);}else{if((selector=childName.select)){value=Ext.select(selector,true,el.dom);}else if((selector=childName.selectNode)){value=Ext.get(Ext.DomQuery.selectNode(selector,el.dom));}else{value=el.getById(childName.id||(baseId+childName.itemId));}
childName=childName.name;}
me[childName]=value;}},getChildEls:function(){var me=this,self;if(me.hasOwnProperty('childEls')){return me.childEls;}
self=me.self;return self.$childEls||me.getClassChildEls(self);},getClassChildEls:function(cls){var me=this,result=cls.$childEls,childEls,i,length,forked,mixin,mixins,name,parts,proto,supr,superMixins;if(!result){supr=cls.superclass;if(supr){supr=supr.self;parts=[supr.$childEls||me.getClassChildEls(supr)];superMixins=supr.prototype.mixins||{};}else{parts=[];superMixins={};}
proto=cls.prototype;mixins=proto.mixins;for(name in mixins){if(mixins.hasOwnProperty(name)&&!superMixins.hasOwnProperty(name)){mixin=mixins[name].self;parts.push(mixin.$childEls||me.getClassChildEls(mixin));}}
parts.push(proto.hasOwnProperty('childEls')&&proto.childEls);for(i=0,length=parts.length;i<length;++i){childEls=parts[i];if(childEls&&childEls.length){if(!result){result=childEls;}else{if(!forked){forked=true;result=result.slice(0);}
result.push.apply(result,childEls);}}}
cls.$childEls=result=(result?me.prune(result,!forked):[]);}
return result;},prune:function(childEls,shared){var index=childEls.length,map={},name;while(index--){name=childEls[index];if(typeof name!='string'){name=name.name;}
if(!map[name]){map[name]=1;}else{if(shared){shared=false;childEls=childEls.slice(0);}
Ext.Array.erase(childEls,index,1);}}
return childEls;},removeChildEls:function(testFn){var me=this,old=me.getChildEls(),keepers=(me.childEls=[]),n,i,cel;for(i=0,n=old.length;i<n;++i){cel=old[i];if(!testFn(cel)){keepers.push(cel);}}}});Ext.define('Ext.form.field.Field',{isFormField:true,disabled:false,submitValue:true,validateOnChange:true,suspendCheckChange:0,initField:function(){this.addEvents('change','validitychange','dirtychange');this.initValue();},initValue:function(){var me=this;me.value=me.transformOriginalValue(me.value);me.originalValue=me.lastValue=me.value;me.suspendCheckChange++;me.setValue(me.value);me.suspendCheckChange--;},transformOriginalValue:Ext.identityFn,getName:function(){return this.name;},getValue:function(){return this.value;},setValue:function(value){var me=this;me.value=value;me.checkChange();return me;},isEqual:function(value1,value2){return String(value1)===String(value2);},isEqualAsString:function(value1,value2){return String(Ext.value(value1,''))===String(Ext.value(value2,''));},getSubmitData:function(){var me=this,data=null;if(!me.disabled&&me.submitValue&&!me.isFileUpload()){data={};data[me.getName()]=''+me.getValue();}
return data;},getModelData:function(){var me=this,data=null;if(!me.disabled&&!me.isFileUpload()){data={};data[me.getName()]=me.getValue();}
return data;},reset:function(){var me=this;me.beforeReset();me.setValue(me.originalValue);me.clearInvalid();delete me.wasValid;},beforeReset:Ext.emptyFn,resetOriginalValue:function(){this.originalValue=this.getValue();this.checkDirty();},checkChange:function(){if(!this.suspendCheckChange){var me=this,newVal=me.getValue(),oldVal=me.lastValue;if(!me.isEqual(newVal,oldVal)&&!me.isDestroyed){me.lastValue=newVal;me.fireEvent('change',me,newVal,oldVal);me.onChange(newVal,oldVal);}}},onChange:function(newVal,oldVal){if(this.validateOnChange){this.validate();}
this.checkDirty();},isDirty:function(){var me=this;return!me.disabled&&!me.isEqual(me.getValue(),me.originalValue);},checkDirty:function(){var me=this,isDirty=me.isDirty();if(isDirty!==me.wasDirty){me.fireEvent('dirtychange',me,isDirty);me.onDirtyChange(isDirty);me.wasDirty=isDirty;}},onDirtyChange:Ext.emptyFn,getErrors:function(value){return[];},isValid:function(){var me=this;return me.disabled||Ext.isEmpty(me.getErrors());},validate:function(){var me=this,isValid=me.isValid();if(isValid!==me.wasValid){me.wasValid=isValid;me.fireEvent('validitychange',me,isValid);}
return isValid;},batchChanges:function(fn){try{this.suspendCheckChange++;fn();}catch(e){throw e;}finally{this.suspendCheckChange--;}
this.checkChange();},isFileUpload:function(){return false;},extractFileInput:function(){return null;},markInvalid:Ext.emptyFn,clearInvalid:Ext.emptyFn});Ext.define('Ext.form.FieldAncestor',{initFieldAncestor:function(){var me=this,onSubtreeChange=me.onFieldAncestorSubtreeChange;me.addEvents('fieldvaliditychange','fielderrorchange');me.on('add',onSubtreeChange,me);me.on('remove',onSubtreeChange,me);me.initFieldDefaults();},initFieldDefaults:function(){if(!this.fieldDefaults){this.fieldDefaults={};}},onFieldAncestorSubtreeChange:function(parent,child){var me=this,isAdding=!!child.ownerCt;function handleCmp(cmp){var isLabelable=cmp.isFieldLabelable,isField=cmp.isFormField;if(isLabelable||isField){if(isLabelable){me['onLabelable'+(isAdding?'Added':'Removed')](cmp);}
if(isField){me['onField'+(isAdding?'Added':'Removed')](cmp);}}
else if(cmp.isContainer){Ext.Array.forEach(cmp.getRefItems(),handleCmp);}}
handleCmp(child);},onLabelableAdded:function(labelable){var me=this;me.mon(labelable,'errorchange',me.handleFieldErrorChange,me,{buffer:10});labelable.setFieldDefaults(me.fieldDefaults);},onFieldAdded:function(field){var me=this;me.mon(field,'validitychange',me.handleFieldValidityChange,me);},onLabelableRemoved:function(labelable){var me=this;me.mun(labelable,'errorchange',me.handleFieldErrorChange,me);},onFieldRemoved:function(field){var me=this;me.mun(field,'validitychange',me.handleFieldValidityChange,me);},handleFieldValidityChange:function(field,isValid){var me=this;me.fireEvent('fieldvaliditychange',me,field,isValid);me.onFieldValidityChange(field,isValid);},handleFieldErrorChange:function(labelable,activeError){var me=this;me.fireEvent('fielderrorchange',me,labelable,activeError);me.onFieldErrorChange(labelable,activeError);},onFieldValidityChange:Ext.emptyFn,onFieldErrorChange:Ext.emptyFn});Ext.define('Ext.util.TextMetrics',{statics:{shared:null,measure:function(el,text,fixedWidth){var me=this,shared=me.shared;if(!shared){shared=me.shared=new me(el,fixedWidth);}
shared.bind(el);shared.setFixedWidth(fixedWidth||'auto');return shared.getSize(text);},destroy:function(){var me=this;Ext.destroy(me.shared);me.shared=null;}},constructor:function(bindTo,fixedWidth){var measure=this.measure=Ext.getBody().createChild({cls:Ext.baseCSSPrefix+'textmetrics'});this.el=Ext.get(bindTo);measure.position('absolute');measure.setLeftTop(-1000,-1000);measure.hide();if(fixedWidth){measure.setWidth(fixedWidth);}},getSize:function(text){var measure=this.measure,size;measure.update(text);size=measure.getSize();measure.update('');return size;},bind:function(el){var me=this;me.el=Ext.get(el);me.measure.setStyle(me.el.getStyles('font-size','font-style','font-weight','font-family','line-height','text-transform','letter-spacing'));},setFixedWidth:function(width){this.measure.setWidth(width);},getWidth:function(text){this.measure.dom.style.width='auto';return this.getSize(text).width;},getHeight:function(text){return this.getSize(text).height;},destroy:function(){var me=this;me.measure.remove();delete me.el;delete me.measure;}},function(){Ext.Element.addMethods({getTextWidth:function(text,min,max){return Ext.Number.constrain(Ext.util.TextMetrics.measure(this.dom,Ext.value(text,this.dom.innerHTML,true)).width,min||0,max||1000000);}});});Ext.define("Ext.util.Sortable",{isSortable:true,defaultSortDirection:"ASC",requires:['Ext.util.Sorter'],statics:{createComparator:function(sorters){return sorters&&sorters.length?function(r1,r2){var result=sorters[0].sort(r1,r2),length=sorters.length,i=1;for(;i<length;i++){result=result||sorters[i].sort.call(this,r1,r2);}
return result;}:function(){return 0;};}},initSortable:function(){var me=this,sorters=me.sorters;me.sorters=new Ext.util.AbstractMixedCollection(false,function(item){return item.id||item.property;});if(sorters){me.sorters.addAll(me.decodeSorters(sorters));}},sort:function(sorters,direction,where,doSort){var me=this,sorter,sorterFn,newSorters;if(Ext.isArray(sorters)){doSort=where;where=direction;newSorters=sorters;}
else if(Ext.isObject(sorters)){doSort=where;where=direction;newSorters=[sorters];}
else if(Ext.isString(sorters)){sorter=me.sorters.get(sorters);if(!sorter){sorter={property:sorters,direction:direction};newSorters=[sorter];}
else if(direction===undefined){sorter.toggle();}
else{sorter.setDirection(direction);}}
if(newSorters&&newSorters.length){newSorters=me.decodeSorters(newSorters);if(Ext.isString(where)){if(where==='prepend'){sorters=me.sorters.clone().items;me.sorters.clear();me.sorters.addAll(newSorters);me.sorters.addAll(sorters);}
else{me.sorters.addAll(newSorters);}}
else{me.sorters.clear();me.sorters.addAll(newSorters);}}
if(doSort!==false){me.fireEvent('beforesort',me,newSorters);me.onBeforeSort(newSorters);sorters=me.sorters.items;if(sorters.length){me.doSort(me.generateComparator());}}
return sorters;},generateComparator:function(){var sorters=this.sorters.getRange();return sorters.length?this.createComparator(sorters):this.emptyComparator;},emptyComparator:function(){return 0;},onBeforeSort:Ext.emptyFn,decodeSorters:function(sorters){if(!Ext.isArray(sorters)){if(sorters===undefined){sorters=[];}else{sorters=[sorters];}}
var length=sorters.length,Sorter=Ext.util.Sorter,fields=this.model?this.model.prototype.fields:null,field,config,i;for(i=0;i<length;i++){config=sorters[i];if(!(config instanceof Sorter)){if(Ext.isString(config)){config={property:config};}
Ext.applyIf(config,{root:this.sortRoot,direction:"ASC"});if(config.fn){config.sorterFn=config.fn;}
if(typeof config=='function'){config={sorterFn:config};}
if(fields&&!config.transform){field=fields.get(config.property);config.transform=field?field.sortType:undefined;}
sorters[i]=new Ext.util.Sorter(config);}}
return sorters;},getSorters:function(){return this.sorters.items;},getFirstSorter:function(){var sorters=this.sorters.items,len=sorters.length,i=0,sorter;for(;i<len;++i){sorter=sorters[i];if(!sorter.isGrouper){return sorter;}}
return null;}},function(){this.prototype.createComparator=this.createComparator;});Ext.define('Ext.data.SortTypes',{singleton:true,none:Ext.identityFn,stripTagsRE:/<\/?[^>]+>/gi,asText:function(s){return String(s).replace(this.stripTagsRE,"");},asUCText:function(s){return String(s).toUpperCase().replace(this.stripTagsRE,"");},asUCString:function(s){return String(s).toUpperCase();},asDate:function(s){if(!s){return 0;}
if(Ext.isDate(s)){return s.getTime();}
return Date.parse(String(s));},asFloat:function(s){var val=parseFloat(String(s).replace(/,/g,""));return isNaN(val)?0:val;},asInt:function(s){var val=parseInt(String(s).replace(/,/g,""),10);return isNaN(val)?0:val;}});Ext.define('Ext.panel.Proxy',{alternateClassName:'Ext.dd.PanelProxy',moveOnDrag:true,constructor:function(panel,config){var me=this;me.panel=panel;me.id=me.panel.id+'-ddproxy';Ext.apply(me,config);},insertProxy:true,setStatus:Ext.emptyFn,reset:Ext.emptyFn,update:Ext.emptyFn,stop:Ext.emptyFn,sync:Ext.emptyFn,getEl:function(){return this.ghost.el;},getGhost:function(){return this.ghost;},getProxy:function(){return this.proxy;},hide:function(){var me=this;if(me.ghost){if(me.proxy){me.proxy.remove();delete me.proxy;}
me.panel.unghost(null,me.moveOnDrag);delete me.ghost;}},show:function(){var me=this,panelSize;if(!me.ghost){panelSize=me.panel.getSize();me.panel.el.setVisibilityMode(Ext.Element.DISPLAY);me.ghost=me.panel.ghost();if(me.insertProxy){me.proxy=me.panel.el.insertSibling({cls:Ext.baseCSSPrefix+'panel-dd-spacer'});me.proxy.setSize(panelSize);}}},repair:function(xy,callback,scope){this.hide();Ext.callback(callback,scope||this);},moveProxy:function(parentNode,before){if(this.proxy){parentNode.insertBefore(this.proxy.dom,before);}}});Ext.define('Ext.util.Filter',{anyMatch:false,exactMatch:false,caseSensitive:false,statics:{createFilterFn:function(filters){return filters&&filters.length?function(candidate){var isMatch=true,length=filters.length,i,filter;for(i=0;isMatch&&i<length;i++){filter=filters[i];isMatch=isMatch&&filter.filterFn.call(filter.scope,candidate);}
return isMatch;}:function(){return true;};}},constructor:function(config){var me=this;Ext.apply(me,config);me.filter=me.filter||me.filterFn;if(me.filter===undefined){if(me.property===undefined||me.value===undefined){}else{me.filter=me.createFilterFn();}
me.filterFn=me.filter;}},createFilterFn:function(){var me=this,matcher=me.createValueMatcher(),property=me.property;return function(item){var value=me.getRoot.call(me,item)[property];return matcher===null?value===null:matcher.test(value);};},getRoot:function(item){var root=this.root;return root===undefined?item:item[root];},createValueMatcher:function(){var me=this,value=me.value,anyMatch=me.anyMatch,exactMatch=me.exactMatch,caseSensitive=me.caseSensitive,escapeRe=Ext.String.escapeRegex;if(value===null){return value;}
if(!value.exec){value=String(value);if(anyMatch===true){value=escapeRe(value);}else{value='^'+escapeRe(value);if(exactMatch===true){value+='$';}}
value=new RegExp(value,caseSensitive?'':'i');}
return value;}});Ext.define('Ext.data.proxy.Server',{extend:'Ext.data.proxy.Proxy',alias:'proxy.server',alternateClassName:'Ext.data.ServerProxy',uses:['Ext.data.Request'],pageParam:'page',startParam:'start',limitParam:'limit',groupParam:'group',groupDirectionParam:'groupDir',sortParam:'sort',filterParam:'filter',directionParam:'dir',idParam:'id',simpleSortMode:false,simpleGroupMode:false,noCache:true,cacheString:"_dc",timeout:30000,constructor:function(config){var me=this;config=config||{};me.callParent([config]);me.extraParams=config.extraParams||{};me.api=Ext.apply({},config.api||me.api);me.nocache=me.noCache;},create:function(){return this.doRequest.apply(this,arguments);},read:function(){return this.doRequest.apply(this,arguments);},update:function(){return this.doRequest.apply(this,arguments);},destroy:function(){return this.doRequest.apply(this,arguments);},setExtraParam:function(name,value){this.extraParams[name]=value;},buildRequest:function(operation){var me=this,params=operation.params=Ext.apply({},operation.params,me.extraParams),request;Ext.applyIf(params,me.getParams(operation));if(operation.id!==undefined&&params[me.idParam]===undefined){params[me.idParam]=operation.id;}
request=new Ext.data.Request({params:params,action:operation.action,records:operation.records,operation:operation,url:operation.url,proxy:me});request.url=me.buildUrl(request);operation.request=request;return request;},processResponse:function(success,operation,request,response,callback,scope){var me=this,reader,result;if(success===true){reader=me.getReader();reader.applyDefaults=operation.action==='read';result=reader.read(me.extractResponseData(response));if(result.success!==false){Ext.apply(operation,{response:response,resultSet:result});operation.commitRecords(result.records);operation.setCompleted();operation.setSuccessful();}else{operation.setException(result.message);me.fireEvent('exception',this,response,operation);}}else{me.setException(operation,response);me.fireEvent('exception',this,response,operation);}
if(typeof callback=='function'){callback.call(scope||me,operation);}
me.afterRequest(request,success);},setException:function(operation,response){operation.setException({status:response.status,statusText:response.statusText});},extractResponseData:Ext.identityFn,applyEncoding:function(value){return Ext.encode(value);},encodeSorters:function(sorters){var min=[],length=sorters.length,i=0;for(;i<length;i++){min[i]={property:sorters[i].property,direction:sorters[i].direction};}
return this.applyEncoding(min);},encodeFilters:function(filters){var min=[],length=filters.length,i=0;for(;i<length;i++){min[i]={property:filters[i].property,value:filters[i].value};}
return this.applyEncoding(min);},getParams:function(operation){var me=this,params={},isDef=Ext.isDefined,groupers=operation.groupers,sorters=operation.sorters,filters=operation.filters,page=operation.page,start=operation.start,limit=operation.limit,simpleSortMode=me.simpleSortMode,simpleGroupMode=me.simpleGroupMode,pageParam=me.pageParam,startParam=me.startParam,limitParam=me.limitParam,groupParam=me.groupParam,groupDirectionParam=me.groupDirectionParam,sortParam=me.sortParam,filterParam=me.filterParam,directionParam=me.directionParam;if(pageParam&&isDef(page)){params[pageParam]=page;}
if(startParam&&isDef(start)){params[startParam]=start;}
if(limitParam&&isDef(limit)){params[limitParam]=limit;}
if(groupParam&&groupers&&groupers.length>0){if(simpleGroupMode){params[groupParam]=groupers[0].property;params[groupDirectionParam]=groupers[0].direction||'ASC';}else{params[groupParam]=me.encodeSorters(groupers);}}
if(sortParam&&sorters&&sorters.length>0){if(simpleSortMode){params[sortParam]=sorters[0].property;params[directionParam]=sorters[0].direction;}else{params[sortParam]=me.encodeSorters(sorters);}}
if(filterParam&&filters&&filters.length>0){params[filterParam]=me.encodeFilters(filters);}
return params;},buildUrl:function(request){var me=this,url=me.getUrl(request);if(!url){Ext.Error.raise("You are using a ServerProxy but have not supplied it with a url.");}
if(me.noCache){url=Ext.urlAppend(url,Ext.String.format("{0}={1}",me.cacheString,Ext.Date.now()));}
return url;},getUrl:function(request){return request.url||this.api[request.action]||this.url;},doRequest:function(operation,callback,scope){Ext.Error.raise("The doRequest function has not been implemented on your Ext.data.proxy.Server subclass. See src/data/ServerProxy.js for details");},afterRequest:Ext.emptyFn,onDestroy:function(){Ext.destroy(this.reader,this.writer);}});Ext.define('Puma.patch.data.proxy.Server',{override:'Ext.data.proxy.Server',setException:function(operation,response){operation.setException({status:response.status,statusText:response.statusText,response:response});}});Ext.define('Ext.data.writer.Writer',{alias:'writer.base',alternateClassName:['Ext.data.DataWriter','Ext.data.Writer'],writeAllFields:true,nameProperty:'name',isWriter:true,constructor:function(config){Ext.apply(this,config);},write:function(request){var operation=request.operation,records=operation.records||[],len=records.length,i=0,data=[];for(;i<len;i++){data.push(this.getRecordData(records[i],operation));}
return this.writeRecords(request,data);},getRecordData:function(record,operation){var isPhantom=record.phantom===true,writeAll=this.writeAllFields||isPhantom,fields=record.fields,fieldItems=fields.items,data={},clientIdProperty=record.clientIdProperty,changes,field,key,value,f,fLen;if(writeAll){fLen=fieldItems.length;for(f=0;f<fLen;f++){field=fieldItems[f];if(field.persist){this.writeValue(data,field,record);}}}else{changes=record.getChanges();for(key in changes){if(changes.hasOwnProperty(key)){field=fields.get(key);if(field.persist){this.writeValue(data,field,record);}}}}
if(isPhantom){if(clientIdProperty&&operation&&operation.records.length>1){data[clientIdProperty]=record.internalId;}}else{data[record.idProperty]=record.getId();}
return data;},writeValue:function(data,field,record){var name=field[this.nameProperty]||field.name,dateFormat=this.dateFormat||field.dateWriteFormat||field.dateFormat,value=record.get(field.name);if(field.serialize){data[name]=field.serialize(value,record);}else if(field.type===Ext.data.Types.DATE&&dateFormat&&Ext.isDate(value)){data[name]=Ext.Date.format(value,dateFormat);}else{data[name]=value;}}});Ext.define('Ext.util.Animate',{requires:['Ext.Element','Ext.CompositeElementLite'],uses:['Ext.fx.Manager','Ext.fx.Anim'],animate:function(animObj){var me=this;if(Ext.fx.Manager.hasFxBlock(me.id)){return me;}
Ext.fx.Manager.queueFx(new Ext.fx.Anim(me.anim(animObj)));return this;},anim:function(config){if(!Ext.isObject(config)){return(config)?{}:false;}
var me=this;if(config.stopAnimation){me.stopAnimation();}
Ext.applyIf(config,Ext.fx.Manager.getFxDefaults(me.id));return Ext.apply({target:me,paused:true},config);},stopFx:Ext.Function.alias(Ext.util.Animate,'stopAnimation'),stopAnimation:function(){Ext.fx.Manager.stopAnimation(this.id);return this;},syncFx:function(){Ext.fx.Manager.setFxDefaults(this.id,{concurrent:true});return this;},sequenceFx:function(){Ext.fx.Manager.setFxDefaults(this.id,{concurrent:false});return this;},hasActiveFx:Ext.Function.alias(Ext.util.Animate,'getActiveAnimation'),getActiveAnimation:function(){return Ext.fx.Manager.getActiveAnimation(this.id);}},function(){Ext.applyIf(Ext.Element.prototype,this.prototype);Ext.CompositeElementLite.importElementMethods();});Ext.define('Ext.util.Renderable',{requires:['Ext.dom.Element'],frameCls:Ext.baseCSSPrefix+'frame',frameIdRegex:/[\-]frame\d+[TMB][LCR]$/,frameElementCls:{tl:[],tc:[],tr:[],ml:[],mc:[],mr:[],bl:[],bc:[],br:[]},frameElNames:['TL','TC','TR','ML','MC','MR','BL','BC','BR'],frameTpl:['{%this.renderDockedItems(out,values,0);%}','<tpl if="top">','<tpl if="left"><div id="{fgid}TL" class="{frameCls}-tl {baseCls}-tl {baseCls}-{ui}-tl<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-tl</tpl>" style="background-position: {tl}; padding-left: {frameWidth}px" role="presentation"></tpl>','<tpl if="right"><div id="{fgid}TR" class="{frameCls}-tr {baseCls}-tr {baseCls}-{ui}-tr<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-tr</tpl>" style="background-position: {tr}; padding-right: {frameWidth}px" role="presentation"></tpl>','<div id="{fgid}TC" class="{frameCls}-tc {baseCls}-tc {baseCls}-{ui}-tc<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-tc</tpl>" style="background-position: {tc}; height: {frameWidth}px" role="presentation"></div>','<tpl if="right"></div></tpl>','<tpl if="left"></div></tpl>','</tpl>','<tpl if="left"><div id="{fgid}ML" class="{frameCls}-ml {baseCls}-ml {baseCls}-{ui}-ml<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-ml</tpl>" style="background-position: {ml}; padding-left: {frameWidth}px" role="presentation"></tpl>','<tpl if="right"><div id="{fgid}MR" class="{frameCls}-mr {baseCls}-mr {baseCls}-{ui}-mr<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-mr</tpl>" style="background-position: {mr}; padding-right: {frameWidth}px" role="presentation"></tpl>','<div id="{fgid}MC" class="{frameCls}-mc {baseCls}-mc {baseCls}-{ui}-mc<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-mc</tpl>" role="presentation">','{%this.applyRenderTpl(out, values)%}','</div>','<tpl if="right"></div></tpl>','<tpl if="left"></div></tpl>','<tpl if="bottom">','<tpl if="left"><div id="{fgid}BL" class="{frameCls}-bl {baseCls}-bl {baseCls}-{ui}-bl<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-bl</tpl>" style="background-position: {bl}; padding-left: {frameWidth}px" role="presentation"></tpl>','<tpl if="right"><div id="{fgid}BR" class="{frameCls}-br {baseCls}-br {baseCls}-{ui}-br<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-br</tpl>" style="background-position: {br}; padding-right: {frameWidth}px" role="presentation"></tpl>','<div id="{fgid}BC" class="{frameCls}-bc {baseCls}-bc {baseCls}-{ui}-bc<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-bc</tpl>" style="background-position: {bc}; height: {frameWidth}px" role="presentation"></div>','<tpl if="right"></div></tpl>','<tpl if="left"></div></tpl>','</tpl>','{%this.renderDockedItems(out,values,1);%}'],frameTableTpl:['{%this.renderDockedItems(out,values,0);%}','<table><tbody>','<tpl if="top">','<tr>','<tpl if="left"><td id="{fgid}TL" class="{frameCls}-tl {baseCls}-tl {baseCls}-{ui}-tl<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-tl</tpl>" style="background-position: {tl}; padding-left:{frameWidth}px" role="presentation"></td></tpl>','<td id="{fgid}TC" class="{frameCls}-tc {baseCls}-tc {baseCls}-{ui}-tc<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-tc</tpl>" style="background-position: {tc}; height: {frameWidth}px" role="presentation"></td>','<tpl if="right"><td id="{fgid}TR" class="{frameCls}-tr {baseCls}-tr {baseCls}-{ui}-tr<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-tr</tpl>" style="background-position: {tr}; padding-left: {frameWidth}px" role="presentation"></td></tpl>','</tr>','</tpl>','<tr>','<tpl if="left"><td id="{fgid}ML" class="{frameCls}-ml {baseCls}-ml {baseCls}-{ui}-ml<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-ml</tpl>" style="background-position: {ml}; padding-left: {frameWidth}px" role="presentation"></td></tpl>','<td id="{fgid}MC" class="{frameCls}-mc {baseCls}-mc {baseCls}-{ui}-mc<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-mc</tpl>" style="background-position: 0 0;" role="presentation">','{%this.applyRenderTpl(out, values)%}','</td>','<tpl if="right"><td id="{fgid}MR" class="{frameCls}-mr {baseCls}-mr {baseCls}-{ui}-mr<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-mr</tpl>" style="background-position: {mr}; padding-left: {frameWidth}px" role="presentation"></td></tpl>','</tr>','<tpl if="bottom">','<tr>','<tpl if="left"><td id="{fgid}BL" class="{frameCls}-bl {baseCls}-bl {baseCls}-{ui}-bl<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-bl</tpl>" style="background-position: {bl}; padding-left: {frameWidth}px" role="presentation"></td></tpl>','<td id="{fgid}BC" class="{frameCls}-bc {baseCls}-bc {baseCls}-{ui}-bc<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-bc</tpl>" style="background-position: {bc}; height: {frameWidth}px" role="presentation"></td>','<tpl if="right"><td id="{fgid}BR" class="{frameCls}-br {baseCls}-br {baseCls}-{ui}-br<tpl for="uiCls"> {parent.baseCls}-{parent.ui}-{.}-br</tpl>" style="background-position: {br}; padding-left: {frameWidth}px" role="presentation"></td></tpl>','</tr>','</tpl>','</tbody></table>','{%this.renderDockedItems(out,values,1);%}'],afterRender:function(){var me=this,data={},protoEl=me.protoEl,target=me.el,item;me.finishRenderChildren();if(me.styleHtmlContent){me.getTargetEl().addCls(me.styleHtmlCls);}
protoEl.writeTo(data);item=data.removed;if(item){target.removeCls(item);}
item=data.cls;if(item.length){target.addCls(item);}
item=data.style;if(data.style){target.setStyle(item);}
me.protoEl=null;if(!me.ownerCt){me.updateLayout();}},afterFirstLayout:function(width,height){var me=this,hasX=Ext.isDefined(me.x),hasY=Ext.isDefined(me.y),pos,xy;if(me.floating&&(!hasX||!hasY)){if(me.floatParent){pos=me.floatParent.getTargetEl().getViewRegion();xy=me.el.getAlignToXY(me.floatParent.getTargetEl(),'c-c');pos.left=xy[0]-pos.left;pos.top=xy[1]-pos.top;}else{xy=me.el.getAlignToXY(me.container,'c-c');pos=me.container.translatePoints(xy[0],xy[1]);}
me.x=hasX?me.x:pos.left;me.y=hasY?me.y:pos.top;hasX=hasY=true;}
if(hasX||hasY){me.setPosition(me.x,me.y);}
me.onBoxReady(width,height);if(me.hasListeners.boxready){me.fireEvent('boxready',me,width,height);}},onBoxReady:Ext.emptyFn,applyRenderSelectors:function(){var me=this,selectors=me.renderSelectors,el=me.el,dom=el.dom,selector;me.applyChildEls(el);if(selectors){for(selector in selectors){if(selectors.hasOwnProperty(selector)&&selectors[selector]){me[selector]=Ext.get(Ext.DomQuery.selectNode(selectors[selector],dom));}}}},beforeRender:function(){var me=this,target=me.getTargetEl(),layout=me.getComponentLayout();me.frame=me.frame||me.alwaysFramed;if(!layout.initialized){layout.initLayout();}
if(target){target.setStyle(me.getOverflowStyle());me.overflowStyleSet=true;}
me.setUI(me.ui);if(me.disabled){me.disable(true);}},doApplyRenderTpl:function(out,values){var me=values.$comp,tpl;if(!me.rendered){tpl=me.initRenderTpl();tpl.applyOut(values.renderData,out);}},doAutoRender:function(){var me=this;if(!me.rendered){if(me.floating){me.render(document.body);}else{me.render(Ext.isBoolean(me.autoRender)?Ext.getBody():me.autoRender);}}},doRenderContent:function(out,renderData){var me=renderData.$comp;if(me.html){Ext.DomHelper.generateMarkup(me.html,out);delete me.html;}
if(me.tpl){if(!me.tpl.isTemplate){me.tpl=new Ext.XTemplate(me.tpl);}
if(me.data){me.tpl.applyOut(me.data,out);delete me.data;}}},doRenderFramingDockedItems:function(out,renderData,after){var me=renderData.$comp;if(!me.rendered&&me.doRenderDockedItems){renderData.renderData.$skipDockedItems=true;me.doRenderDockedItems.call(this,out,renderData,after);}},finishRender:function(containerIdx){var me=this,tpl,data,contentEl,el,pre,hide;if(!me.el||me.$pid){if(me.container){el=me.container.getById(me.id,true);}else{el=Ext.getDom(me.id);}
if(!me.el){me.wrapPrimaryEl(el);}else{delete me.$pid;if(!me.el.dom){me.wrapPrimaryEl(me.el);}
el.parentNode.insertBefore(me.el.dom,el);Ext.removeNode(el);}}else if(!me.rendering){tpl=me.initRenderTpl();if(tpl){data=me.initRenderData();tpl.insertFirst(me.getTargetEl(),data);}}
if(!me.container){me.container=Ext.get(me.el.dom.parentNode);}
if(me.ctCls){me.container.addCls(me.ctCls);}
me.onRender(me.container,containerIdx);if(!me.overflowStyleSet){me.getTargetEl().setStyle(me.getOverflowStyle());}
me.el.setVisibilityMode(Ext.Element[me.hideMode.toUpperCase()]);if(me.overCls){me.el.hover(me.addOverCls,me.removeOverCls,me);}
if(me.hasListeners.render){me.fireEvent('render',me);}
if(me.contentEl){pre=Ext.baseCSSPrefix;hide=pre+'hide-';contentEl=Ext.get(me.contentEl);contentEl.removeCls([pre+'hidden',hide+'display',hide+'offsets',hide+'nosize']);me.getTargetEl().appendChild(contentEl.dom);}
me.afterRender();if(me.hasListeners.afterrender){me.fireEvent('afterrender',me);}
me.initEvents();if(me.hidden){me.el.hide();}},finishRenderChildren:function(){var layout=this.getComponentLayout();layout.finishRender();},getElConfig:function(){var me=this,autoEl=me.autoEl,frameInfo=me.getFrameInfo(),config={tag:'div',tpl:frameInfo?me.initFramingTpl(frameInfo.table):me.initRenderTpl()},i,frameElNames,len,suffix,frameGenId;me.initStyles(me.protoEl);me.protoEl.writeTo(config);me.protoEl.flush();if(Ext.isString(autoEl)){config.tag=autoEl;}else{Ext.apply(config,autoEl);}
config.id=me.id;if(config.tpl){if(frameInfo){frameElNames=me.frameElNames;len=frameElNames.length;frameGenId=me.id+'-frame1';me.frameGenId=1;config.tplData=Ext.apply({},{$comp:me,fgid:frameGenId,ui:me.ui,uiCls:me.uiCls,frameCls:me.frameCls,baseCls:me.baseCls,frameWidth:frameInfo.maxWidth,top:!!frameInfo.top,left:!!frameInfo.left,right:!!frameInfo.right,bottom:!!frameInfo.bottom,renderData:me.initRenderData()},me.getFramePositions(frameInfo));for(i=0;i<len;i++){suffix=frameElNames[i];me.addChildEls({name:'frame'+suffix,id:frameGenId+suffix});}
me.addChildEls({name:'frameBody',id:frameGenId+'MC'});}else{config.tplData=me.initRenderData();}}
return config;},initFramingTpl:function(table){var tpl=table?this.getTpl('frameTableTpl'):this.getTpl('frameTpl');if(tpl&&!tpl.applyRenderTpl){this.setupFramingTpl(tpl);}
return tpl;},setupFramingTpl:function(frameTpl){frameTpl.applyRenderTpl=this.doApplyRenderTpl;frameTpl.renderDockedItems=this.doRenderFramingDockedItems;},getInsertPosition:function(position){if(position!==undefined){if(Ext.isNumber(position)){position=this.container.dom.childNodes[position];}
else{position=Ext.getDom(position);}}
return position;},getRenderTree:function(){var me=this;if(!me.hasListeners.beforerender||me.fireEvent('beforerender',me)!==false){me.beforeRender();me.rendering=true;if(me.el){return{tag:'div',id:(me.$pid=Ext.id())};}
return me.getElConfig();}
return null;},initContainer:function(container){var me=this;if(!container&&me.el){container=me.el.dom.parentNode;me.allowDomMove=false;}
me.container=container.dom?container:Ext.get(container);return me.container;},initRenderData:function(){var me=this;return Ext.apply({$comp:me,id:me.id,ui:me.ui,uiCls:me.uiCls,baseCls:me.baseCls,componentCls:me.componentCls,frame:me.frame},me.renderData);},initRenderTpl:function(){var tpl=this.getTpl('renderTpl');if(tpl&&!tpl.renderContent){this.setupRenderTpl(tpl);}
return tpl;},onRender:function(parentNode,containerIdx){var me=this,x=me.x,y=me.y,lastBox,width,height,el=me.el,body=Ext.getBody().dom;if(Ext.scopeResetCSS&&!me.ownerCt){if(el.dom===body){el.parent().addCls(Ext.resetCls);}
else{if(me.floating&&me.el.dom.parentNode===body){Ext.resetElement.appendChild(me.el);}
else{me.resetEl=el.wrap(Ext.resetElementSpec,false,Ext.supports.CSS3LinearGradient?undefined:'*');}}}
me.applyRenderSelectors();delete me.rendering;me.rendered=true;lastBox=null;if(x!==undefined){lastBox=lastBox||{};lastBox.x=x;}
if(y!==undefined){lastBox=lastBox||{};lastBox.y=y;}
if(!me.getFrameInfo()&&Ext.isBorderBox){width=me.width;height=me.height;if(typeof width=='number'){lastBox=lastBox||{};lastBox.width=width;}
if(typeof height=='number'){lastBox=lastBox||{};lastBox.height=height;}}
me.lastBox=me.el.lastBox=lastBox;},render:function(container,position){var me=this,el=me.el&&(me.el=Ext.get(me.el)),vetoed,tree,nextSibling;Ext.suspendLayouts();container=me.initContainer(container);nextSibling=me.getInsertPosition(position);if(!el){tree=me.getRenderTree();if(me.ownerLayout&&me.ownerLayout.transformItemRenderTree){tree=me.ownerLayout.transformItemRenderTree(tree);}
if(tree){if(nextSibling){el=Ext.DomHelper.insertBefore(nextSibling,tree);}else{el=Ext.DomHelper.append(container,tree);}
me.wrapPrimaryEl(el);}}else{if(!me.hasListeners.beforerender||me.fireEvent('beforerender',me)!==false){me.initStyles(el);if(me.allowDomMove!==false){if(nextSibling){container.dom.insertBefore(el.dom,nextSibling);}else{container.dom.appendChild(el.dom);}}}else{vetoed=true;}}
if(el&&!vetoed){me.finishRender(position);}
Ext.resumeLayouts(!container.isDetachedBody);},ensureAttachedToBody:function(runLayout){var comp=this,body;while(comp.ownerCt){comp=comp.ownerCt;}
if(comp.container.isDetachedBody){comp.container=body=Ext.resetElement;body.appendChild(comp.el.dom);if(runLayout){comp.updateLayout();}
if(typeof comp.x=='number'||typeof comp.y=='number'){comp.setPosition(comp.x,comp.y);}}},setupRenderTpl:function(renderTpl){renderTpl.renderBody=renderTpl.renderContent=this.doRenderContent;},wrapPrimaryEl:function(dom){this.el=Ext.get(dom,true);},initFrame:function(){if(Ext.supports.CSS3BorderRadius||!this.frame){return;}
var me=this,frameInfo=me.getFrameInfo(),frameWidth,frameTpl,frameGenId,i,frameElNames=me.frameElNames,len=frameElNames.length,suffix;if(frameInfo){frameWidth=frameInfo.maxWidth;frameTpl=me.getFrameTpl(frameInfo.table);me.frameGenId=frameGenId=(me.frameGenId||0)+1;frameGenId=me.id+'-frame'+frameGenId;frameTpl.insertFirst(me.el,Ext.apply({$comp:me,fgid:frameGenId,ui:me.ui,uiCls:me.uiCls,frameCls:me.frameCls,baseCls:me.baseCls,frameWidth:frameWidth,top:!!frameInfo.top,left:!!frameInfo.left,right:!!frameInfo.right,bottom:!!frameInfo.bottom},me.getFramePositions(frameInfo)));me.frameBody=me.el.down('.'+me.frameCls+'-mc');me.removeChildEls(function(c){return c.id&&me.frameIdRegex.test(c.id);});for(i=0;i<len;i++){suffix=frameElNames[i];me['frame'+suffix]=me.el.getById(frameGenId+suffix);}}},updateFrame:function(){if(Ext.supports.CSS3BorderRadius||!this.frame){return;}
var me=this,wasTable=this.frameSize&&this.frameSize.table,oldFrameTL=this.frameTL,oldFrameBL=this.frameBL,oldFrameML=this.frameML,oldFrameMC=this.frameMC,newMCClassName;this.initFrame();if(oldFrameMC){if(me.frame){newMCClassName=this.frameMC.dom.className;oldFrameMC.insertAfter(this.frameMC);this.frameMC.remove();this.frameBody=this.frameMC=oldFrameMC;oldFrameMC.dom.className=newMCClassName;if(wasTable){me.el.query('> table')[1].remove();}
else{if(oldFrameTL){oldFrameTL.remove();}
if(oldFrameBL){oldFrameBL.remove();}
if(oldFrameML){oldFrameML.remove();}}}}
else if(me.frame){this.applyRenderSelectors();}},getFrameInfo:function(){if(Ext.supports.CSS3BorderRadius||!this.frame){return false;}
var me=this,frameInfoCache=me.frameInfoCache,el=me.el||me.protoEl,cls=el.dom?el.dom.className:el.classList.join(' '),frameInfo=frameInfoCache[cls],styleEl,left,top,info;if(frameInfo==null){styleEl=Ext.fly(me.getStyleProxy(cls),'frame-style-el');left=styleEl.getStyle('background-position-x');top=styleEl.getStyle('background-position-y');if(!left&&!top){info=styleEl.getStyle('background-position').split(' ');left=info[0];top=info[1];}
frameInfo=me.calculateFrame(left,top);if(frameInfo){el.setStyle('background-image','none');}
if(me.frame===true&&!frameInfo){Ext.log.error('You have set frame: true explicity on this component ('+me.getXType()+') and it '+'does not have any framing defined in the CSS template. In this case IE cannot figure out '+'what sizes to use and thus framing on this component will be disabled.');}
frameInfoCache[cls]=frameInfo;}
me.frame=!!frameInfo;me.frameSize=frameInfo;return frameInfo;},calculateFrame:function(left,top){if(!(parseInt(left,10)>=1000000&&parseInt(top,10)>=1000000)){return false;}
var max=Math.max,tl=parseInt(left.substr(3,2),10),tr=parseInt(left.substr(5,2),10),br=parseInt(top.substr(3,2),10),bl=parseInt(top.substr(5,2),10),frameInfo={table:left.substr(0,3)=='110',vertical:top.substr(0,3)=='110',top:max(tl,tr),right:max(tr,br),bottom:max(bl,br),left:max(tl,bl)};frameInfo.maxWidth=max(frameInfo.top,frameInfo.right,frameInfo.bottom,frameInfo.left);frameInfo.width=frameInfo.left+frameInfo.right;frameInfo.height=frameInfo.top+frameInfo.bottom;return frameInfo;},getStyleProxy:function(cls){var result=this.styleProxyEl||(Ext.AbstractComponent.prototype.styleProxyEl=Ext.resetElement.createChild({style:{position:'absolute',top:'-10000px'}},null,true));result.className=cls;return result;},getFramePositions:function(frameInfo){var me=this,frameWidth=frameInfo.maxWidth,dock=me.dock,positions,tc,bc,ml,mr;if(frameInfo.vertical){tc='0 -'+(frameWidth*0)+'px';bc='0 -'+(frameWidth*1)+'px';if(dock&&dock=="right"){tc='right -'+(frameWidth*0)+'px';bc='right -'+(frameWidth*1)+'px';}
positions={tl:'0 -'+(frameWidth*0)+'px',tr:'0 -'+(frameWidth*1)+'px',bl:'0 -'+(frameWidth*2)+'px',br:'0 -'+(frameWidth*3)+'px',ml:'-'+(frameWidth*1)+'px 0',mr:'right 0',tc:tc,bc:bc};}else{ml='-'+(frameWidth*0)+'px 0';mr='right 0';if(dock&&dock=="bottom"){ml='left bottom';mr='right bottom';}
positions={tl:'0 -'+(frameWidth*2)+'px',tr:'right -'+(frameWidth*3)+'px',bl:'0 -'+(frameWidth*4)+'px',br:'right -'+(frameWidth*5)+'px',ml:ml,mr:mr,tc:'0 -'+(frameWidth*0)+'px',bc:'0 -'+(frameWidth*1)+'px'};}
return positions;},getFrameTpl:function(table){return this.getTpl(table?'frameTableTpl':'frameTpl');},frameInfoCache:{}});Ext.define('Ext.util.ProtoElement',(function(){var splitWords=Ext.String.splitWords,toMap=Ext.Array.toMap;return{isProtoEl:true,clsProp:'cls',styleProp:'style',removedProp:'removed',styleIsText:false,constructor:function(config){var me=this;Ext.apply(me,config);me.classList=splitWords(me.cls);me.classMap=toMap(me.classList);delete me.cls;if(Ext.isFunction(me.style)){me.styleFn=me.style;delete me.style;}else if(typeof me.style=='string'){me.style=Ext.Element.parseStyles(me.style);}else if(me.style){me.style=Ext.apply({},me.style);}},flush:function(){this.flushClassList=[];this.removedClasses={};delete this.style;},addCls:function(cls){var me=this,add=splitWords(cls),length=add.length,list=me.classList,map=me.classMap,flushList=me.flushClassList,i=0,c;for(;i<length;++i){c=add[i];if(!map[c]){map[c]=true;list.push(c);if(flushList){flushList.push(c);delete me.removedClasses[c];}}}
return me;},hasCls:function(cls){return cls in this.classMap;},removeCls:function(cls){var me=this,list=me.classList,newList=(me.classList=[]),remove=toMap(splitWords(cls)),length=list.length,map=me.classMap,removedClasses=me.removedClasses,i,c;for(i=0;i<length;++i){c=list[i];if(remove[c]){if(removedClasses){if(map[c]){removedClasses[c]=true;Ext.Array.remove(me.flushClassList,c);}}
delete map[c];}else{newList.push(c);}}
return me;},setStyle:function(prop,value){var me=this,style=me.style||(me.style={});if(typeof prop=='string'){if(arguments.length===1){me.setStyle(Ext.Element.parseStyles(prop));}else{style[prop]=value;}}else{Ext.apply(style,prop);}
return me;},writeTo:function(to){var me=this,classList=me.flushClassList||me.classList,removedClasses=me.removedClasses,style;if(me.styleFn){style=Ext.apply({},me.styleFn());Ext.apply(style,me.style);}else{style=me.style;}
to[me.clsProp]=classList.join(' ');if(style){to[me.styleProp]=me.styleIsText?Ext.DomHelper.generateStyles(style):style;}
if(removedClasses){removedClasses=Ext.Object.getKeys(removedClasses);if(removedClasses.length){to[me.removedProp]=removedClasses.join(' ');}}
return to;}};}()));Ext.define('Ext.fx.target.Target',{isAnimTarget:true,constructor:function(target){this.target=target;this.id=this.getId();},getId:function(){return this.target.id;}});Ext.define('Ext.layout.container.boxOverflow.None',{alternateClassName:'Ext.layout.boxOverflow.None',constructor:function(layout,config){this.layout=layout;Ext.apply(this,config);},handleOverflow:Ext.emptyFn,clearOverflow:Ext.emptyFn,beginLayout:Ext.emptyFn,beginLayoutCycle:Ext.emptyFn,calculate:function(ownerContext){var me=this,plan=ownerContext.state.boxPlan,overflow;if(plan&&plan.tooNarrow){overflow=me.handleOverflow(ownerContext);if(overflow){if(overflow.reservedSpace){me.layout.publishInnerCtSize(ownerContext,overflow.reservedSpace);}}}else{me.clearOverflow();}},completeLayout:Ext.emptyFn,finishedLayout:function(ownerContext){var me=this,owner=me.layout.owner,hiddens,hiddenCount;if(owner.hasListeners.overflowchange){hiddens=owner.query('>[hidden]');hiddenCount=hiddens.length;if(hiddenCount!==me.lastHiddenCount){owner.fireEvent('overflowchange',me.lastHiddenCount,hiddenCount,hiddens);me.lastHiddenCount=hiddenCount;}}},onRemove:Ext.emptyFn,getItem:function(item){return this.layout.owner.getComponent(item);},getOwnerType:function(owner){var type;if(owner.isToolbar){type='toolbar';}else if(owner.isTabBar){type='tabbar';}else if(owner.isMenu){type='menu';}else{type=owner.getXType();}
return type;},getPrefixConfig:Ext.emptyFn,getSuffixConfig:Ext.emptyFn,getOverflowCls:function(){return'';}});Ext.define('Ext.layout.container.boxOverflow.Scroller',{extend:'Ext.layout.container.boxOverflow.None',requires:['Ext.util.ClickRepeater','Ext.Element'],alternateClassName:'Ext.layout.boxOverflow.Scroller',mixins:{observable:'Ext.util.Observable'},animateScroll:false,scrollIncrement:20,wheelIncrement:10,scrollRepeatInterval:60,scrollDuration:400,scrollerCls:Ext.baseCSSPrefix+'box-scroller',constructor:function(layout,config){var me=this;me.layout=layout;Ext.apply(me,config||{});me.mixins.observable.constructor.call(me);me.addEvents('scroll');me.scrollPosition=0;me.scrollSize=0;},getPrefixConfig:function(){var me=this;me.initCSSClasses();return{cls:Ext.layout.container.Box.prototype.innerCls+' '+me.beforeCtCls,cn:{id:me.layout.owner.id+'-before-scroller',cls:me.scrollerCls+' '+me.beforeScrollerCls,style:'display:none'}};},getSuffixConfig:function(){var me=this;return{cls:Ext.layout.container.Box.prototype.innerCls+' '+me.afterCtCls,cn:{id:me.layout.owner.id+'-after-scroller',cls:me.scrollerCls+' '+me.afterScrollerCls,style:'display:none'}};},getOverflowCls:function(){return Ext.baseCSSPrefix+this.layout.direction+'-box-overflow-body';},initCSSClasses:function(){var me=this,prefix=Ext.baseCSSPrefix,layout=me.layout,names=layout.getNames(),leftName=names.left,rightName=names.right,type=me.getOwnerType(layout.owner);me.beforeCtCls=me.beforeCtCls||prefix+'box-scroller-'+leftName;me.afterCtCls=me.afterCtCls||prefix+'box-scroller-'+rightName;me.beforeScrollerCls=me.beforeScrollerCls||prefix+type+'-scroll-'+leftName;me.afterScrollerCls=me.afterScrollerCls||prefix+type+'-scroll-'+rightName;},beginLayout:function(ownerContext){var layout=this.layout,names=layout.getNames();ownerContext.innerCtScrollPos=layout.innerCt.dom['scroll'+names.leftCap];this.callParent(arguments);},completeLayout:function(ownerContext){this.scrollSize=ownerContext.props['content'+this.layout.getNames().widthCap];this.updateScrollButtons();this.callParent(arguments);},finishedLayout:function(ownerContext){var me=this,layout=me.layout,names=layout.getNames(),scrollPos=Math.min(me.getMaxScrollPosition(),ownerContext.innerCtScrollPos);layout.innerCt.dom['scroll'+names.leftCap]=scrollPos;},handleOverflow:function(ownerContext){var me=this,layout=me.layout,names=layout.getNames(),methodName='get'+names.widthCap;me.showScrollers();return{reservedSpace:me.beforeCt[methodName]()+me.afterCt[methodName]()};},captureChildElements:function(){var me=this,el=me.layout.owner.el,before,after;if(!me.beforeCt){before=me.beforeScroller=el.getById(me.layout.owner.id+'-before-scroller');after=me.afterScroller=el.getById(me.layout.owner.id+'-after-scroller');me.beforeCt=before.up('');me.afterCt=after.up('');me.createWheelListener();before.addClsOnOver(me.beforeScrollerCls+'-hover');after.addClsOnOver(me.afterScrollerCls+'-hover');before.setVisibilityMode(Ext.Element.DISPLAY);after.setVisibilityMode(Ext.Element.DISPLAY);me.beforeRepeater=new Ext.util.ClickRepeater(before,{interval:me.scrollRepeatInterval,handler:me.scrollLeft,scope:me});me.afterRepeater=new Ext.util.ClickRepeater(after,{interval:me.scrollRepeatInterval,handler:me.scrollRight,scope:me});}},createWheelListener:function(){this.layout.innerCt.on({mousewheel:function(e){this.scrollBy(e.getWheelDelta()*this.wheelIncrement*-1,false);},stopEvent:true,scope:this});},clearOverflow:function(){var layout=this.layout;this.hideScrollers();},showScrollers:function(){var me=this;me.captureChildElements();me.beforeScroller.show();me.afterScroller.show();me.layout.owner.addClsWithUI('scroller');},hideScrollers:function(){var me=this;if(me.beforeScroller!==undefined){me.beforeScroller.hide();me.afterScroller.hide();me.layout.owner.removeClsWithUI('scroller');}},destroy:function(){var me=this;Ext.destroy(me.beforeRepeater,me.afterRepeater,me.beforeScroller,me.afterScroller,me.beforeCt,me.afterCt);},scrollBy:function(delta,animate){this.scrollTo(this.getScrollPosition()+delta,animate);},getScrollAnim:function(){return{duration:this.scrollDuration,callback:this.updateScrollButtons,scope:this};},updateScrollButtons:function(){var me=this,beforeMeth,afterMeth,beforeCls,afterCls;if(me.beforeScroller===undefined||me.afterScroller===undefined){return;}
beforeMeth=me.atExtremeBefore()?'addCls':'removeCls';afterMeth=me.atExtremeAfter()?'addCls':'removeCls';beforeCls=me.beforeScrollerCls+'-disabled';afterCls=me.afterScrollerCls+'-disabled';me.beforeScroller[beforeMeth](beforeCls);me.afterScroller[afterMeth](afterCls);me.scrolling=false;},atExtremeBefore:function(){return!this.getScrollPosition();},scrollLeft:function(){this.scrollBy(-this.scrollIncrement,false);},scrollRight:function(){this.scrollBy(this.scrollIncrement,false);},getScrollPosition:function(){var me=this,layout=me.layout,result;if(me.hasOwnProperty('scrollPosition')){result=me.scrollPosition;}else{result=parseInt(layout.innerCt.dom['scroll'+layout.getNames().leftCap],10)||0;}
return result;},getMaxScrollPosition:function(){var me=this,layout=me.layout,names=layout.getNames(),maxScrollPos=me.scrollSize-layout.innerCt['get'+names.widthCap]();return(maxScrollPos<0)?0:maxScrollPos;},atExtremeAfter:function(){return this.getScrollPosition()>=this.getMaxScrollPosition();},scrollTo:function(position,animate){var me=this,layout=me.layout,names=layout.getNames(),oldPosition=me.getScrollPosition(),newPosition=Ext.Number.constrain(position,0,me.getMaxScrollPosition());if(newPosition!=oldPosition&&!me.scrolling){delete me.scrollPosition;if(animate===undefined){animate=me.animateScroll;}
layout.innerCt.scrollTo(names.left,newPosition,animate?me.getScrollAnim():false);if(animate){me.scrolling=true;}else{me.updateScrollButtons();}
me.fireEvent('scroll',me,newPosition,animate?me.getScrollAnim():false);}},scrollToItem:function(item,animate){var me=this,layout=me.layout,names=layout.getNames(),visibility,box,newPos;item=me.getItem(item);if(item!==undefined){visibility=me.getItemVisibility(item);if(!visibility.fullyVisible){box=item.getBox(true,true);newPos=box[names.x];if(visibility.hiddenEnd){newPos-=(me.layout.innerCt['get'+names.widthCap]()-box[names.width]);}
me.scrollTo(newPos,animate);}}},getItemVisibility:function(item){var me=this,box=me.getItem(item).getBox(true,true),layout=me.layout,names=layout.getNames(),itemStart=box[names.x],itemEnd=itemStart+box[names.width],scrollStart=me.getScrollPosition(),scrollEnd=scrollStart+layout.innerCt['get'+names.widthCap]();return{hiddenStart:itemStart<scrollStart,hiddenEnd:itemEnd>scrollEnd,fullyVisible:itemStart>scrollStart&&itemEnd<scrollEnd};}});Ext.define('Ext.ZIndexManager',{alternateClassName:'Ext.WindowGroup',statics:{zBase:9000},constructor:function(container){var me=this;me.list={};me.zIndexStack=[];me.front=null;if(container){if(container.isContainer){container.on('resize',me._onContainerResize,me);me.zseed=Ext.Number.from(me.rendered?container.getEl().getStyle('zIndex'):undefined,me.getNextZSeed());me.targetEl=container.getTargetEl();me.container=container;}
else{Ext.EventManager.onWindowResize(me._onContainerResize,me);me.zseed=me.getNextZSeed();me.targetEl=Ext.get(container);}}
else{Ext.EventManager.onWindowResize(me._onContainerResize,me);me.zseed=me.getNextZSeed();Ext.onDocumentReady(function(){me.targetEl=Ext.getBody();});}},getNextZSeed:function(){return(Ext.ZIndexManager.zBase+=10000);},setBase:function(baseZIndex){this.zseed=baseZIndex;var result=this.assignZIndices();this._activateLast();return result;},assignZIndices:function(){var a=this.zIndexStack,len=a.length,i=0,zIndex=this.zseed,comp;for(;i<len;i++){comp=a[i];if(comp&&!comp.hidden){zIndex=comp.setZIndex(zIndex);}}
this._activateLast();return zIndex;},_setActiveChild:function(comp,oldFront){var front=this.front,oldPreventFocus=comp.preventFocusOnActivate;if(comp!==front){if(front&&!front.destroying){front.setActive(false,comp);}
this.front=comp;if(comp&&comp!=oldFront){comp.preventFocusOnActivate=oldFront&&(oldFront.preventFocusOnActivate||!oldFront.focusOnToFront);comp.setActive(true);if(comp.modal){this._showModalMask(comp);}
comp.preventFocusOnActivate=oldPreventFocus;}}},onComponentHide:function(comp){this._activateLast();},_activateLast:function(){var me=this,stack=me.zIndexStack,i=stack.length-1,comp;for(;i>=0&&stack[i].hidden;--i);if((comp=stack[i])){me._setActiveChild(comp,me.front);if(comp.modal){return;}}
else{if(me.front&&!me.front.destroying){me.front.setActive(false);}
me.front=undefined;}
for(;i>=0;--i){comp=stack[i];if(comp.isVisible()&&comp.modal){me._showModalMask(comp);return;}}
me._hideModalMask();},_showModalMask:function(comp){var me=this,zIndex=comp.el.getStyle('zIndex')-4,maskTarget=comp.floatParent?comp.floatParent.getTargetEl():comp.container,viewSize=maskTarget.getBox();if(maskTarget.dom===document.body){viewSize.height=Math.max(document.body.scrollHeight,Ext.dom.Element.getDocumentHeight());viewSize.width=Math.max(document.body.scrollWidth,Ext.dom.Element.getDocumentWidth());}
if(!me.mask){if(Ext.isIE6){me.maskShim=Ext.getBody().createChild({tag:'iframe',cls:Ext.baseCSSPrefix+'shim '+Ext.baseCSSPrefix+'mask-shim'});me.maskShim.setVisibilityMode(Ext.Element.DISPLAY);}
me.mask=Ext.getBody().createChild({cls:Ext.baseCSSPrefix+'mask'});me.mask.setVisibilityMode(Ext.Element.DISPLAY);me.mask.on('click',me._onMaskClick,me);}
if(me.maskShim){me.maskShim.setStyle('zIndex',zIndex);me.maskShim.show();me.maskShim.setBox(viewSize);}
me.mask.maskTarget=maskTarget;me.mask.setStyle('zIndex',zIndex);me.mask.show();me.mask.setBox(viewSize);},_hideModalMask:function(){var mask=this.mask,maskShim=this.maskShim;if(mask&&mask.isVisible()){mask.maskTarget=undefined;mask.hide();if(maskShim){maskShim.hide();}}},_onMaskClick:function(){if(this.front){this.front.focus();}},_onContainerResize:function(){var mask=this.mask,maskShim=this.maskShim,maskTarget,viewSize;if(mask&&mask.isVisible()){mask.hide();if(maskShim){maskShim.hide();}
maskTarget=mask.maskTarget;if(maskTarget.dom===document.body){viewSize={height:Math.max(document.body.scrollHeight,Ext.dom.Element.getDocumentHeight()),width:Math.max(document.body.scrollWidth,document.documentElement.clientWidth)};}else{viewSize=maskTarget.getViewSize(true);}
if(maskShim){maskShim.setSize(viewSize);maskShim.show();}
mask.setSize(viewSize);mask.show();}},register:function(comp){var me=this,compAfterHide=comp.afterHide;if(comp.zIndexManager){comp.zIndexManager.unregister(comp);}
comp.zIndexManager=me;me.list[comp.id]=comp;me.zIndexStack.push(comp);comp.afterHide=function(){compAfterHide.apply(comp,arguments);me.onComponentHide(comp);};},unregister:function(comp){var me=this,list=me.list;delete comp.zIndexManager;if(list&&list[comp.id]){delete list[comp.id];delete comp.afterHide;Ext.Array.remove(me.zIndexStack,comp);me._activateLast();}},get:function(id){return id.isComponent?id:this.list[id];},bringToFront:function(comp){var me=this,result=false,zIndexStack=me.zIndexStack;comp=me.get(comp);if(comp!==me.front){Ext.Array.remove(zIndexStack,comp);if(comp.preventBringToFront){zIndexStack.unshift(comp);}else{zIndexStack.push(comp);}
me.assignZIndices();result=true;this.front=comp;}
if(result&&comp.modal){me._showModalMask(comp);}
return result;},sendToBack:function(comp){var me=this;comp=me.get(comp);Ext.Array.remove(me.zIndexStack,comp);me.zIndexStack.unshift(comp);me.assignZIndices();this._activateLast();return comp;},hideAll:function(){var list=this.list,item,id;for(id in list){if(list.hasOwnProperty(id)){item=list[id];if(item.isComponent&&item.isVisible()){item.hide();}}}},hide:function(){var i=0,stack=this.zIndexStack,len=stack.length,comp;this.tempHidden=[];for(;i<len;i++){comp=stack[i];if(comp.isVisible()){this.tempHidden.push(comp);comp.el.hide();}}},show:function(){var i=0,tempHidden=this.tempHidden,len=tempHidden?tempHidden.length:0,comp;for(;i<len;i++){comp=tempHidden[i];comp.el.show();comp.setPosition(comp.x,comp.y);}
delete this.tempHidden;},getActive:function(){return this.front;},getBy:function(fn,scope){var r=[],i=0,stack=this.zIndexStack,len=stack.length,comp;for(;i<len;i++){comp=stack[i];if(fn.call(scope||comp,comp)!==false){r.push(comp);}}
return r;},each:function(fn,scope){var list=this.list,id,comp;for(id in list){if(list.hasOwnProperty(id)){comp=list[id];if(comp.isComponent&&fn.call(scope||comp,comp)===false){return;}}}},eachBottomUp:function(fn,scope){var stack=this.zIndexStack,i=0,len=stack.length,comp;for(;i<len;i++){comp=stack[i];if(comp.isComponent&&fn.call(scope||comp,comp)===false){return;}}},eachTopDown:function(fn,scope){var stack=this.zIndexStack,i=stack.length,comp;for(;i-->0;){comp=stack[i];if(comp.isComponent&&fn.call(scope||comp,comp)===false){return;}}},destroy:function(){var me=this,list=me.list,comp,id;for(id in list){if(list.hasOwnProperty(id)){comp=list[id];if(comp.isComponent){comp.destroy();}}}
delete me.zIndexStack;delete me.list;delete me.container;delete me.targetEl;}},function(){Ext.WindowManager=Ext.WindowMgr=new this();});Ext.define('Ext.XTemplateParser',{constructor:function(config){Ext.apply(this,config);},doTpl:Ext.emptyFn,parse:function(str){var me=this,len=str.length,aliases={elseif:'elif'},topRe=me.topRe,actionsRe=me.actionsRe,index,stack,s,m,t,prev,frame,subMatch,begin,end,actions,prop;me.level=0;me.stack=stack=[];for(index=0;index<len;index=end){topRe.lastIndex=index;m=topRe.exec(str);if(!m){me.doText(str.substring(index,len));break;}
begin=m.index;end=topRe.lastIndex;if(index<begin){me.doText(str.substring(index,begin));}
if(m[1]){end=str.indexOf('%}',begin+2);me.doEval(str.substring(begin+2,end));end+=2;}else if(m[2]){end=str.indexOf(']}',begin+2);me.doExpr(str.substring(begin+2,end));end+=2;}else if(m[3]){me.doTag(m[3]);}else if(m[4]){actions=null;while((subMatch=actionsRe.exec(m[4]))!==null){s=subMatch[2]||subMatch[3];if(s){s=Ext.String.htmlDecode(s);t=subMatch[1];t=aliases[t]||t;actions=actions||{};prev=actions[t];if(typeof prev=='string'){actions[t]=[prev,s];}else if(prev){actions[t].push(s);}else{actions[t]=s;}}}
if(!actions){if(me.elseRe.test(m[4])){me.doElse();}else if(me.defaultRe.test(m[4])){me.doDefault();}else{me.doTpl();stack.push({type:'tpl'});}}
else if(actions['if']){me.doIf(actions['if'],actions);stack.push({type:'if'});}
else if(actions['switch']){me.doSwitch(actions['switch'],actions);stack.push({type:'switch'});}
else if(actions['case']){me.doCase(actions['case'],actions);}
else if(actions['elif']){me.doElseIf(actions['elif'],actions);}
else if(actions['for']){++me.level;if(prop=me.propRe.exec(m[4])){actions.propName=prop[1]||prop[2];}
me.doFor(actions['for'],actions);stack.push({type:'for',actions:actions});}
else if(actions['foreach']){++me.level;if(prop=me.propRe.exec(m[4])){actions.propName=prop[1]||prop[2];}
me.doForEach(actions['foreach'],actions);stack.push({type:'foreach',actions:actions});}
else if(actions.exec){me.doExec(actions.exec,actions);stack.push({type:'exec',actions:actions});}}else if(m[0].length===5){stack.push({type:'tpl'});}else{frame=stack.pop();me.doEnd(frame.type,frame.actions);if(frame.type=='for'||frame.type=='foreach'){--me.level;}}}},topRe:/(?:(\{\%)|(\{\[)|\{([^{}]+)\})|(?:<tpl([^>]*)\>)|(?:<\/tpl>)/g,actionsRe:/\s*(elif|elseif|if|for|foreach|exec|switch|case|eval)\s*\=\s*(?:(?:"([^"]*)")|(?:'([^']*)'))\s*/g,propRe:/prop=(?:(?:"([^"]*)")|(?:'([^']*)'))/,defaultRe:/^\s*default\s*$/,elseRe:/^\s*else\s*$/});Ext.define('Ext.data.Connection',{mixins:{observable:'Ext.util.Observable'},statics:{requestId:0},url:null,async:true,method:null,username:'',password:'',disableCaching:true,withCredentials:false,binary:false,cors:false,disableCachingParam:'_dc',timeout:30000,useDefaultHeader:true,defaultPostHeader:'application/x-www-form-urlencoded; charset=UTF-8',useDefaultXhrHeader:true,defaultXhrHeader:'XMLHttpRequest',constructor:function(config){config=config||{};Ext.apply(this,config);this.requests={};this.mixins.observable.constructor.call(this);},request:function(options){options=options||{};var me=this,scope=options.scope||window,username=options.username||me.username,password=options.password||me.password||'',async,requestOptions,request,headers,xhr;if(me.fireEvent('beforerequest',me,options)!==false){requestOptions=me.setOptions(options,scope);if(me.isFormUpload(options)){me.upload(options.form,requestOptions.url,requestOptions.data,options);return null;}
if(options.autoAbort||me.autoAbort){me.abort();}
async=options.async!==false?(options.async||me.async):false;xhr=me.openRequest(options,requestOptions,async,username,password);headers=me.setupHeaders(xhr,options,requestOptions.data,requestOptions.params);request={id:++Ext.data.Connection.requestId,xhr:xhr,headers:headers,options:options,async:async,binary:options.binary||me.binary,timeout:setTimeout(function(){request.timedout=true;me.abort(request);},options.timeout||me.timeout)};me.requests[request.id]=request;me.latestId=request.id;if(async){xhr.onreadystatechange=Ext.Function.bind(me.onStateChange,me,[request]);}
xhr.send(requestOptions.data);if(!async){return me.onComplete(request);}
return request;}else{Ext.callback(options.callback,options.scope,[options,undefined,undefined]);return null;}},upload:function(form,url,params,options){form=Ext.getDom(form);options=options||{};var id=Ext.id(),frame=document.createElement('iframe'),hiddens=[],encoding='multipart/form-data',buf={target:form.target,method:form.method,encoding:form.encoding,enctype:form.enctype,action:form.action},addField=function(name,value){hiddenItem=document.createElement('input');Ext.fly(hiddenItem).set({type:'hidden',value:value,name:name});form.appendChild(hiddenItem);hiddens.push(hiddenItem);},hiddenItem,obj,value,name,vLen,v,hLen,h;Ext.fly(frame).set({id:id,name:id,cls:Ext.baseCSSPrefix+'hide-display',src:Ext.SSL_SECURE_URL});document.body.appendChild(frame);if(document.frames){document.frames[id].name=id;}
Ext.fly(form).set({target:id,method:'POST',enctype:encoding,encoding:encoding,action:url||buf.action});if(params){obj=Ext.Object.fromQueryString(params)||{};for(name in obj){if(obj.hasOwnProperty(name)){value=obj[name];if(Ext.isArray(value)){vLen=value.length;for(v=0;v<vLen;v++){addField(name,value[v]);}}else{addField(name,value);}}}}
Ext.fly(frame).on('load',Ext.Function.bind(this.onUploadComplete,this,[frame,options]),null,{single:!Ext.isOpera});form.submit();Ext.fly(form).set(buf);hLen=hiddens.length;for(h=0;h<hLen;h++){Ext.removeNode(hiddens[h]);}},onUploadComplete:function(frame,options){var me=this,response={responseText:'',responseXML:null},doc,contentNode;try{doc=frame.contentWindow.document||frame.contentDocument||window.frames[frame.id].document;if(doc){if(Ext.isOpera&&doc.location=='about:blank'){return;}
if(doc.body){if((contentNode=doc.body.firstChild)&&/pre/i.test(contentNode.tagName)){response.responseText=contentNode.innerText;}
else if((contentNode=doc.getElementsByTagName('textarea')[0])){response.responseText=contentNode.value;}
else{response.responseText=doc.body.textContent||doc.body.innerText;}}
response.responseXML=doc.XMLDocument||doc;}}catch(e){}
me.fireEvent('requestcomplete',me,response,options);Ext.callback(options.success,options.scope,[response,options]);Ext.callback(options.callback,options.scope,[options,true,response]);setTimeout(function(){Ext.removeNode(frame);},100);},isFormUpload:function(options){var form=this.getForm(options);if(form){return(options.isUpload||(/multipart\/form-data/i).test(form.getAttribute('enctype')));}
return false;},getForm:function(options){return Ext.getDom(options.form)||null;},setOptions:function(options,scope){var me=this,params=options.params||{},extraParams=me.extraParams,urlParams=options.urlParams,url=options.url||me.url,jsonData=options.jsonData,method,disableCache,data;if(Ext.isFunction(params)){params=params.call(scope,options);}
if(Ext.isFunction(url)){url=url.call(scope,options);}
url=this.setupUrl(options,url);if(!url){Ext.Error.raise({options:options,msg:'No URL specified'});}
data=options.rawData||options.xmlData||jsonData||null;if(jsonData&&!Ext.isPrimitive(jsonData)){data=Ext.encode(data);}
if(Ext.isObject(params)){params=Ext.Object.toQueryString(params);}
if(Ext.isObject(extraParams)){extraParams=Ext.Object.toQueryString(extraParams);}
params=params+((extraParams)?((params)?'&':'')+extraParams:'');urlParams=Ext.isObject(urlParams)?Ext.Object.toQueryString(urlParams):urlParams;params=this.setupParams(options,params);method=(options.method||me.method||((params||data)?'POST':'GET')).toUpperCase();this.setupMethod(options,method);disableCache=options.disableCaching!==false?(options.disableCaching||me.disableCaching):false;if(method==='GET'&&disableCache){url=Ext.urlAppend(url,(options.disableCachingParam||me.disableCachingParam)+'='+(new Date().getTime()));}
if((method=='GET'||data)&&params){url=Ext.urlAppend(url,params);params=null;}
if(urlParams){url=Ext.urlAppend(url,urlParams);}
return{url:url,method:method,data:data||params||null};},setupUrl:function(options,url){var form=this.getForm(options);if(form){url=url||form.action;}
return url;},setupParams:function(options,params){var form=this.getForm(options),serializedForm;if(form&&!this.isFormUpload(options)){serializedForm=Ext.Element.serializeForm(form);params=params?(params+'&'+serializedForm):serializedForm;}
return params;},setupMethod:function(options,method){if(this.isFormUpload(options)){return'POST';}
return method;},setupHeaders:function(xhr,options,data,params){var me=this,headers=Ext.apply({},options.headers||{},me.defaultHeaders||{}),contentType=me.defaultPostHeader,jsonData=options.jsonData,xmlData=options.xmlData,key,header;if(!headers['Content-Type']&&(data||params)){if(data){if(options.rawData){contentType='text/plain';}else{if(xmlData&&Ext.isDefined(xmlData)){contentType='text/xml';}else if(jsonData&&Ext.isDefined(jsonData)){contentType='application/json';}}}
headers['Content-Type']=contentType;}
if(me.useDefaultXhrHeader&&!headers['X-Requested-With']){headers['X-Requested-With']=me.defaultXhrHeader;}
try{for(key in headers){if(headers.hasOwnProperty(key)){header=headers[key];xhr.setRequestHeader(key,header);}}}catch(e){me.fireEvent('exception',key,header);}
return headers;},newRequest:function(options){var xhr;if((options.cors||this.cors)&&Ext.isIE&&Ext.ieVersion>=8){xhr=new XDomainRequest();}else{xhr=this.getXhrInstance();}
return xhr;},openRequest:function(options,requestOptions,async,username,password){var xhr=this.newRequest(options);if(username){xhr.open(requestOptions.method,requestOptions.url,async,username,password);}else{xhr.open(requestOptions.method,requestOptions.url,async);}
if(options.binary||this.binary){if(window.Uint8Array){xhr.responseType='arraybuffer';}else if(xhr.overrideMimeType){xhr.overrideMimeType('text\/plain; charset=x-user-defined');}else if(!Ext.isIE){Ext.log.warn("Your does not support loading binary data using Ajax.");}}
if(options.withCredentials||this.withCredentials){xhr.withCredentials=true;}
return xhr;},getXhrInstance:(function(){var options=[function(){return new XMLHttpRequest();},function(){return new ActiveXObject('MSXML2.XMLHTTP.3.0');},function(){return new ActiveXObject('MSXML2.XMLHTTP');},function(){return new ActiveXObject('Microsoft.XMLHTTP');}],i=0,len=options.length,xhr;for(;i<len;++i){try{xhr=options[i];xhr();break;}catch(e){}}
return xhr;}()),isLoading:function(request){if(!request){request=this.getLatest();}
if(!(request&&request.xhr)){return false;}
var state=request.xhr.readyState;return!(state===0||state==4);},abort:function(request){var me=this,xhr;if(!request){request=me.getLatest();}
if(request&&me.isLoading(request)){xhr=request.xhr;try{xhr.onreadystatechange=null;}catch(e){xhr.onreadystatechange=Ext.emptyFn;}
xhr.abort();me.clearTimeout(request);if(!request.timedout){request.aborted=true;}
me.onComplete(request);me.cleanup(request);}},abortAll:function(){var requests=this.requests,id;for(id in requests){if(requests.hasOwnProperty(id)){this.abort(requests[id]);}}},getLatest:function(){var id=this.latestId,request;if(id){request=this.requests[id];}
return request||null;},onStateChange:function(request){if(request.xhr.readyState==4){this.clearTimeout(request);this.onComplete(request);this.cleanup(request);Ext.EventManager.idleEvent.fire();}},clearTimeout:function(request){clearTimeout(request.timeout);delete request.timeout;},cleanup:function(request){request.xhr=null;delete request.xhr;},onComplete:function(request){var me=this,options=request.options,result,success,response;try{result=me.parseStatus(request.xhr.status);}catch(e){result={success:false,isException:false};}
success=result.success;if(success){response=me.createResponse(request);me.fireEvent('requestcomplete',me,response,options);Ext.callback(options.success,options.scope,[response,options]);}else{if(result.isException||request.aborted||request.timedout){response=me.createException(request);}else{response=me.createResponse(request);}
me.fireEvent('requestexception',me,response,options);Ext.callback(options.failure,options.scope,[response,options]);}
Ext.callback(options.callback,options.scope,[options,success,response]);delete me.requests[request.id];return response;},parseStatus:function(status){status=status==1223?204:status;var success=(status>=200&&status<300)||status==304,isException=false;if(!success){switch(status){case 12002:case 12029:case 12030:case 12031:case 12152:case 13030:isException=true;break;}}
return{success:success,isException:isException};},createResponse:function(request){var xhr=request.xhr,headers={},lines=xhr.getAllResponseHeaders().replace(/\r\n/g,'\n').split('\n'),count=lines.length,line,index,key,response,byteArray;while(count--){line=lines[count];index=line.indexOf(':');if(index>=0){key=line.substr(0,index).toLowerCase();if(line.charAt(index+1)==' '){++index;}
headers[key]=line.substr(index+1);}}
request.xhr=null;delete request.xhr;response={request:request,requestId:request.id,status:xhr.status,statusText:xhr.statusText,getResponseHeader:function(header){return headers[header.toLowerCase()];},getAllResponseHeaders:function(){return headers;}};if(request.binary){response.responseBytes=this.getByteArray(xhr);}else{response.responseText=xhr.responseText;response.responseXML=xhr.responseXML;}
xhr=null;return response;},createException:function(request){return{request:request,requestId:request.id,status:request.aborted?-1:0,statusText:request.aborted?'transaction aborted':'communication failure',aborted:request.aborted,timedout:request.timedout};},getByteArray:function(xhr){var response=xhr.response,responseBody=xhr.responseBody,byteArray,responseText,len,i;if(window.Uint8Array){byteArray=response?new Uint8Array(response):[];}else if(Ext.isIE9){try{byteArray=new VBArray(responseBody).toArray();}catch(e){byteArray=[];}}else if(Ext.isIE){if(!this.self.vbScriptInjected){this.injectVBScript();}
getIEByteArray(xhr.responseBody,byteArray=[]);}else{byteArray=[];responseText=xhr.responseText;len=responseText.length;for(i=0;i<len;i++){byteArray.push(responseText.charCodeAt(i)&0xFF);}}
return byteArray;},injectVBScript:function(){var scriptTag=document.createElement('script');scriptTag.type='text/vbscript';scriptTag.text=['Function getIEByteArray(byteArray, out)','Dim len, i','len = LenB(byteArray)','For i = 1 to len','out.push(AscB(MidB(byteArray, i, 1)))','Next','End Function'].join('\n');Ext.getHead().dom.appendChild(scriptTag);this.self.vbScriptInjected=true;}});Ext.define('Ext.draw.Color',{colorToHexRe:/(.*?)rgb\((\d+),\s*(\d+),\s*(\d+)\)/,rgbRe:/\s*rgb\s*\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)\s*/,hexRe:/\s*#([0-9a-fA-F][0-9a-fA-F]?)([0-9a-fA-F][0-9a-fA-F]?)([0-9a-fA-F][0-9a-fA-F]?)\s*/,lightnessFactor:0.2,constructor:function(red,green,blue){var me=this,clamp=Ext.Number.constrain;me.r=clamp(red,0,255);me.g=clamp(green,0,255);me.b=clamp(blue,0,255);},getRed:function(){return this.r;},getGreen:function(){return this.g;},getBlue:function(){return this.b;},getRGB:function(){var me=this;return[me.r,me.g,me.b];},getHSL:function(){var me=this,r=me.r/255,g=me.g/255,b=me.b/255,max=Math.max(r,g,b),min=Math.min(r,g,b),delta=max-min,h,s=0,l=0.5*(max+min);if(min!=max){s=(l<0.5)?delta/(max+min):delta/(2-max-min);if(r==max){h=60*(g-b)/delta;}else if(g==max){h=120+60*(b-r)/delta;}else{h=240+60*(r-g)/delta;}
if(h<0){h+=360;}
if(h>=360){h-=360;}}
return[h,s,l];},getLighter:function(factor){var hsl=this.getHSL();factor=factor||this.lightnessFactor;hsl[2]=Ext.Number.constrain(hsl[2]+factor,0,1);return this.fromHSL(hsl[0],hsl[1],hsl[2]);},getDarker:function(factor){factor=factor||this.lightnessFactor;return this.getLighter(-factor);},toString:function(){var me=this,round=Math.round,r=round(me.r).toString(16),g=round(me.g).toString(16),b=round(me.b).toString(16);r=(r.length==1)?'0'+r:r;g=(g.length==1)?'0'+g:g;b=(b.length==1)?'0'+b:b;return['#',r,g,b].join('');},toHex:function(color){if(Ext.isArray(color)){color=color[0];}
if(!Ext.isString(color)){return'';}
if(color.substr(0,1)==='#'){return color;}
var digits=this.colorToHexRe.exec(color),red,green,blue,rgb;if(Ext.isArray(digits)){red=parseInt(digits[2],10);green=parseInt(digits[3],10);blue=parseInt(digits[4],10);rgb=blue|(green<<8)|(red<<16);return digits[1]+'#'+("000000"+rgb.toString(16)).slice(-6);}
else{return color;}},fromString:function(str){var values,r,g,b,parse=parseInt;if((str.length==4||str.length==7)&&str.substr(0,1)==='#'){values=str.match(this.hexRe);if(values){r=parse(values[1],16)>>0;g=parse(values[2],16)>>0;b=parse(values[3],16)>>0;if(str.length==4){r+=(r*16);g+=(g*16);b+=(b*16);}}}
else{values=str.match(this.rgbRe);if(values){r=values[1];g=values[2];b=values[3];}}
return(typeof r=='undefined')?undefined:new Ext.draw.Color(r,g,b);},getGrayscale:function(){return this.r*0.3+this.g*0.59+this.b*0.11;},fromHSL:function(h,s,l){var C,X,m,i,rgb=[],abs=Math.abs,floor=Math.floor;if(s==0||h==null){rgb=[l,l,l];}
else{h/=60;C=s*(1-abs(2*l-1));X=C*(1-abs(h-2*floor(h/2)-1));m=l-C/2;switch(floor(h)){case 0:rgb=[C,X,0];break;case 1:rgb=[X,C,0];break;case 2:rgb=[0,C,X];break;case 3:rgb=[0,X,C];break;case 4:rgb=[X,0,C];break;case 5:rgb=[C,0,X];break;}
rgb=[rgb[0]+m,rgb[1]+m,rgb[2]+m];}
return new Ext.draw.Color(rgb[0]*255,rgb[1]*255,rgb[2]*255);}},function(){var prototype=this.prototype;this.addStatics({fromHSL:function(){return prototype.fromHSL.apply(prototype,arguments);},fromString:function(){return prototype.fromString.apply(prototype,arguments);},toHex:function(){return prototype.toHex.apply(prototype,arguments);}});});Ext.define('Ext.dd.Registry',{singleton:true,constructor:function(){this.elements={};this.handles={};this.autoIdSeed=0;},getId:function(el,autogen){if(typeof el=="string"){return el;}
var id=el.id;if(!id&&autogen!==false){id="extdd-"+(++this.autoIdSeed);el.id=id;}
return id;},register:function(el,data){data=data||{};if(typeof el=="string"){el=document.getElementById(el);}
data.ddel=el;this.elements[this.getId(el)]=data;if(data.isHandle!==false){this.handles[data.ddel.id]=data;}
if(data.handles){var hs=data.handles,i,len;for(i=0,len=hs.length;i<len;i++){this.handles[this.getId(hs[i])]=data;}}},unregister:function(el){var id=this.getId(el,false),data=this.elements[id],hs,i,len;if(data){delete this.elements[id];if(data.handles){hs=data.handles;for(i=0,len=hs.length;i<len;i++){delete this.handles[this.getId(hs[i],false)];}}}},getHandle:function(id){if(typeof id!="string"){id=id.id;}
return this.handles[id];},getHandleFromEvent:function(e){var t=e.getTarget();return t?this.handles[t.id]:null;},getTarget:function(id){if(typeof id!="string"){id=id.id;}
return this.elements[id];},getTargetFromEvent:function(e){var t=e.getTarget();return t?this.elements[t.id]||this.handles[t.id]:null;}});Ext.define('Ext.form.action.Action',{alternateClassName:'Ext.form.Action',submitEmptyText:true,constructor:function(config){if(config){Ext.apply(this,config);}
var params=config.params;if(Ext.isString(params)){this.params=Ext.Object.fromQueryString(params);}},run:Ext.emptyFn,onFailure:function(response){this.response=response;this.failureType=Ext.form.action.Action.CONNECT_FAILURE;this.form.afterAction(this,false);},processResponse:function(response){this.response=response;if(!response.responseText&&!response.responseXML){return true;}
return(this.result=this.handleResponse(response));},getUrl:function(){return this.url||this.form.url;},getMethod:function(){return(this.method||this.form.method||'POST').toUpperCase();},getParams:function(){return Ext.apply({},this.params,this.form.baseParams);},createCallback:function(){var me=this,undef,form=me.form;return{success:me.onSuccess,failure:me.onFailure,scope:me,timeout:(this.timeout*1000)||(form.timeout*1000),upload:form.fileUpload?me.onSuccess:undef};},statics:{CLIENT_INVALID:'client',SERVER_INVALID:'server',CONNECT_FAILURE:'connect',LOAD_FAILURE:'load'}});Ext.define('Ext.state.Provider',{mixins:{observable:'Ext.util.Observable'},prefix:'ext-',constructor:function(config){config=config||{};var me=this;Ext.apply(me,config);me.addEvents("statechange");me.state={};me.mixins.observable.constructor.call(me);},get:function(name,defaultValue){return typeof this.state[name]=="undefined"?defaultValue:this.state[name];},clear:function(name){var me=this;delete me.state[name];me.fireEvent("statechange",me,name,null);},set:function(name,value){var me=this;me.state[name]=value;me.fireEvent("statechange",me,name,value);},decodeValue:function(value){var me=this,re=/^(a|n|d|b|s|o|e)\:(.*)$/,matches=re.exec(unescape(value)),all,type,keyValue,values,vLen,v;if(!matches||!matches[1]){return;}
type=matches[1];value=matches[2];switch(type){case'e':return null;case'n':return parseFloat(value);case'd':return new Date(Date.parse(value));case'b':return(value=='1');case'a':all=[];if(value!=''){values=value.split('^');vLen=values.length;for(v=0;v<vLen;v++){value=values[v];all.push(me.decodeValue(value));}}
return all;case'o':all={};if(value!=''){values=value.split('^');vLen=values.length;for(v=0;v<vLen;v++){value=values[v];keyValue=value.split('=');all[keyValue[0]]=me.decodeValue(keyValue[1]);}}
return all;default:return value;}},encodeValue:function(value){var flat='',i=0,enc,len,key;if(value==null){return'e:1';}else if(typeof value=='number'){enc='n:'+value;}else if(typeof value=='boolean'){enc='b:'+(value?'1':'0');}else if(Ext.isDate(value)){enc='d:'+value.toGMTString();}else if(Ext.isArray(value)){for(len=value.length;i<len;i++){flat+=this.encodeValue(value[i]);if(i!=len-1){flat+='^';}}
enc='a:'+flat;}else if(typeof value=='object'){for(key in value){if(typeof value[key]!='function'&&value[key]!==undefined){flat+=key+'='+this.encodeValue(value[key])+'^';}}
enc='o:'+flat.substring(0,flat.length-1);}else{enc='s:'+value;}
return escape(enc);}});Ext.define('Ext.form.field.VTypes',(function(){var alpha=/^[a-zA-Z_]+$/,alphanum=/^[a-zA-Z0-9_]+$/,email=/^(")?(?:[^\."])(?:(?:[\.])?(?:[\w\-!#$%&'*+/=?^_`{|}~]))*\1@(\w[\-\w]*\.){1,5}([A-Za-z]){2,6}$/,url=/(((^https?)|(^ftp)):\/\/((([\-\w]+\.)+\w{2,3}(\/[%\-\w]+(\.\w{2,})?)*(([\w\-\.\?\\\/+@&#;`~=%!]*)(\.\w{2,})?)*)|(localhost|LOCALHOST))\/?)/i;return{singleton:true,alternateClassName:'Ext.form.VTypes','email':function(v){return email.test(v);},'emailText':'This field should be an e-mail address in the format "user@example.com"','emailMask':/[\w.\-@'"!#$%&'*+/=?^_`{|}~]/i,'url':function(v){return url.test(v);},'urlText':'This field should be a URL in the format "http:/'+'/www.example.com"','alpha':function(v){return alpha.test(v);},'alphaText':'This field should only contain letters and _','alphaMask':/[a-z_]/i,'alphanum':function(v){return alphanum.test(v);},'alphanumText':'This field should only contain letters, numbers and _','alphanumMask':/[a-z0-9_]/i};}()));Ext.define('Ext.util.Grouper',{extend:'Ext.util.Sorter',isGrouper:true,getGroupString:function(instance){return instance.get(this.property);}});Ext.define('Ext.resizer.Resizer',{mixins:{observable:'Ext.util.Observable'},uses:['Ext.resizer.ResizeTracker','Ext.Component'],alternateClassName:'Ext.Resizable',handleCls:Ext.baseCSSPrefix+'resizable-handle',pinnedCls:Ext.baseCSSPrefix+'resizable-pinned',overCls:Ext.baseCSSPrefix+'resizable-over',wrapCls:Ext.baseCSSPrefix+'resizable-wrap',dynamic:true,handles:'s e se',height:null,width:null,heightIncrement:0,widthIncrement:0,minHeight:20,minWidth:20,maxHeight:10000,maxWidth:10000,pinned:false,preserveRatio:false,transparent:false,possiblePositions:{n:'north',s:'south',e:'east',w:'west',se:'southeast',sw:'southwest',nw:'northwest',ne:'northeast'},constructor:function(config){var me=this,target,targetEl,tag,handles=me.handles,handleCls,possibles,len,i=0,pos,handleEls=[],eastWestStyle,style,box;me.addEvents('beforeresize','resizedrag','resize');if(Ext.isString(config)||Ext.isElement(config)||config.dom){target=config;config=arguments[1]||{};config.target=target;}
me.mixins.observable.constructor.call(me,config);target=me.target;if(target){if(target.isComponent){me.el=target.getEl();if(target.minWidth){me.minWidth=target.minWidth;}
if(target.minHeight){me.minHeight=target.minHeight;}
if(target.maxWidth){me.maxWidth=target.maxWidth;}
if(target.maxHeight){me.maxHeight=target.maxHeight;}
if(target.floating){if(!me.hasOwnProperty('handles')){me.handles='n ne e se s sw w nw';}}}else{me.el=me.target=Ext.get(target);}}
else{me.target=me.el=Ext.get(me.el);}
tag=me.el.dom.tagName.toUpperCase();if(tag=='TEXTAREA'||tag=='IMG'||tag=='TABLE'){me.originalTarget=me.target;targetEl=me.el;box=targetEl.getBox();me.target=me.el=me.el.wrap({cls:me.wrapCls,id:me.el.id+'-rzwrap',style:targetEl.getStyles('margin-top','margin-bottom')});me.el.setPositioning(targetEl.getPositioning());targetEl.clearPositioning();me.el.setBox(box);targetEl.setStyle('position','absolute');}
me.el.position();if(me.pinned){me.el.addCls(me.pinnedCls);}
me.resizeTracker=new Ext.resizer.ResizeTracker({disabled:me.disabled,target:me.target,constrainTo:me.constrainTo,overCls:me.overCls,throttle:me.throttle,originalTarget:me.originalTarget,delegate:'.'+me.handleCls,dynamic:me.dynamic,preserveRatio:me.preserveRatio,heightIncrement:me.heightIncrement,widthIncrement:me.widthIncrement,minHeight:me.minHeight,maxHeight:me.maxHeight,minWidth:me.minWidth,maxWidth:me.maxWidth});me.resizeTracker.on({mousedown:me.onBeforeResize,drag:me.onResize,dragend:me.onResizeEnd,scope:me});if(me.handles=='all'){me.handles='n s e w ne nw se sw';}
handles=me.handles=me.handles.split(/ |\s*?[,;]\s*?/);possibles=me.possiblePositions;len=handles.length;handleCls=me.handleCls+' '+(me.target.isComponent?(me.target.baseCls+'-handle '):'')+me.handleCls+'-';eastWestStyle=Ext.isIE6?' style="height:'+me.el.getHeight()+'px"':'';for(;i<len;i++){if(handles[i]&&possibles[handles[i]]){pos=possibles[handles[i]];if(pos==='east'||pos==='west'){style=eastWestStyle;}else{style='';}
handleEls.push('<div id="'+me.el.id+'-'+pos+'-handle" class="'+handleCls+pos+' '+Ext.baseCSSPrefix+'unselectable"'+style+'></div>');}}
Ext.DomHelper.append(me.el,handleEls.join(''));for(i=0;i<len;i++){if(handles[i]&&possibles[handles[i]]){pos=possibles[handles[i]];me[pos]=me.el.getById(me.el.id+'-'+pos+'-handle');me[pos].region=pos;me[pos].unselectable();if(me.transparent){me[pos].setOpacity(0);}}}
if(Ext.isNumber(me.width)){me.width=Ext.Number.constrain(me.width,me.minWidth,me.maxWidth);}
if(Ext.isNumber(me.height)){me.height=Ext.Number.constrain(me.height,me.minHeight,me.maxHeight);}
if(me.width!==null||me.height!==null){if(me.originalTarget){me.originalTarget.setWidth(me.width);me.originalTarget.setHeight(me.height);}
me.resizeTo(me.width,me.height);}
me.forceHandlesHeight();},disable:function(){this.resizeTracker.disable();},enable:function(){this.resizeTracker.enable();},onBeforeResize:function(tracker,e){var box=this.el.getBox();return this.fireEvent('beforeresize',this,box.width,box.height,e);},onResize:function(tracker,e){var me=this,box=me.el.getBox();me.forceHandlesHeight();return me.fireEvent('resizedrag',me,box.width,box.height,e);},onResizeEnd:function(tracker,e){var me=this,box=me.el.getBox();me.forceHandlesHeight();return me.fireEvent('resize',me,box.width,box.height,e);},resizeTo:function(width,height){var me=this;me.target.setSize(width,height);me.fireEvent('resize',me,width,height,null);},getEl:function(){return this.el;},getTarget:function(){return this.target;},destroy:function(){var i=0,handles=this.handles,len=handles.length,positions=this.possiblePositions;for(;i<len;i++){this[positions[handles[i]]].remove();}},forceHandlesHeight:function(){var me=this,handle;if(Ext.isIE6){handle=me.east;if(handle){handle.setHeight(me.el.getHeight());}
handle=me.west;if(handle){handle.setHeight(me.el.getHeight());}
me.el.repaint();}}});Ext.define('Ext.data.Batch',{mixins:{observable:'Ext.util.Observable'},autoStart:false,pauseOnException:false,current:-1,total:0,isRunning:false,isComplete:false,hasException:false,constructor:function(config){var me=this;me.mixins.observable.constructor.call(me,config);me.operations=[];me.exceptions=[];},add:function(operation){this.total++;operation.setBatch(this);this.operations.push(operation);return this;},start:function(index){var me=this;if(me.isRunning){return me;}
me.exceptions.length=0;me.hasException=false;me.isRunning=true;return me.runOperation(Ext.isDefined(index)?index:me.current+1);},retry:function(){return this.start(this.current);},runNextOperation:function(){return this.runOperation(this.current+1);},pause:function(){this.isRunning=false;return this;},runOperation:function(index){var me=this,operations=me.operations,operation=operations[index],onProxyReturn;if(operation===undefined){me.isRunning=false;me.isComplete=true;me.fireEvent('complete',me,operations[operations.length-1]);}else{me.current=index;onProxyReturn=function(operation){var hasException=operation.hasException();if(hasException){me.hasException=true;me.exceptions.push(operation);me.fireEvent('exception',me,operation);}
if(hasException&&me.pauseOnException){me.pause();}else{operation.setCompleted();me.fireEvent('operationcomplete',me,operation);me.runNextOperation();}};operation.setStarted();me.proxy[operation.action](operation,onProxyReturn,me);}
return me;}});Ext.define('Ext.grid.plugin.DragDrop',{extend:'Ext.AbstractPlugin',alias:'plugin.gridviewdragdrop',uses:['Ext.view.DragZone','Ext.grid.ViewDropZone'],dragText:'{0} selected row{1}',ddGroup:"GridDD",enableDrop:true,enableDrag:true,containerScroll:false,init:function(view){view.on('render',this.onViewRender,this,{single:true});},destroy:function(){Ext.destroy(this.dragZone,this.dropZone);},enable:function(){var me=this;if(me.dragZone){me.dragZone.unlock();}
if(me.dropZone){me.dropZone.unlock();}
me.callParent();},disable:function(){var me=this;if(me.dragZone){me.dragZone.lock();}
if(me.dropZone){me.dropZone.lock();}
me.callParent();},onViewRender:function(view){var me=this,scrollEl;if(me.enableDrag){if(me.containerScroll){scrollEl=view.getEl();}
me.dragZone=new Ext.view.DragZone({view:view,ddGroup:me.dragGroup||me.ddGroup,dragText:me.dragText,containerScroll:me.containerScroll,scrollEl:scrollEl});}
if(me.enableDrop){me.dropZone=new Ext.grid.ViewDropZone({view:view,ddGroup:me.dropGroup||me.ddGroup});}}});Ext.define('Ext.ux.grid.FiltersFeature',{extend:'Ext.grid.feature.Feature',alias:'feature.filters',uses:['Ext.ux.grid.menu.ListMenu','Ext.ux.grid.menu.RangeMenu','Ext.ux.grid.filter.BooleanFilter','Ext.ux.grid.filter.DateFilter','Ext.ux.grid.filter.DateTimeFilter','Ext.ux.grid.filter.ListFilter','Ext.ux.grid.filter.NumericFilter','Ext.ux.grid.filter.StringFilter'],autoReload:true,filterCls:'ux-filtered-column',local:false,menuFilterText:'Filters',paramPrefix:'filter',showMenu:true,stateId:undefined,updateBuffer:500,hasFeatureEvent:false,constructor:function(config){var me=this;config=config||{};Ext.apply(me,config);me.deferredUpdate=Ext.create('Ext.util.DelayedTask',me.reload,me);me.filters=me.createFiltersCollection();me.filterConfigs=config.filters;},attachEvents:function(){var me=this,view=me.view,headerCt=view.headerCt,grid=me.getGridPanel();me.bindStore(view.getStore(),true);headerCt.on('menucreate',me.onMenuCreate,me);view.on('refresh',me.onRefresh,me);grid.on({scope:me,beforestaterestore:me.applyState,beforestatesave:me.saveState,beforedestroy:me.destroy});grid.filters=me;grid.addEvents('filterupdate');},createFiltersCollection:function(){return Ext.create('Ext.util.MixedCollection',false,function(o){return o?o.dataIndex:null;});},createFilters:function(){var me=this,hadFilters=me.filters.getCount(),grid=me.getGridPanel(),filters=me.createFiltersCollection(),model=grid.store.model,fields=model.prototype.fields,field,filter,state;if(hadFilters){state={};me.saveState(null,state);}
function add(dataIndex,config,filterable){if(dataIndex&&(filterable||config)){field=fields.get(dataIndex);filter={dataIndex:dataIndex,type:(field&&field.type&&field.type.type)||'auto'};if(Ext.isObject(config)){Ext.apply(filter,config);}
filters.replace(filter);}}
Ext.Array.each(me.filterConfigs,function(filterConfig){add(filterConfig.dataIndex,filterConfig);});Ext.Array.each(grid.columns,function(column){if(column.filterable===false){filters.removeAtKey(column.dataIndex);}else{add(column.dataIndex,column.filter,column.filterable);}});me.removeAll();if(filters.items){me.initializeFilters(filters.items);}
if(hadFilters){me.applyState(null,state);}},initializeFilters:function(filters){var me=this,filtersLength=filters.length,i,filter,FilterClass;for(i=0;i<filtersLength;i++){filter=filters[i];if(filter){FilterClass=me.getFilterClass(filter.type);filter=filter.menu?filter:new FilterClass(filter);me.filters.add(filter);Ext.util.Observable.capture(filter,this.onStateChange,this);}}},onMenuCreate:function(headerCt,menu){var me=this;me.createFilters();menu.on('beforeshow',me.onMenuBeforeShow,me);},onMenuBeforeShow:function(menu){var me=this,menuItem,filter;if(me.showMenu){menuItem=me.menuItem;if(!menuItem||menuItem.isDestroyed){me.createMenuItem(menu);menuItem=me.menuItem;}
filter=me.getMenuFilter();if(filter){menuItem.setMenu(filter.menu,false);menuItem.setChecked(filter.active);menuItem.setDisabled(filter.disabled===true);}
menuItem.setVisible(!!filter);this.sep.setVisible(!!filter);}},createMenuItem:function(menu){var me=this;me.sep=menu.add('-');me.menuItem=menu.add({checked:false,itemId:'filters',text:me.menuFilterText,listeners:{scope:me,checkchange:me.onCheckChange,beforecheckchange:me.onBeforeCheck}});},getGridPanel:function(){return this.view.up('gridpanel');},applyState:function(grid,state){var me=this,key,filter;me.applyingState=true;me.clearFilters();if(state.filters){for(key in state.filters){if(state.filters.hasOwnProperty(key)){filter=me.filters.get(key);if(filter){filter.setValue(state.filters[key]);filter.setActive(true);}}}}
me.deferredUpdate.cancel();if(me.local){me.reload();}
delete me.applyingState;delete state.filters;},saveState:function(grid,state){var filters={};this.filters.each(function(filter){if(filter.active){filters[filter.dataIndex]=filter.getValue();}});return(state.filters=filters);},destroy:function(){var me=this;Ext.destroyMembers(me,'menuItem','sep');me.removeAll();me.clearListeners();},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear();}},bindStore:function(store){var me=this;if(me.store&&me.storeListeners){me.store.un(me.storeListeners);}
if(store){me.storeListeners={scope:me};if(me.local){me.storeListeners.load=me.onLoad;}else{me.storeListeners['before'+(store.buffered?'prefetch':'load')]=me.onBeforeLoad;}
store.on(me.storeListeners);}else{delete me.storeListeners;}
me.store=store;},getMenuFilter:function(){var header=this.view.headerCt.getMenu().activeHeader;return header?this.filters.get(header.dataIndex):null;},onCheckChange:function(item,value){this.getMenuFilter().setActive(value);},onBeforeCheck:function(check,value){return!value||this.getMenuFilter().isActivatable();},onStateChange:function(event,filter){if(event!=='serialize'){var me=this,grid=me.getGridPanel();if(filter==me.getMenuFilter()){me.menuItem.setChecked(filter.active,false);}
if((me.autoReload||me.local)&&!me.applyingState){me.deferredUpdate.delay(me.updateBuffer);}
me.updateColumnHeadings();if(!me.applyingState){grid.saveState();}
grid.fireEvent('filterupdate',me,filter);}},onBeforeLoad:function(store,options){options.params=options.params||{};this.cleanParams(options.params);var params=this.buildQuery(this.getFilterData());Ext.apply(options.params,params);},onLoad:function(store){store.filterBy(this.getRecordFilter());},onRefresh:function(){this.updateColumnHeadings();},updateColumnHeadings:function(){var me=this,headerCt=me.view.headerCt;if(headerCt){headerCt.items.each(function(header){var filter=me.getFilter(header.dataIndex);header[filter&&filter.active?'addCls':'removeCls'](me.filterCls);});}},reload:function(){var me=this,store=me.view.getStore();if(me.local){store.clearFilter(true);store.filterBy(me.getRecordFilter());store.sort();}else{me.deferredUpdate.cancel();if(store.buffered){store.pageMap.clear();}
store.loadPage(1);}},getRecordFilter:function(){var f=[],len,i;this.filters.each(function(filter){if(filter.active){f.push(filter);}});len=f.length;return function(record){for(i=0;i<len;i++){if(!f[i].validateRecord(record)){return false;}}
return true;};},addFilter:function(config){var me=this,columns=me.getGridPanel().columns,i,columnsLength,column,filtersLength,filter;for(i=0,columnsLength=columns.length;i<columnsLength;i++){column=columns[i];if(column.dataIndex===config.dataIndex){column.filter=config;}}
if(me.view.headerCt.menu){me.createFilters();}else{me.view.headerCt.getMenu();}
for(i=0,filtersLength=me.filters.items.length;i<filtersLength;i++){filter=me.filters.items[i];if(filter.dataIndex===config.dataIndex){return filter;}}},addFilters:function(filters){if(filters){var me=this,i,filtersLength;for(i=0,filtersLength=filters.length;i<filtersLength;i++){me.addFilter(filters[i]);}}},getFilter:function(dataIndex){return this.filters.get(dataIndex);},clearFilters:function(){this.filters.each(function(filter){filter.setActive(false);});},getFilterItems:function(){var me=this;if(me.lockingPartner){return me.filters.items.concat(me.lockingPartner.filters.items);}
return me.filters.items;},getFilterData:function(){var items=this.getFilterItems(),filters=[],n,nlen,item,d,i,len;for(n=0,nlen=items.length;n<nlen;n++){item=items[n];if(item.active){d=[].concat(item.serialize());for(i=0,len=d.length;i<len;i++){filters.push({field:item.dataIndex,data:d[i]});}}}
return filters;},buildQuery:function(filters){var p={},i,f,root,dataPrefix,key,tmp,len=filters.length;if(!this.encode){for(i=0;i<len;i++){f=filters[i];root=[this.paramPrefix,'[',i,']'].join('');p[root+'[field]']=f.field;dataPrefix=root+'[data]';for(key in f.data){p[[dataPrefix,'[',key,']'].join('')]=f.data[key];}}}else{tmp=[];for(i=0;i<len;i++){f=filters[i];tmp.push(Ext.apply({},{field:f.field},f.data));}
if(tmp.length>0){p[this.paramPrefix]=Ext.JSON.encode(tmp);}}
return p;},cleanParams:function(p){if(this.encode){delete p[this.paramPrefix];}else{var regex,key;regex=new RegExp('^'+this.paramPrefix+'\[[0-9]+\]');for(key in p){if(regex.test(key)){delete p[key];}}}},getFilterClass:function(type){switch(type){case'auto':type='string';break;case'int':case'float':type='numeric';break;case'bool':type='boolean';break;}
return Ext.ClassManager.getByAlias('gridfilter.'+type);}});Ext.define('Ext.ux.grid.filter.BooleanFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.boolean',defaultValue:false,yesText:'Yes',noText:'No',init:function(config){var gId=Ext.id();this.options=[Ext.create('Ext.menu.CheckItem',{text:this.yesText,group:gId,checked:this.defaultValue===true}),Ext.create('Ext.menu.CheckItem',{text:this.noText,group:gId,checked:this.defaultValue===false})];this.menu.add(this.options[0],this.options[1]);for(var i=0;i<this.options.length;i++){this.options[i].on('click',this.fireUpdate,this);this.options[i].on('checkchange',this.fireUpdate,this);}},getValue:function(){return this.options[0].checked;},setValue:function(value){this.options[value?0:1].setChecked(true);},getSerialArgs:function(){var args={type:'boolean',value:this.getValue()};return args;},validateRecord:function(record){return record.get(this.dataIndex)==this.getValue();}});Ext.define('Ext.ux.grid.filter.DateTimeFilter',{extend:'Ext.ux.grid.filter.DateFilter',alias:'gridfilter.datetime',dateDefaults:{xtype:'datepicker'},timeDefaults:{xtype:'timepicker',width:100,height:200},dockDefaults:{dock:'top',buttonText:'Filter'},selectDateToFilter:true,positionDatepickerFirst:true,reTime:/\s(am|pm)/i,reItemId:/\w*-(\w*)$/,addTimeSelection:function(date,timepicker){var me=this,selection=timepicker.getSelectionModel().getSelection(),time,len,fn,val,i=0,arr=[],timeFns=['setHours','setMinutes','setSeconds','setMilliseconds'];if(selection.length){time=selection[0].get('disp');arr=time.replace(me.reTime,'').split(':');for(len=arr.length;i<len;i++){fn=timeFns[i];val=arr[i];if(val){date[fn](parseInt(val,10));}}}
return date;},init:function(config){var me=this,dateCfg=Ext.applyIf(me.date||{},me.dateDefaults),timeCfg=Ext.applyIf(me.time||{},me.timeDefaults),dockCfg=me.dock,defaultListeners={click:{scope:me,click:me.onMenuSelect},select:{scope:me,select:me.onMenuSelect}},pickerCtnCfg,i,len,item,cfg,items=[dateCfg,timeCfg],datepickerPosition=0;if(!me.positionDatepickerFirst){items=items.reverse();datepickerPosition=1;}
pickerCtnCfg=Ext.apply(me.pickerOpts,{xtype:!dockCfg?'container':'panel',layout:'hbox',items:items});if(!dockCfg){if(me.selectDateToFilter){dateCfg.listeners=defaultListeners.select;}else{timeCfg.listeners=defaultListeners.select;}}else if(dockCfg){me.selectDateToFilter=null;if(dockCfg.dockedItems){pickerCtnCfg.dockedItems=dockCfg.dockedItems;pickerCtnCfg.dockedItems.items[dockCfg.bindToItem||0].listeners=defaultListeners.click;}else{if(Ext.isBoolean(dockCfg)){dockCfg={};}
dockCfg=Ext.applyIf(dockCfg,me.dockDefaults);pickerCtnCfg.dockedItems={xtype:'toolbar',dock:dockCfg.dock,items:[{xtype:'button',text:dockCfg.buttonText,flex:1,listeners:defaultListeners.click}]};}}
me.fields={};for(i=0,len=me.menuItems.length;i<len;i++){item=me.menuItems[i];if(item!=='-'){pickerCtnCfg.items[datepickerPosition].itemId=item;cfg={itemId:'range-'+item,text:me[item+'Text'],menu:Ext.create('Ext.menu.Menu',{items:pickerCtnCfg}),listeners:{scope:me,checkchange:me.onCheckChange}};item=me.fields[item]=Ext.create('Ext.menu.CheckItem',cfg);}
me.menu.add(item);}
me.values={};},onCheckChange:function(item,checked){var me=this,menu=item.menu,timepicker=menu.down('timepicker'),datepicker=menu.down('datepicker'),itemId=datepicker.itemId,values=me.values;if(checked){values[itemId]=me.addTimeSelection(datepicker.value,timepicker);}else{delete values[itemId];}
me.setActive(me.isActivatable());me.fireEvent('update',me);},onMenuSelect:function(picker,date){var me=this,menu=me.menu,checkItemId=menu.getFocusEl().itemId.replace(me.reItemId,'$1'),fields=me.fields,field;picker=menu.queryById(checkItemId);field=me.fields[picker.itemId];field.setChecked(true);if(field==fields.on){fields.before.setChecked(false,true);fields.after.setChecked(false,true);}else{fields.on.setChecked(false,true);if(field==fields.after&&me.getFieldValue('before')<date){fields.before.setChecked(false,true);}else if(field==fields.before&&me.getFieldValue('after')>date){fields.after.setChecked(false,true);}}
me.fireEvent('update',me);picker.ownerCt.ownerCt.hide();},validateRecord:function(record){var me=this,key,pickerValue,val=record.get(me.dataIndex);if(!Ext.isDate(val)){return false;}
val=val.getTime();for(key in me.fields){if(me.fields[key].checked){pickerValue=me.getFieldValue(key).getTime();if(key=='before'&&pickerValue<=val){return false;}
if(key=='after'&&pickerValue>=val){return false;}
if(key=='on'&&pickerValue!=val){return false;}}}
return true;}});Ext.define('Ext.ux.grid.filter.ListFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.list',phpMode:false,init:function(config){this.dt=Ext.create('Ext.util.DelayedTask',this.fireUpdate,this);},createMenu:function(config){var menu=Ext.create('Ext.ux.grid.menu.ListMenu',config);menu.on('checkchange',this.onCheckChange,this);return menu;},getValue:function(){return this.menu.getSelected();},setValue:function(value){this.menu.setSelected(value);this.fireEvent('update',this);},isActivatable:function(){return this.getValue().length>0;},getSerialArgs:function(){return{type:'list',value:this.phpMode?this.getValue().join(','):this.getValue()};},onCheckChange:function(){this.dt.delay(this.updateBuffer);},validateRecord:function(record){var valuesArray=this.getValue();return Ext.Array.indexOf(valuesArray,record.get(this.dataIndex))>-1;}});Ext.define('Ext.app.Controller',{mixins:{observable:'Ext.util.Observable'},statics:{strings:{model:{getter:'getModel',upper:'Model'},view:{getter:'getView',upper:'View'},controller:{getter:'getController',upper:'Controller'},store:{getter:'getStore',upper:'Store'}},createGetter:function(baseGetter,name){return function(){return this[baseGetter](name);};},getGetterName:function(name,kindUpper){var fn='get',parts=name.split('.'),numParts=parts.length,index;for(index=0;index<numParts;index++){fn+=Ext.String.capitalize(parts[index]);}
fn+=kindUpper;return fn;},processDependencies:function(cls,requires,namespace,kind,names){if(!names){return;}
var me=this,namespaceAndModule=namespace+'.'+kind+'.',strings=me.strings[kind],o,absoluteName,shortName,name,j,subLn,getterName;for(j=0,subLn=names.length;j<subLn;j++){name=names[j];o=me.getFullName(name,namespaceAndModule);absoluteName=o.absoluteName;shortName=o.shortName;requires.push(absoluteName);getterName=me.getGetterName(shortName,strings.upper);cls[getterName]=me.createGetter(strings.getter,name);if(kind!=='controller'){cls[getterName].$ext_getter=true;}}},getFullName:function(name,namespaceAndModule){var shortName=name,sep,absoluteName;if((sep=name.indexOf('@'))>0){shortName=name.substring(0,sep);absoluteName=name.substring(sep+1)+'.'+shortName;}
else if(name.indexOf('.')>0&&(Ext.ClassManager.isCreated(name)||Ext.Loader.isAClassNameWithAKnownPrefix(name))){absoluteName=name;}else{absoluteName=namespaceAndModule+name;}
return{absoluteName:absoluteName,shortName:shortName};}},onClassExtended:function(cls,data,hooks){var Controller=Ext.app.Controller,className,namespace,onBeforeClassCreated,requires,proto,match;className=Ext.getClassName(cls);namespace=Ext.Loader.getPrefix(className)||((match=className.match(/^(.*)\.controller\./))&&match[1]);if(namespace&&namespace!==className){onBeforeClassCreated=hooks.onBeforeCreated;requires=[];hooks.onBeforeCreated=function(cls,data){proto=cls.prototype;Controller.processDependencies(proto,requires,namespace,'model',data.models);Controller.processDependencies(proto,requires,namespace,'view',data.views);Controller.processDependencies(proto,requires,namespace,'store',data.stores);Controller.processDependencies(proto,requires,namespace,'controller',data.controllers);Ext.require(requires,Ext.Function.pass(onBeforeClassCreated,arguments,this));};}},constructor:function(config){var me=this,prop,fn;me.mixins.observable.constructor.call(me,config);Ext.apply(me,config);if(me.refs){me.ref(me.refs);}
me.initAutoGetters();},initAutoGetters:function(){var proto=this.self.prototype,prop,fn;for(prop in proto){fn=proto[prop];if(Ext.isFunction(fn)&&fn.$ext_getter){fn.call(this);}}},doInit:function(app){if(!this._initialized){this.init(app);this._initialized=true;}},init:Ext.emptyFn,onLaunch:Ext.emptyFn,ref:function(refs){refs=Ext.Array.from(refs);var me=this,i=0,length=refs.length,info,ref,fn;me.references=me.references||[];for(;i<length;i++){info=refs[i];ref=info.ref;fn='get'+Ext.String.capitalize(ref);if(!me[fn]){me[fn]=Ext.Function.pass(me.getRef,[ref,info],me);}
me.references.push(ref.toLowerCase());}},addRef:function(ref){return this.ref([ref]);},getRef:function(ref,info,config){this.refCache=this.refCache||{};info=info||{};config=config||{};Ext.apply(info,config);if(info.forceCreate){return Ext.ComponentManager.create(info,'component');}
var me=this,cached=me.refCache[ref];if(!cached){me.refCache[ref]=cached=Ext.ComponentQuery.query(info.selector)[0];if(!cached&&info.autoCreate){me.refCache[ref]=cached=Ext.ComponentManager.create(info,'component');}
if(cached){cached.on('beforedestroy',function(){me.refCache[ref]=null;});}}
return cached;},hasRef:function(ref){var references=this.references;return references&&Ext.Array.indexOf(references,ref.toLowerCase())!==-1;},control:function(selectors,listeners){this.application.control(selectors,listeners,this);},getController:function(name){return this.application.getController(name);},getStore:function(name){return this.application.getStore(name);},getModel:function(model){return this.application.getModel(model);},getView:function(view){return this.application.getView(view);},getApplication:function(){return this.application;}});Ext.define('Ext.util.Region',{requires:['Ext.util.Offset'],statics:{getRegion:function(el){return Ext.fly(el).getPageBox(true);},from:function(o){return new this(o.top,o.right,o.bottom,o.left);}},constructor:function(t,r,b,l){var me=this;me.y=me.top=me[1]=t;me.right=r;me.bottom=b;me.x=me.left=me[0]=l;},contains:function(region){var me=this;return(region.x>=me.x&&region.right<=me.right&&region.y>=me.y&&region.bottom<=me.bottom);},intersect:function(region){var me=this,t=Math.max(me.y,region.y),r=Math.min(me.right,region.right),b=Math.min(me.bottom,region.bottom),l=Math.max(me.x,region.x);if(b>t&&r>l){return new this.self(t,r,b,l);}
else{return false;}},union:function(region){var me=this,t=Math.min(me.y,region.y),r=Math.max(me.right,region.right),b=Math.max(me.bottom,region.bottom),l=Math.min(me.x,region.x);return new this.self(t,r,b,l);},constrainTo:function(r){var me=this,constrain=Ext.Number.constrain;me.top=me.y=constrain(me.top,r.y,r.bottom);me.bottom=constrain(me.bottom,r.y,r.bottom);me.left=me.x=constrain(me.left,r.x,r.right);me.right=constrain(me.right,r.x,r.right);return me;},adjust:function(t,r,b,l){var me=this;me.top=me.y+=t;me.left=me.x+=l;me.right+=r;me.bottom+=b;return me;},getOutOfBoundOffset:function(axis,p){if(!Ext.isObject(axis)){if(axis=='x'){return this.getOutOfBoundOffsetX(p);}else{return this.getOutOfBoundOffsetY(p);}}else{p=axis;var d=new Ext.util.Offset();d.x=this.getOutOfBoundOffsetX(p.x);d.y=this.getOutOfBoundOffsetY(p.y);return d;}},getOutOfBoundOffsetX:function(p){if(p<=this.x){return this.x-p;}else if(p>=this.right){return this.right-p;}
return 0;},getOutOfBoundOffsetY:function(p){if(p<=this.y){return this.y-p;}else if(p>=this.bottom){return this.bottom-p;}
return 0;},isOutOfBound:function(axis,p){if(!Ext.isObject(axis)){if(axis=='x'){return this.isOutOfBoundX(p);}else{return this.isOutOfBoundY(p);}}else{p=axis;return(this.isOutOfBoundX(p.x)||this.isOutOfBoundY(p.y));}},isOutOfBoundX:function(p){return(p<this.x||p>this.right);},isOutOfBoundY:function(p){return(p<this.y||p>this.bottom);},restrict:function(axis,p,factor){if(Ext.isObject(axis)){var newP;factor=p;p=axis;if(p.copy){newP=p.copy();}
else{newP={x:p.x,y:p.y};}
newP.x=this.restrictX(p.x,factor);newP.y=this.restrictY(p.y,factor);return newP;}else{if(axis=='x'){return this.restrictX(p,factor);}else{return this.restrictY(p,factor);}}},restrictX:function(p,factor){if(!factor){factor=1;}
if(p<=this.x){p-=(p-this.x)*factor;}
else if(p>=this.right){p-=(p-this.right)*factor;}
return p;},restrictY:function(p,factor){if(!factor){factor=1;}
if(p<=this.y){p-=(p-this.y)*factor;}
else if(p>=this.bottom){p-=(p-this.bottom)*factor;}
return p;},getSize:function(){return{width:this.right-this.x,height:this.bottom-this.y};},copy:function(){return new this.self(this.y,this.right,this.bottom,this.x);},copyFrom:function(p){var me=this;me.top=me.y=me[1]=p.y;me.right=p.right;me.bottom=p.bottom;me.left=me.x=me[0]=p.x;return this;},toString:function(){return"Region["+this.top+","+this.right+","+this.bottom+","+this.left+"]";},translateBy:function(x,y){if(arguments.length==1){y=x.y;x=x.x;}
var me=this;me.top=me.y+=y;me.right+=x;me.bottom+=y;me.left=me.x+=x;return me;},round:function(){var me=this;me.top=me.y=Math.round(me.y);me.right=Math.round(me.right);me.bottom=Math.round(me.bottom);me.left=me.x=Math.round(me.x);return me;},equals:function(region){return(this.top==region.top&&this.right==region.right&&this.bottom==region.bottom&&this.left==region.left);}});Ext.define('Ext.util.Point',{extend:'Ext.util.Region',statics:{fromEvent:function(e){e=e.browserEvent||e;e=(e.changedTouches&&e.changedTouches.length>0)?e.changedTouches[0]:e;return new this(e.pageX,e.pageY);}},constructor:function(x,y){this.callParent([y,x,y,x]);},toString:function(){return"Point["+this.x+","+this.y+"]";},equals:function(p){return(this.x==p.x&&this.y==p.y);},isWithin:function(p,threshold){if(!Ext.isObject(threshold)){threshold={x:threshold,y:threshold};}
return(this.x<=p.x+threshold.x&&this.x>=p.x-threshold.x&&this.y<=p.y+threshold.y&&this.y>=p.y-threshold.y);},roundedEquals:function(p){return(Math.round(this.x)==Math.round(p.x)&&Math.round(this.y)==Math.round(p.y));}},function(){this.prototype.translate=Ext.util.Region.prototype.translateBy;});Ext.define('Ext.util.ComponentDragger',{extend:'Ext.dd.DragTracker',autoStart:500,constructor:function(comp,config){this.comp=comp;this.initialConstrainTo=config.constrainTo;this.callParent([config]);},onStart:function(e){var me=this,comp=me.comp;this.startPosition=comp.el.getXY();if(comp.ghost&&!comp.liveDrag){me.proxy=comp.ghost();me.dragTarget=me.proxy.header.el;}
if(me.constrain||me.constrainDelegate){me.constrainTo=me.calculateConstrainRegion();}
if(comp.beginDrag){comp.beginDrag();}},calculateConstrainRegion:function(){var me=this,comp=me.comp,c=me.initialConstrainTo,delegateRegion,elRegion,dragEl=me.proxy?me.proxy.el:comp.el,shadowSize=(!me.constrainDelegate&&dragEl.shadow&&!dragEl.shadowDisabled)?dragEl.shadow.getShadowSize():0;if(!(c instanceof Ext.util.Region)){c=Ext.fly(c).getViewRegion();}
if(shadowSize){c.adjust(shadowSize[0],-shadowSize[1],-shadowSize[2],shadowSize[3]);}
if(!me.constrainDelegate){delegateRegion=Ext.fly(me.dragTarget).getRegion();elRegion=dragEl.getRegion();c.adjust(delegateRegion.top-elRegion.top,delegateRegion.right-elRegion.right,delegateRegion.bottom-elRegion.bottom,delegateRegion.left-elRegion.left);}
return c;},onDrag:function(e){var me=this,comp=(me.proxy&&!me.comp.liveDrag)?me.proxy:me.comp,offset=me.getOffset(me.constrain||me.constrainDelegate?'dragTarget':null);comp.setPagePosition(me.startPosition[0]+offset[0],me.startPosition[1]+offset[1]);},onEnd:function(e){var comp=this.comp;if(this.proxy&&!comp.liveDrag){comp.unghost();}
if(comp.endDrag){comp.endDrag();}}});Ext.define('Ext.data.proxy.Client',{extend:'Ext.data.proxy.Proxy',alternateClassName:'Ext.data.ClientProxy',isSynchronous:true,clear:function(){Ext.Error.raise("The Ext.data.proxy.Client subclass that you are using has not defined a 'clear' function. See src/data/ClientProxy.js for details.");}});Ext.define('Ext.data.proxy.Memory',{extend:'Ext.data.proxy.Client',alias:'proxy.memory',alternateClassName:'Ext.data.MemoryProxy',constructor:function(config){this.callParent([config]);this.setReader(this.reader);},updateOperation:function(operation,callback,scope){var i=0,recs=operation.getRecords(),len=recs.length;for(i;i<len;i++){recs[i].commit();}
operation.setCompleted();operation.setSuccessful();Ext.callback(callback,scope||this,[operation]);},create:function(){this.updateOperation.apply(this,arguments);},update:function(){this.updateOperation.apply(this,arguments);},destroy:function(){this.updateOperation.apply(this,arguments);},read:function(operation,callback,scope){var me=this,resultSet=operation.resultSet=me.getReader().read(me.data),records=resultSet.records,sorters=operation.sorters,filters=operation.filters;operation.setCompleted();if(resultSet.success){if(filters&&filters.length){records=resultSet.records=Ext.Array.filter(records,Ext.util.Filter.createFilterFn(filters));}
if(sorters&&sorters.length){resultSet.records=Ext.Array.sort(records,Ext.util.Sortable.createComparator(sorters));}
if(me.enablePaging&&operation.start!==undefined&&operation.limit!==undefined){if(operation.start>=resultSet.total){resultSet.success=false;resultSet.count=0;resultSet.records=[];}
else{resultSet.records=Ext.Array.slice(resultSet.records,operation.start,operation.start+operation.limit);resultSet.count=resultSet.records.length;}}}
if(resultSet.success){operation.setSuccessful();}else{me.fireEvent('exception',me,null,operation);}
Ext.callback(callback,scope||me,[operation]);},clear:Ext.emptyFn});Ext.define('Ext.AbstractManager',{requires:['Ext.util.HashMap'],typeName:'type',constructor:function(config){Ext.apply(this,config||{});this.all=new Ext.util.HashMap();this.types={};},get:function(id){return this.all.get(id);},register:function(item){var all=this.all,key=all.getKey(item);if(all.containsKey(key)){Ext.Error.raise('Registering duplicate id "'+key+'" with this manager');}
this.all.add(item);},unregister:function(item){this.all.remove(item);},registerType:function(type,cls){this.types[type]=cls;cls[this.typeName]=type;},isRegistered:function(type){return this.types[type]!==undefined;},create:function(config,defaultType){var type=config[this.typeName]||config.type||defaultType,Constructor=this.types[type];if(Constructor===undefined){Ext.Error.raise("The '"+type+"' type has not been registered with this manager");}
return new Constructor(config);},onAvailable:function(id,fn,scope){var all=this.all,item,callback;if(all.containsKey(id)){item=all.get(id);fn.call(scope||item,item);}else{callback=function(map,key,item){if(key==id){fn.call(scope||item,item);all.un('add',callback);}};all.on('add',callback);}},each:function(fn,scope){this.all.each(fn,scope||this);},getCount:function(){return this.all.getCount();}});Ext.define('Ext.PluginManager',{extend:'Ext.AbstractManager',alternateClassName:'Ext.PluginMgr',singleton:true,typeName:'ptype',create:function(config,defaultType){if(config.init){return config;}else{return Ext.createByAlias('plugin.'+(config.ptype||defaultType),config);}},findByType:function(type,defaultsOnly){var matches=[],types=this.types,name,item;for(name in types){if(!types.hasOwnProperty(name)){continue;}
item=types[name];if(item.type==type&&(!defaultsOnly||(defaultsOnly===true&&item.isDefault))){matches.push(item);}}
return matches;}},function(){Ext.preg=function(){return Ext.PluginManager.registerType.apply(Ext.PluginManager,arguments);};});Ext.define('Ext.ModelManager',{extend:'Ext.AbstractManager',alternateClassName:'Ext.ModelMgr',requires:['Ext.data.association.Association'],singleton:true,typeName:'mtype',associationStack:[],registerType:function(name,config){var proto=config.prototype,model;if(proto&&proto.isModel){model=config;}else{if(!config.extend){config.extend='Ext.data.Model';}
model=Ext.define(name,config);}
this.types[name]=model;return model;},onModelDefined:function(model){var stack=this.associationStack,length=stack.length,create=[],association,i,created;for(i=0;i<length;i++){association=stack[i];if(association.associatedModel==model.modelName){create.push(association);}}
for(i=0,length=create.length;i<length;i++){created=create[i];this.types[created.ownerModel].prototype.associations.add(Ext.data.association.Association.create(created));Ext.Array.remove(stack,created);}},registerDeferredAssociation:function(association){this.associationStack.push(association);},getModel:function(id){var model=id;if(typeof model=='string'){model=this.types[model];}
return model;},create:function(config,name,id){var Con=typeof name=='function'?name:this.types[name||config.name];return new Con(config,id);}},function(){Ext.regModel=function(){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.regModel has been deprecated. Models can now be created by extending Ext.data.Model: Ext.define("MyModel", {extend: "Ext.data.Model", fields: []});.');}
return this.ModelManager.registerType.apply(this.ModelManager,arguments);};});Ext.define('Ext.ComponentManager',{extend:'Ext.AbstractManager',alternateClassName:'Ext.ComponentMgr',singleton:true,typeName:'xtype',create:function(component,defaultType){if(typeof component=='string'){return Ext.widget(component);}
if(component.isComponent){return component;}
return Ext.widget(component.xtype||defaultType,component);},registerType:function(type,cls){this.types[type]=cls;cls[this.typeName]=type;cls.prototype[this.typeName]=type;}},function(){Ext.getCmp=function(id){return Ext.ComponentManager.get(id);};});Ext.define('Ext.ElementLoader',{mixins:{observable:'Ext.util.Observable'},uses:['Ext.data.Connection','Ext.Ajax'],statics:{Renderer:{Html:function(loader,response,active){loader.getTarget().update(response.responseText,active.scripts===true);return true;}}},url:null,params:null,baseParams:null,autoLoad:false,target:null,loadMask:false,ajaxOptions:null,scripts:false,isLoader:true,constructor:function(config){var me=this,autoLoad;config=config||{};Ext.apply(me,config);me.setTarget(me.target);me.addEvents('beforeload','exception','load');me.mixins.observable.constructor.call(me);if(me.autoLoad){autoLoad=me.autoLoad;if(autoLoad===true){autoLoad={};}
me.load(autoLoad);}},setTarget:function(target){var me=this;target=Ext.get(target);if(me.target&&me.target!=target){me.abort();}
me.target=target;},getTarget:function(){return this.target||null;},abort:function(){var active=this.active;if(active!==undefined){Ext.Ajax.abort(active.request);if(active.mask){this.removeMask();}
delete this.active;}},removeMask:function(){this.target.unmask();},addMask:function(mask){this.target.mask(mask===true?null:mask);},load:function(options){if(!this.target){Ext.Error.raise('A valid target is required when loading content');}
options=Ext.apply({},options);var me=this,target=me.target,mask=Ext.isDefined(options.loadMask)?options.loadMask:me.loadMask,params=Ext.apply({},options.params),ajaxOptions=Ext.apply({},options.ajaxOptions),callback=options.callback||me.callback,scope=options.scope||me.scope||me,request;Ext.applyIf(ajaxOptions,me.ajaxOptions);Ext.applyIf(options,ajaxOptions);Ext.applyIf(params,me.params);Ext.apply(params,me.baseParams);Ext.applyIf(options,{url:me.url});if(!options.url){Ext.Error.raise('You must specify the URL from which content should be loaded');}
Ext.apply(options,{scope:me,params:params,callback:me.onComplete});if(me.fireEvent('beforeload',me,options)===false){return;}
if(mask){me.addMask(mask);}
request=Ext.Ajax.request(options);me.active={request:request,options:options,mask:mask,scope:scope,callback:callback,success:options.success||me.success,failure:options.failure||me.failure,renderer:options.renderer||me.renderer,scripts:Ext.isDefined(options.scripts)?options.scripts:me.scripts};me.setOptions(me.active,options);},setOptions:Ext.emptyFn,onComplete:function(options,success,response){var me=this,active=me.active,scope=active.scope,renderer=me.getRenderer(active.renderer);if(success){success=renderer.call(me,me,response,active)!==false;}
if(success){Ext.callback(active.success,scope,[me,response,options]);me.fireEvent('load',me,response,options);}else{Ext.callback(active.failure,scope,[me,response,options]);me.fireEvent('exception',me,response,options);}
Ext.callback(active.callback,scope,[me,success,response,options]);if(active.mask){me.removeMask();}
delete me.active;},getRenderer:function(renderer){if(Ext.isFunction(renderer)){return renderer;}
return this.statics().Renderer.Html;},startAutoRefresh:function(interval,options){var me=this;me.stopAutoRefresh();me.autoRefresh=setInterval(function(){me.load(options);},interval);},stopAutoRefresh:function(){clearInterval(this.autoRefresh);delete this.autoRefresh;},isAutoRefreshing:function(){return Ext.isDefined(this.autoRefresh);},destroy:function(){var me=this;me.stopAutoRefresh();delete me.target;me.abort();me.clearListeners();}});Ext.define('Ext.ComponentLoader',{extend:'Ext.ElementLoader',statics:{Renderer:{Data:function(loader,response,active){var success=true;try{loader.getTarget().update(Ext.decode(response.responseText));}catch(e){success=false;}
return success;},Component:function(loader,response,active){var success=true,target=loader.getTarget(),items=[];if(!target.isContainer){Ext.Error.raise({target:target,msg:'Components can only be loaded into a container'});}
try{items=Ext.decode(response.responseText);}catch(e){success=false;}
if(success){target.suspendLayouts();if(active.removeAll){target.removeAll();}
target.add(items);target.resumeLayouts(true);}
return success;}}},target:null,loadMask:false,renderer:'html',setTarget:function(target){var me=this;if(Ext.isString(target)){target=Ext.getCmp(target);}
if(me.target&&me.target!=target){me.abort();}
me.target=target;},removeMask:function(){this.target.setLoading(false);},addMask:function(mask){this.target.setLoading(mask);},setOptions:function(active,options){active.removeAll=Ext.isDefined(options.removeAll)?options.removeAll:this.removeAll;},getRenderer:function(renderer){if(Ext.isFunction(renderer)){return renderer;}
var renderers=this.statics().Renderer;switch(renderer){case'component':return renderers.Component;case'data':return renderers.Data;default:return Ext.ElementLoader.Renderer.Html;}}});Ext.define('Ext.layout.ContextItem',{requires:['Ext.layout.ClassList'],heightModel:null,widthModel:null,sizeModel:null,boxChildren:null,boxParent:null,children:[],dirty:null,dirtyCount:0,hasRawContent:true,isContextItem:true,isTopLevel:false,consumersContentHeight:0,consumersContentWidth:0,consumersContainerHeight:0,consumersContainerWidth:0,consumersHeight:0,consumersWidth:0,ownerCtContext:null,remainingChildLayouts:0,remainingComponentChildLayouts:0,remainingContainerChildLayouts:0,props:null,state:null,wrapsComponent:false,constructor:function(config){var me=this,el,ownerCt,ownerCtContext,sizeModel,target;Ext.apply(me,config);el=me.el;me.id=el.id;me.lastBox=el.lastBox;me.flushedProps={};me.props={};me.styles={};target=me.target;if(target.isComponent){me.wrapsComponent=true;ownerCt=target.ownerCt;if(ownerCt&&(ownerCtContext=me.context.items[ownerCt.el.id])){me.ownerCtContext=ownerCtContext;}
me.sizeModel=sizeModel=target.getSizeModel(ownerCtContext&&ownerCtContext.widthModel.pairsByHeightOrdinal[ownerCtContext.heightModel.ordinal]);me.widthModel=sizeModel.width;me.heightModel=sizeModel.height;}},init:function(full,options){var me=this,oldProps=me.props,oldDirty=me.dirty,ownerCtContext=me.ownerCtContext,ownerLayout=me.target.ownerLayout,firstTime=!me.state,ret=full||firstTime,children,i,n,ownerCt,sizeModel,target,oldHeightModel=me.heightModel,oldWidthModel=me.widthModel,newHeightModel,newWidthModel;me.dirty=me.invalid=false;me.props={};if(me.boxChildren){me.boxChildren.length=0;}
if(!firstTime){me.clearAllBlocks('blocks');me.clearAllBlocks('domBlocks');}
if(!me.wrapsComponent){return ret;}
target=me.target;me.state={};if(firstTime){if(target.beforeLayout){target.beforeLayout();}
if(!ownerCtContext&&(ownerCt=target.ownerCt)){ownerCtContext=me.context.items[ownerCt.el.id];}
if(ownerCtContext){me.ownerCtContext=ownerCtContext;me.isBoxParent=target.ownerLayout.isItemBoxParent(me);}else{me.isTopLevel=true;}
me.frameBodyContext=me.getEl('frameBody');}else{ownerCtContext=me.ownerCtContext;me.isTopLevel=!ownerCtContext;children=me.children;for(i=0,n=children.length;i<n;++i){children[i].init(true);}}
me.hasRawContent=!(target.isContainer&&target.items.items.length>0);if(full){me.widthModel=me.heightModel=null;sizeModel=target.getSizeModel(ownerCtContext&&ownerCtContext.widthModel.pairsByHeightOrdinal[ownerCtContext.heightModel.ordinal]);if(firstTime){me.sizeModel=sizeModel;}
me.widthModel=sizeModel.width;me.heightModel=sizeModel.height;}else if(oldProps){me.recoverProp('x',oldProps,oldDirty);me.recoverProp('y',oldProps,oldDirty);if(me.widthModel.calculated){me.recoverProp('width',oldProps,oldDirty);}
if(me.heightModel.calculated){me.recoverProp('height',oldProps,oldDirty);}}
if(oldProps&&ownerLayout&&ownerLayout.manageMargins){me.recoverProp('margin-top',oldProps,oldDirty);me.recoverProp('margin-right',oldProps,oldDirty);me.recoverProp('margin-bottom',oldProps,oldDirty);me.recoverProp('margin-left',oldProps,oldDirty);}
if(options){newHeightModel=options.heightModel;newWidthModel=options.widthModel;if(newWidthModel&&newHeightModel&&oldWidthModel&&oldHeightModel){if(oldWidthModel.shrinkWrap&&oldHeightModel.shrinkWrap){if(newWidthModel.constrainedMax&&newHeightModel.constrainedMin){newHeightModel=null;}}}
if(newWidthModel){me.widthModel=newWidthModel;}
if(newHeightModel){me.heightModel=newHeightModel;}
if(options.state){Ext.apply(me.state,options.state);}}
return ret;},initContinue:function(full){var me=this,ownerCtContext=me.ownerCtContext,widthModel=me.widthModel,boxParent;if(full){if(ownerCtContext&&widthModel.shrinkWrap){boxParent=ownerCtContext.isBoxParent?ownerCtContext:ownerCtContext.boxParent;if(boxParent){boxParent.addBoxChild(me);}}else if(widthModel.natural){me.boxParent=ownerCtContext;}}
return full;},initDone:function(full,componentChildrenDone,containerChildrenDone,containerLayoutDone){var me=this,props=me.props,state=me.state;if(componentChildrenDone){props.componentChildrenDone=true;}
if(containerChildrenDone){props.containerChildrenDone=true;}
if(containerLayoutDone){props.containerLayoutDone=true;}
if(me.boxChildren&&me.boxChildren.length&&me.widthModel.shrinkWrap){me.el.setWidth(10000);state.blocks=(state.blocks||0)+1;}},initAnimation:function(){var me=this,target=me.target,ownerCtContext=me.ownerCtContext;if(ownerCtContext&&ownerCtContext.isTopLevel){me.animatePolicy=target.ownerLayout.getAnimatePolicy(me);}else if(!ownerCtContext&&target.isCollapsingOrExpanding&&target.animCollapse){me.animatePolicy=target.componentLayout.getAnimatePolicy(me);}
if(me.animatePolicy){me.context.queueAnimation(me);}},noFraming:{left:0,top:0,right:0,bottom:0,width:0,height:0},addCls:function(newCls){this.getClassList().addMany(newCls);},removeCls:function(removeCls){this.getClassList().removeMany(removeCls);},addBlock:function(name,layout,propName){var me=this,collection=me[name]||(me[name]={}),blockedLayouts=collection[propName]||(collection[propName]={});if(!blockedLayouts[layout.id]){blockedLayouts[layout.id]=layout;++layout.blockCount;++me.context.blockCount;}},addBoxChild:function(boxChildItem){var me=this,children,widthModel=boxChildItem.widthModel;boxChildItem.boxParent=this;boxChildItem.measuresBox=widthModel.shrinkWrap?boxChildItem.hasRawContent:widthModel.natural;if(boxChildItem.measuresBox){children=me.boxChildren;if(children){children.push(boxChildItem);}else{me.boxChildren=[boxChildItem];}}},addTrigger:function(propName,inDom){var me=this,name=inDom?'domTriggers':'triggers',collection=me[name]||(me[name]={}),context=me.context,layout=context.currentLayout,triggers=collection[propName]||(collection[propName]={});if(!triggers[layout.id]){triggers[layout.id]=layout;++layout.triggerCount;triggers=context.triggers[inDom?'dom':'data'];(triggers[layout.id]||(triggers[layout.id]=[])).push({item:this,prop:propName});if(me.props[propName]!==undefined){if(!inDom||!(me.dirty&&(propName in me.dirty))){++layout.firedTriggers;}}}},boxChildMeasured:function(){var me=this,state=me.state,count=(state.boxesMeasured=(state.boxesMeasured||0)+1);if(count==me.boxChildren.length){state.clearBoxWidth=1;++me.context.progressCount;me.markDirty();}},borderNames:['border-top-width','border-right-width','border-bottom-width','border-left-width'],marginNames:['margin-top','margin-right','margin-bottom','margin-left'],paddingNames:['padding-top','padding-right','padding-bottom','padding-left'],trblNames:['top','right','bottom','left'],cacheMissHandlers:{borderInfo:function(me){var info=me.getStyles(me.borderNames,me.trblNames);info.width=info.left+info.right;info.height=info.top+info.bottom;return info;},marginInfo:function(me){var info=me.getStyles(me.marginNames,me.trblNames);info.width=info.left+info.right;info.height=info.top+info.bottom;return info;},paddingInfo:function(me){var item=me.frameBodyContext||me,info=item.getStyles(me.paddingNames,me.trblNames);info.width=info.left+info.right;info.height=info.top+info.bottom;return info;}},checkCache:function(entry){return this.cacheMissHandlers[entry](this);},clearAllBlocks:function(name){var collection=this[name],propName;if(collection){for(propName in collection){this.clearBlocks(name,propName);}}},clearBlocks:function(name,propName){var collection=this[name],blockedLayouts=collection&&collection[propName],context,layout,layoutId;if(blockedLayouts){delete collection[propName];context=this.context;for(layoutId in blockedLayouts){layout=blockedLayouts[layoutId];--context.blockCount;if(!--layout.blockCount&&!layout.pending&&!layout.done){context.queueLayout(layout);}}}},block:function(layout,propName){this.addBlock('blocks',layout,propName);},domBlock:function(layout,propName){this.addBlock('domBlocks',layout,propName);},fireTriggers:function(name,propName){var collection=this[name],triggers=collection&&collection[propName],context=this.context,layout,layoutId;if(triggers){for(layoutId in triggers){layout=triggers[layoutId];++layout.firedTriggers;if(!layout.done&&!layout.blockCount&&!layout.pending){context.queueLayout(layout);}}}},flush:function(){var me=this,dirty=me.dirty,state=me.state,targetEl=me.el;me.dirtyCount=0;if(me.classList&&me.classList.dirty){me.classList.flush();}
if('attributes'in me){targetEl.set(me.attributes);delete me.attributes;}
if('innerHTML'in me){targetEl.innerHTML=me.innerHTML;delete me.innerHTML;}
if(state&&state.clearBoxWidth){state.clearBoxWidth=0;me.el.setStyle('width',null);if(!--state.blocks){me.context.queueItemLayouts(me);}}
if(dirty){delete me.dirty;me.writeProps(dirty,true);}},flushAnimations:function(){var me=this,animateFrom=me.lastBox,target,targetAnim,duration,animateProps,anim,changeCount,j,propsLen,propName,oldValue,newValue;if(animateFrom){target=me.target;targetAnim=target.layout&&target.layout.animate;if(targetAnim){duration=Ext.isNumber(targetAnim)?targetAnim:targetAnim.duration;}
animateProps=Ext.Object.getKeys(me.animatePolicy);anim=Ext.apply({},{from:{},to:{},duration:duration||Ext.fx.Anim.prototype.duration},targetAnim);for(changeCount=0,j=0,propsLen=animateProps.length;j<propsLen;j++){propName=animateProps[j];oldValue=animateFrom[propName];newValue=me.peek(propName);if(oldValue!=newValue){propName=me.translateProps[propName]||propName;anim.from[propName]=oldValue;anim.to[propName]=newValue;++changeCount;}}
if(changeCount){if(me.isCollapsingOrExpanding===1){target.componentLayout.undoLayout(me);}
else{me.writeProps(anim.from);}
me.el.animate(anim);Ext.fx.Manager.getFxQueue(me.el.id)[0].on({afteranimate:function(){if(me.isCollapsingOrExpanding===1){target.componentLayout.redoLayout(me);target.afterCollapse(true);}else if(me.isCollapsingOrExpanding===2){target.afterExpand(true);}}});}}},getBorderInfo:function(){var me=this,info=me.borderInfo;if(!info){me.borderInfo=info=me.checkCache('borderInfo');}
return info;},getClassList:function(){return this.classList||(this.classList=new Ext.layout.ClassList(this));},getEl:function(nameOrEl,owner){var me=this,src,el,elContext;if(nameOrEl){if(nameOrEl.dom){el=nameOrEl;}else{src=me.target;if(owner){src=owner;}
el=src[nameOrEl];if(typeof el=='function'){el=el.call(src);if(el===me.el){return this;}}}
if(el){elContext=me.context.getEl(me,el);}}
return elContext||null;},getFraming:function(){var me=this;if(!me.framingInfo){me.framingInfo=me.target.frameSize||me.noFraming;}
return me.framingInfo;},getFrameInfo:function(){var me=this,info=me.frameInfo,frame,border;if(!info){frame=me.getFraming();border=me.getBorderInfo();me.frameInfo=info={top:frame.top+border.top,right:frame.right+border.right,bottom:frame.bottom+border.bottom,left:frame.left+border.left,width:frame.width+border.width,height:frame.height+border.height};}
return info;},getMarginInfo:function(){var me=this,info=me.marginInfo,comp,manageMargins,margins,ownerLayout,ownerLayoutId;if(!info){if(!me.wrapsComponent){info=me.checkCache('marginInfo');}else{comp=me.target;ownerLayout=comp.ownerLayout;ownerLayoutId=ownerLayout?ownerLayout.id:null;manageMargins=ownerLayout&&ownerLayout.manageMargins;info=comp.margin$;if(info&&info.ownerId!==ownerLayoutId){info=null;}
if(!info){info=me.parseMargins(comp.margin)||me.checkCache('marginInfo');if(manageMargins){margins=me.parseMargins(comp.margins,ownerLayout.defaultMargins);if(margins){info={top:info.top+margins.top,right:info.right+margins.right,bottom:info.bottom+margins.bottom,left:info.left+margins.left};}
me.setProp('margin-top',0);me.setProp('margin-right',0);me.setProp('margin-bottom',0);me.setProp('margin-left',0);}
info.ownerId=ownerLayoutId;comp.margin$=info;}
info.width=info.left+info.right;info.height=info.top+info.bottom;}
me.marginInfo=info;}
return info;},clearMarginCache:function(){delete this.marginInfo;delete this.target.margin$;},getPaddingInfo:function(){var me=this,info=me.paddingInfo;if(!info){me.paddingInfo=info=me.checkCache('paddingInfo');}
return info;},getProp:function(propName){var me=this,result=me.props[propName];me.addTrigger(propName);return result;},getDomProp:function(propName){var me=this,result=(me.dirty&&(propName in me.dirty))?undefined:me.props[propName];me.addTrigger(propName,true);return result;},getStyle:function(styleName){var me=this,styles=me.styles,info,value;if(styleName in styles){value=styles[styleName];}else{info=me.styleInfo[styleName];value=me.el.getStyle(styleName);if(info&&info.parseInt){value=parseInt(value,10)||0;}
styles[styleName]=value;}
return value;},getStyles:function(styleNames,altNames){var me=this,styleCache=me.styles,values={},hits=0,n=styleNames.length,i,missing,missingAltNames,name,info,styleInfo,styles,value;altNames=altNames||styleNames;for(i=0;i<n;++i){name=styleNames[i];if(name in styleCache){values[altNames[i]]=styleCache[name];++hits;if(i&&hits==1){missing=styleNames.slice(0,i);missingAltNames=altNames.slice(0,i);}}else if(hits){(missing||(missing=[])).push(name);(missingAltNames||(missingAltNames=[])).push(altNames[i]);}}
if(hits<n){missing=missing||styleNames;missingAltNames=missingAltNames||altNames;styleInfo=me.styleInfo;styles=me.el.getStyle(missing);for(i=missing.length;i--;){name=missing[i];info=styleInfo[name];value=styles[name];if(info&&info.parseInt){value=parseInt(value,10)||0;}
values[missingAltNames[i]]=value;styleCache[name]=value;}}
return values;},hasProp:function(propName){var value=this.getProp(propName);return typeof value!='undefined';},hasDomProp:function(propName){var value=this.getDomProp(propName);return typeof value!='undefined';},invalidate:function(options){this.context.queueInvalidate(this,options);},markDirty:function(){if(++this.dirtyCount==1){this.context.queueFlush(this);}},onBoxMeasured:function(){var boxParent=this.boxParent,state=this.state;if(boxParent&&boxParent.widthModel.shrinkWrap&&!state.boxMeasured&&this.measuresBox){state.boxMeasured=1;boxParent.boxChildMeasured();}},parseMargins:function(margins,defaultMargins){if(margins===true){margins=5;}
var type=typeof margins,ret;if(type=='string'||type=='number'){ret=Ext.util.Format.parseBox(margins);}else if(margins||defaultMargins){ret={top:0,right:0,bottom:0,left:0};if(defaultMargins){Ext.apply(ret,this.parseMargins(defaultMargins));}
Ext.apply(ret,margins);}
return ret;},peek:function(propName){return this.props[propName];},recoverProp:function(propName,oldProps,oldDirty){var me=this,props=me.props,dirty;if(propName in oldProps){props[propName]=oldProps[propName];if(oldDirty&&propName in oldDirty){dirty=me.dirty||(me.dirty={});dirty[propName]=oldDirty[propName];}}},redo:function(deep){var me=this,items,len,i;me.revertProps(me.props);if(deep&&me.wrapsComponent){if(me.childItems){for(i=0,items=me.childItems,len=items.length;i<len;i++){items[i].redo(deep);}}
for(i=0,items=me.children,len=items.length;i<len;i++){items[i].redo();}}},revertProps:function(props){var name,flushed=this.flushedProps,reverted={};for(name in props){if(flushed.hasOwnProperty(name)){reverted[name]=props[name];}}
this.writeProps(reverted);},setAttribute:function(name,value){var me=this;if(!me.attributes){me.attributes={};}
me.attributes[name]=value;me.markDirty();},setBox:function(box){var me=this;if('left'in box){me.setProp('x',box.left);}
if('top'in box){me.setProp('y',box.top);}
me.setSize(box.width,box.height);},setContentHeight:function(height,measured){if(!measured&&this.hasRawContent){return 1;}
return this.setProp('contentHeight',height);},setContentWidth:function(width,measured){if(!measured&&this.hasRawContent){return 1;}
return this.setProp('contentWidth',width);},setContentSize:function(width,height,measured){return this.setContentWidth(width,measured)+
this.setContentHeight(height,measured)==2;},setProp:function(propName,value,dirty){var me=this,valueType=typeof value,borderBox,info;if(valueType=='undefined'||(valueType==='number'&&isNaN(value))){return 0;}
if(me.props[propName]===value){return 1;}
me.props[propName]=value;++me.context.progressCount;if(dirty===false){me.fireTriggers('domTriggers',propName);me.clearBlocks('domBlocks',propName);}else{info=me.styleInfo[propName];if(info){if(!me.dirty){me.dirty={};}
if(propName=='width'||propName=='height'){borderBox=me.isBorderBoxValue;if(borderBox==null){me.isBorderBoxValue=borderBox=!!me.el.isBorderBox();}
if(!borderBox){me.borderInfo||me.getBorderInfo();me.paddingInfo||me.getPaddingInfo();}}
me.dirty[propName]=value;me.markDirty();}}
me.fireTriggers('triggers',propName);me.clearBlocks('blocks',propName);return 1;},setHeight:function(height,dirty){var me=this,comp=me.target,frameBody,frameInfo,padding;if(height<0){height=0;}
if(!me.wrapsComponent){if(!me.setProp('height',height,dirty)){return NaN;}}else{height=Ext.Number.constrain(height,comp.minHeight||0,comp.maxHeight);if(!me.setProp('height',height,dirty)){return NaN;}
frameBody=me.frameBodyContext;if(frameBody){frameInfo=me.getFrameInfo();frameBody.setHeight(height-frameInfo.height,dirty);}}
return height;},setWidth:function(width,dirty){var me=this,comp=me.target,frameBody,frameInfo,padding;if(width<0){width=0;}
if(!me.wrapsComponent){if(!me.setProp('width',width,dirty)){return NaN;}}else{width=Ext.Number.constrain(width,comp.minWidth||0,comp.maxWidth);if(!me.setProp('width',width,dirty)){return NaN;}
frameBody=me.frameBodyContext;if(frameBody){frameInfo=me.getFrameInfo();frameBody.setWidth(width-frameInfo.width,dirty);}}
return width;},setSize:function(width,height,dirty){this.setWidth(width,dirty);this.setHeight(height,dirty);},translateProps:{x:'left',y:'top'},undo:function(deep){var me=this,items,len,i;me.revertProps(me.lastBox);if(deep&&me.wrapsComponent){if(me.childItems){for(i=0,items=me.childItems,len=items.length;i<len;i++){items[i].undo(deep);}}
for(i=0,items=me.children,len=items.length;i<len;i++){items[i].undo();}}},unsetProp:function(propName){var dirty=this.dirty;delete this.props[propName];if(dirty){delete dirty[propName];}},writeProps:function(dirtyProps,flushing){if(!(dirtyProps&&typeof dirtyProps=='object')){Ext.Logger.warn('writeProps expected dirtyProps to be an object');return;}
var me=this,el=me.el,styles={},styleCount=0,styleInfo=me.styleInfo,info,propName,numericValue,dirtyX='x'in dirtyProps,dirtyY='y'in dirtyProps,x=dirtyProps.x,y=dirtyProps.y,width=dirtyProps.width,height=dirtyProps.height,isBorderBox=me.isBorderBoxValue,target=me.target,max=Math.max,paddingWidth=0,paddingHeight=0,hasWidth,hasHeight,isAbsolute,scrollbarSize,style,targetEl;if('displayed'in dirtyProps){el.setDisplayed(dirtyProps.displayed);}
for(propName in dirtyProps){if(flushing){me.fireTriggers('domTriggers',propName);me.clearBlocks('domBlocks',propName);me.flushedProps[propName]=1;}
info=styleInfo[propName];if(info&&info.dom){if(info.suffix&&(numericValue=parseInt(dirtyProps[propName],10))){styles[propName]=numericValue+info.suffix;}
else{styles[propName]=dirtyProps[propName];}
++styleCount;}}
if(dirtyX||dirtyY){if(target.isComponent){target.setPosition(x||me.props.x,y||me.props.y);}else{if(dirtyX){styles.left=x+'px';++styleCount;}
if(dirtyY){styles.top=y+'px';++styleCount;}}}
if(!isBorderBox&&(width>0||height>0)){if(!(me.borderInfo&&me.paddingInfo)){throw Error("Needed to have gotten the borderInfo and paddingInfo when the width or height was setProp'd");}
if(!me.frameBodyContext){paddingWidth=me.paddingInfo.width;paddingHeight=me.paddingInfo.height;}
if(width){width=max(parseInt(width,10)-(me.borderInfo.width+paddingWidth),0);styles.width=width+'px';++styleCount;}
if(height){height=max(parseInt(height,10)-(me.borderInfo.height+paddingHeight),0);styles.height=height+'px';++styleCount;}}
if(me.wrapsComponent&&Ext.isIE9&&Ext.isStrict){if((hasWidth=width!==undefined&&me.hasOverflowY)||(hasHeight=height!==undefined&&me.hasOverflowX)){isAbsolute=me.isAbsolute;if(isAbsolute===undefined){isAbsolute=false;targetEl=me.target.getTargetEl();style=targetEl.getStyle('position');if(style=='absolute'){style=targetEl.getStyle('box-sizing');isAbsolute=(style=='border-box');}
me.isAbsolute=isAbsolute;}
if(isAbsolute){scrollbarSize=Ext.getScrollbarSize();if(hasWidth){width=parseInt(width,10)+scrollbarSize.width;styles.width=width+'px';++styleCount;}
if(hasHeight){height=parseInt(height,10)+scrollbarSize.height;styles.height=height+'px';++styleCount;}}}}
if(styleCount){el.setStyle(styles);}}},function(){var px={dom:true,parseInt:true,suffix:'px'},isDom={dom:true},faux={dom:false};this.prototype.styleInfo={childrenDone:faux,componentChildrenDone:faux,containerChildrenDone:faux,containerLayoutDone:faux,displayed:faux,done:faux,x:faux,y:faux,columnWidthsDone:faux,left:px,top:px,right:px,bottom:px,width:px,height:px,'border-top-width':px,'border-right-width':px,'border-bottom-width':px,'border-left-width':px,'margin-top':px,'margin-right':px,'margin-bottom':px,'margin-left':px,'padding-top':px,'padding-right':px,'padding-bottom':px,'padding-left':px,'line-height':isDom,display:isDom};});Ext.define('Ext.util.KeyNav',{alternateClassName:'Ext.KeyNav',requires:['Ext.util.KeyMap'],statics:{keyOptions:{left:37,right:39,up:38,down:40,space:32,pageUp:33,pageDown:34,del:46,backspace:8,home:36,end:35,enter:13,esc:27,tab:9}},constructor:function(config){var me=this;if(arguments.length===2){me.legacyConstructor.apply(me,arguments);return;}
me.setConfig(config);},legacyConstructor:function(el,config){this.setConfig(Ext.apply({target:el},config));},setConfig:function(config){var me=this,keymapCfg={target:config.target,ignoreInputFields:config.ignoreInputFields,eventName:me.getKeyEvent('forceKeyDown'in config?config.forceKeyDown:me.forceKeyDown,config.eventName)},map,keyCodes,defaultScope,keyName,binding;if(me.map){me.map.destroy();}
if(config.processEvent){keymapCfg.processEvent=config.processEvent;keymapCfg.processEventScope=config.processEventScope||me;}
map=me.map=new Ext.util.KeyMap(keymapCfg);keyCodes=Ext.util.KeyNav.keyOptions;defaultScope=config.scope||me;for(keyName in keyCodes){if(keyCodes.hasOwnProperty(keyName)){if(binding=config[keyName]){if(typeof binding==='function'){binding={handler:binding,defaultEventAction:(config.defaultEventAction!==undefined)?config.defaultEventAction:me.defaultEventAction};}
map.addBinding({key:keyCodes[keyName],handler:Ext.Function.bind(me.handleEvent,binding.scope||defaultScope,binding.handler||binding.fn,true),defaultEventAction:(binding.defaultEventAction!==undefined)?binding.defaultEventAction:me.defaultEventAction});}}}
map.disable();if(!config.disabled){map.enable();}},handleEvent:function(keyCode,event,handler){return handler.call(this,event);},disabled:false,defaultEventAction:"stopEvent",forceKeyDown:false,eventName:'keypress',destroy:function(removeEl){this.map.destroy(removeEl);delete this.map;},enable:function(){this.map.enable();this.disabled=false;},disable:function(){this.map.disable();this.disabled=true;},setDisabled:function(disabled){this.map.setDisabled(disabled);this.disabled=disabled;},getKeyEvent:function(forceKeyDown,configuredEventName){if(forceKeyDown||(Ext.EventManager.useKeyDown&&!configuredEventName)){return'keydown';}else{return configuredEventName||this.eventName;}}});Ext.define('Ext.grid.plugin.HeaderResizer',{extend:'Ext.AbstractPlugin',requires:['Ext.dd.DragTracker','Ext.util.Region'],alias:'plugin.gridheaderresizer',disabled:false,config:{dynamic:false},colHeaderCls:Ext.baseCSSPrefix+'column-header',minColWidth:40,maxColWidth:1000,wResizeCursor:'col-resize',eResizeCursor:'col-resize',init:function(headerCt){this.headerCt=headerCt;headerCt.on('render',this.afterHeaderRender,this,{single:true});},destroy:function(){if(this.tracker){this.tracker.destroy();}},afterHeaderRender:function(){var headerCt=this.headerCt,el=headerCt.el;headerCt.mon(el,'mousemove',this.onHeaderCtMouseMove,this);this.tracker=new Ext.dd.DragTracker({disabled:this.disabled,onBeforeStart:Ext.Function.bind(this.onBeforeStart,this),onStart:Ext.Function.bind(this.onStart,this),onDrag:Ext.Function.bind(this.onDrag,this),onEnd:Ext.Function.bind(this.onEnd,this),tolerance:3,autoStart:300,el:el});},onHeaderCtMouseMove:function(e,t){var me=this,prevSiblings,headerEl,overHeader,resizeHeader,resizeHeaderOwnerGrid,ownerGrid;if(me.headerCt.dragging){if(me.activeHd){me.activeHd.el.dom.style.cursor='';delete me.activeHd;}}else{headerEl=e.getTarget('.'+me.colHeaderCls,3,true);if(headerEl){overHeader=Ext.getCmp(headerEl.id);if(overHeader.isOnLeftEdge(e)){resizeHeader=overHeader.previousNode('gridcolumn:not([hidden]):not([isGroupHeader])')
if(resizeHeader){ownerGrid=me.headerCt.up('tablepanel');resizeHeaderOwnerGrid=resizeHeader.up('tablepanel');if(!((resizeHeaderOwnerGrid===ownerGrid)||((ownerGrid.ownerCt.isXType('tablepanel'))&&ownerGrid.ownerCt.view.lockedGrid===resizeHeaderOwnerGrid))){resizeHeader=null;}}}
else if(overHeader.isOnRightEdge(e)){resizeHeader=overHeader;}
else{resizeHeader=null;}
if(resizeHeader){if(resizeHeader.isGroupHeader){prevSiblings=resizeHeader.getGridColumns();resizeHeader=prevSiblings[prevSiblings.length-1];}
if(resizeHeader&&!(resizeHeader.fixed||(resizeHeader.resizable===false)||me.disabled)){me.activeHd=resizeHeader;overHeader.el.dom.style.cursor=me.eResizeCursor;}}else{overHeader.el.dom.style.cursor='';delete me.activeHd;}}}},onBeforeStart:function(e){var t=e.getTarget();this.dragHd=this.activeHd;if(!!this.dragHd&&!Ext.fly(t).hasCls(Ext.baseCSSPrefix+'column-header-trigger')&&!this.headerCt.dragging){this.tracker.constrainTo=this.getConstrainRegion();return true;}else{this.headerCt.dragging=false;return false;}},getConstrainRegion:function(){var me=this,dragHdEl=me.dragHd.el,region=Ext.util.Region.getRegion(dragHdEl),nextHd;if(me.headerCt.forceFit){nextHd=me.dragHd.nextNode('gridcolumn:not([hidden]):not([isGroupHeader])');}
return region.adjust(0,me.headerCt.forceFit?(nextHd?nextHd.getWidth()-me.minColWidth:0):me.maxColWidth-dragHdEl.getWidth(),0,me.minColWidth);},onStart:function(e){var me=this,dragHd=me.dragHd,dragHdEl=dragHd.el,width=dragHdEl.getWidth(),headerCt=me.headerCt,t=e.getTarget(),xy,gridSection,dragHct,firstSection,lhsMarker,rhsMarker,el,offsetLeft,offsetTop,topLeft,markerHeight,top;if(me.dragHd&&!Ext.fly(t).hasCls(Ext.baseCSSPrefix+'column-header-trigger')){headerCt.dragging=true;}
me.origWidth=width;if(!me.dynamic){xy=dragHdEl.getXY();gridSection=headerCt.up('[scrollerOwner]');dragHct=me.dragHd.up(':not([isGroupHeader])');firstSection=dragHct.up();lhsMarker=gridSection.getLhsMarker();rhsMarker=gridSection.getRhsMarker();el=rhsMarker.parent();offsetLeft=el.getLocalX();offsetTop=el.getLocalY();topLeft=el.translatePoints(xy);markerHeight=firstSection.body.getHeight()+headerCt.getHeight();top=topLeft.top-offsetTop;lhsMarker.setTop(top);rhsMarker.setTop(top);lhsMarker.setHeight(markerHeight);rhsMarker.setHeight(markerHeight);lhsMarker.setLeft(topLeft.left-offsetLeft);rhsMarker.setLeft(topLeft.left+width-offsetLeft);}},onDrag:function(e){if(!this.dynamic){var xy=this.tracker.getXY('point'),gridSection=this.headerCt.up('[scrollerOwner]'),rhsMarker=gridSection.getRhsMarker(),el=rhsMarker.parent(),topLeft=el.translatePoints(xy),offsetLeft=el.getLocalX();rhsMarker.setLeft(topLeft.left-offsetLeft);}else{this.doResize();}},onEnd:function(e){this.headerCt.dragging=false;if(this.dragHd){if(!this.dynamic){var dragHd=this.dragHd,gridSection=this.headerCt.up('[scrollerOwner]'),lhsMarker=gridSection.getLhsMarker(),rhsMarker=gridSection.getRhsMarker(),offscreen=-9999;lhsMarker.setLeft(offscreen);rhsMarker.setLeft(offscreen);}
this.doResize();}},doResize:function(){if(this.dragHd){var dragHd=this.dragHd,nextHd,offset=this.tracker.getOffset('point');if(dragHd.flex){delete dragHd.flex;}
Ext.suspendLayouts();dragHd.setWidth(this.origWidth+offset[0]);if(this.headerCt.forceFit){nextHd=dragHd.nextNode('gridcolumn:not([hidden]):not([isGroupHeader])');if(nextHd){delete nextHd.flex;nextHd.setWidth(nextHd.getWidth()-offset[0]);}}
Ext.resumeLayouts(true);}},disable:function(){this.disabled=true;if(this.tracker){this.tracker.disable();}},enable:function(){this.disabled=false;if(this.tracker){this.tracker.enable();}}});Ext.define('Ext.data.writer.Json',{extend:'Ext.data.writer.Writer',alternateClassName:'Ext.data.JsonWriter',alias:'writer.json',root:undefined,encode:false,allowSingle:true,writeRecords:function(request,data){var root=this.root;if(this.allowSingle&&data.length==1){data=data[0];}
if(this.encode){if(root){request.params[root]=Ext.encode(data);}else{Ext.Error.raise('Must specify a root when using encode');}}else{request.jsonData=request.jsonData||{};if(root){request.jsonData[root]=data;}else{request.jsonData=data;}}
return request;}});Ext.require('Ext.fx.CubicBezier',function(){var math=Math,pi=math.PI,pow=math.pow,sin=math.sin,sqrt=math.sqrt,abs=math.abs,backInSeed=1.70158;Ext.define('Ext.fx.Easing',{singleton:true,linear:Ext.identityFn,ease:function(n){var q=0.07813-n/2,alpha=-0.25,Q=sqrt(0.0066+q*q),x=Q-q,X=pow(abs(x),1/3)*(x<0?-1:1),y=-Q-q,Y=pow(abs(y),1/3)*(y<0?-1:1),t=X+Y+0.25;return pow(1-t,2)*3*t*0.1+(1-t)*3*t*t+t*t*t;},easeIn:function(n){return pow(n,1.7);},easeOut:function(n){return pow(n,0.48);},easeInOut:function(n){var q=0.48-n/1.04,Q=sqrt(0.1734+q*q),x=Q-q,X=pow(abs(x),1/3)*(x<0?-1:1),y=-Q-q,Y=pow(abs(y),1/3)*(y<0?-1:1),t=X+Y+0.5;return(1-t)*3*t*t+t*t*t;},backIn:function(n){return n*n*((backInSeed+1)*n-backInSeed);},backOut:function(n){n=n-1;return n*n*((backInSeed+1)*n+backInSeed)+1;},elasticIn:function(n){if(n===0||n===1){return n;}
var p=0.3,s=p/4;return pow(2,-10*n)*sin((n-s)*(2*pi)/p)+1;},elasticOut:function(n){return 1-Ext.fx.Easing.elasticIn(1-n);},bounceIn:function(n){return 1-Ext.fx.Easing.bounceOut(1-n);},bounceOut:function(n){var s=7.5625,p=2.75,l;if(n<(1/p)){l=s*n*n;}else{if(n<(2/p)){n-=(1.5/p);l=s*n*n+0.75;}else{if(n<(2.5/p)){n-=(2.25/p);l=s*n*n+0.9375;}else{n-=(2.625/p);l=s*n*n+0.984375;}}}
return l;}},function(){var easing=Ext.fx.Easing.self,proto=easing.prototype;easing.implement({'back-in':proto.backIn,'back-out':proto.backOut,'ease-in':proto.easeIn,'ease-out':proto.easeOut,'elastic-in':proto.elasticIn,'elastic-out':proto.elasticOut,'bounce-in':proto.bounceIn,'bounce-out':proto.bounceOut,'ease-in-out':proto.easeInOut});});});Ext.define('Ext.fx.target.Element',{extend:'Ext.fx.target.Target',type:'element',getElVal:function(el,attr,val){if(val==undefined){if(attr==='x'){val=el.getX();}else if(attr==='y'){val=el.getY();}else if(attr==='scrollTop'){val=el.getScroll().top;}else if(attr==='scrollLeft'){val=el.getScroll().left;}else if(attr==='height'){val=el.getHeight();}else if(attr==='width'){val=el.getWidth();}else{val=el.getStyle(attr);}}
return val;},getAttr:function(attr,val){var el=this.target;return[[el,this.getElVal(el,attr,val)]];},setAttr:function(targetData){var target=this.target,ln=targetData.length,attrs,attr,o,i,j,ln2;for(i=0;i<ln;i++){attrs=targetData[i].attrs;for(attr in attrs){if(attrs.hasOwnProperty(attr)){ln2=attrs[attr].length;for(j=0;j<ln2;j++){o=attrs[attr][j];this.setElVal(o[0],attr,o[1]);}}}}},setElVal:function(element,attr,value){if(attr==='x'){element.setX(value);}else if(attr==='y'){element.setY(value);}else if(attr==='scrollTop'){element.scrollTo('top',value);}else if(attr==='scrollLeft'){element.scrollTo('left',value);}else if(attr==='width'){element.setWidth(value);}else if(attr==='height'){element.setHeight(value);}else{element.setStyle(attr,value);}}});Ext.define('Ext.fx.target.ElementCSS',{extend:'Ext.fx.target.Element',setAttr:function(targetData,isFirstFrame){var cssArr={attrs:[],duration:[],easing:[]},ln=targetData.length,attributes,attrs,attr,easing,duration,o,i,j,ln2;for(i=0;i<ln;i++){attrs=targetData[i];duration=attrs.duration;easing=attrs.easing;attrs=attrs.attrs;for(attr in attrs){if(Ext.Array.indexOf(cssArr.attrs,attr)==-1){cssArr.attrs.push(attr.replace(/[A-Z]/g,function(v){return'-'+v.toLowerCase();}));cssArr.duration.push(duration+'ms');cssArr.easing.push(easing);}}}
attributes=cssArr.attrs.join(',');duration=cssArr.duration.join(',');easing=cssArr.easing.join(', ');for(i=0;i<ln;i++){attrs=targetData[i].attrs;for(attr in attrs){ln2=attrs[attr].length;for(j=0;j<ln2;j++){o=attrs[attr][j];o[0].setStyle(Ext.supports.CSS3Prefix+'TransitionProperty',isFirstFrame?'':attributes);o[0].setStyle(Ext.supports.CSS3Prefix+'TransitionDuration',isFirstFrame?'':duration);o[0].setStyle(Ext.supports.CSS3Prefix+'TransitionTimingFunction',isFirstFrame?'':easing);o[0].setStyle(attr,o[1]);if(isFirstFrame){o=o[0].dom.offsetWidth;}
else{o[0].on(Ext.supports.CSS3TransitionEnd,function(){this.setStyle(Ext.supports.CSS3Prefix+'TransitionProperty',null);this.setStyle(Ext.supports.CSS3Prefix+'TransitionDuration',null);this.setStyle(Ext.supports.CSS3Prefix+'TransitionTimingFunction',null);},o[0],{single:true});}}}}}});Ext.define('Ext.fx.target.CompositeElement',{extend:'Ext.fx.target.Element',isComposite:true,constructor:function(target){target.id=target.id||Ext.id(null,'ext-composite-');this.callParent([target]);},getAttr:function(attr,val){var out=[],target=this.target,elements=target.elements,length=elements.length,i,el;for(i=0;i<length;i++){el=elements[i];if(el){el=target.getElement(el);out.push([el,this.getElVal(el,attr,val)]);}}
return out;},setAttr:function(targetData){var target=this.target,ln=targetData.length,elements=target.elements,ln3=elements.length,value,k,attrs,attr,o,i,j,ln2;for(i=0;i<ln;i++){attrs=targetData[i].attrs;for(attr in attrs){if(attrs.hasOwnProperty(attr)){ln2=attrs[attr].length;for(j=0;j<ln2;j++){value=attrs[attr][j][1];for(k=0;k<ln3;++k){el=elements[k];if(el){el=target.getElement(el);this.setElVal(el,attr,value);}}}}}}}});Ext.define('Ext.fx.target.Sprite',{extend:'Ext.fx.target.Target',type:'draw',getFromPrim:function(sprite,attr){var obj;switch(attr){case'rotate':case'rotation':obj=sprite.attr.rotation;return{x:obj.x||0,y:obj.y||0,degrees:obj.degrees||0};case'scale':case'scaling':obj=sprite.attr.scaling;return{x:obj.x||1,y:obj.y||1,cx:obj.cx||0,cy:obj.cy||0};case'translate':case'translation':obj=sprite.attr.translation;return{x:obj.x||0,y:obj.y||0};default:return sprite.attr[attr];}},getAttr:function(attr,val){return[[this.target,val!=undefined?val:this.getFromPrim(this.target,attr)]];},setAttr:function(targetData){var ln=targetData.length,spriteArr=[],attrsConf,attr,attrArr,attrs,sprite,idx,value,i,j,x,y,ln2;for(i=0;i<ln;i++){attrsConf=targetData[i].attrs;for(attr in attrsConf){attrArr=attrsConf[attr];ln2=attrArr.length;for(j=0;j<ln2;j++){sprite=attrArr[j][0];attrs=attrArr[j][1];if(attr==='translate'||attr==='translation'){value={x:attrs.x,y:attrs.y};}
else if(attr==='rotate'||attr==='rotation'){x=attrs.x;if(isNaN(x)){x=null;}
y=attrs.y;if(isNaN(y)){y=null;}
value={degrees:attrs.degrees,x:x,y:y};}else if(attr==='scale'||attr==='scaling'){x=attrs.x;if(isNaN(x)){x=null;}
y=attrs.y;if(isNaN(y)){y=null;}
value={x:x,y:y,cx:attrs.cx,cy:attrs.cy};}
else if(attr==='width'||attr==='height'||attr==='x'||attr==='y'){value=parseFloat(attrs);}
else{value=attrs;}
idx=Ext.Array.indexOf(spriteArr,sprite);if(idx==-1){spriteArr.push([sprite,{}]);idx=spriteArr.length-1;}
spriteArr[idx][1][attr]=value;}}}
ln=spriteArr.length;for(i=0;i<ln;i++){spriteArr[i][0].setAttributes(spriteArr[i][1]);}
this.target.redraw();}});Ext.define('Ext.fx.target.CompositeSprite',{extend:'Ext.fx.target.Sprite',getAttr:function(attr,val){var out=[],sprites=[].concat(this.target.items),length=sprites.length,i,sprite;for(i=0;i<length;i++){sprite=sprites[i];out.push([sprite,val!=undefined?val:this.getFromPrim(sprite,attr)]);}
return out;}});Ext.define('Ext.fx.target.CompositeElementCSS',{extend:'Ext.fx.target.CompositeElement',requires:['Ext.fx.target.ElementCSS'],setAttr:function(){return Ext.fx.target.ElementCSS.prototype.setAttr.apply(this,arguments);}});Ext.define('Ext.fx.target.Component',{extend:'Ext.fx.target.Target',type:'component',getPropMethod:{top:function(){return this.getPosition(true)[1];},left:function(){return this.getPosition(true)[0];},x:function(){return this.getPosition()[0];},y:function(){return this.getPosition()[1];},height:function(){return this.getHeight();},width:function(){return this.getWidth();},opacity:function(){return this.el.getStyle('opacity');}},compMethod:{top:'setPosition',left:'setPosition',x:'setPagePosition',y:'setPagePosition',height:'setSize',width:'setSize',opacity:'setOpacity'},getAttr:function(attr,val){return[[this.target,val!==undefined?val:this.getPropMethod[attr].call(this.target)]];},setAttr:function(targetData,isFirstFrame,isLastFrame){var me=this,target=me.target,ln=targetData.length,attrs,attr,o,i,j,meth,targets,left,top,w,h;for(i=0;i<ln;i++){attrs=targetData[i].attrs;for(attr in attrs){targets=attrs[attr].length;meth={setPosition:{},setPagePosition:{},setSize:{},setOpacity:{}};for(j=0;j<targets;j++){o=attrs[attr][j];meth[me.compMethod[attr]].target=o[0];meth[me.compMethod[attr]][attr]=o[1];}
if(meth.setPosition.target){o=meth.setPosition;left=(o.left===undefined)?undefined:parseFloat(o.left);top=(o.top===undefined)?undefined:parseFloat(o.top);o.target.setPosition(left,top);}
if(meth.setPagePosition.target){o=meth.setPagePosition;o.target.setPagePosition(o.x,o.y);}
if(meth.setSize.target){o=meth.setSize;w=(o.width===undefined)?o.target.getWidth():parseFloat(o.width);h=(o.height===undefined)?o.target.getHeight():parseFloat(o.height);if(isLastFrame||me.dynamic){o.target.setSize(w,h);}else{o.target.el.setSize(w,h);}}
if(meth.setOpacity.target){o=meth.setOpacity;o.target.el.setStyle('opacity',o.opacity);}}}}});Ext.define('Ext.XTemplateCompiler',{extend:'Ext.XTemplateParser',useEval:Ext.isGecko,useIndex:Ext.isIE6||Ext.isIE7,useFormat:true,propNameRe:/^[\w\d\$]*$/,compile:function(tpl){var me=this,code=me.generate(tpl);return me.useEval?me.evalTpl(code):(new Function('Ext',code))(Ext);},generate:function(tpl){var me=this,definitions='var fm=Ext.util.Format,ts=Object.prototype.toString;',code;me.maxLevel=0;me.body=['var c0=values, a0='+me.createArrayTest(0)+', p0=parent, n0=xcount, i0=xindex, k0, v;\n'];if(me.definitions){if(typeof me.definitions==='string'){me.definitions=[me.definitions,definitions];}else{me.definitions.push(definitions);}}else{me.definitions=[definitions];}
me.switches=[];me.parse(tpl);me.definitions.push((me.useEval?'$=':'return')+' function ('+me.fnArgs+') {',me.body.join(''),'}');code=me.definitions.join('\n');me.definitions.length=me.body.length=me.switches.length=0;delete me.definitions;delete me.body;delete me.switches;return code;},doText:function(text){var me=this,out=me.body;text=text.replace(me.aposRe,"\\'").replace(me.newLineRe,'\\n');if(me.useIndex){out.push('out[out.length]=\'',text,'\'\n');}else{out.push('out.push(\'',text,'\')\n');}},doExpr:function(expr){var out=this.body;out.push('if ((v='+expr+') != null) out');if(this.useIndex){out.push('[out.length]=v+\'\'\n');}else{out.push('.push(v+\'\')\n');}},doTag:function(tag){var expr=this.parseTag(tag);if(expr){this.doExpr(expr);}else{this.doText('{'+tag+'}');}},doElse:function(){this.body.push('} else {\n');},doEval:function(text){this.body.push(text,'\n');},doIf:function(action,actions){var me=this;if(action==='.'){me.body.push('if (values) {\n');}else if(me.propNameRe.test(action)){me.body.push('if (',me.parseTag(action),') {\n');}
else{me.body.push('if (',me.addFn(action),me.callFn,') {\n');}
if(actions.exec){me.doExec(actions.exec);}},doElseIf:function(action,actions){var me=this;if(action==='.'){me.body.push('else if (values) {\n');}else if(me.propNameRe.test(action)){me.body.push('} else if (',me.parseTag(action),') {\n');}
else{me.body.push('} else if (',me.addFn(action),me.callFn,') {\n');}
if(actions.exec){me.doExec(actions.exec);}},doSwitch:function(action){var me=this;if(action==='.'){me.body.push('switch (values) {\n');}else if(me.propNameRe.test(action)){me.body.push('switch (',me.parseTag(action),') {\n');}
else{me.body.push('switch (',me.addFn(action),me.callFn,') {\n');}
me.switches.push(0);},doCase:function(action){var me=this,cases=Ext.isArray(action)?action:[action],n=me.switches.length-1,match,i;if(me.switches[n]){me.body.push('break;\n');}else{me.switches[n]++;}
for(i=0,n=cases.length;i<n;++i){match=me.intRe.exec(cases[i]);cases[i]=match?match[1]:("'"+cases[i].replace(me.aposRe,"\\'")+"'");}
me.body.push('case ',cases.join(': case '),':\n');},doDefault:function(){var me=this,n=me.switches.length-1;if(me.switches[n]){me.body.push('break;\n');}else{me.switches[n]++;}
me.body.push('default:\n');},doEnd:function(type,actions){var me=this,L=me.level-1;if(type=='for'||type=='foreach'){if(actions.exec){me.doExec(actions.exec);}
me.body.push('}\n');me.body.push('parent=p',L,';values=r',L+1,';xcount=n'+L+';xindex=i',L,'+1;xkey=k',L,';\n');}else if(type=='if'||type=='switch'){me.body.push('}\n');}},doFor:function(action,actions){var me=this,s,L=me.level,up=L-1,parentAssignment;if(action==='.'){s='values';}else if(me.propNameRe.test(action)){s=me.parseTag(action);}
else{s=me.addFn(action)+me.callFn;}
if(me.maxLevel<L){me.maxLevel=L;me.body.push('var ');}
if(action=='.'){parentAssignment='c'+L;}else{parentAssignment='a'+up+'?c'+up+'[i'+up+']:c'+up;}
me.body.push('i',L,'=0,n',L,'=0,c',L,'=',s,',a',L,'=',me.createArrayTest(L),',r',L,'=values,p',L,',k',L,';\n','p',L,'=parent=',parentAssignment,'\n','if (c',L,'){if(a',L,'){n',L,'=c',L,'.length;}else if (c',L,'.isMixedCollection){c',L,'=c',L,'.items;n',L,'=c',L,'.length;}else if(c',L,'.isStore){c',L,'=c',L,'.data.items;n',L,'=c',L,'.length;}else{c',L,'=[c',L,'];n',L,'=1;}}\n','for (xcount=n',L,';i',L,'<n'+L+';++i',L,'){\n','values=c',L,'[i',L,']');if(actions.propName){me.body.push('.',actions.propName);}
me.body.push('\n','xindex=i',L,'+1\n');},doForEach:function(action,actions){var me=this,s,L=me.level,up=L-1,parentAssignment;if(action==='.'){s='values';}else if(me.propNameRe.test(action)){s=me.parseTag(action);}
else{s=me.addFn(action)+me.callFn;}
if(me.maxLevel<L){me.maxLevel=L;me.body.push('var ');}
if(action=='.'){parentAssignment='c'+L;}else{parentAssignment='a'+up+'?c'+up+'[i'+up+']:c'+up;}
me.body.push('i',L,'=-1,n',L,'=0,c',L,'=',s,',a',L,'=',me.createArrayTest(L),',r',L,'=values,p',L,',k',L,';\n','p',L,'=parent=',parentAssignment,'\n','for(k',L,' in c',L,'){\n','xindex=++i',L,'+1;\n','xkey=k',L,';\n','values=c',L,'[k',L,'];');if(actions.propName){me.body.push('.',actions.propName);}},createArrayTest:('isArray'in Array)?function(L){return'Array.isArray(c'+L+')';}:function(L){return'ts.call(c'+L+')==="[object Array]"';},doExec:function(action,actions){var me=this,name='f'+me.definitions.length;me.definitions.push('function '+name+'('+me.fnArgs+') {',' try { with(values) {','  '+action,' }} catch(e) {','Ext.log("XTemplate Error: " + e.message);','}','}');me.body.push(name+me.callFn+'\n');},addFn:function(body){var me=this,name='f'+me.definitions.length;if(body==='.'){me.definitions.push('function '+name+'('+me.fnArgs+') {',' return values','}');}else if(body==='..'){me.definitions.push('function '+name+'('+me.fnArgs+') {',' return parent','}');}else{me.definitions.push('function '+name+'('+me.fnArgs+') {',' try { with(values) {','  return('+body+')',' }} catch(e) {','Ext.log("XTemplate Error: " + e.message);','}','}');}
return name;},parseTag:function(tag){var me=this,m=me.tagRe.exec(tag),name,format,args,math,v;if(!m){return null;}
name=m[1];format=m[2];args=m[3];math=m[4];if(name=='.'){if(!me.validTypes){me.definitions.push('var validTypes={string:1,number:1,boolean:1};');me.validTypes=true;}
v='validTypes[typeof values] || ts.call(values) === "[object Date]" ? values : ""';}
else if(name=='#'){v='xindex';}
else if(name=='$'){v='xkey';}
else if(name.substr(0,7)=="parent."){v=name;}
else if(isNaN(name)&&name.indexOf('-')==-1&&name.indexOf('.')!=-1){v="values."+name;}
else{v="values['"+name+"']";}
if(math){v='('+v+math+')';}
if(format&&me.useFormat){args=args?','+args:"";if(format.substr(0,5)!="this."){format="fm."+format+'(';}else{format+='(';}}else{return v;}
return format+v+args+')';},evalTpl:function($){eval($);return $;},newLineRe:/\r\n|\r|\n/g,aposRe:/[']/g,intRe:/^\s*(\d+)\s*$/,tagRe:/^([\w-\.\#\$]+)(?:\:([\w\.]*)(?:\((.*?)?\))?)?(\s?[\+\-\*\/]\s?[\d\.\+\-\*\/\(\)]+)?$/},function(){var proto=this.prototype;proto.fnArgs='out,values,parent,xindex,xcount,xkey';proto.callFn='.call(this,'+proto.fnArgs+')';});Ext.define('Ext.XTemplate',{extend:'Ext.Template',requires:'Ext.XTemplateCompiler',emptyObj:{},apply:function(values,parent){return this.applyOut(values,[],parent).join('');},applyOut:function(values,out,parent){var me=this,compiler;if(!me.fn){compiler=new Ext.XTemplateCompiler({useFormat:me.disableFormats!==true,definitions:me.definitions});me.fn=compiler.compile(me.html);}
try{me.fn.call(me,out,values,parent||me.emptyObj,1,1);}catch(e){Ext.log('Error: '+e.message);}
return out;},compile:function(){return this;},statics:{getTpl:function(instance,name){var tpl=instance[name],proto;if(tpl&&!tpl.isTemplate){tpl=Ext.ClassManager.dynInstantiate('Ext.XTemplate',tpl);if(instance.hasOwnProperty(name)){instance[name]=tpl;}else{for(proto=instance.self.prototype;proto;proto=proto.superclass){if(proto.hasOwnProperty(name)){proto[name]=tpl;break;}}}}
return tpl||null;}}});Ext.define('Ext.view.TableChunker',{singleton:true,requires:['Ext.XTemplate'],metaTableTpl:['{%if (this.openTableWrap)out.push(this.openTableWrap())%}','<table class="'+Ext.baseCSSPrefix+'grid-table '+Ext.baseCSSPrefix+'grid-table-resizer" border="0" cellspacing="0" cellpadding="0" {[this.embedFullWidth(values)]}>','<tbody>','<tr class="'+Ext.baseCSSPrefix+'grid-header-row">','<tpl for="columns">','<th class="'+Ext.baseCSSPrefix+'grid-col-resizer-{id}" style="width: {width}px; height: 0px;"></th>','</tpl>','</tr>','{[this.openRows()]}','{row}','<tpl for="features">','{[this.embedFeature(values, parent, xindex, xcount)]}','</tpl>','{[this.closeRows()]}','</tbody>','</table>','{%if (this.closeTableWrap)out.push(this.closeTableWrap())%}'],constructor:function(){Ext.XTemplate.prototype.recurse=function(values,reference){return this.apply(reference?values[reference]:values);};},embedFeature:function(values,parent,x,xcount){if(!values.disabled){return values.getFeatureTpl(values,parent,x,xcount);}
return'';},embedFullWidth:function(values){var result='style="width:{fullWidth}px;';if(!values.rowCount){result+='height:1px;';}
return result+'"';},openRows:function(){return'<tpl for="rows">';},closeRows:function(){return'</tpl>';},metaRowTpl:['<tr class="'+Ext.baseCSSPrefix+'grid-row {[this.embedRowCls()]}" {[this.embedRowAttr()]}>','<tpl for="columns">','<td class="{cls} '+Ext.baseCSSPrefix+'grid-cell '+Ext.baseCSSPrefix+'grid-cell-{columnId} {{id}-modified} {{id}-tdCls} {[this.firstOrLastCls(xindex, xcount)]}" {{id}-tdAttr}>','<div {unselectableAttr} class="'+Ext.baseCSSPrefix+'grid-cell-inner {unselectableCls}" style="text-align: {align}; {{id}-style};">{{id}}</div>','</td>','</tpl>','</tr>'],firstOrLastCls:function(xindex,xcount){var result='';if(xindex===1){result=Ext.view.Table.prototype.firstCls;}
if(xindex===xcount){result+=' '+Ext.view.Table.prototype.lastCls;}
return result;},embedRowCls:function(){return'{rowCls}';},embedRowAttr:function(){return'{rowAttr}';},openTableWrap:undefined,closeTableWrap:undefined,getTableTpl:function(cfg,textOnly){var me=this,tpl,tableTplMemberFns={openRows:me.openRows,closeRows:me.closeRows,embedFeature:me.embedFeature,embedFullWidth:me.embedFullWidth,openTableWrap:me.openTableWrap,closeTableWrap:me.closeTableWrap},tplMemberFns={},features=cfg.features,featureCount=features?features.length:0,i=0,memberFns={embedRowCls:me.embedRowCls,embedRowAttr:me.embedRowAttr,firstOrLastCls:me.firstOrLastCls,unselectableAttr:cfg.enableTextSelection?'':'unselectable="on"',unselectableCls:cfg.enableTextSelection?'':Ext.baseCSSPrefix+'unselectable'},metaRowTpl=featureCount?Array.prototype.slice.call(me.metaRowTpl,0):me.metaRowTpl;for(;i<featureCount;i++){if(!features[i].disabled){features[i].mutateMetaRowTpl(metaRowTpl);Ext.apply(memberFns,features[i].getMetaRowTplFragments());Ext.apply(tplMemberFns,features[i].getFragmentTpl());Ext.apply(tableTplMemberFns,features[i].getTableFragments());}}
cfg.row=new Ext.XTemplate(metaRowTpl.join(''),memberFns).applyTemplate(cfg);tpl=new Ext.XTemplate(me.metaTableTpl.join(''),tableTplMemberFns).applyTemplate(cfg);if(!textOnly){tpl=new Ext.XTemplate(tpl,tplMemberFns);}
return tpl;}});Ext.define('Ext.data.reader.Reader',{requires:['Ext.data.ResultSet','Ext.XTemplate'],alternateClassName:['Ext.data.Reader','Ext.data.DataReader'],mixins:{observable:'Ext.util.Observable'},totalProperty:'total',successProperty:'success',root:'',implicitIncludes:true,readRecordsOnFailure:true,isReader:true,applyDefaults:true,lastFieldGeneration:null,constructor:function(config){var me=this;me.mixins.observable.constructor.call(me,config);me.fieldCount=0;me.model=Ext.ModelManager.getModel(me.model);me.accessExpressionFn=Ext.Function.bind(me.createFieldAccessExpression,me);if(me.model&&me.model.prototype.fields){me.buildExtractors();}
this.addEvents('exception');},setModel:function(model,setOnProxy){var me=this;me.model=Ext.ModelManager.getModel(model);if(model){me.buildExtractors(true);}
if(setOnProxy&&me.proxy){me.proxy.setModel(me.model,true);}},read:function(response){var data;if(response){data=response.responseText?this.getResponseData(response):this.readRecords(response);}
return data||this.nullResultSet;},readRecords:function(data){var me=this,success,recordCount,records,root,total,value,message;if(me.lastFieldGeneration!==me.model.prototype.fields.generation){me.buildExtractors(true);}
me.rawData=data;data=me.getData(data);success=true;recordCount=0;records=[];if(me.successProperty){value=me.getSuccess(data);if(value===false||value==='false'){success=false;}}
if(me.messageProperty){message=me.getMessage(data);}
if(me.readRecordsOnFailure||success){root=Ext.isArray(data)?data:me.getRoot(data);if(root){total=root.length;}
if(me.totalProperty){value=parseInt(me.getTotal(data),10);if(!isNaN(value)){total=value;}}
if(root){records=me.extractData(root);recordCount=records.length;}}
return new Ext.data.ResultSet({total:total||recordCount,count:recordCount,records:records,success:success,message:message});},extractData:function(root){var me=this,records=[],Model=me.model,length=root.length,convertedValues,node,record,i;if(!root.length&&Ext.isObject(root)){root=[root];length=1;}
for(i=0;i<length;i++){node=root[i];if(!node.isModel){record=new Model(undefined,me.getId(node),node,convertedValues={});record.phantom=false;me.convertRecordData(convertedValues,node,record);records.push(record);if(me.implicitIncludes){me.readAssociated(record,node);}}else{records.push(node);}}
return records;},readAssociated:function(record,data){var associations=record.associations.items,i=0,length=associations.length,association,associationData,proxy,reader;for(;i<length;i++){association=associations[i];associationData=this.getAssociatedDataRoot(data,association.associationKey||association.name);if(associationData){reader=association.getReader();if(!reader){proxy=association.associatedModel.proxy;if(proxy){reader=proxy.getReader();}else{reader=new this.constructor({model:association.associatedName});}}
association.read(record,reader,associationData);}}},getAssociatedDataRoot:function(data,associationName){return data[associationName];},getFields:function(){return this.model.prototype.fields.items;},getData:Ext.identityFn,getRoot:Ext.identityFn,getResponseData:function(response){Ext.Error.raise("getResponseData must be implemented in the Ext.data.reader.Reader subclass");},onMetaChange:function(meta){var me=this,fields=meta.fields||me.getFields(),newModel,clientIdProperty;me.metaData=meta;me.root=meta.root||me.root;me.idProperty=meta.idProperty||me.idProperty;me.totalProperty=meta.totalProperty||me.totalProperty;me.successProperty=meta.successProperty||me.successProperty;me.messageProperty=meta.messageProperty||me.messageProperty;clientIdProperty=meta.clientIdProperty;if(me.model){me.model.setFields(fields,me.idProperty,clientIdProperty);me.setModel(me.model,true);}
else{newModel=Ext.define("Ext.data.reader.Json-Model"+Ext.id(),{extend:'Ext.data.Model',fields:fields,clientIdProperty:clientIdProperty});if(me.idProperty){newModel.idProperty=me.idProperty;}
me.setModel(newModel,true);}},getIdProperty:function(){return this.idProperty||this.model.prototype.idProperty;},buildExtractors:function(force){var me=this,idProp=me.getIdProperty(),totalProp=me.totalProperty,successProp=me.successProperty,messageProp=me.messageProperty,accessor,idField,map;if(force===true){delete me.convertRecordData;}
if(me.convertRecordData){return;}
if(totalProp){me.getTotal=me.createAccessor(totalProp);}
if(successProp){me.getSuccess=me.createAccessor(successProp);}
if(messageProp){me.getMessage=me.createAccessor(messageProp);}
if(idProp){idField=me.model.prototype.fields.get(idProp);if(idField){map=idField.mapping;idProp=(map!==undefined&&map!==null)?map:idProp;}
accessor=me.createAccessor(idProp);me.getId=function(record){var id=accessor.call(me,record);return(id===undefined||id==='')?null:id;};}else{me.getId=function(){return null;};}
me.convertRecordData=me.buildRecordDataExtractor();me.lastFieldGeneration=me.model.prototype.fields.generation;},recordDataExtractorTemplate:['var me = this\n','    ,fields = me.model.prototype.fields\n','    ,value\n','    ,internalId\n','<tpl for="fields">','    ,__field{#} = fields.get("{name}")\n','</tpl>',';\n','return function(dest, source, record) {\n','<tpl for="fields">','    value = {[ this.createFieldAccessExpression(values, "__field" + xindex, "source") ]};\n','<tpl if="hasCustomConvert">','    dest["{name}"] = value === undefined ? __field{#}.convert(__field{#}.defaultValue, record) : __field{#}.convert(value, record);\n','<tpl elseif="defaultValue !== undefined">','    if (value === undefined) {\n','        if (me.applyDefaults) {\n','<tpl if="convert">','            dest["{name}"] = __field{#}.convert(__field{#}.defaultValue, record);\n','<tpl else>','            dest["{name}"] = __field{#}.defaultValue\n','</tpl>','        };\n','    } else {\n','<tpl if="convert">','        dest["{name}"] = __field{#}.convert(value, record);\n','<tpl else>','        dest["{name}"] = value;\n','</tpl>','    };','<tpl else>','    if (value !== undefined) {\n','<tpl if="convert">','        dest["{name}"] = __field{#}.convert(value, record);\n','<tpl else>','        dest["{name}"] = value;\n','</tpl>','    }\n','</tpl>','</tpl>','<tpl if="clientIdProp">','    if (record && (internalId = {[ this.createFieldAccessExpression(\{mapping: values.clientIdProp\}, null, "source") ]})) {\n','        record.{["internalId"]} = internalId;\n','    }\n','</tpl>','};'],buildRecordDataExtractor:function(){var me=this,modelProto=me.model.prototype,templateData={clientIdProp:modelProto.clientIdProperty,fields:modelProto.fields.items};me.recordDataExtractorTemplate.createFieldAccessExpression=me.accessExpressionFn;return Ext.functionFactory(me.recordDataExtractorTemplate.apply(templateData)).call(me);},destroyReader:function(){var me=this;delete me.proxy;delete me.model;delete me.convertRecordData;delete me.getId;delete me.getTotal;delete me.getSuccess;delete me.getMessage;}},function(){var proto=this.prototype;Ext.apply(proto,{nullResultSet:new Ext.data.ResultSet({total:0,count:0,records:[],success:true,message:''}),recordDataExtractorTemplate:new Ext.XTemplate(proto.recordDataExtractorTemplate)});});Ext.define('Ext.data.reader.Json',{extend:'Ext.data.reader.Reader',alternateClassName:'Ext.data.JsonReader',alias:'reader.json',root:'',metaProperty:'metaData',useSimpleAccessors:false,readRecords:function(data){var me=this,meta;if(me.getMeta){meta=me.getMeta(data);if(meta){me.onMetaChange(meta);}}else if(data.metaData){me.onMetaChange(data.metaData);}
me.jsonData=data;return me.callParent([data]);},getResponseData:function(response){var data,error;try{data=Ext.decode(response.responseText);return this.readRecords(data);}catch(ex){error=new Ext.data.ResultSet({total:0,count:0,records:[],success:false,message:ex.message});this.fireEvent('exception',this,response,error);Ext.Logger.warn('Unable to parse the JSON returned by the server');return error;}},buildExtractors:function(){var me=this,metaProp=me.metaProperty;me.callParent(arguments);if(me.root){me.getRoot=me.createAccessor(me.root);}else{me.getRoot=Ext.identityFn;}
if(metaProp){me.getMeta=me.createAccessor(metaProp);}},extractData:function(root){var recordName=this.record,data=[],length,i;if(recordName){length=root.length;if(!length&&Ext.isObject(root)){length=1;root=[root];}
for(i=0;i<length;i++){data[i]=root[i][recordName];}}else{data=root;}
return this.callParent([data]);},createAccessor:(function(){var re=/[\[\.]/;return function(expr){if(Ext.isEmpty(expr)){return Ext.emptyFn;}
if(Ext.isFunction(expr)){return expr;}
if(this.useSimpleAccessors!==true){var i=String(expr).search(re);if(i>=0){return Ext.functionFactory('obj','return obj'+(i>0?'.':'')+expr);}}
return function(obj){return obj[expr];};};}()),createFieldAccessExpression:(function(){var re=/[\[\.]/;return function(field,fieldVarName,dataName){var me=this,mapping=field.mapping,hasMap=mapping||mapping===0,map=hasMap?mapping:field.name,result,operatorSearch;if(typeof map==='function'){result=fieldVarName+'.mapping('+dataName+', this)';}else if(this.useSimpleAccessors===true||((operatorSearch=String(map).search(re))<0)){if(!hasMap||isNaN(map)){map='"'+map+'"';}
result=dataName+"["+map+"]";}else{result=dataName+(operatorSearch>0?'.':'')+map;}
return result;};}())});Ext.define('Ext.data.reader.Array',{extend:'Ext.data.reader.Json',alternateClassName:'Ext.data.ArrayReader',alias:'reader.array',totalProperty:undefined,successProperty:undefined,createFieldAccessExpression:function(field,fieldVarName,dataName){var index=(field.mapping==null)?field.originalIndex:field.mapping,result;if(typeof index==='function'){result=fieldVarName+'.mapping('+dataName+', this)';}else{if(isNaN(index)){index='"'+index+'"';}
result=dataName+"["+index+"]";}
return result;}});Ext.define('Ext.layout.Layout',{requires:['Ext.XTemplate'],uses:['Ext.layout.Context'],isLayout:true,initialized:false,running:false,autoSizePolicy:{setsWidth:0,setsHeight:0},statics:{layoutsByType:{},create:function(layout,defaultType){var ClassManager=Ext.ClassManager,layoutsByType=this.layoutsByType,alias,className,config,layoutClass,type,load;if(!layout||typeof layout==='string'){type=layout||defaultType;config={};}else if(layout.isLayout){return layout;}else{config=layout;type=layout.type||defaultType;}
if(!(layoutClass=layoutsByType[type])){alias='layout.'+type;className=ClassManager.getNameByAlias(alias);if(!className){load=true;}
layoutClass=ClassManager.get(className);if(load||!layoutClass){return ClassManager.instantiateByAlias(alias,config||{});}
layoutsByType[type]=layoutClass;}
return new layoutClass(config);}},constructor:function(config){var me=this;me.id=Ext.id(null,me.type+'-');Ext.apply(me,config);me.layoutCount=0;},beginLayout:Ext.emptyFn,beginLayoutCycle:function(ownerContext){var me=this,context=me.context,changed;if(me.lastWidthModel!=ownerContext.widthModel){if(me.lastWidthModel){changed=true;}
me.lastWidthModel=ownerContext.widthModel;}
if(me.lastHeightModel!=ownerContext.heightModel){if(me.lastWidthModel){changed=true;}
me.lastHeightModel=ownerContext.heightModel;}
if(changed){(context=ownerContext.context).clearTriggers(me,false);context.clearTriggers(me,true);me.triggerCount=0;}},finishedLayout:function(){this.ownerContext=null;},redoLayout:Ext.emptyFn,undoLayout:Ext.emptyFn,getAnimatePolicy:function(){return this.animatePolicy;},getItemSizePolicy:function(item){return this.autoSizePolicy;},isItemBoxParent:function(itemContext){return false;},isItemLayoutRoot:function(item){var sizeModel=item.getSizeModel(),width=sizeModel.width,height=sizeModel.height;if(!item.componentLayout.lastComponentSize&&(width.calculated||height.calculated)){return false;}
return!width.shrinkWrap&&!height.shrinkWrap;},isItemShrinkWrap:function(item){return item.shrinkWrap;},isRunning:function(){return!!this.ownerContext;},getItemsRenderTree:function(items,renderCfgs){var length=items.length,i,item,itemConfig,result;if(length){result=[];for(i=0;i<length;++i){item=items[i];if(!item.rendered){if(renderCfgs&&(renderCfgs[item.id]!==undefined)){itemConfig=renderCfgs[item.id];}else{this.configureItem(item);itemConfig=item.getRenderTree();if(renderCfgs){renderCfgs[item.id]=itemConfig;}}
if(itemConfig){result.push(itemConfig);}}}}
return result;},finishRender:Ext.emptyFn,finishRenderItems:function(target,items){var length=items.length,i,item;for(i=0;i<length;i++){item=items[i];if(item.rendering){item.finishRender(i);this.afterRenderItem(item);}}},renderChildren:function(){var me=this,items=me.getLayoutItems(),target=me.getRenderTarget();me.renderItems(items,target);},renderItems:function(items,target){var me=this,ln=items.length,i=0,item;if(ln){Ext.suspendLayouts();for(;i<ln;i++){item=items[i];if(item&&!item.rendered){me.renderItem(item,target,i);}else if(!me.isValidParent(item,target,i)){me.moveItem(item,target,i);}else{me.configureItem(item);}}
Ext.resumeLayouts(true);}},isValidParent:function(item,target,position){var itemDom=item.el?item.el.dom:Ext.getDom(item),targetDom=(target&&target.dom)||target,parentNode=itemDom.parentNode,className;if(parentNode){className=parentNode.className;if(className&&className.indexOf(Ext.baseCSSPrefix+'resizable-wrap')!==-1){itemDom=itemDom.parentNode;}}
if(itemDom&&targetDom){if(typeof position=='number'){position=this.getPositionOffset(position);return itemDom===targetDom.childNodes[position];}
return itemDom.parentNode===targetDom;}
return false;},getPositionOffset:function(position){return position;},configureItem:function(item){item.ownerLayout=this;},renderItem:function(item,target,position){var me=this;if(!item.rendered){me.configureItem(item);item.render(target,position);me.afterRenderItem(item);}},moveItem:function(item,target,position){target=target.dom||target;if(typeof position=='number'){position=target.childNodes[position];}
target.insertBefore(item.el.dom,position||null);item.container=Ext.get(target);this.configureItem(item);},onContentChange:function(){this.owner.updateLayout();return true;},initLayout:function(){this.initialized=true;},setOwner:function(owner){this.owner=owner;},getLayoutItems:function(){return[];},afterRenderItem:Ext.emptyFn,onAdd:Ext.emptyFn,onRemove:Ext.emptyFn,onDestroy:Ext.emptyFn,afterRemove:function(item){var me=this,el=item.el,owner=me.owner,removeClasses;if(item.rendered){removeClasses=[].concat(me.itemCls||[]);if(owner.itemCls){removeClasses=Ext.Array.push(removeClasses,owner.itemCls);}
if(removeClasses.length){el.removeCls(removeClasses);}}
delete item.ownerLayout;},destroy:function(){var me=this,target;if(me.targetCls){target=me.getTarget();if(target){target.removeCls(me.targetCls);}}
me.onDestroy();},sortWeightedItems:function(items,reverseProp){for(var i=0,length=items.length;i<length;++i){items[i].$i=i;}
Ext.Array.sort(items,function(item1,item2){var ret=item2.weight-item1.weight;if(!ret){ret=item1.$i-item2.$i;if(item1[reverseProp]){ret=-ret;}}
return ret;});for(i=0;i<length;++i){delete items[i].$i;}}},function(){var Layout=this,sizeModels={},sizeModelsArray=[],i,j,n,pairs,sizeModel;Layout.prototype.sizeModels=Layout.sizeModels=sizeModels;var SizeModel=function(config){var me=this,name=config.name;Ext.apply(Ext.apply(me,defaults),config);me[name]=true;SizeModel[name]=sizeModels[name]=me;me.fixed=!(me.auto=me.natural||me.shrinkWrap);me.ordinal=sizeModelsArray.length;sizeModelsArray.push(me);};Ext.layout.SizeModel=SizeModel;var defaults={calculated:false,configured:false,constrainedMax:false,constrainedMin:false,natural:false,shrinkWrap:false,calculatedFromConfigured:false,calculatedFromNatural:false,calculatedFromShrinkWrap:false,names:null};new SizeModel({name:'calculated'});new SizeModel({name:'configured',names:{width:'width',height:'height'}});new SizeModel({name:'natural'});new SizeModel({name:'shrinkWrap'});new SizeModel({name:'calculatedFromConfigured',configured:true,names:{width:'width',height:'height'}});new SizeModel({name:'calculatedFromNatural',natural:true});new SizeModel({name:'calculatedFromShrinkWrap',shrinkWrap:true});new SizeModel({name:'constrainedMax',configured:true,constrained:true,names:{width:'maxWidth',height:'maxHeight'}});new SizeModel({name:'constrainedMin',configured:true,constrained:true,names:{width:'minWidth',height:'minHeight'}});for(i=0,n=sizeModelsArray.length;i<n;++i){sizeModel=sizeModelsArray[i];sizeModel.pairsByHeightOrdinal=pairs=[];for(j=0;j<n;++j){pairs.push({width:sizeModel,height:sizeModelsArray[j]});}}});Ext.define('Ext.layout.container.Container',{extend:'Ext.layout.Layout',alternateClassName:'Ext.layout.ContainerLayout',mixins:{elementCt:'Ext.util.ElementContainer'},requires:['Ext.XTemplate'],type:'container',manageOverflow:0,beginCollapse:Ext.emptyFn,beginExpand:Ext.emptyFn,animatePolicy:null,childEls:['overflowPadderEl'],renderTpl:['{%this.renderBody(out,values)%}'],usesContainerHeight:true,usesContainerWidth:true,usesHeight:true,usesWidth:true,reserveScrollbar:false,lastOverflowAdjust:{width:0,height:0},constructor:function(){this.callParent(arguments);this.mixins.elementCt.constructor.call(this);},destroy:function(){this.callParent();this.mixins.elementCt.destroy.call(this);},initLayout:function(){var me=this,scrollbarWidth=Ext.getScrollbarSize().width;me.callParent();if(scrollbarWidth&&me.manageOverflow&&!me.hasOwnProperty('lastOverflowAdjust')){if(me.owner.autoScroll||me.reserveScrollbar){me.lastOverflowAdjust={width:scrollbarWidth,height:0};}}},beginLayout:function(ownerContext){this.callParent(arguments);ownerContext.targetContext=ownerContext.getEl('getTarget',this);this.cacheChildItems(ownerContext);},beginLayoutCycle:function(ownerContext,firstCycle){var me=this,padEl=me.overflowPadderEl;me.callParent(arguments);if(!ownerContext.state.overflowAdjust){ownerContext.state.overflowAdjust=me.lastOverflowAdjust;}
if(firstCycle){if(me.usesContainerHeight){++ownerContext.consumersContainerHeight;}
if(me.usesContainerWidth){++ownerContext.consumersContainerWidth;}}
if(padEl){padEl.setStyle('display','none');}},completeLayout:function(ownerContext){this.lastOverflowAdjust=ownerContext.state.overflowAdjust;},cacheChildItems:function(ownerContext){var context=ownerContext.context,childItems=[],items=this.getVisibleItems(),length=items.length,i;ownerContext.childItems=childItems;ownerContext.visibleItems=items;for(i=0;i<length;++i){childItems.push(context.getCmp(items[i]));}},cacheElements:function(){var owner=this.owner;this.applyChildEls(owner.el,owner.id);},calculateContentSize:function(ownerContext,dimensions){var me=this,containerDimensions=(dimensions||0)|me.manageOverflow|((ownerContext.widthModel.shrinkWrap?1:0)|(ownerContext.heightModel.shrinkWrap?2:0)),calcWidth=(containerDimensions&1)||undefined,calcHeight=(containerDimensions&2)||undefined,childItems=ownerContext.childItems,length=childItems.length,contentHeight=0,contentWidth=0,needed=0,props=ownerContext.props,targetXY,targetX,targetY,targetPadding,borders,child,childContext,childX,childY,height,i,margins,width,xy;if(calcWidth){if(isNaN(props.contentWidth)){++needed;}else{calcWidth=undefined;}}
if(calcHeight){if(isNaN(props.contentHeight)){++needed;}else{calcHeight=undefined;}}
if(needed){for(i=0;i<length;++i){childContext=childItems[i];child=childContext.target;height=calcHeight&&childContext.getProp('height');width=calcWidth&&childContext.getProp('width');margins=childContext.getMarginInfo();if((calcWidth&&isNaN(child.x))||(calcHeight&&isNaN(child.y))){xy=child.el.getXY();if(!targetXY){targetXY=ownerContext.targetContext.el.getXY();borders=ownerContext.targetContext.getBorderInfo();targetX=targetXY[0]+borders.left;targetY=targetXY[1]+borders.top;}
childX=xy[0]-targetX;childY=xy[1]-targetY;}else{childX=child.x;childY=child.y;}
height+=margins.bottom;width+=margins.right;contentHeight=Math.max(contentHeight,childY+height);contentWidth=Math.max(contentWidth,childX+width);if(isNaN(contentHeight)&&isNaN(contentWidth)){me.done=false;return;}}
if(calcWidth||calcHeight){targetPadding=ownerContext.targetContext.getPaddingInfo();}
if(calcWidth&&!ownerContext.setContentWidth(contentWidth+targetPadding.right)){me.done=false;}
if(calcHeight&&!ownerContext.setContentHeight(contentHeight+targetPadding.bottom)){me.done=false;}}},calculateOverflow:function(ownerContext,containerSize,dimensions){var me=this,owner=me.owner,manageOverflow=me.manageOverflow,state=ownerContext.state,overflowAdjust=state.overflowAdjust,padWidth,padHeight,padElContext,padding,scrollRangeFlags,overflow,scrollbarSize,contentW,contentH,ownerW,ownerH,scrollbars,xauto,yauto;if(manageOverflow&&!state.secondPass&&!me.reserveScrollbar){if(owner.autoScroll){xauto=yauto=true;}else{if(owner.overflowX){xauto=owner.overflowX=='auto';}else{overflow=ownerContext.targetContext.getStyle('overflow-x');xauto=overflow&&overflow!='hidden'&&overflow!='scroll';}
if(owner.overflowY){yauto=owner.overflowY=='auto';}else{overflow=ownerContext.targetContext.getStyle('overflow-y');yauto=overflow&&overflow!='hidden'&&overflow!='scroll';}}
if(!containerSize.gotWidth){xauto=false;}
if(!containerSize.gotHeight){yauto=false;}
if(xauto||yauto){scrollbarSize=Ext.getScrollbarSize();contentW=ownerContext.peek('contentWidth');contentH=ownerContext.peek('contentHeight');ownerW=containerSize.width;ownerH=containerSize.height;scrollbars=me.getScrollbarsNeeded(ownerW,ownerH,contentW,contentH);state.overflowState=scrollbars;if(typeof dimensions=='number'){scrollbars&=~dimensions;}
overflowAdjust={width:(xauto&&(scrollbars&2))?scrollbarSize.width:0,height:(yauto&&(scrollbars&1))?scrollbarSize.height:0};if(overflowAdjust.width!==me.lastOverflowAdjust.width||overflowAdjust.height!==me.lastOverflowAdjust.height){me.done=false;ownerContext.invalidate({state:{overflowAdjust:overflowAdjust,overflowState:state.overflowState,secondPass:true}});}}}
if(!me.done){return;}
padElContext=ownerContext.padElContext||(ownerContext.padElContext=ownerContext.getEl('overflowPadderEl',me));if(padElContext){scrollbars=state.overflowState;padWidth=containerSize.width;padHeight=0;if(scrollbars){padding=ownerContext.targetContext.getPaddingInfo();scrollRangeFlags=me.scrollRangeFlags;if((scrollbars&2)&&(scrollRangeFlags&1)){padHeight+=padding.bottom;}
if((scrollbars&1)&&(scrollRangeFlags&4)){padWidth+=padding.right;}
padElContext.setProp('display','');padElContext.setSize(padWidth,padHeight);}else{padElContext.setProp('display','none');}}},configureItem:function(item){var me=this,ownerItemCls=me.owner.itemCls,addClasses=[].concat(me.itemCls||[]);me.callParent(arguments);if(ownerItemCls){addClasses=Ext.Array.push(addClasses,ownerItemCls);}
item.addCls(addClasses);},doRenderBody:function(out,renderData){this.renderItems(out,renderData);this.renderContent(out,renderData);},doRenderContainer:function(out,renderData){var me=renderData.$comp.layout,tpl=me.getRenderTpl(),data=me.getRenderData();tpl.applyOut(data,out);},doRenderItems:function(out,renderData){var me=renderData.$layout,tree=me.getRenderTree();if(tree){Ext.DomHelper.generateMarkup(tree,out);}},doRenderPadder:function(out,renderData){var me=renderData.$layout,owner=me.owner,scrollRangeFlags=me.getScrollRangeFlags();if(me.manageOverflow==2){if(scrollRangeFlags&5){out.push('<div id="',owner.id,'-overflowPadderEl" ','style="font-size: 1px; width:1px; height: 1px;');out.push('"></div>');me.scrollRangeFlags=scrollRangeFlags;}}},finishRender:function(){var me=this,target,items;me.callParent();me.cacheElements();target=me.getRenderTarget();items=me.getLayoutItems();if(me.targetCls){me.getTarget().addCls(me.targetCls);}
me.finishRenderItems(target,items);},notifyOwner:function(){this.owner.afterLayout(this);},getContainerSize:function(ownerContext,inDom){var targetContext=ownerContext.targetContext,frameInfo=targetContext.getFrameInfo(),padding=targetContext.getPaddingInfo(),got=0,needed=0,overflowAdjust=ownerContext.state.overflowAdjust,gotWidth,gotHeight,width,height;if(!ownerContext.widthModel.shrinkWrap){++needed;width=inDom?targetContext.getDomProp('width'):targetContext.getProp('width');gotWidth=(typeof width=='number');if(gotWidth){++got;width-=frameInfo.width+padding.width;if(overflowAdjust){width-=overflowAdjust.width;}}}
if(!ownerContext.heightModel.shrinkWrap){++needed;height=inDom?targetContext.getDomProp('height'):targetContext.getProp('height');gotHeight=(typeof height=='number');if(gotHeight){++got;height-=frameInfo.height+padding.height;if(overflowAdjust){height-=overflowAdjust.height;}}}
return{width:width,height:height,needed:needed,got:got,gotAll:got==needed,gotWidth:gotWidth,gotHeight:gotHeight};},getPositionOffset:function(position){if(!this.createsInnerCt){var offset=this.owner.itemNodeOffset;if(offset){position+=offset;}}
return position;},getLayoutItems:function(){var owner=this.owner,items=owner&&owner.items;return(items&&items.items)||[];},getRenderData:function(){var comp=this.owner;return{$comp:comp,$layout:this,ownerId:comp.id};},getRenderedItems:function(){var me=this,target=me.getRenderTarget(),items=me.getLayoutItems(),ln=items.length,renderedItems=[],i,item;for(i=0;i<ln;i++){item=items[i];if(item.rendered&&me.isValidParent(item,target,i)){renderedItems.push(item);}}
return renderedItems;},getRenderTarget:function(){return this.owner.getTargetEl();},getElementTarget:function(){return this.getRenderTarget();},getRenderTpl:function(){var me=this,renderTpl=Ext.XTemplate.getTpl(this,'renderTpl');if(!renderTpl.renderContent){me.owner.setupRenderTpl(renderTpl);}
return renderTpl;},getRenderTree:function(){var result,items=this.owner.items,itemsGen,renderCfgs={};do{itemsGen=items.generation;result=this.getItemsRenderTree(this.getLayoutItems(),renderCfgs);}while(items.generation!==itemsGen);return result;},getScrollbarsNeeded:function(width,height,contentWidth,contentHeight){var scrollbarSize=Ext.getScrollbarSize(),hasWidth=typeof width=='number',hasHeight=typeof height=='number',needHorz=0,needVert=0;if(!scrollbarSize.width){return 0;}
if(hasHeight&&height<contentHeight){needVert=2;width-=scrollbarSize.width;}
if(hasWidth&&width<contentWidth){needHorz=1;if(!needVert&&hasHeight){height-=scrollbarSize.height;if(height<contentHeight){needVert=2;}}}
return needVert+needHorz;},getScrollRangeFlags:(function(){var flags=-1;return function(){if(flags<0){var div=Ext.getBody().createChild({cls:Ext.baseCSSPrefix+'border-box',style:{width:'100px',height:'100px',padding:'10px',overflow:'auto'},children:[{style:{border:'1px solid red',width:'150px',height:'150px',margin:'0 5px 5px 0'}}]}),scrollHeight=div.dom.scrollHeight,scrollWidth=div.dom.scrollWidth,heightFlags={175:0,165:1,170:2,160:3},widthFlags={175:0,165:4,170:8,160:12};flags=(heightFlags[scrollHeight]||0)|(widthFlags[scrollWidth]||0);div.remove();}
return flags;};}()),getTarget:function(){return this.owner.getTargetEl();},getVisibleItems:function(){var target=this.getRenderTarget(),items=this.getLayoutItems(),ln=items.length,visibleItems=[],i,item;for(i=0;i<ln;i++){item=items[i];if(item.rendered&&this.isValidParent(item,target,i)&&item.hidden!==true){visibleItems.push(item);}}
return visibleItems;},setupRenderTpl:function(renderTpl){var me=this;renderTpl.renderBody=me.doRenderBody;renderTpl.renderContainer=me.doRenderContainer;renderTpl.renderItems=me.doRenderItems;renderTpl.renderPadder=me.doRenderPadder;}});Ext.define('Ext.layout.container.Table',{alias:['layout.table'],extend:'Ext.layout.container.Container',alternateClassName:'Ext.layout.TableLayout',monitorResize:false,type:'table',createsInnerCt:true,targetCls:Ext.baseCSSPrefix+'table-layout-ct',tableCls:Ext.baseCSSPrefix+'table-layout',cellCls:Ext.baseCSSPrefix+'table-layout-cell',tableAttrs:null,itemSizePolicy:{setsWidth:0,setsHeight:0},getItemSizePolicy:function(item){return this.itemSizePolicy;},getLayoutItems:function(){var me=this,result=[],items=me.callParent(),item,len=items.length,i;for(i=0;i<len;i++){item=items[i];if(!item.hidden){result.push(item);}}
return result;},getHiddenItems:function(){var result=[],items=this.owner.items.items,len=items.length,i=0,item;for(;i<len;++i){item=items[i];if(item.rendered&&item.hidden){result.push(item);}}
return result;},renderChildren:function(){var me=this,items=me.getLayoutItems(),tbody=me.owner.getTargetEl().child('table',true).tBodies[0],rows=tbody.rows,i=0,len=items.length,hiddenItems=me.getHiddenItems(),cells,curCell,rowIdx,cellIdx,item,trEl,tdEl,itemCt,el;cells=me.calculateCells(items);for(;i<len;i++){curCell=cells[i];rowIdx=curCell.rowIdx;cellIdx=curCell.cellIdx;item=items[i];trEl=rows[rowIdx];if(!trEl){trEl=tbody.insertRow(rowIdx);if(me.trAttrs){trEl.set(me.trAttrs);}}
itemCt=tdEl=Ext.get(trEl.cells[cellIdx]||trEl.insertCell(cellIdx));if(me.needsDivWrap()){itemCt=tdEl.first()||tdEl.createChild({tag:'div'});itemCt.setWidth(null);}
if(!item.rendered){me.renderItem(item,itemCt,0);}else if(!me.isValidParent(item,itemCt,rowIdx,cellIdx,tbody)){me.moveItem(item,itemCt,0);}
if(me.tdAttrs){tdEl.set(me.tdAttrs);}
if(item.tdAttrs){tdEl.set(item.tdAttrs);}
tdEl.set({colSpan:item.colspan||1,rowSpan:item.rowspan||1,id:item.cellId||'',cls:me.cellCls+' '+(item.cellCls||'')});if(!cells[i+1]||cells[i+1].rowIdx!==rowIdx){cellIdx++;while(trEl.cells[cellIdx]){trEl.deleteCell(cellIdx);}}}
rowIdx++;while(tbody.rows[rowIdx]){tbody.deleteRow(rowIdx);}
for(i=0,len=hiddenItems.length;i<len;++i){me.ensureInDocument(hiddenItems[i].getEl());}},ensureInDocument:function(el){var dom=el.dom.parentNode;while(dom){if(dom.tagName.toUpperCase()=='BODY'){return;}
dom=dom.parentNode;}
Ext.getDetachedBody().appendChild(el);},calculate:function(ownerContext){if(!ownerContext.hasDomProp('containerChildrenDone')){this.done=false;}else{var targetContext=ownerContext.targetContext,widthShrinkWrap=ownerContext.widthModel.shrinkWrap,heightShrinkWrap=ownerContext.heightModel.shrinkWrap,shrinkWrap=heightShrinkWrap||widthShrinkWrap,table=shrinkWrap&&targetContext.el.child('table',true),targetPadding=shrinkWrap&&targetContext.getPaddingInfo();if(widthShrinkWrap){ownerContext.setContentWidth(table.offsetWidth+targetPadding.width,true);}
if(heightShrinkWrap){ownerContext.setContentHeight(table.offsetHeight+targetPadding.height,true);}}},finalizeLayout:function(){if(this.needsDivWrap()){var items=this.getLayoutItems(),i,iLen=items.length,item;for(i=0;i<iLen;i++){item=items[i];Ext.fly(item.el.dom.parentNode).setWidth(item.getWidth());}}
if(Ext.isIE6||(Ext.isIEQuirks)){this.owner.getTargetEl().child('table').repaint();}},calculateCells:function(items){var cells=[],rowIdx=0,colIdx=0,cellIdx=0,totalCols=this.columns||Infinity,rowspans=[],i=0,j,len=items.length,item;for(;i<len;i++){item=items[i];while(colIdx>=totalCols||rowspans[colIdx]>0){if(colIdx>=totalCols){colIdx=0;cellIdx=0;rowIdx++;for(j=0;j<totalCols;j++){if(rowspans[j]>0){rowspans[j]--;}}}else{colIdx++;}}
cells.push({rowIdx:rowIdx,cellIdx:cellIdx});for(j=item.colspan||1;j;--j){rowspans[colIdx]=item.rowspan||1;++colIdx;}
++cellIdx;}
return cells;},getRenderTree:function(){var me=this,items=me.getLayoutItems(),cells,rows=[],result=Ext.apply({tag:'table',role:'presentation',cls:me.tableCls,cellspacing:0,cn:{tag:'tbody',cn:rows}},me.tableAttrs),tdAttrs=me.tdAttrs,needsDivWrap=me.needsDivWrap(),i,len=items.length,item,curCell,tr,rowIdx,cellIdx,cell;cells=me.calculateCells(items);for(i=0;i<len;i++){item=items[i];curCell=cells[i];rowIdx=curCell.rowIdx;cellIdx=curCell.cellIdx;tr=rows[rowIdx];if(!tr){tr=rows[rowIdx]={tag:'tr',cn:[]};if(me.trAttrs){Ext.apply(tr,me.trAttrs);}}
cell=tr.cn[cellIdx]={tag:'td'};if(tdAttrs){Ext.apply(cell,tdAttrs);}
Ext.apply(cell,{colSpan:item.colspan||1,rowSpan:item.rowspan||1,id:item.cellId||'',cls:me.cellCls+' '+(item.cellCls||'')});if(needsDivWrap){cell=cell.cn={tag:'div'};}
me.configureItem(item);cell.cn=item.getRenderTree();}
return result;},isValidParent:function(item,target,rowIdx,cellIdx){var tbody,correctCell,table;if(arguments.length===3){table=item.el.up('table');return table&&table.dom.parentNode===target.dom;}
tbody=this.owner.getTargetEl().child('table',true).tBodies[0];correctCell=tbody.rows[rowIdx].cells[cellIdx];return item.el.dom.parentNode===correctCell;},needsDivWrap:function(){return Ext.isOpera10_5;}});Ext.define('Ext.layout.container.Fit',{extend:'Ext.layout.container.Container',alternateClassName:'Ext.layout.FitLayout',alias:'layout.fit',itemCls:Ext.baseCSSPrefix+'fit-item',targetCls:Ext.baseCSSPrefix+'layout-fit',type:'fit',defaultMargins:{top:0,right:0,bottom:0,left:0},manageMargins:true,sizePolicies:{0:{setsWidth:0,setsHeight:0},1:{setsWidth:1,setsHeight:0},2:{setsWidth:0,setsHeight:1},3:{setsWidth:1,setsHeight:1}},getItemSizePolicy:function(item,ownerSizeModel){var sizeModel=ownerSizeModel||this.owner.getSizeModel(),mode=(sizeModel.width.shrinkWrap?0:1)|(sizeModel.height.shrinkWrap?0:2);return this.sizePolicies[mode];},beginLayoutCycle:function(ownerContext,firstCycle){var me=this,resetHeight=me.lastHeightModel&&me.lastHeightModel.calculated,resetWidth=me.lastWidthModel&&me.lastWidthModel.calculated,resetSizes=resetWidth||resetHeight,maxChildMinHeight=0,maxChildMinWidth=0,c,childItems,i,item,length,margins,minHeight,minWidth,style,undef;me.callParent(arguments);if(resetSizes&&ownerContext.targetContext.el.dom.tagName.toUpperCase()!='TD'){resetSizes=resetWidth=resetHeight=false;}
childItems=ownerContext.childItems;length=childItems.length;for(i=0;i<length;++i){item=childItems[i];if(firstCycle){c=item.target;minHeight=c.minHeight;minWidth=c.minWidth;if(minWidth||minHeight){margins=item.marginInfo||item.getMarginInfo();minHeight+=margins.height;minWidth+=margins.height;if(maxChildMinHeight<minHeight){maxChildMinHeight=minHeight;}
if(maxChildMinWidth<minWidth){maxChildMinWidth=minWidth;}}}
if(resetSizes){style=item.el.dom.style;if(resetHeight){style.height='';}
if(resetWidth){style.width='';}}}
if(firstCycle){ownerContext.maxChildMinHeight=maxChildMinHeight;ownerContext.maxChildMinWidth=maxChildMinWidth;}
c=ownerContext.target;ownerContext.overflowX=(!ownerContext.widthModel.shrinkWrap&&ownerContext.maxChildMinWidth&&(c.autoScroll||c.overflowX))||undef;ownerContext.overflowY=(!ownerContext.heightModel.shrinkWrap&&ownerContext.maxChildMinHeight&&(c.autoScroll||c.overflowY))||undef;},calculate:function(ownerContext){var me=this,childItems=ownerContext.childItems,length=childItems.length,containerSize=me.getContainerSize(ownerContext),info={length:length,ownerContext:ownerContext,targetSize:containerSize},shrinkWrapWidth=ownerContext.widthModel.shrinkWrap,shrinkWrapHeight=ownerContext.heightModel.shrinkWrap,overflowX=ownerContext.overflowX,overflowY=ownerContext.overflowY,scrollbars,scrollbarSize,padding,i,contentWidth,contentHeight;if(overflowX||overflowY){scrollbars=me.getScrollbarsNeeded(overflowX&&containerSize.width,overflowY&&containerSize.height,ownerContext.maxChildMinWidth,ownerContext.maxChildMinHeight);if(scrollbars){scrollbarSize=Ext.getScrollbarSize();if(scrollbars&1){containerSize.height-=scrollbarSize.height;}
if(scrollbars&2){containerSize.width-=scrollbarSize.width;}}}
for(i=0;i<length;++i){info.index=i;me.fitItem(childItems[i],info);}
if(shrinkWrapHeight||shrinkWrapWidth){padding=ownerContext.targetContext.getPaddingInfo();if(shrinkWrapWidth){if(overflowY&&!containerSize.gotHeight){me.done=false;}else{contentWidth=info.contentWidth+padding.width;if(scrollbars&2){contentWidth+=scrollbarSize.width;}
if(!ownerContext.setContentWidth(contentWidth)){me.done=false;}}}
if(shrinkWrapHeight){if(overflowX&&!containerSize.gotWidth){me.done=false;}else{contentHeight=info.contentHeight+padding.height;if(scrollbars&1){contentHeight+=scrollbarSize.height;}
if(!ownerContext.setContentHeight(contentHeight)){me.done=false;}}}}},fitItem:function(itemContext,info){var me=this;if(itemContext.invalid){me.done=false;return;}
info.margins=itemContext.getMarginInfo();info.needed=info.got=0;me.fitItemWidth(itemContext,info);me.fitItemHeight(itemContext,info);if(info.got!=info.needed){me.done=false;}},fitItemWidth:function(itemContext,info){var contentWidth,width;if(info.ownerContext.widthModel.shrinkWrap){width=itemContext.getProp('width')+info.margins.width;contentWidth=info.contentWidth;if(contentWidth===undefined){info.contentWidth=width;}else{info.contentWidth=Math.max(contentWidth,width);}}else if(itemContext.widthModel.calculated){++info.needed;if(info.targetSize.gotWidth){++info.got;this.setItemWidth(itemContext,info);}}
this.positionItemX(itemContext,info);},fitItemHeight:function(itemContext,info){var contentHeight,height;if(info.ownerContext.heightModel.shrinkWrap){height=itemContext.getProp('height')+info.margins.height;contentHeight=info.contentHeight;if(contentHeight===undefined){info.contentHeight=height;}else{info.contentHeight=Math.max(contentHeight,height);}}else if(itemContext.heightModel.calculated){++info.needed;if(info.targetSize.gotHeight){++info.got;this.setItemHeight(itemContext,info);}}
this.positionItemY(itemContext,info);},positionItemX:function(itemContext,info){var margins=info.margins;if(info.index||margins.left){itemContext.setProp('x',margins.left);}
if(margins.width){itemContext.setProp('margin-right',margins.width);}},positionItemY:function(itemContext,info){var margins=info.margins;if(info.index||margins.top){itemContext.setProp('y',margins.top);}
if(margins.height){itemContext.setProp('margin-bottom',margins.height);}},setItemHeight:function(itemContext,info){itemContext.setHeight(info.targetSize.height-info.margins.height);},setItemWidth:function(itemContext,info){itemContext.setWidth(info.targetSize.width-info.margins.width);}});Ext.define('Ext.layout.component.Component',{extend:'Ext.layout.Layout',type:'component',isComponentLayout:true,nullBox:{},usesContentHeight:true,usesContentWidth:true,usesHeight:true,usesWidth:true,beginLayoutCycle:function(ownerContext,firstCycle){var me=this,owner=me.owner,ownerCtContext=ownerContext.ownerCtContext,heightModel=ownerContext.heightModel,widthModel=ownerContext.widthModel,body=owner.el.dom===document.body,lastBox=owner.lastBox||me.nullBox,lastSize=owner.el.lastBox||me.nullBox,dirty=!body,ownerLayout,v,widthName,heightName;me.callParent(arguments);if(firstCycle){if(me.usesContentWidth){++ownerContext.consumersContentWidth;}
if(me.usesContentHeight){++ownerContext.consumersContentHeight;}
if(me.usesWidth){++ownerContext.consumersWidth;}
if(me.usesHeight){++ownerContext.consumersHeight;}
if(ownerCtContext&&!ownerCtContext.hasRawContent){ownerLayout=owner.ownerLayout;if(ownerLayout.usesWidth){++ownerContext.consumersWidth;}
if(ownerLayout.usesHeight){++ownerContext.consumersHeight;}}}
if(widthModel.configured){widthName=widthModel.names.width;if(!body){dirty=firstCycle?owner[widthName]!==lastSize.width:widthModel.constrained;}
ownerContext.setWidth(owner[widthName],dirty);}else if(ownerContext.isTopLevel){if(widthModel.calculated){v=lastBox.width;ownerContext.setWidth(v,v!=lastSize.width);}
v=lastBox.x;ownerContext.setProp('x',v,v!=lastSize.x);}
if(heightModel.configured){heightName=heightModel.names.height;if(!body){dirty=firstCycle?owner[heightName]!==lastSize.height:heightModel.constrained;}
ownerContext.setHeight(owner[heightName],dirty);}else if(ownerContext.isTopLevel){if(heightModel.calculated){v=lastBox.height;ownerContext.setHeight(v,v!=lastSize.height);}
v=lastBox.y;ownerContext.setProp('y',v,v!=lastSize.y);}},finishedLayout:function(ownerContext){var me=this,elementChildren=ownerContext.children,owner=me.owner,len,i,elContext,lastBox,props,v;if(elementChildren){len=elementChildren.length;for(i=0;i<len;i++){elContext=elementChildren[i];elContext.el.lastBox=elContext.props;}}
ownerContext.previousSize=me.lastComponentSize;me.lastComponentSize=owner.el.lastBox=props=ownerContext.props;owner.lastBox=lastBox={};v=props.x;if(v!==undefined){lastBox.x=v;}
v=props.y;if(v!==undefined){lastBox.y=v;}
v=props.width;if(v!==undefined){lastBox.width=v;}
v=props.height;if(v!==undefined){lastBox.height=v;}
me.callParent(arguments);},notifyOwner:function(ownerContext){var me=this,currentSize=me.lastComponentSize,prevSize=ownerContext.previousSize,args=[currentSize.width,currentSize.height];if(prevSize){args.push(prevSize.width,prevSize.height);}
me.owner.afterComponentLayout.apply(me.owner,args);},getTarget:function(){return this.owner.el;},getRenderTarget:function(){return this.owner.el;},cacheTargetInfo:function(ownerContext){var me=this,targetInfo=me.targetInfo,target;if(!targetInfo){target=ownerContext.getEl('getTarget',me);me.targetInfo=targetInfo={padding:target.getPaddingInfo(),border:target.getBorderInfo()};}
return targetInfo;},measureAutoDimensions:function(ownerContext,dimensions){var me=this,owner=me.owner,containerLayout=owner.layout,heightModel=ownerContext.heightModel,widthModel=ownerContext.widthModel,boxParent=ownerContext.boxParent,isBoxParent=ownerContext.isBoxParent,props=ownerContext.props,isContainer,ret={gotWidth:false,gotHeight:false,isContainer:(isContainer=!ownerContext.hasRawContent)},hv=dimensions||3,zeroWidth,zeroHeight,needed=0,got=0,ready,size,temp;if(widthModel.shrinkWrap&&ownerContext.consumersContentWidth){++needed;zeroWidth=!(hv&1);if(isContainer){if(zeroWidth){ret.contentWidth=0;ret.gotWidth=true;++got;}else if((ret.contentWidth=ownerContext.getProp('contentWidth'))!==undefined){ret.gotWidth=true;++got;}}else{size=props.contentWidth;if(typeof size=='number'){ret.contentWidth=size;ret.gotWidth=true;++got;}else{if(zeroWidth){ready=true;}else if(!ownerContext.hasDomProp('containerChildrenDone')){ready=false;}else if(isBoxParent||!boxParent||boxParent.widthModel.shrinkWrap){ready=true;}else{ready=boxParent.hasDomProp('width');}
if(ready){if(zeroWidth){temp=0;}else if(containerLayout&&containerLayout.measureContentWidth){temp=containerLayout.measureContentWidth(ownerContext);}else{temp=me.measureContentWidth(ownerContext);}
if(!isNaN(ret.contentWidth=temp)){ownerContext.setContentWidth(temp,true);ret.gotWidth=true;++got;}}}}}else if(widthModel.natural&&ownerContext.consumersWidth){++needed;size=props.width;if(typeof size=='number'){ret.width=size;ret.gotWidth=true;++got;}else{if(isBoxParent||!boxParent){ready=true;}else{ready=boxParent.hasDomProp('width');}
if(ready){if(!isNaN(ret.width=me.measureOwnerWidth(ownerContext))){ownerContext.setWidth(ret.width,false);ret.gotWidth=true;++got;}}}}
if(heightModel.shrinkWrap&&ownerContext.consumersContentHeight){++needed;zeroHeight=!(hv&2);if(isContainer){if(zeroHeight){ret.contentHeight=0;ret.gotHeight=true;++got;}else if((ret.contentHeight=ownerContext.getProp('contentHeight'))!==undefined){ret.gotHeight=true;++got;}}else{size=props.contentHeight;if(typeof size=='number'){ret.contentHeight=size;ret.gotHeight=true;++got;}else{if(zeroHeight){ready=true;}else if(!ownerContext.hasDomProp('containerChildrenDone')){ready=false;}else if(owner.noWrap){ready=true;}else if(!widthModel.shrinkWrap){ready=(ownerContext.bodyContext||ownerContext).hasDomProp('width');}else if(isBoxParent||!boxParent||boxParent.widthModel.shrinkWrap){ready=true;}else{ready=boxParent.hasDomProp('width');}
if(ready){if(zeroHeight){temp=0;}else if(containerLayout&&containerLayout.measureContentHeight){temp=containerLayout.measureContentHeight(ownerContext);}else{temp=me.measureContentHeight(ownerContext);}
if(!isNaN(ret.contentHeight=temp)){ownerContext.setContentHeight(temp,true);ret.gotHeight=true;++got;}}}}}else if(heightModel.natural&&ownerContext.consumersHeight){++needed;size=props.height;if(typeof size=='number'){ret.height=size;ret.gotHeight=true;++got;}else{if(isBoxParent||!boxParent){ready=true;}else{ready=boxParent.hasDomProp('width');}
if(ready){if(!isNaN(ret.height=me.measureOwnerHeight(ownerContext))){ownerContext.setHeight(ret.height,false);ret.gotHeight=true;++got;}}}}
if(boxParent){ownerContext.onBoxMeasured();}
ret.gotAll=got==needed;return ret;},measureContentWidth:function(ownerContext){return ownerContext.el.getWidth()-ownerContext.getFrameInfo().width;},measureContentHeight:function(ownerContext){return ownerContext.el.getHeight()-ownerContext.getFrameInfo().height;},measureOwnerHeight:function(ownerContext){return ownerContext.el.getHeight();},measureOwnerWidth:function(ownerContext){return ownerContext.el.getWidth();}});Ext.define('Ext.layout.component.Auto',{alias:'layout.autocomponent',extend:'Ext.layout.component.Component',type:'autocomponent',setHeightInDom:false,setWidthInDom:false,waitForOuterHeightInDom:false,waitForOuterWidthInDom:false,beginLayoutCycle:function(ownerContext,firstCycle){var me=this,lastWidthModel=me.lastWidthModel,lastHeightModel=me.lastHeightModel,owner=me.owner;me.callParent(arguments);if(lastWidthModel&&lastWidthModel.fixed&&ownerContext.widthModel.shrinkWrap){owner.el.setWidth(null);}
if(lastHeightModel&&lastHeightModel.fixed&&ownerContext.heightModel.shrinkWrap){owner.el.setHeight(null);}},calculate:function(ownerContext){var me=this,measurement=me.measureAutoDimensions(ownerContext),heightModel=ownerContext.heightModel,widthModel=ownerContext.widthModel,width,height;if(measurement.gotWidth){if(widthModel.shrinkWrap){me.publishOwnerWidth(ownerContext,measurement.contentWidth);}else if(me.publishInnerWidth){me.publishInnerWidth(ownerContext,measurement.width);}}else if(!widthModel.auto&&me.publishInnerWidth){width=me.waitForOuterWidthInDom?ownerContext.getDomProp('width'):ownerContext.getProp('width');if(width===undefined){me.done=false;}else{me.publishInnerWidth(ownerContext,width);}}
if(measurement.gotHeight){if(heightModel.shrinkWrap){me.publishOwnerHeight(ownerContext,measurement.contentHeight);}else if(me.publishInnerHeight){me.publishInnerHeight(ownerContext,measurement.height);}}else if(!heightModel.auto&&me.publishInnerHeight){height=me.waitForOuterHeightInDom?ownerContext.getDomProp('height'):ownerContext.getProp('height');if(height===undefined){me.done=false;}else{me.publishInnerHeight(ownerContext,height);}}
if(!measurement.gotAll){me.done=false;}},calculateOwnerHeightFromContentHeight:function(ownerContext,contentHeight){return contentHeight+ownerContext.getFrameInfo().height;},calculateOwnerWidthFromContentWidth:function(ownerContext,contentWidth){return contentWidth+ownerContext.getFrameInfo().width;},publishOwnerHeight:function(ownerContext,contentHeight){var me=this,owner=me.owner,height=me.calculateOwnerHeightFromContentHeight(ownerContext,contentHeight),constrainedHeight,dirty,heightModel;if(isNaN(height)){me.done=false;}else{constrainedHeight=Ext.Number.constrain(height,owner.minHeight,owner.maxHeight);if(constrainedHeight==height){dirty=me.setHeightInDom;}else{heightModel=me.sizeModels[(constrainedHeight<height)?'constrainedMax':'constrainedMin'];height=constrainedHeight;if(ownerContext.heightModel.calculatedFromShrinkWrap){ownerContext.heightModel=heightModel;}else{ownerContext.invalidate({heightModel:heightModel});}}
ownerContext.setHeight(height,dirty);}},publishOwnerWidth:function(ownerContext,contentWidth){var me=this,owner=me.owner,width=me.calculateOwnerWidthFromContentWidth(ownerContext,contentWidth),constrainedWidth,dirty,widthModel;if(isNaN(width)){me.done=false;}else{constrainedWidth=Ext.Number.constrain(width,owner.minWidth,owner.maxWidth);if(constrainedWidth==width){dirty=me.setWidthInDom;}else{widthModel=me.sizeModels[(constrainedWidth<width)?'constrainedMax':'constrainedMin'];width=constrainedWidth;if(ownerContext.widthModel.calculatedFromShrinkWrap){ownerContext.widthModel=widthModel;}else{ownerContext.invalidate({widthModel:widthModel});}}
ownerContext.setWidth(width,dirty);}}});Ext.define('Ext.layout.component.Body',{alias:['layout.body'],extend:'Ext.layout.component.Auto',type:'body',beginLayout:function(ownerContext){this.callParent(arguments);ownerContext.bodyContext=ownerContext.getEl('body');},calculateOwnerHeightFromContentHeight:function(ownerContext,contentHeight){var height=this.callParent(arguments);if(ownerContext.targetContext!=ownerContext){height+=ownerContext.getPaddingInfo().height;}
return height;},calculateOwnerWidthFromContentWidth:function(ownerContext,contentWidth){var width=this.callParent(arguments);if(ownerContext.targetContext!=ownerContext){width+=ownerContext.getPaddingInfo().width;}
return width;},measureContentWidth:function(ownerContext){return ownerContext.bodyContext.setWidth(ownerContext.bodyContext.el.dom.offsetWidth,false);},measureContentHeight:function(ownerContext){return ownerContext.bodyContext.setHeight(ownerContext.bodyContext.el.dom.offsetHeight,false);},publishInnerHeight:function(ownerContext,height){var innerHeight=height-ownerContext.getFrameInfo().height,targetContext=ownerContext.targetContext;if(targetContext!=ownerContext){innerHeight-=ownerContext.getPaddingInfo().height;}
return ownerContext.bodyContext.setHeight(innerHeight,!ownerContext.heightModel.natural);},publishInnerWidth:function(ownerContext,width){var innerWidth=width-ownerContext.getFrameInfo().width,targetContext=ownerContext.targetContext;if(targetContext!=ownerContext){innerWidth-=ownerContext.getPaddingInfo().width;}
ownerContext.bodyContext.setWidth(innerWidth,!ownerContext.widthModel.natural);}});Ext.define('Ext.view.TableLayout',{extend:'Ext.layout.component.Auto',alias:['layout.tableview'],type:'tableview',beginLayout:function(ownerContext){var me=this;me.callParent(arguments);if(me.owner.table.dom){ownerContext.tableContext=ownerContext.getEl(me.owner.table);ownerContext.headerContext=ownerContext.context.getCmp(me.headerCt);}},calculate:function(ownerContext){var me=this;me.callParent(arguments);if(ownerContext.tableContext){if(ownerContext.state.columnWidthsSynced){if(ownerContext.hasProp('columnWidthsFlushed')){ownerContext.tableContext.setHeight(ownerContext.tableContext.el.dom.offsetHeight,false);}else{me.done=false;}}else{if(ownerContext.headerContext.hasProp('columnWidthsDone')){ownerContext.context.queueFlush(me);ownerContext.state.columnWidthsSynced=true;}
me.done=false;}}},measureContentHeight:function(ownerContext){if(!ownerContext.headerContext||ownerContext.hasProp('columnWidthsFlushed')){return this.callParent(arguments);}},flush:function(){var me=this,owner=me.owner,context=me.ownerContext.context,columns=me.headerCt.getGridColumns(),column,i=0,len=columns.length,el=owner.el,tableWidth=0,colWidth;context.currentLayout=me;for(i=0;i<len;i++){column=columns[i];colWidth=column.hidden?0:context.getCmp(column).props.width;tableWidth+=colWidth;el.select(me.getColumnSelector(column)).setWidth(colWidth);}
el.select('table.'+Ext.baseCSSPrefix+'grid-table-resizer').setWidth(tableWidth);me.ownerContext.setProp('columnWidthsFlushed',true);},finishedLayout:function(){var me=this,first;me.callParent(arguments);if(Ext.isGecko){first=me.headerCt.getGridColumns()[0];if(first){first=me.owner.el.down(me.getColumnSelector(first));if(first){first.setStyle('display','none');first.dom.scrollWidth;first.setStyle('display','');}}}},getColumnSelector:function(column){return'th.'+Ext.baseCSSPrefix+'grid-col-resizer-'+column.id;}});Ext.define('Ext.grid.ColumnComponentLayout',{extend:'Ext.layout.component.Auto',alias:'layout.columncomponent',type:'columncomponent',setWidthInDom:true,getContentHeight:function(ownerContext){return this.owner.isGroupHeader?ownerContext.getProp('contentHeight'):this.callParent(arguments);},calculateOwnerHeightFromContentHeight:function(ownerContext,contentHeight){var result=this.callParent(arguments);if(this.owner.isGroupHeader){result+=this.owner.titleEl.dom.offsetHeight;}
return result;},getContentWidth:function(ownerContext){return this.owner.isGroupHeader?ownerContext.getProp('contentWidth'):this.callParent(arguments);},calculateOwnerWidthFromContentWidth:function(ownerContext,contentWidth){return contentWidth+ownerContext.getPaddingInfo().width;}});Ext.define('Ext.layout.component.Dock',{extend:'Ext.layout.component.Component',alias:'layout.dock',alternateClassName:'Ext.layout.component.AbstractDock',type:'dock',initializedBorders:-1,horizontalCollapsePolicy:{width:true,x:true},verticalCollapsePolicy:{height:true,y:true},finishRender:function(){var me=this,target,items;me.callParent();target=me.getRenderTarget();items=me.getDockedItems();me.finishRenderItems(target,items);},isItemBoxParent:function(itemContext){return true;},isItemShrinkWrap:function(item){return true;},dockOpposites:{top:'bottom',right:'left',bottom:'top',left:'right'},handleItemBorders:function(){var me=this,owner=me.owner,borders,docked,oldBorders=me.borders,opposites=me.dockOpposites,currentGeneration=owner.dockedItems.generation,i,ln,item,dock,side,borderItem,collapsed=me.collapsed;if(me.initializedBorders==currentGeneration||(owner.border&&!owner.manageBodyBorders)){return;}
me.initializedBorders=currentGeneration;me.collapsed=false;docked=me.getLayoutItems();me.collapsed=collapsed;borders={top:[],right:[],bottom:[],left:[]};for(i=0,ln=docked.length;i<ln;i++){item=docked[i];dock=item.dock;if(item.ignoreBorderManagement){continue;}
if(!borders[dock].satisfied){borders[dock].push(item);borders[dock].satisfied=true;}
if(!borders.top.satisfied&&opposites[dock]!=='top'){borders.top.push(item);}
if(!borders.right.satisfied&&opposites[dock]!=='right'){borders.right.push(item);}
if(!borders.bottom.satisfied&&opposites[dock]!=='bottom'){borders.bottom.push(item);}
if(!borders.left.satisfied&&opposites[dock]!=='left'){borders.left.push(item);}}
if(oldBorders){for(side in oldBorders){if(oldBorders.hasOwnProperty(side)){ln=oldBorders[side].length;if(!owner.manageBodyBorders){for(i=0;i<ln;i++){borderItem=oldBorders[side][i];if(!borderItem.isDestroyed){borderItem.removeCls(Ext.baseCSSPrefix+'docked-noborder-'+side);}}
if(!oldBorders[side].satisfied&&!owner.bodyBorder){owner.removeBodyCls(Ext.baseCSSPrefix+'docked-noborder-'+side);}}
else if(oldBorders[side].satisfied){owner.setBodyStyle('border-'+side+'-width','');}}}}
for(side in borders){if(borders.hasOwnProperty(side)){ln=borders[side].length;if(!owner.manageBodyBorders){for(i=0;i<ln;i++){borders[side][i].addCls(Ext.baseCSSPrefix+'docked-noborder-'+side);}
if((!borders[side].satisfied&&!owner.bodyBorder)||owner.bodyBorder===false){owner.addBodyCls(Ext.baseCSSPrefix+'docked-noborder-'+side);}}
else if(borders[side].satisfied){owner.setBodyStyle('border-'+side+'-width','1px');}}}
me.borders=borders;},beforeLayoutCycle:function(ownerContext){var me=this,owner=me.owner,shrinkWrap=me.sizeModels.shrinkWrap,collapsedHorz,collapsedVert;if(owner.collapsed){if(owner.collapsedVertical()){collapsedVert=true;ownerContext.measureDimensions=1;}else{collapsedHorz=true;ownerContext.measureDimensions=2;}}
ownerContext.collapsedVert=collapsedVert;ownerContext.collapsedHorz=collapsedHorz;if(collapsedVert){ownerContext.heightModel=shrinkWrap;}else if(collapsedHorz){ownerContext.widthModel=shrinkWrap;}},beginLayout:function(ownerContext){var me=this,owner=me.owner,docked=me.getLayoutItems(),layoutContext=ownerContext.context,dockedItemCount=docked.length,dockedItems,i,item,itemContext,offsets,collapsed;me.callParent(arguments);me.handleItemBorders();collapsed=owner.getCollapsed();if(collapsed!==me.lastCollapsedState&&Ext.isDefined(me.lastCollapsedState)){if(me.owner.collapsed){ownerContext.isCollapsingOrExpanding=1;owner.addClsWithUI(owner.collapsedCls);}else{ownerContext.isCollapsingOrExpanding=2;owner.removeClsWithUI(owner.collapsedCls);ownerContext.lastCollapsedState=me.lastCollapsedState;}}
me.lastCollapsedState=collapsed;ownerContext.dockedItems=dockedItems=[];for(i=0;i<dockedItemCount;i++){item=docked[i];if(item.rendered){itemContext=layoutContext.getCmp(item);itemContext.dockedAt={x:0,y:0};itemContext.offsets=offsets=Ext.Element.parseBox(item.offsets||{});offsets.width=offsets.left+offsets.right;offsets.height=offsets.top+offsets.bottom;dockedItems.push(itemContext);}}
ownerContext.bodyContext=ownerContext.getEl('body');},beginLayoutCycle:function(ownerContext){var me=this,docked=ownerContext.dockedItems,len=docked.length,owner=me.owner,frameBody=owner.frameBody,lastHeightModel=me.lastHeightModel,i,item,dock;me.callParent(arguments);if(lastHeightModel&&lastHeightModel.shrinkWrap&&!ownerContext.heightModel.shrinkWrap&&!me.owner.manageHeight){owner.body.dom.style.marginBottom='';}
if(ownerContext.widthModel.auto){if(ownerContext.widthModel.shrinkWrap){owner.el.setWidth(null);}
owner.body.setWidth(null);if(frameBody){frameBody.setWidth(null);}}
if(ownerContext.heightModel.auto){owner.body.setHeight(null);if(frameBody){frameBody.setHeight(null);}}
if(ownerContext.collapsedVert){ownerContext.setContentHeight(0);}else if(ownerContext.collapsedHorz){ownerContext.setContentWidth(0);}
for(i=0;i<len;i++){item=docked[i].target;dock=item.dock;if(dock=='right'){item.el.setLeft(0);}else if(dock!='left'){continue;}}},calculate:function(ownerContext){var me=this,measure=me.measureAutoDimensions(ownerContext,ownerContext.measureDimensions),state=ownerContext.state,horzDone=state.horzDone,vertDone=state.vertDone,bodyContext=ownerContext.bodyContext,horz,vert,forward,backward;ownerContext.borderInfo||ownerContext.getBorderInfo();ownerContext.paddingInfo||ownerContext.getPaddingInfo();ownerContext.framingInfo||ownerContext.getFraming();bodyContext.borderInfo||bodyContext.getBorderInfo();bodyContext.paddingInfo||bodyContext.getPaddingInfo();horz=!horzDone&&me.createAxis(ownerContext,measure.contentWidth,ownerContext.widthModel,'left','right','x','width','Width',ownerContext.collapsedHorz);vert=!vertDone&&me.createAxis(ownerContext,measure.contentHeight,ownerContext.heightModel,'top','bottom','y','height','Height',ownerContext.collapsedVert);for(forward=0,backward=ownerContext.dockedItems.length;backward--;++forward){if(horz){me.dockChild(ownerContext,horz,backward,forward);}
if(vert){me.dockChild(ownerContext,vert,backward,forward);}}
if(horz&&me.finishAxis(ownerContext,horz)){state.horzDone=horzDone=horz;}
if(vert&&me.finishAxis(ownerContext,vert)){state.vertDone=vertDone=vert;}
if(horzDone&&vertDone&&me.finishConstraints(ownerContext,horzDone,vertDone)){me.finishPositions(ownerContext,horzDone,vertDone);}else{me.done=false;}},createAxis:function(ownerContext,contentSize,sizeModel,dockBegin,dockEnd,posProp,sizeProp,sizePropCap,collapsedAxis){var begin=0,owner=this.owner,maxSize=owner['max'+sizePropCap],minSize=owner['min'+sizePropCap]||0,hasMaxSize=maxSize!=null,setSize='set'+sizePropCap,border,bodyContext,frameSize,padding,end;if(sizeModel.shrinkWrap){if(collapsedAxis){end=0;}else{bodyContext=ownerContext.bodyContext;end=contentSize+bodyContext.borderInfo[sizeProp];}}else{border=ownerContext.borderInfo;frameSize=ownerContext.framingInfo;padding=ownerContext.paddingInfo;end=ownerContext.getProp(sizeProp);end-=border[dockEnd]+padding[dockEnd]+frameSize[dockEnd];begin=border[dockBegin]+padding[dockBegin]+frameSize[dockBegin];}
return{shrinkWrap:sizeModel.shrinkWrap,sizeModel:sizeModel,begin:begin,end:end,collapsed:collapsedAxis,horizontal:posProp=='x',ignoreFrameBegin:false,ignoreFrameEnd:false,initialSize:end-begin,hasMinMaxConstraints:(minSize||hasMaxSize)&&sizeModel.shrinkWrap,minSize:minSize,maxSize:hasMaxSize?maxSize:1e9,bodyPosProp:this.owner.manageHeight?posProp:('margin-'+dockBegin),dockBegin:dockBegin,dockEnd:dockEnd,posProp:posProp,sizeProp:sizeProp,sizePropCap:sizePropCap,setSize:setSize,dockedPixelsEnd:0};},dockChild:function(ownerContext,axis,backward,forward){var me=this,itemContext=ownerContext.dockedItems[axis.shrinkWrap?backward:forward],item=itemContext.target,dock=item.dock,pos;if(item.ignoreParentFrame&&ownerContext.isCollapsingOrExpanding){itemContext.clearMarginCache();}
if(dock==axis.dockBegin){if(axis.shrinkWrap){pos=me.dockOutwardBegin(ownerContext,itemContext,item,axis);}else{pos=me.dockInwardBegin(ownerContext,itemContext,item,axis);}}else if(dock==axis.dockEnd){if(axis.shrinkWrap){pos=me.dockOutwardEnd(ownerContext,itemContext,item,axis);}else{pos=me.dockInwardEnd(ownerContext,itemContext,item,axis);}}else{pos=me.dockStretch(ownerContext,itemContext,item,axis);}
itemContext.dockedAt[axis.posProp]=pos;},dockInwardBegin:function(ownerContext,itemContext,item,axis){var pos=axis.begin,sizeProp=axis.sizeProp,size,dock;if(item.ignoreParentFrame){dock=item.dock;pos-=ownerContext.borderInfo[dock]+ownerContext.paddingInfo[dock]+
ownerContext.framingInfo[dock];}
if(!item.overlay){size=itemContext.getProp(sizeProp)+itemContext.getMarginInfo()[sizeProp];axis.begin+=size;}
return pos;},dockInwardEnd:function(ownerContext,itemContext,item,axis){var sizeProp=axis.sizeProp,size=itemContext.getProp(sizeProp)+itemContext.getMarginInfo()[sizeProp],pos=axis.end-size;if(!item.overlay){axis.end=pos;}
if(item.ignoreParentFrame){pos+=ownerContext.borderInfo[item.dock]+ownerContext.paddingInfo[item.dock]+
ownerContext.framingInfo[item.dock];}
return pos;},dockOutwardBegin:function(ownerContext,itemContext,item,axis){var pos=axis.begin,sizeProp=axis.sizeProp,dock,size;if(axis.collapsed){axis.ignoreFrameBegin=axis.ignoreFrameEnd=true;}else if(item.ignoreParentFrame){dock=item.dock;pos-=ownerContext.borderInfo[dock]+ownerContext.paddingInfo[dock]+
ownerContext.framingInfo[dock];axis.ignoreFrameBegin=true;}
if(!item.overlay){size=itemContext.getProp(sizeProp)+itemContext.getMarginInfo()[sizeProp];pos-=size;axis.begin=pos;}
return pos;},dockOutwardEnd:function(ownerContext,itemContext,item,axis){var pos=axis.end,sizeProp=axis.sizeProp,dock,size;size=itemContext.getProp(sizeProp)+itemContext.getMarginInfo()[sizeProp];if(axis.collapsed){axis.ignoreFrameBegin=axis.ignoreFrameEnd=true;}else if(item.ignoreParentFrame){dock=item.dock;pos+=ownerContext.borderInfo[dock]+ownerContext.paddingInfo[dock]+
ownerContext.framingInfo[dock];axis.ignoreFrameEnd=true;}
if(!item.overlay){axis.end=pos+size;axis.dockedPixelsEnd+=size;}
return pos;},dockStretch:function(ownerContext,itemContext,item,axis){var dock=item.dock,sizeProp=axis.sizeProp,horizontal=dock=='top'||dock=='bottom',offsets=itemContext.offsets,border=ownerContext.borderInfo,padding=ownerContext.paddingInfo,endProp=horizontal?'right':'bottom',startProp=horizontal?'left':'top',pos=axis.begin+offsets[startProp],margin,size,framing;if(item.stretch!==false){size=axis.end-pos-offsets[endProp];if(item.ignoreParentFrame){framing=ownerContext.framingInfo;pos-=border[startProp]+padding[startProp]+framing[startProp];size+=border[sizeProp]+padding[sizeProp]+framing[sizeProp];}
margin=itemContext.getMarginInfo();size-=margin[sizeProp];itemContext[axis.setSize](size);}
return pos;},finishAxis:function(ownerContext,axis){var size=axis.end-axis.begin,setSizeMethod=axis.setSize,beginName=axis.dockBegin,endName=axis.dockEnd,border=ownerContext.borderInfo,padding=ownerContext.paddingInfo,framing=ownerContext.framingInfo,frameSize=padding[beginName]+border[beginName]+framing[beginName],bodyContext=ownerContext.bodyContext,bodyPos,bodySize,dirty;if(axis.shrinkWrap){axis.delta=-axis.begin;bodySize=axis.initialSize;if(axis.ignoreFrameBegin){axis.delta-=border[beginName];bodyPos=-axis.begin-frameSize;}else{size+=frameSize;axis.delta+=padding[beginName]+framing[beginName];bodyPos=-axis.begin;}
if(!axis.ignoreFrameEnd){size+=padding[endName]+border[endName]+framing[endName];}
axis.size=size;if(!axis.horizontal&&!this.owner.manageHeight){dirty=false;}}else{axis.delta=-border[axis.dockBegin];bodySize=size;bodyPos=axis.begin-frameSize;}
bodyContext[setSizeMethod](bodySize,dirty);bodyContext.setProp(axis.bodyPosProp,bodyPos);return!isNaN(size);},finishConstraints:function(ownerContext,horz,vert){var sizeModels=this.sizeModels,publishWidth=horz.shrinkWrap,publishHeight=vert.shrinkWrap,dirty,height,width,heightModel,widthModel,size;if(publishWidth){size=horz.size;if(size<horz.minSize){widthModel=sizeModels.constrainedMin;width=horz.minSize;}else if(size>horz.maxSize){widthModel=sizeModels.constrainedMax;width=horz.maxSize;}else{width=size;}}
if(publishHeight){size=vert.size;if(size<vert.minSize){heightModel=sizeModels.constrainedMin;height=vert.minSize;}else if(size>vert.maxSize){heightModel=sizeModels.constrainedMax;height=vert.maxSize;}else{if(!ownerContext.collapsedVert&&!this.owner.manageHeight){dirty=false;ownerContext.bodyContext.setProp('margin-bottom',vert.dockedPixelsEnd);}
height=size;}}
if(widthModel||heightModel){if(widthModel&&heightModel&&widthModel.constrainedMax&&heightModel.constrainedMin){ownerContext.invalidate({widthModel:widthModel});return false;}
if(!ownerContext.widthModel.calculatedFromShrinkWrap&&!ownerContext.heightModel.calculatedFromShrinkWrap){ownerContext.invalidate({widthModel:widthModel,heightModel:heightModel});return false;}}
if(publishWidth){ownerContext.setWidth(width);if(widthModel){ownerContext.widthModel=widthModel;}}
if(publishHeight){ownerContext.setHeight(height,dirty);if(heightModel){ownerContext.heightModel=heightModel;}}
return true;},finishPositions:function(ownerContext,horz,vert){var dockedItems=ownerContext.dockedItems,length=dockedItems.length,deltaX=horz.delta,deltaY=vert.delta,index,itemContext;for(index=0;index<length;++index){itemContext=dockedItems[index];itemContext.setProp('x',deltaX+itemContext.dockedAt.x);itemContext.setProp('y',deltaY+itemContext.dockedAt.y);}},finishedLayout:function(ownerContext){var me=this,target=ownerContext.target;me.callParent(arguments);if(!ownerContext.animatePolicy){if(ownerContext.isCollapsingOrExpanding===1){target.afterCollapse(false);}else if(ownerContext.isCollapsingOrExpanding===2){target.afterExpand(false);}}},getAnimatePolicy:function(ownerContext){var me=this,lastCollapsedState,policy;if(ownerContext.isCollapsingOrExpanding==1){lastCollapsedState=me.lastCollapsedState;}else if(ownerContext.isCollapsingOrExpanding==2){lastCollapsedState=ownerContext.lastCollapsedState;}
if(lastCollapsedState=='left'||lastCollapsedState=='right'){policy=me.horizontalCollapsePolicy;}else if(lastCollapsedState=='top'||lastCollapsedState=='bottom'){policy=me.verticalCollapsePolicy;}
return policy;},getDockedItems:function(order,beforeBody){var me=this,renderedOnly=(order==='visual'),all=renderedOnly?Ext.ComponentQuery.query('[rendered]',me.owner.dockedItems.items):me.owner.dockedItems.items,sort=all&&all.length&&order!==false,renderOrder,dock,dockedItems,i,isBefore,length;if(beforeBody==null){dockedItems=sort&&!renderedOnly?all.slice():all;}else{dockedItems=[];for(i=0,length=all.length;i<length;++i){dock=all[i].dock;isBefore=(dock=='top'||dock=='left');if(beforeBody?isBefore:!isBefore){dockedItems.push(all[i]);}}
sort=sort&&dockedItems.length;}
if(sort){renderOrder=(order=order||'render')=='render';Ext.Array.sort(dockedItems,function(a,b){var aw,bw;if(renderOrder&&((aw=me.owner.dockOrder[a.dock])!==(bw=me.owner.dockOrder[b.dock]))){if(!(aw+bw)){return aw-bw;}}
aw=me.getItemWeight(a,order);bw=me.getItemWeight(b,order);if((aw!==undefined)&&(bw!==undefined)){return aw-bw;}
return 0;});}
return dockedItems||[];},getItemWeight:function(item,order){var weight=item.weight||this.owner.defaultDockWeights[item.dock];return weight[order]||weight;},getLayoutItems:function(){var me=this,items,itemCount,item,i,result;if(me.owner.collapsed){result=me.owner.getCollapsedDockedItems();}else{items=me.getDockedItems('visual');itemCount=items.length;result=[];for(i=0;i<itemCount;i++){item=items[i];if(!item.hidden){result.push(item);}}}
return result;},measureContentWidth:function(ownerContext){var bodyContext=ownerContext.bodyContext;return bodyContext.el.getWidth()-bodyContext.getBorderInfo().width;},measureContentHeight:function(ownerContext){var bodyContext=ownerContext.bodyContext;return bodyContext.el.getHeight()-bodyContext.getBorderInfo().height;},redoLayout:function(ownerContext){var me=this,owner=me.owner;if(ownerContext.isCollapsingOrExpanding==1){if(owner.reExpander){owner.reExpander.el.show();}
owner.addClsWithUI(owner.collapsedCls);ownerContext.redo(true);}else if(ownerContext.isCollapsingOrExpanding==2){owner.removeClsWithUI(owner.collapsedCls);ownerContext.bodyContext.redo();}},renderChildren:function(){var me=this,items=me.getDockedItems(),target=me.getRenderTarget();me.renderItems(items,target);},renderItems:function(items,target){var me=this,dockedItemCount=items.length,itemIndex=0,correctPosition=0,staticNodeCount=0,targetNodes=me.getRenderTarget().dom.childNodes,targetChildCount=targetNodes.length,i,j,targetChildNode,item;for(i=0,j=0;i<targetChildCount;i++){targetChildNode=targetNodes[i];if(Ext.fly(targetChildNode).hasCls('x-resizable-handle')){break;}
for(j=0;j<dockedItemCount;j++){item=items[j];if(item.rendered&&item.el.dom===targetChildNode){break;}}
if(j===dockedItemCount){staticNodeCount++;}}
for(;itemIndex<dockedItemCount;itemIndex++,correctPosition++){item=items[itemIndex];if(itemIndex===correctPosition&&(item.dock==='right'||item.dock==='bottom')){correctPosition+=staticNodeCount;}
if(item&&!item.rendered){me.renderItem(item,target,correctPosition);}
else if(!me.isValidParent(item,target,correctPosition)){me.moveItem(item,target,correctPosition);}}},undoLayout:function(ownerContext){var me=this,owner=me.owner;if(ownerContext.isCollapsingOrExpanding==1){if(owner.reExpander){owner.reExpander.el.hide();}
owner.removeClsWithUI(owner.collapsedCls);ownerContext.undo(true);}else if(ownerContext.isCollapsingOrExpanding==2){owner.addClsWithUI(owner.collapsedCls);ownerContext.bodyContext.undo();}},sizePolicy:{nostretch:{setsWidth:0,setsHeight:0},stretchH:{setsWidth:1,setsHeight:0},stretchV:{setsWidth:0,setsHeight:1},autoStretchH:{readsWidth:1,setsWidth:1,setsHeight:0},autoStretchV:{readsHeight:1,setsWidth:0,setsHeight:1}},getItemSizePolicy:function(item){var policy=this.sizePolicy,dock,vertical;if(item.stretch===false){return policy.nostretch;}
dock=item.dock;vertical=(dock=='left'||dock=='right');if(vertical){return policy.stretchV;}
return policy.stretchH;},configureItem:function(item,pos){this.callParent(arguments);item.addCls(Ext.baseCSSPrefix+'docked');item.addClsWithUI('docked-'+item.dock);},afterRemove:function(item){this.callParent(arguments);if(this.itemCls){item.el.removeCls(this.itemCls+'-'+item.dock);}
var dom=item.el.dom;if(!item.destroying&&dom){dom.parentNode.removeChild(dom);}
this.childrenChanged=true;}});Ext.define("Ext.form.Labelable",{requires:['Ext.XTemplate'],autoEl:{tag:'table',cellpadding:0},childEls:['labelCell','labelEl','bodyEl','sideErrorCell','errorEl','inputRow','bottomPlaceHolder'],labelableRenderTpl:['<tr id="{id}-inputRow" <tpl if="inFormLayout">id="{id}"</tpl>>','<tpl if="labelOnLeft">','<td id="{id}-labelCell" style="{labelCellStyle}" {labelCellAttrs}>','{beforeLabelTpl}','<label id="{id}-labelEl" {labelAttrTpl}<tpl if="inputId"> for="{inputId}"</tpl> class="{labelCls}"','<tpl if="labelStyle"> style="{labelStyle}"</tpl>>','{beforeLabelTextTpl}','<tpl if="fieldLabel">{fieldLabel}{labelSeparator}</tpl>','{afterLabelTextTpl}','</label>','{afterLabelTpl}','</td>','</tpl>','<td class="{baseBodyCls} {fieldBodyCls}" id="{id}-bodyEl" colspan="{bodyColspan}" role="presentation">','{beforeBodyEl}','<tpl if="labelAlign==\'top\'">','{beforeLabelTpl}','<div id="{id}-labelCell" style="{labelCellStyle}">','<label id="{id}-labelEl" {labelAttrTpl}<tpl if="inputId"> for="{inputId}"</tpl> class="{labelCls}"','<tpl if="labelStyle"> style="{labelStyle}"</tpl>>','{beforeLabelTextTpl}','<tpl if="fieldLabel">{fieldLabel}{labelSeparator}</tpl>','{afterLabelTextTpl}','</label>','</div>','{afterLabelTpl}','</tpl>','{beforeSubTpl}','{[values.$comp.getSubTplMarkup()]}','{afterSubTpl}','<tpl if="msgTarget===\'side\'">','{afterBodyEl}','</td>','<td id="{id}-sideErrorCell" vAlign="{[values.labelAlign===\'top\' && !values.hideLabel ? \'bottom\' : \'middle\']}" style="{[values.autoFitErrors ? \'display:none\' : \'\']}" width="{errorIconWidth}">','<div id="{id}-errorEl" class="{errorMsgCls}" style="display:none;width:{errorIconWidth}px"></div>','</td>','<tpl elseif="msgTarget==\'under\'">','<div id="{id}-errorEl" class="{errorMsgClass}" colspan="2" style="display:none"></div>','{afterBodyEl}','</td>','</tpl>','</tr>',{disableFormats:true}],activeErrorsTpl:undefined,htmlActiveErrorsTpl:['<tpl if="errors && errors.length">','<ul><tpl for="errors"><li>{.}</li></tpl></ul>','</tpl>'],plaintextActiveErrorsTpl:['<tpl if="errors && errors.length">','<tpl for="errors"><tpl if="xindex &gt; 1">\n</tpl>{.}</tpl>','</tpl>'],isFieldLabelable:true,formItemCls:Ext.baseCSSPrefix+'form-item',labelCls:Ext.baseCSSPrefix+'form-item-label',errorMsgCls:Ext.baseCSSPrefix+'form-error-msg',baseBodyCls:Ext.baseCSSPrefix+'form-item-body',fieldBodyCls:'',clearCls:Ext.baseCSSPrefix+'clear',invalidCls:Ext.baseCSSPrefix+'form-invalid',fieldLabel:undefined,labelAlign:'left',labelWidth:100,labelPad:5,labelSeparator:':',hideLabel:false,hideEmptyLabel:true,preventMark:false,autoFitErrors:true,msgTarget:'qtip',noWrap:true,labelableInsertions:['beforeBodyEl','afterBodyEl','beforeLabelTpl','afterLabelTpl','beforeSubTpl','afterSubTpl','beforeLabelTextTpl','afterLabelTextTpl','labelAttrTpl'],labelableRenderProps:['allowBlank','id','labelAlign','fieldBodyCls','baseBodyCls','clearCls','labelSeparator','msgTarget'],initLabelable:function(){var me=this,padding=me.padding;if(padding){me.padding=undefined;me.extraMargins=Ext.Element.parseBox(padding);}
if(!me.activeErrorsTpl){if(me.msgTarget=='title'){me.activeErrorsTpl=me.plaintextActiveErrorsTpl;}else{me.activeErrorsTpl=me.htmlActiveErrorsTpl;}}
me.addCls(me.formItemCls);me.lastActiveError='';me.addEvents('errorchange');},trimLabelSeparator:function(){var me=this,separator=me.labelSeparator,label=me.fieldLabel||'',lastChar=label.substr(label.length-1);return lastChar===separator?label.slice(0,-1):label;},getFieldLabel:function(){return this.trimLabelSeparator();},setFieldLabel:function(label){label=label||'';var me=this,separator=me.labelSeparator,labelEl=me.labelEl;me.fieldLabel=label;if(me.rendered){if(Ext.isEmpty(label)&&me.hideEmptyLabel){labelEl.parent().setDisplayed('none');}else{if(separator){label=me.trimLabelSeparator()+separator;}
labelEl.update(label);labelEl.parent().setDisplayed('');}
me.updateLayout();}},getInsertionRenderData:function(data,names){var i=names.length,name,value;while(i--){name=names[i];value=this[name];if(value){if(typeof value!='string'){if(!value.isTemplate){value=Ext.XTemplate.getTpl(this,name);}
value=value.apply(data);}}
data[name]=value||'';}
return data;},getLabelableRenderData:function(){var me=this,data,tempEl,topLabel=me.labelAlign==='top';if(!Ext.form.Labelable.errorIconWidth){Ext.form.Labelable.errorIconWidth=(tempEl=Ext.resetElement.createChild({style:'position:absolute',cls:Ext.baseCSSPrefix+'form-invalid-icon'})).getWidth();tempEl.remove();}
data=Ext.copyTo({inFormLayout:me.ownerLayout&&me.ownerLayout.type==='form',inputId:me.getInputId(),labelOnLeft:!topLabel,hideLabel:!me.hasVisibleLabel(),fieldLabel:me.getFieldLabel(),labelCellStyle:me.getLabelCellStyle(),labelCellAttrs:me.getLabelCellAttrs(),labelCls:me.getLabelCls(),labelStyle:me.getLabelStyle(),bodyColspan:me.getBodyColspan(),externalError:!me.autoFitErrors,errorMsgCls:me.getErrorMsgCls(),errorIconWidth:Ext.form.Labelable.errorIconWidth},me,me.labelableRenderProps,true);me.getInsertionRenderData(data,me.labelableInsertions);return data;},beforeLabelableRender:function(){var me=this;if(me.ownerLayout){me.addCls(Ext.baseCSSPrefix+me.ownerLayout.type+'-form-item');}},onLabelableRender:function(){var me=this,margins,side,style={};if(me.extraMargins){margins=me.el.getMargin();for(side in margins){if(margins.hasOwnProperty(side)){style['margin-'+side]=(margins[side]+me.extraMargins[side])+'px';}}
me.el.setStyle(style);}},hasVisibleLabel:function(){if(this.hideLabel){return false;}
return!(this.hideEmptyLabel&&!this.getFieldLabel());},getLabelWidth:function(){var me=this;if(!me.hasVisibleLabel()){return 0;}
return me.labelWidth+me.labelPad;},getBodyColspan:function(){var me=this,result;if(me.msgTarget==='side'&&(!me.autoFitErrors||me.hasActiveError())){result=1;}else{result=2;}
if(me.labelAlign!=='top'&&!me.hasVisibleLabel()){result++;}
return result;},getLabelCls:function(){var labelCls=this.labelCls,labelClsExtra=this.labelClsExtra;return labelClsExtra?labelCls+' '+labelClsExtra:labelCls;},getLabelCellStyle:function(){var me=this,hideLabelCell=me.hideLabel||(!me.fieldLabel&&me.hideEmptyLabel);return hideLabelCell?'display:none;':'';},getErrorMsgCls:function(){var me=this,hideLabelCell=(me.hideLabel||(!me.fieldLabel&&me.hideEmptyLabel));return me.errorMsgCls+(!hideLabelCell&&me.labelAlign==='top'?' '+Ext.baseCSSPrefix+'lbl-top-err-icon':'');},getLabelCellAttrs:function(){var me=this,labelAlign=me.labelAlign,result='';if(labelAlign!=='top'){result='valign="top" halign="'+labelAlign+'" width="'+(me.labelWidth+me.labelPad)+'"';}
return result+' class="'+Ext.baseCSSPrefix+'field-label-cell"';},getLabelStyle:function(){var me=this,labelPad=me.labelPad,labelStyle='';if(me.labelAlign!=='top'){if(me.labelWidth){labelStyle='width:'+me.labelWidth+'px;';}
if(labelPad){labelStyle+='margin-right:'+labelPad+'px;';}}
return labelStyle+(me.labelStyle||'');},getSubTplMarkup:function(){return'';},getInputId:function(){return'';},getActiveError:function(){return this.activeError||'';},hasActiveError:function(){return!!this.getActiveError();},setActiveError:function(msg){this.setActiveErrors(msg);},getActiveErrors:function(){return this.activeErrors||[];},setActiveErrors:function(errors){errors=Ext.Array.from(errors);this.activeError=errors[0];this.activeErrors=errors;this.activeError=this.getTpl('activeErrorsTpl').apply({errors:errors});this.renderActiveError();},unsetActiveError:function(){delete this.activeError;delete this.activeErrors;this.renderActiveError();},renderActiveError:function(){var me=this,activeError=me.getActiveError(),hasError=!!activeError;if(activeError!==me.lastActiveError){me.fireEvent('errorchange',me,activeError);me.lastActiveError=activeError;}
if(me.rendered&&!me.isDestroyed&&!me.preventMark){me.el[hasError?'addCls':'removeCls'](me.invalidCls);me.getActionEl().dom.setAttribute('aria-invalid',hasError);if(me.errorEl){me.errorEl.dom.innerHTML=activeError;}}},setFieldDefaults:function(defaults){var me=this,val,key;for(key in defaults){if(defaults.hasOwnProperty(key)){val=defaults[key];if(!me.hasOwnProperty(key)){me[key]=val;}}}}});Ext.define('Ext.layout.component.field.Field',{extend:'Ext.layout.component.Auto',alias:'layout.field',uses:['Ext.tip.QuickTip','Ext.util.TextMetrics','Ext.util.CSS'],type:'field',naturalSizingProp:'size',beginLayout:function(ownerContext){var me=this,owner=me.owner,widthModel=ownerContext.widthModel,ownerNaturalSize=owner[me.naturalSizingProp],width;me.callParent(arguments);ownerContext.labelStrategy=me.getLabelStrategy();ownerContext.errorStrategy=me.getErrorStrategy();ownerContext.labelContext=ownerContext.getEl('labelEl');ownerContext.bodyCellContext=ownerContext.getEl('bodyEl');ownerContext.inputContext=ownerContext.getEl('inputEl');ownerContext.errorContext=ownerContext.getEl('errorEl');if((Ext.isIE6||Ext.isIE7)&&Ext.isStrict&&ownerContext.inputContext){me.ieInputWidthAdjustment=ownerContext.inputContext.getPaddingInfo().width+ownerContext.inputContext.getBorderInfo().width;}
ownerContext.labelStrategy.prepare(ownerContext,owner);ownerContext.errorStrategy.prepare(ownerContext,owner);if(widthModel.shrinkWrap){me.beginLayoutShrinkWrap(ownerContext);}else if(widthModel.natural){if(typeof ownerNaturalSize=='number'&&!owner.inputWidth){me.beginLayoutFixed(ownerContext,(width=ownerNaturalSize*6.5+20),'px');}
else{me.beginLayoutShrinkWrap(ownerContext);}
ownerContext.setWidth(width,false);}else{me.beginLayoutFixed(ownerContext,'100','%');}},beginLayoutFixed:function(ownerContext,width,suffix){var owner=ownerContext.target,inputEl=owner.inputEl,inputWidth=owner.inputWidth;owner.el.setStyle('table-layout','fixed');owner.bodyEl.setStyle('width',width+suffix);if(inputEl){if(inputWidth){inputEl.setStyle('width',inputWidth+'px');}else{inputEl.setStyle('width',owner.stretchInputElFixed?'100%':'');}}
ownerContext.isFixed=true;},beginLayoutShrinkWrap:function(ownerContext){var owner=ownerContext.target,inputEl=owner.inputEl,inputWidth=owner.inputWidth;if(inputEl&&inputEl.dom){inputEl.dom.removeAttribute('size');if(inputWidth){inputEl.setStyle('width',inputWidth+'px');}else{inputEl.setStyle('width','');}}
owner.el.setStyle('table-layout','auto');owner.bodyEl.setStyle('width','');},finishedLayout:function(ownerContext){var owner=this.owner;this.callParent(arguments);ownerContext.labelStrategy.finishedLayout(ownerContext,owner);ownerContext.errorStrategy.finishedLayout(ownerContext,owner);},calculateOwnerHeightFromContentHeight:function(ownerContext,contentHeight){return contentHeight;},measureContentHeight:function(ownerContext){return ownerContext.el.getHeight();},measureContentWidth:function(ownerContext){return ownerContext.el.getWidth();},measureLabelErrorHeight:function(ownerContext){return ownerContext.labelStrategy.getHeight(ownerContext)+
ownerContext.errorStrategy.getHeight(ownerContext);},onFocus:function(){this.getErrorStrategy().onFocus(this.owner);},getLabelStrategy:function(){var me=this,strategies=me.labelStrategies,labelAlign=me.owner.labelAlign;return strategies[labelAlign]||strategies.base;},getErrorStrategy:function(){var me=this,owner=me.owner,strategies=me.errorStrategies,msgTarget=owner.msgTarget;return!owner.preventMark&&Ext.isString(msgTarget)?(strategies[msgTarget]||strategies.elementId):strategies.none;},labelStrategies:(function(){var base={prepare:function(ownerContext,owner){var cls=owner.labelCls+'-'+owner.labelAlign,labelEl=owner.labelEl;if(labelEl){labelEl.addCls(cls);}},getHeight:function(){return 0;},finishedLayout:Ext.emptyFn};return{base:base,top:Ext.applyIf({getHeight:function(ownerContext){var labelContext=ownerContext.labelContext,props=labelContext.props,height=props.height;if(height===undefined){props.height=height=labelContext.el.getHeight();}
return height;}},base),left:base,right:base};}()),errorStrategies:(function(){function showTip(owner){var tip=Ext.layout.component.field.Field.tip,target;if(tip&&tip.isVisible()){target=tip.activeTarget;if(target&&target.el===owner.getActionEl().dom){tip.toFront(true);}}}
var applyIf=Ext.applyIf,emptyFn=Ext.emptyFn,iconCls=Ext.baseCSSPrefix+'form-invalid-icon',iconWidth,base={prepare:function(ownerContext,owner){var el=owner.errorEl;if(el){el.setDisplayed(false);}},getHeight:function(){return 0;},onFocus:emptyFn,finishedLayout:emptyFn};return{none:base,side:applyIf({prepare:function(ownerContext,owner){var errorEl=owner.errorEl,sideErrorCell=owner.sideErrorCell,displayError=owner.hasActiveError(),tempEl;if(!iconWidth){iconWidth=(tempEl=Ext.getBody().createChild({style:'position:absolute',cls:iconCls})).getWidth();tempEl.remove();}
errorEl.addCls(iconCls);errorEl.set({'data-errorqtip':owner.getActiveError()||''});if(owner.autoFitErrors){errorEl.setDisplayed(displayError);}
else{errorEl.setVisible(displayError);}
if(sideErrorCell&&owner.autoFitErrors){sideErrorCell.setDisplayed(displayError);}
owner.bodyEl.dom.colSpan=owner.getBodyColspan();Ext.layout.component.field.Field.initTip();},onFocus:showTip},base),under:applyIf({prepare:function(ownerContext,owner){var errorEl=owner.errorEl,cls=Ext.baseCSSPrefix+'form-invalid-under';errorEl.addCls(cls);errorEl.setDisplayed(owner.hasActiveError());},getHeight:function(ownerContext){var height=0,errorContext,props;if(ownerContext.target.hasActiveError()){errorContext=ownerContext.errorContext;props=errorContext.props;height=props.height;if(height===undefined){props.height=height=errorContext.el.getHeight();}}
return height;}},base),qtip:applyIf({prepare:function(ownerContext,owner){Ext.layout.component.field.Field.initTip();owner.getActionEl().dom.setAttribute('data-errorqtip',owner.getActiveError()||'');},onFocus:showTip},base),title:applyIf({prepare:function(ownerContext,owner){owner.getActionEl().dom.setAttribute('title',owner.getActiveError()||'');}},base),elementId:applyIf({prepare:function(ownerContext,owner){var targetEl=Ext.fly(owner.msgTarget);if(targetEl){targetEl.dom.innerHTML=owner.getActiveError()||'';targetEl.setDisplayed(owner.hasActiveError());}}},base)};}()),statics:{initTip:function(){var tip=this.tip;if(!tip){tip=this.tip=Ext.create('Ext.tip.QuickTip',{baseCls:Ext.baseCSSPrefix+'form-invalid-tip'});tip.tagConfig=Ext.apply({},{attribute:'errorqtip'},tip.tagConfig);}},destroyTip:function(){var tip=this.tip;if(tip){tip.destroy();delete this.tip;}}}});Ext.define('Ext.layout.component.Button',{alias:['layout.button'],extend:'Ext.layout.component.Auto',type:'button',cellClsRE:/-btn-(tl|br)\b/,htmlRE:/<.*>/,constructor:function(){this.callParent(arguments);this.hackWidth=Ext.isIE&&(!Ext.isStrict||Ext.isIE6||Ext.isIE7||Ext.isIE8);this.heightIncludesPadding=Ext.isIE6&&Ext.isStrict;},beginLayout:function(ownerContext){this.callParent(arguments);this.cacheTargetInfo(ownerContext);},beginLayoutCycle:function(ownerContext){var me=this,empty='',owner=me.owner,btnEl=owner.btnEl,btnInnerEl=owner.btnInnerEl,text=owner.text,htmlAutoHeight;me.callParent(arguments);btnInnerEl.setStyle('overflow',empty);if(!ownerContext.widthModel.natural){owner.el.setStyle('width',empty);}
htmlAutoHeight=ownerContext.heightModel.shrinkWrap&&text&&me.htmlRE.test(text);btnEl.setStyle('width',empty);btnEl.setStyle('height',htmlAutoHeight?'auto':empty);btnInnerEl.setStyle('width',empty);btnInnerEl.setStyle('height',htmlAutoHeight?'auto':empty);btnInnerEl.setStyle('line-height',htmlAutoHeight?'normal':empty);btnInnerEl.setStyle('padding-top',empty);owner.btnIconEl.setStyle('width',empty);},calculateOwnerHeightFromContentHeight:function(ownerContext,contentHeight){return contentHeight;},calculateOwnerWidthFromContentWidth:function(ownerContext,contentWidth){return contentWidth;},measureContentWidth:function(ownerContext){var me=this,owner=me.owner,btnEl=owner.btnEl,btnInnerEl=owner.btnInnerEl,text=owner.text,btnFrameWidth,metrics,sizeIconEl,width,btnElContext,btnInnerElContext;if(owner.text&&me.hackWidth&&btnEl){btnFrameWidth=me.btnFrameWidth;if(text.indexOf('>')===-1){text=text.replace(/</g,'&lt;');}
metrics=Ext.util.TextMetrics.measure(btnInnerEl,text);width=metrics.width+btnFrameWidth+me.adjWidth;btnElContext=ownerContext.getEl('btnEl');btnInnerElContext=ownerContext.getEl('btnInnerEl');sizeIconEl=(owner.icon||owner.iconCls)&&(owner.iconAlign=="top"||owner.iconAlign=="bottom");ownerContext.setWidth(width);btnElContext.setWidth(metrics.width+btnFrameWidth);btnInnerElContext.setWidth(metrics.width+btnFrameWidth);if(sizeIconEl){owner.btnIconEl.setWidth(metrics.width+btnFrameWidth);}}else{width=ownerContext.el.getWidth();}
return width;},measureContentHeight:function(ownerContext){var me=this,owner=me.owner,btnInnerEl=owner.btnInnerEl,btnItem=ownerContext.getEl('btnEl'),btnInnerItem=ownerContext.getEl('btnInnerEl'),minTextHeight=me.minTextHeight,adjHeight=me.adjHeight,text=owner.getText(),height,textHeight,topPadding;if(owner.vertical){height=Ext.util.TextMetrics.measure(btnInnerEl,owner.text).width;height+=me.btnFrameHeight+adjHeight;ownerContext.setHeight(height,true,true);}
else{if(text&&me.htmlRE.test(text)){textHeight=btnInnerEl.getHeight();if(textHeight<minTextHeight){topPadding=Math.floor((minTextHeight-textHeight)/2);btnInnerItem.setHeight(minTextHeight-(me.heightIncludesPadding?topPadding:0));btnInnerItem.setProp('padding-top',topPadding);textHeight=minTextHeight;}
height=textHeight+adjHeight;}
else{height=ownerContext.el.getHeight();}}
btnItem.setHeight(height-adjHeight);return height;},publishInnerHeight:function(ownerContext,height){var me=this,owner=me.owner,isNum=Ext.isNumber,btnItem=ownerContext.getEl('btnEl'),btnInnerEl=owner.btnInnerEl,btnInnerItem=ownerContext.getEl('btnInnerEl'),btnHeight=isNum(height)?height-me.adjHeight:height,btnFrameHeight=me.btnFrameHeight,text=owner.getText(),textHeight,paddingTop;btnItem.setHeight(btnHeight);btnInnerItem.setHeight(btnHeight);if(!owner.vertical&&btnHeight>=0){btnInnerItem.setProp('line-height',btnHeight-btnFrameHeight+'px');}
if(text&&me.htmlRE.test(text)){btnInnerItem.setProp('line-height','normal');btnInnerEl.setStyle('line-height','normal');textHeight=Ext.util.TextMetrics.measure(btnInnerEl,text).height;paddingTop=Math.floor(Math.max(btnHeight-btnFrameHeight-textHeight,0)/2);btnInnerItem.setProp('padding-top',me.btnFrameTop+paddingTop);btnInnerItem.setHeight(btnHeight-(me.heightIncludesPadding?paddingTop:0));}},publishInnerWidth:function(ownerContext,width){var me=this,isNum=Ext.isNumber,btnItem=ownerContext.getEl('btnEl'),btnInnerItem=ownerContext.getEl('btnInnerEl'),btnWidth=isNum(width)?width-me.adjWidth:width;btnItem.setWidth(btnWidth);btnInnerItem.setWidth(btnWidth);},clearTargetCache:function(){delete this.adjWidth;},cacheTargetInfo:function(ownerContext){var me=this,owner=me.owner,scale=owner.scale,padding,frameSize,btnWrapPadding,btnInnerEl,innerFrameSize;if(!('adjWidth'in me)||me.lastScale!==scale){if(me.lastScale){owner.btnInnerEl.setStyle('line-height','');}
me.lastScale=scale;padding=ownerContext.getPaddingInfo();frameSize=ownerContext.getFrameInfo();btnWrapPadding=ownerContext.getEl('btnWrap').getPaddingInfo();btnInnerEl=ownerContext.getEl('btnInnerEl');innerFrameSize=btnInnerEl.getPaddingInfo();Ext.apply(me,{adjWidth:btnWrapPadding.width+frameSize.width+padding.width,adjHeight:btnWrapPadding.height+frameSize.height+padding.height,btnFrameWidth:innerFrameSize.width,btnFrameHeight:innerFrameSize.height,btnFrameTop:innerFrameSize.top,minTextHeight:parseInt(btnInnerEl.getStyle('line-height'),10)});}
me.callParent(arguments);},finishedLayout:function(){var owner=this.owner;this.callParent(arguments);if(Ext.isWebKit){owner.el.dom.offsetWidth;}}});Ext.define('Ext.util.AbstractMixedCollection',{requires:['Ext.util.Filter'],mixins:{observable:'Ext.util.Observable'},isMixedCollection:true,generation:0,constructor:function(allowFunctions,keyFn){var me=this;me.items=[];me.map={};me.keys=[];me.length=0;me.allowFunctions=allowFunctions===true;if(keyFn){me.getKey=keyFn;}
me.mixins.observable.constructor.call(me);},allowFunctions:false,add:function(key,obj){var me=this,myObj=obj,myKey=key,old;if(arguments.length==1){myObj=myKey;myKey=me.getKey(myObj);}
if(typeof myKey!='undefined'&&myKey!==null){old=me.map[myKey];if(typeof old!='undefined'){return me.replace(myKey,myObj);}
me.map[myKey]=myObj;}
me.generation++;me.length++;me.items.push(myObj);me.keys.push(myKey);if(me.hasListeners.add){me.fireEvent('add',me.length-1,myObj,myKey);}
return myObj;},getKey:function(o){return o.id;},replace:function(key,o){var me=this,old,index;if(arguments.length==1){o=arguments[0];key=me.getKey(o);}
old=me.map[key];if(typeof key=='undefined'||key===null||typeof old=='undefined'){return me.add(key,o);}
me.generation++;index=me.indexOfKey(key);me.items[index]=o;me.map[key]=o;if(me.hasListeners.replace){me.fireEvent('replace',key,old,o);}
return o;},addAll:function(objs){var me=this,i=0,args,len,key;if(arguments.length>1||Ext.isArray(objs)){args=arguments.length>1?arguments:objs;for(len=args.length;i<len;i++){me.add(args[i]);}}else{for(key in objs){if(objs.hasOwnProperty(key)){if(me.allowFunctions||typeof objs[key]!='function'){me.add(key,objs[key]);}}}}},each:function(fn,scope){var items=[].concat(this.items),i=0,len=items.length,item;for(;i<len;i++){item=items[i];if(fn.call(scope||item,item,i,len)===false){break;}}},eachKey:function(fn,scope){var keys=this.keys,items=this.items,i=0,len=keys.length;for(;i<len;i++){fn.call(scope||window,keys[i],items[i],i,len);}},findBy:function(fn,scope){var keys=this.keys,items=this.items,i=0,len=items.length;for(;i<len;i++){if(fn.call(scope||window,items[i],keys[i])){return items[i];}}
return null;},find:function(){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.util.MixedCollection: find has been deprecated. Use findBy instead.');}
return this.findBy.apply(this,arguments);},insert:function(index,key,obj){var me=this,myKey=key,myObj=obj;if(arguments.length==2){myObj=myKey;myKey=me.getKey(myObj);}
if(me.containsKey(myKey)){me.suspendEvents();me.removeAtKey(myKey);me.resumeEvents();}
if(index>=me.length){return me.add(myKey,myObj);}
me.generation++;me.length++;Ext.Array.splice(me.items,index,0,myObj);if(typeof myKey!='undefined'&&myKey!==null){me.map[myKey]=myObj;}
Ext.Array.splice(me.keys,index,0,myKey);if(me.hasListeners.add){me.fireEvent('add',index,myObj,myKey);}
return myObj;},remove:function(o){this.generation++;return this.removeAt(this.indexOf(o));},removeAll:function(items){items=[].concat(items);var i,iLen=items.length;for(i=0;i<iLen;i++){this.remove(items[i]);}
return this;},removeAt:function(index){var me=this,o,key;if(index<me.length&&index>=0){me.length--;o=me.items[index];Ext.Array.erase(me.items,index,1);key=me.keys[index];if(typeof key!='undefined'){delete me.map[key];}
Ext.Array.erase(me.keys,index,1);if(me.hasListeners.remove){me.fireEvent('remove',o,key);}
me.generation++;return o;}
return false;},removeAtKey:function(key){return this.removeAt(this.indexOfKey(key));},getCount:function(){return this.length;},indexOf:function(o){return Ext.Array.indexOf(this.items,o);},indexOfKey:function(key){return Ext.Array.indexOf(this.keys,key);},get:function(key){var me=this,mk=me.map[key],item=mk!==undefined?mk:(typeof key=='number')?me.items[key]:undefined;return typeof item!='function'||me.allowFunctions?item:null;},getAt:function(index){return this.items[index];},getByKey:function(key){return this.map[key];},contains:function(o){return typeof this.map[this.getKey(o)]!='undefined';},containsKey:function(key){return typeof this.map[key]!='undefined';},clear:function(){var me=this;me.length=0;me.items=[];me.keys=[];me.map={};me.generation++;if(me.hasListeners.clear){me.fireEvent('clear');}},first:function(){return this.items[0];},last:function(){return this.items[this.length-1];},sum:function(property,root,start,end){var values=this.extractValues(property,root),length=values.length,sum=0,i;start=start||0;end=(end||end===0)?end:length-1;for(i=start;i<=end;i++){sum+=values[i];}
return sum;},collect:function(property,root,allowNull){var values=this.extractValues(property,root),length=values.length,hits={},unique=[],value,strValue,i;for(i=0;i<length;i++){value=values[i];strValue=String(value);if((allowNull||!Ext.isEmpty(value))&&!hits[strValue]){hits[strValue]=true;unique.push(value);}}
return unique;},extractValues:function(property,root){var values=this.items;if(root){values=Ext.Array.pluck(values,root);}
return Ext.Array.pluck(values,property);},getRange:function(start,end){var me=this,items=me.items,range=[],i;if(items.length<1){return range;}
start=start||0;end=Math.min(typeof end=='undefined'?me.length-1:end,me.length-1);if(start<=end){for(i=start;i<=end;i++){range[range.length]=items[i];}}else{for(i=start;i>=end;i--){range[range.length]=items[i];}}
return range;},filter:function(property,value,anyMatch,caseSensitive){var filters=[];if(Ext.isString(property)){filters.push(new Ext.util.Filter({property:property,value:value,anyMatch:anyMatch,caseSensitive:caseSensitive}));}else if(Ext.isArray(property)||property instanceof Ext.util.Filter){filters=filters.concat(property);}
return this.filterBy(Ext.util.Filter.createFilterFn(filters));},filterBy:function(fn,scope){var me=this,newMC=new this.self(),keys=me.keys,items=me.items,length=items.length,i;newMC.getKey=me.getKey;for(i=0;i<length;i++){if(fn.call(scope||me,items[i],keys[i])){newMC.add(keys[i],items[i]);}}
return newMC;},findIndex:function(property,value,start,anyMatch,caseSensitive){if(Ext.isEmpty(value,false)){return-1;}
value=this.createValueMatcher(value,anyMatch,caseSensitive);return this.findIndexBy(function(o){return o&&value.test(o[property]);},null,start);},findIndexBy:function(fn,scope,start){var me=this,keys=me.keys,items=me.items,i=start||0,len=items.length;for(;i<len;i++){if(fn.call(scope||me,items[i],keys[i])){return i;}}
return-1;},createValueMatcher:function(value,anyMatch,caseSensitive,exactMatch){if(!value.exec){var er=Ext.String.escapeRegex;value=String(value);if(anyMatch===true){value=er(value);}else{value='^'+er(value);if(exactMatch===true){value+='$';}}
value=new RegExp(value,caseSensitive?'':'i');}
return value;},clone:function(){var me=this,copy=new this.self(),keys=me.keys,items=me.items,i=0,len=items.length;for(;i<len;i++){copy.add(keys[i],items[i]);}
copy.getKey=me.getKey;return copy;}});Ext.define('Ext.util.MixedCollection',{extend:'Ext.util.AbstractMixedCollection',mixins:{sortable:'Ext.util.Sortable'},constructor:function(){var me=this;me.callParent(arguments);me.addEvents('sort');me.mixins.sortable.initSortable.call(me);},doSort:function(sorterFn){this.sortBy(sorterFn);},_sort:function(property,dir,fn){var me=this,i,len,dsc=String(dir).toUpperCase()=='DESC'?-1:1,c=[],keys=me.keys,items=me.items;fn=fn||function(a,b){return a-b;};for(i=0,len=items.length;i<len;i++){c[c.length]={key:keys[i],value:items[i],index:i};}
Ext.Array.sort(c,function(a,b){var v=fn(a[property],b[property])*dsc;if(v===0){v=(a.index<b.index?-1:1);}
return v;});for(i=0,len=c.length;i<len;i++){items[i]=c[i].value;keys[i]=c[i].key;}
me.fireEvent('sort',me);},sortBy:function(sorterFn){var me=this,items=me.items,keys=me.keys,length=items.length,temp=[],i;for(i=0;i<length;i++){temp[i]={key:keys[i],value:items[i],index:i};}
Ext.Array.sort(temp,function(a,b){var v=sorterFn(a.value,b.value);if(v===0){v=(a.index<b.index?-1:1);}
return v;});for(i=0;i<length;i++){items[i]=temp[i].value;keys[i]=temp[i].key;}
me.fireEvent('sort',me,items,keys);},findInsertionIndex:function(newItem,sorterFn){var me=this,items=me.items,start=0,end=items.length-1,middle,comparison;if(!sorterFn){sorterFn=me.generateComparator();}
while(start<=end){middle=(start+end)>>1;comparison=sorterFn(newItem,items[middle]);if(comparison>=0){start=middle+1;}else if(comparison<0){end=middle-1;}}
return start;},reorder:function(mapping){var me=this,items=me.items,index=0,length=items.length,order=[],remaining=[],oldIndex;me.suspendEvents();for(oldIndex in mapping){order[mapping[oldIndex]]=items[oldIndex];}
for(index=0;index<length;index++){if(mapping[index]==undefined){remaining.push(items[index]);}}
for(index=0;index<length;index++){if(order[index]==undefined){order[index]=remaining.shift();}}
me.clear();me.addAll(order);me.resumeEvents();me.fireEvent('sort',me);},sortByKey:function(dir,fn){this._sort('key',dir,fn||function(a,b){var v1=String(a).toUpperCase(),v2=String(b).toUpperCase();return v1>v2?1:(v1<v2?-1:0);});}});Ext.define('Ext.data.StoreManager',{extend:'Ext.util.MixedCollection',alternateClassName:['Ext.StoreMgr','Ext.data.StoreMgr','Ext.StoreManager'],singleton:true,uses:['Ext.data.ArrayStore'],register:function(){for(var i=0,s;(s=arguments[i]);i++){this.add(s);}},unregister:function(){for(var i=0,s;(s=arguments[i]);i++){this.remove(this.lookup(s));}},lookup:function(store){if(Ext.isArray(store)){var fields=['field1'],expand=!Ext.isArray(store[0]),data=store,i,len;if(expand){data=[];for(i=0,len=store.length;i<len;++i){data.push([store[i]]);}}else{for(i=2,len=store[0].length;i<=len;++i){fields.push('field'+i);}}
return new Ext.data.ArrayStore({data:data,fields:fields,autoDestroy:true,autoCreated:true,expanded:expand});}
if(Ext.isString(store)){return this.get(store);}else{return Ext.data.AbstractStore.create(store);}},getKey:function(o){return o.storeId;}},function(){Ext.regStore=function(name,config){var store;if(Ext.isObject(name)){config=name;}else{config.storeId=name;}
if(config instanceof Ext.data.Store){store=config;}else{store=new Ext.data.Store(config);}
return Ext.data.StoreManager.register(store);};Ext.getStore=function(name){return Ext.data.StoreManager.lookup(name);};});Ext.define('Ext.fx.Manager',{singleton:true,requires:['Ext.util.MixedCollection','Ext.fx.target.Element','Ext.fx.target.ElementCSS','Ext.fx.target.CompositeElement','Ext.fx.target.CompositeElementCSS','Ext.fx.target.Sprite','Ext.fx.target.CompositeSprite','Ext.fx.target.Component'],mixins:{queue:'Ext.fx.Queue'},constructor:function(){var me=this;me.items=new Ext.util.MixedCollection();me.mixins.queue.constructor.call(me);me.taskRunner=new Ext.util.TaskRunner({fireIdleEvent:false});},interval:16,forceJS:true,createTarget:function(target){var me=this,useCSS3=!me.forceJS&&Ext.supports.Transitions,targetObj;me.useCSS3=useCSS3;if(target){if(target.tagName||Ext.isString(target)||target.isFly){target=Ext.get(target);targetObj=new Ext.fx.target['Element'+(useCSS3?'CSS':'')](target);}
else if(target.dom){targetObj=new Ext.fx.target['Element'+(useCSS3?'CSS':'')](target);}
else if(target.isComposite){targetObj=new Ext.fx.target['CompositeElement'+(useCSS3?'CSS':'')](target);}
else if(target.isSprite){targetObj=new Ext.fx.target.Sprite(target);}
else if(target.isCompositeSprite){targetObj=new Ext.fx.target.CompositeSprite(target);}
else if(target.isComponent){targetObj=new Ext.fx.target.Component(target);}
else if(target.isAnimTarget){return target;}
else{return null;}
me.targets.add(targetObj);return targetObj;}
else{return null;}},addAnim:function(anim){var me=this,items=me.items,task=me.task;items.add(anim.id,anim);if(!task&&items.length){task=me.task={run:me.runner,interval:me.interval,scope:me};me.taskRunner.start(task);}},removeAnim:function(anim){var me=this,items=me.items,task=me.task;items.removeAtKey(anim.id);if(task&&!items.length){me.taskRunner.stop(task);delete me.task;}},runner:function(){var me=this,items=me.items.getRange(),i=0,len=items.length,anim;me.targetArr={};me.timestamp=new Date();for(;i<len;i++){anim=items[i];if(anim.isReady()){me.startAnim(anim);}}
for(i=0;i<len;i++){anim=items[i];if(anim.isRunning()){me.runAnim(anim);}else if(!me.useCSS3){}}
me.applyPendingAttrs();},startAnim:function(anim){anim.start(this.timestamp);},runAnim:function(anim){if(!anim){return;}
var me=this,targetId=anim.target.getId(),useCSS3=me.useCSS3&&anim.target.type=='element',elapsedTime=me.timestamp-anim.startTime,lastFrame=(elapsedTime>=anim.duration),target,o;target=this.collectTargetData(anim,elapsedTime,useCSS3,lastFrame);if(useCSS3){anim.target.setAttr(target.anims[anim.id].attributes,true);me.collectTargetData(anim,anim.duration,useCSS3,lastFrame);anim.paused=true;target=anim.target.target;if(anim.target.isComposite){target=anim.target.target.last();}
o={};o[Ext.supports.CSS3TransitionEnd]=anim.lastFrame;o.scope=anim;o.single=true;target.on(o);}},collectTargetData:function(anim,elapsedTime,useCSS3,isLastFrame){var targetId=anim.target.getId(),target=this.targetArr[targetId];if(!target){target=this.targetArr[targetId]={id:targetId,el:anim.target,anims:{}};}
target.anims[anim.id]={id:anim.id,anim:anim,elapsed:elapsedTime,isLastFrame:isLastFrame,attributes:[{duration:anim.duration,easing:(useCSS3&&anim.reverse)?anim.easingFn.reverse().toCSS3():anim.easing,attrs:anim.runAnim(elapsedTime)}]};return target;},applyPendingAttrs:function(){var targetArr=this.targetArr,target,targetId,animWrap,anim,animId;for(targetId in targetArr){if(targetArr.hasOwnProperty(targetId)){target=targetArr[targetId];for(animId in target.anims){if(target.anims.hasOwnProperty(animId)){animWrap=target.anims[animId];anim=animWrap.anim;if(animWrap.attributes&&anim.isRunning()){target.el.setAttr(animWrap.attributes,false,animWrap.isLastFrame);if(animWrap.isLastFrame){anim.lastFrame();}}}}}}}});Ext.define('Ext.menu.Manager',{singleton:true,requires:['Ext.util.MixedCollection','Ext.util.KeyMap'],alternateClassName:'Ext.menu.MenuMgr',uses:['Ext.menu.Menu'],menus:{},groups:{},attached:false,lastShow:new Date(),init:function(){var me=this;me.active=new Ext.util.MixedCollection();Ext.getDoc().addKeyListener(27,function(){if(me.active.length>0){me.hideAll();}},me);},hideAll:function(){var active=this.active,clone,menus,m,mLen;if(active&&active.length>0){clone=active.clone();menus=clone.items;mLen=menus.length;for(m=0;m<mLen;m++){menus[m].hide();}
return true;}
return false;},onHide:function(m){var me=this,active=me.active;active.remove(m);if(active.length<1){Ext.getDoc().un('mousedown',me.onMouseDown,me);me.attached=false;}},onShow:function(m){var me=this,active=me.active,last=active.last(),attached=me.attached,menuEl=m.getEl(),zIndex;me.lastShow=new Date();active.add(m);if(!attached){Ext.getDoc().on('mousedown',me.onMouseDown,me,{buffer:Ext.isIE?10:undefined});me.attached=true;}
m.toFront();},onBeforeHide:function(m){if(m.activeChild){m.activeChild.hide();}
if(m.autoHideTimer){clearTimeout(m.autoHideTimer);delete m.autoHideTimer;}},onBeforeShow:function(m){var active=this.active,parentMenu=m.parentMenu;active.remove(m);if(!parentMenu&&!m.allowOtherMenus){this.hideAll();}
else if(parentMenu&&parentMenu.activeChild&&m!=parentMenu.activeChild){parentMenu.activeChild.hide();}},onMouseDown:function(e){var me=this,active=me.active,lastShow=me.lastShow;if(Ext.Date.getElapsed(lastShow)>50&&active.length>0&&!e.getTarget('.'+Ext.baseCSSPrefix+'menu')){me.hideAll();}},register:function(menu){var me=this;if(!me.active){me.init();}
if(menu.floating){me.menus[menu.id]=menu;menu.on({beforehide:me.onBeforeHide,hide:me.onHide,beforeshow:me.onBeforeShow,show:me.onShow,scope:me});}},get:function(menu){var menus=this.menus;if(typeof menu=='string'){if(!menus){return null;}
return menus[menu];}else if(menu.isMenu){return menu;}else if(Ext.isArray(menu)){return new Ext.menu.Menu({items:menu});}else{return Ext.ComponentManager.create(menu,'menu');}},unregister:function(menu){var me=this,menus=me.menus,active=me.active;delete menus[menu.id];active.remove(menu);menu.un({beforehide:me.onBeforeHide,hide:me.onHide,beforeshow:me.onBeforeShow,show:me.onShow,scope:me});},registerCheckable:function(menuItem){var groups=this.groups,groupId=menuItem.group;if(groupId){if(!groups[groupId]){groups[groupId]=[];}
groups[groupId].push(menuItem);}},unregisterCheckable:function(menuItem){var groups=this.groups,groupId=menuItem.group;if(groupId){Ext.Array.remove(groups[groupId],menuItem);}},onCheckChange:function(menuItem,state){var groups=this.groups,groupId=menuItem.group,i=0,group,ln,curr;if(groupId&&state){group=groups[groupId];ln=group.length;for(;i<ln;i++){curr=group[i];if(curr!=menuItem){curr.setChecked(false);}}}}});Ext.define('Ext.selection.Model',{extend:'Ext.util.Observable',alternateClassName:'Ext.AbstractSelectionModel',requires:['Ext.data.StoreManager'],mixins:{bindable:'Ext.util.Bindable'},allowDeselect:false,selected:null,pruneRemoved:true,constructor:function(cfg){var me=this;cfg=cfg||{};Ext.apply(me,cfg);me.addEvents('selectionchange','focuschange');me.modes={SINGLE:true,SIMPLE:true,MULTI:true};me.setSelectionMode(cfg.mode||me.mode);me.selected=new Ext.util.MixedCollection();me.callParent(arguments);},bindStore:function(store,initial){var me=this;me.mixins.bindable.bindStore.apply(me,arguments);if(me.store&&!initial){me.refresh();}},getStoreListeners:function(){var me=this;return{add:me.onStoreAdd,clear:me.onStoreClear,bulkremove:me.onStoreRemove,update:me.onStoreUpdate};},selectAll:function(suppressEvent){var me=this,selections=me.store.getRange(),i=0,len=selections.length,start=me.getSelection().length;me.bulkChange=true;for(;i<len;i++){me.doSelect(selections[i],true,suppressEvent);}
delete me.bulkChange;me.maybeFireSelectionChange(me.getSelection().length!==start);},deselectAll:function(suppressEvent){var me=this,selections=me.getSelection(),i=0,len=selections.length,start=me.getSelection().length;me.bulkChange=true;for(;i<len;i++){me.doDeselect(selections[i],suppressEvent);}
delete me.bulkChange;me.maybeFireSelectionChange(me.getSelection().length!==start);},selectWithEvent:function(record,e,keepExisting){var me=this;switch(me.selectionMode){case'MULTI':if(e.ctrlKey&&me.isSelected(record)){me.doDeselect(record,false);}else if(e.shiftKey&&me.lastFocused){me.selectRange(me.lastFocused,record,e.ctrlKey);}else if(e.ctrlKey){me.doSelect(record,true,false);}else if(me.isSelected(record)&&!e.shiftKey&&!e.ctrlKey&&me.selected.getCount()>1){me.doSelect(record,keepExisting,false);}else{me.doSelect(record,false);}
break;case'SIMPLE':if(me.isSelected(record)){me.doDeselect(record);}else{me.doSelect(record,true);}
break;case'SINGLE':if(me.allowDeselect&&me.isSelected(record)){me.doDeselect(record);}else{me.doSelect(record,false);}
break;}},selectRange:function(startRow,endRow,keepExisting,dir){var me=this,store=me.store,selectedCount=0,i,tmp,dontDeselect,records=[];if(me.isLocked()){return;}
if(!keepExisting){me.deselectAll(true);}
if(!Ext.isNumber(startRow)){startRow=store.indexOf(startRow);}
if(!Ext.isNumber(endRow)){endRow=store.indexOf(endRow);}
if(startRow>endRow){tmp=endRow;endRow=startRow;startRow=tmp;}
for(i=startRow;i<=endRow;i++){if(me.isSelected(store.getAt(i))){selectedCount++;}}
if(!dir){dontDeselect=-1;}else{dontDeselect=(dir=='up')?startRow:endRow;}
for(i=startRow;i<=endRow;i++){if(selectedCount==(endRow-startRow+1)){if(i!=dontDeselect){me.doDeselect(i,true);}}else{records.push(store.getAt(i));}}
me.doMultiSelect(records,true);},select:function(records,keepExisting,suppressEvent){if(Ext.isDefined(records)){this.doSelect(records,keepExisting,suppressEvent);}},deselect:function(records,suppressEvent){this.doDeselect(records,suppressEvent);},doSelect:function(records,keepExisting,suppressEvent){var me=this,record;if(me.locked||!me.store){return;}
if(typeof records==="number"){records=[me.store.getAt(records)];}
if(me.selectionMode=="SINGLE"&&records){record=records.length?records[0]:records;me.doSingleSelect(record,suppressEvent);}else{me.doMultiSelect(records,keepExisting,suppressEvent);}},doMultiSelect:function(records,keepExisting,suppressEvent){var me=this,selected=me.selected,change=false,i=0,len,record;if(me.locked){return;}
records=!Ext.isArray(records)?[records]:records;len=records.length;if(!keepExisting&&selected.getCount()>0){if(me.doDeselect(me.getSelection(),suppressEvent)===false){return;}}
function commit(){selected.add(record);change=true;}
for(;i<len;i++){record=records[i];if(keepExisting&&me.isSelected(record)){continue;}
me.lastSelected=record;me.onSelectChange(record,true,suppressEvent,commit);}
if(!me.preventFocus){me.setLastFocused(record,suppressEvent);}
me.maybeFireSelectionChange(change&&!suppressEvent);},doDeselect:function(records,suppressEvent){var me=this,selected=me.selected,i=0,len,record,attempted=0,accepted=0;if(me.locked||!me.store){return false;}
if(typeof records==="number"){records=[me.store.getAt(records)];}else if(!Ext.isArray(records)){records=[records];}
function commit(){++accepted;selected.remove(record);}
len=records.length;for(;i<len;i++){record=records[i];if(me.isSelected(record)){if(me.lastSelected===record){me.lastSelected=selected.last();if(me.lastFocused===record){me.setLastFocused(null);}}
++attempted;me.onSelectChange(record,false,suppressEvent,commit);}}
me.maybeFireSelectionChange(accepted>0&&!suppressEvent);return accepted===attempted;},doSingleSelect:function(record,suppressEvent){var me=this,changed=false,selected=me.selected;if(me.locked){return;}
if(me.isSelected(record)){return;}
function commit(){me.bulkChange=true;if(selected.getCount()>0&&me.doDeselect(me.lastSelected,suppressEvent)===false){delete me.bulkChange;return false;}
delete me.bulkChange;selected.add(record);me.lastSelected=record;changed=true;}
me.onSelectChange(record,true,suppressEvent,commit);if(changed){if(!suppressEvent&&!me.preventFocus){me.setLastFocused(record);}
me.maybeFireSelectionChange(!suppressEvent);}},setLastFocused:function(record,supressFocus){var me=this,recordBeforeLast=me.lastFocused;me.lastFocused=record;if(record!==recordBeforeLast){me.onLastFocusChanged(recordBeforeLast,record,supressFocus);}},isFocused:function(record){return record===this.getLastFocused();},maybeFireSelectionChange:function(fireEvent){var me=this;if(fireEvent&&!me.bulkChange){me.fireEvent('selectionchange',me,me.getSelection());}},getLastSelected:function(){return this.lastSelected;},getLastFocused:function(){return this.lastFocused;},getSelection:function(){return this.selected.getRange();},getSelectionMode:function(){return this.selectionMode;},setSelectionMode:function(selMode){selMode=selMode?selMode.toUpperCase():'SINGLE';this.selectionMode=this.modes[selMode]?selMode:'SINGLE';},isLocked:function(){return this.locked;},setLocked:function(locked){this.locked=!!locked;},isSelected:function(record){record=Ext.isNumber(record)?this.store.getAt(record):record;return this.selected.indexOf(record)!==-1;},hasSelection:function(){return this.selected.getCount()>0;},refresh:function(){var me=this,store=me.store,rec,toBeSelected=[],toBeReAdded=[],oldSelections=me.getSelection(),len=oldSelections.length,selection,change,i=0,lastFocused=me.getLastFocused();if(!store){return;}
for(;i<len;i++){selection=oldSelections[i];if(store.indexOf(selection)!==-1){toBeSelected.push(selection);}
else if(!me.pruneRemoved){rec=store.getById(selection.getId());if(rec){toBeSelected.push(rec);}
else{toBeReAdded.push(selection)}}}
if(me.selected.getCount()!=(toBeSelected.length+toBeReAdded.length)){change=true;}
me.clearSelections();if(store.indexOf(lastFocused)!==-1){me.setLastFocused(lastFocused,true);}
if(toBeSelected.length){me.doSelect(toBeSelected,false,true);}
if(toBeReAdded.length){me.selected.addAll(toBeReAdded);if(!me.lastSelected){me.lastSelected=toBeReAdded[toBeReAdded.length-1];}}
me.maybeFireSelectionChange(change);},clearSelections:function(){this.selected.clear();this.lastSelected=null;this.setLastFocused(null);},onStoreAdd:Ext.emptyFn,onStoreClear:function(){if(this.selected.getCount>0){this.clearSelections();this.maybeFireSelectionChange(true);}},onStoreRemove:function(store,records,indexes){var me=this,selected=me.selected,i,length=records.length,record;if(me.locked||!me.pruneRemoved){return;}
for(i=0;i<length;i++){record=records[i];if(selected.remove(record)){if(me.lastSelected==record){me.lastSelected=null;}
if(me.getLastFocused()==record){me.setLastFocused(null);}}}
me.maybeFireSelectionChange(true);},getCount:function(){return this.selected.getCount();},onUpdate:Ext.emptyFn,destroy:Ext.emptyFn,onStoreUpdate:Ext.emptyFn,onStoreLoad:Ext.emptyFn,onSelectChange:Ext.emptyFn,onLastFocusChanged:function(oldFocused,newFocused){this.fireEvent('focuschange',this,oldFocused,newFocused);},onEditorKey:Ext.emptyFn,bindComponent:Ext.emptyFn,beforeViewRender:Ext.emptyFn});Ext.define('Ext.selection.RowModel',{extend:'Ext.selection.Model',alias:'selection.rowmodel',requires:['Ext.util.KeyNav'],deltaScroll:5,enableKeyNav:true,ignoreRightMouseSelection:false,constructor:function(){this.addEvents('beforedeselect','beforeselect','deselect','select');this.views=[];this.callParent(arguments);},bindComponent:function(view){var me=this;me.views=me.views||[];me.views.push(view);me.bindStore(view.getStore(),true);view.on({itemmousedown:me.onRowMouseDown,scope:me});if(me.enableKeyNav){me.initKeyNav(view);}},initKeyNav:function(view){var me=this;if(!view.rendered){view.on('render',Ext.Function.bind(me.initKeyNav,me,[view],0),me,{single:true});return;}
view.el.set({tabIndex:-1});me.keyNav=new Ext.util.KeyNav({target:view,ignoreInputFields:true,eventName:'itemkeydown',processEvent:function(view,record,node,index,event){event.record=record;event.recordIndex=index;return event;},up:me.onKeyUp,down:me.onKeyDown,right:me.onKeyRight,left:me.onKeyLeft,pageDown:me.onKeyPageDown,pageUp:me.onKeyPageUp,home:me.onKeyHome,end:me.onKeyEnd,space:me.onKeySpace,enter:me.onKeyEnter,scope:me});},onUpdate:function(record){var me=this,view=me.view,index;if(view&&me.isSelected(record)){index=me.store.indexOf(record);view.onRowSelect(index);if(record===me.lastFocused){view.onRowFocus(index,true);}}},getRowsVisible:function(){var rowsVisible=false,view=this.views[0],row=view.getNode(0),rowHeight,gridViewHeight;if(row){rowHeight=Ext.fly(row).getHeight();gridViewHeight=view.el.getHeight();rowsVisible=Math.floor(gridViewHeight/rowHeight);}
return rowsVisible;},onKeyEnd:function(e){var me=this,last=me.store.getAt(me.store.getCount()-1);if(last){if(e.shiftKey){me.selectRange(last,me.lastFocused||0);me.setLastFocused(last);}else if(e.ctrlKey){me.setLastFocused(last);}else{me.doSelect(last);}}},onKeyHome:function(e){var me=this,first=me.store.getAt(0);if(first){if(e.shiftKey){me.selectRange(first,me.lastFocused||0);me.setLastFocused(first);}else if(e.ctrlKey){me.setLastFocused(first);}else{me.doSelect(first,false);}}},onKeyPageUp:function(e){var me=this,rowsVisible=me.getRowsVisible(),selIdx,prevIdx,prevRecord;if(rowsVisible){selIdx=e.recordIndex;prevIdx=selIdx-rowsVisible;if(prevIdx<0){prevIdx=0;}
prevRecord=me.store.getAt(prevIdx);if(e.shiftKey){me.selectRange(prevRecord,e.record,e.ctrlKey,'up');me.setLastFocused(prevRecord);}else if(e.ctrlKey){e.preventDefault();me.setLastFocused(prevRecord);}else{me.doSelect(prevRecord);}}},onKeyPageDown:function(e){var me=this,rowsVisible=me.getRowsVisible(),selIdx,nextIdx,nextRecord;if(rowsVisible){selIdx=e.recordIndex;nextIdx=selIdx+rowsVisible;if(nextIdx>=me.store.getCount()){nextIdx=me.store.getCount()-1;}
nextRecord=me.store.getAt(nextIdx);if(e.shiftKey){me.selectRange(nextRecord,e.record,e.ctrlKey,'down');me.setLastFocused(nextRecord);}else if(e.ctrlKey){e.preventDefault();me.setLastFocused(nextRecord);}else{me.doSelect(nextRecord);}}},onKeySpace:function(e){var me=this,record=me.lastFocused;if(record){if(me.isSelected(record)){me.doDeselect(record,false);}else{me.doSelect(record,true);}}},onKeyEnter:Ext.emptyFn,onKeyUp:function(e){var me=this,idx=me.store.indexOf(me.lastFocused),record;if(idx>0){record=me.store.getAt(idx-1);if(e.shiftKey&&me.lastFocused){if(me.isSelected(me.lastFocused)&&me.isSelected(record)){me.doDeselect(me.lastFocused,true);me.setLastFocused(record);}else if(!me.isSelected(me.lastFocused)){me.doSelect(me.lastFocused,true);me.doSelect(record,true);}else{me.doSelect(record,true);}}else if(e.ctrlKey){me.setLastFocused(record);}else{me.doSelect(record);}}},onKeyDown:function(e){var me=this,idx=me.store.indexOf(me.lastFocused),record;if(idx+1<me.store.getCount()){record=me.store.getAt(idx+1);if(me.selected.getCount()===0){if(!e.ctrlKey){me.doSelect(record);}else{me.setLastFocused(record);}}else if(e.shiftKey&&me.lastFocused){if(me.isSelected(me.lastFocused)&&me.isSelected(record)){me.doDeselect(me.lastFocused,true);me.setLastFocused(record);}else if(!me.isSelected(me.lastFocused)){me.doSelect(me.lastFocused,true);me.doSelect(record,true);}else{me.doSelect(record,true);}}else if(e.ctrlKey){me.setLastFocused(record);}else{me.doSelect(record);}}},scrollByDeltaX:function(delta){var view=this.views[0],section=view.up(),hScroll=section.horizontalScroller;if(hScroll){hScroll.scrollByDeltaX(delta);}},onKeyLeft:function(e){this.scrollByDeltaX(-this.deltaScroll);},onKeyRight:function(e){this.scrollByDeltaX(this.deltaScroll);},onRowMouseDown:function(view,record,item,index,e){if(!this.allowRightMouseSelection(e)){return;}
if(e.button===0||!this.isSelected(record)){this.selectWithEvent(record,e);}},allowRightMouseSelection:function(e){var disallow=this.ignoreRightMouseSelection&&e.button!==0;if(disallow){disallow=this.hasSelection();}
return!disallow;},onSelectChange:function(record,isSelected,suppressEvent,commitFn){var me=this,views=me.views,viewsLn=views.length,store=me.store,rowIdx=store.indexOf(record),eventName=isSelected?'select':'deselect',i=0;if((suppressEvent||me.fireEvent('before'+eventName,me,record,rowIdx))!==false&&commitFn()!==false){for(;i<viewsLn;i++){if(isSelected){views[i].onRowSelect(rowIdx,suppressEvent);}else{views[i].onRowDeselect(rowIdx,suppressEvent);}}
if(!suppressEvent){me.fireEvent(eventName,me,record,rowIdx);}}},onLastFocusChanged:function(oldFocused,newFocused,supressFocus){var views=this.views,viewsLn=views.length,store=this.store,rowIdx,i=0;if(oldFocused){rowIdx=store.indexOf(oldFocused);if(rowIdx!=-1){for(;i<viewsLn;i++){views[i].onRowFocus(rowIdx,false);}}}
if(newFocused){rowIdx=store.indexOf(newFocused);if(rowIdx!=-1){for(i=0;i<viewsLn;i++){views[i].onRowFocus(rowIdx,true,supressFocus);}}}
this.callParent();},onEditorTab:function(editingPlugin,e){var me=this,view=me.views[0],record=editingPlugin.getActiveRecord(),header=editingPlugin.getActiveColumn(),position=view.getPosition(record,header),direction=e.shiftKey?'left':'right';do{position=view.walkCells(position,direction,e,me.preventWrap);}while(position&&!view.headerCt.getHeaderAtIndex(position.column).getEditor(record));if(position){editingPlugin.startEditByPosition(position);}},getCurrentPosition:function(){var firstSelection=this.selected.items[0];if(firstSelection){return{row:this.store.indexOf(firstSelection),column:0};}},selectByPosition:function(position){var record=this.store.getAt(position.row);this.select(record);},selectNext:function(keepExisting,suppressEvent){var me=this,store=me.store,selection=me.getSelection(),record=selection[selection.length-1],index=store.indexOf(record)+1,success;if(index===store.getCount()||index===0){success=false;}else{me.doSelect(index,keepExisting,suppressEvent);success=true;}
return success;},selectPrevious:function(keepExisting,suppressEvent){var me=this,selection=me.getSelection(),record=selection[0],index=me.store.indexOf(record)-1,success;if(index<0){success=false;}else{me.doSelect(index,keepExisting,suppressEvent);success=true;}
return success;}});Ext.define('Ext.selection.CellModel',{extend:'Ext.selection.Model',alias:'selection.cellmodel',requires:['Ext.util.KeyNav'],isCellModel:true,enableKeyNav:true,preventWrap:false,noSelection:{row:-1,column:-1},constructor:function(){this.addEvents('deselect','select');this.callParent(arguments);},bindComponent:function(view){var me=this,grid=view.ownerCt;me.primaryView=view;me.views=me.views||[];me.views.push(view);me.bindStore(view.getStore(),true);view.on({cellmousedown:me.onMouseDown,refresh:me.onViewRefresh,scope:me});if(grid.optimizedColumnMove!==false){grid.on('columnmove',me.onColumnMove,me);}
if(me.enableKeyNav){me.initKeyNav(view);}},initKeyNav:function(view){var me=this;if(!view.rendered){view.on('render',Ext.Function.bind(me.initKeyNav,me,[view],0),me,{single:true});return;}
view.el.set({tabIndex:-1});me.keyNav=new Ext.util.KeyNav({target:view.el,ignoreInputFields:true,up:me.onKeyUp,down:me.onKeyDown,right:me.onKeyRight,left:me.onKeyLeft,tab:me.onKeyTab,scope:me});},getHeaderCt:function(){var selection=this.getCurrentPosition(),view=selection?selection.view:this.primaryView;return view.headerCt;},onKeyUp:function(e,t){this.keyNavigation=true;this.move('up',e);this.keyNavigation=false;},onKeyDown:function(e,t){this.keyNavigation=true;this.move('down',e);this.keyNavigation=false;},onKeyLeft:function(e,t){this.keyNavigation=true;this.move('left',e);this.keyNavigation=false;},onKeyRight:function(e,t){this.keyNavigation=true;this.move('right',e);this.keyNavigation=false;},move:function(dir,e){var me=this,pos=me.getCurrentPosition(),newPos;if(pos){newPos=pos.view.walkCells(pos,dir,e,me.preventWrap);if(newPos){newPos.view=pos.view;return me.setCurrentPosition(newPos);}}
return null;},getCurrentPosition:function(){return this.selecting?this.nextSelection:this.selection;},setCurrentPosition:function(pos){var me=this,last=me.selection;me.lastSelection=last;if(last){if(pos&&pos.row===last.row&&pos.column===last.column){pos=null;}else{me.onCellDeselect(me.selection);}}
if(pos){me.nextSelection=new me.Selection(me);me.nextSelection.setPosition(pos);me.selecting=true;me.onCellSelect(me.nextSelection);me.selecting=false;return(me.selection=me.nextSelection);}
return null;},onStoreRemove:function(store,records,indexes){var me=this,pos=me.getCurrentPosition(),i,length=records.length,index,shuffleCount=0;me.callParent(arguments);if(pos){if(indexes[0]>pos.row){return;}
for(i=0;i<length;i++){index=indexes[i];if(index<pos.row){shuffleCount++;}
else{break;}}
if(shuffleCount){pos.setRow(pos.row-shuffleCount);}}},onMouseDown:function(view,cell,cellIndex,record,row,rowIndex,e){this.setCurrentPosition({view:view,row:rowIndex,column:cellIndex});},onCellSelect:function(position,supressEvent){if(position&&position.row!==undefined&&position.row>-1){this.doSelect(position.view.getStore().getAt(position.row),false,supressEvent);}},onCellDeselect:function(position,supressEvent){if(position&&position.row!==undefined){this.doDeselect(position.view.getStore().getAt(position.row),supressEvent);}},onSelectChange:function(record,isSelected,suppressEvent,commitFn){var me=this,pos,eventName,view;if(isSelected){pos=me.nextSelection;eventName='select';}else{pos=me.lastSelection||me.noSelection;eventName='deselect';}
view=pos.view||me.primaryView;if((suppressEvent||me.fireEvent('before'+eventName,me,record,pos.row,pos.column))!==false&&commitFn()!==false){if(isSelected){view.onCellSelect(pos);view.onCellFocus(pos);}else{view.onCellDeselect(pos);delete me.selection;}
if(!suppressEvent){me.fireEvent(eventName,me,record,pos.row,pos.column);}}},onKeyTab:function(e,t){var me=this,pos=me.getCurrentPosition(),editingPlugin;if(pos){editingPlugin=pos.view.editingPlugin;if(editingPlugin&&me.wasEditing){me.onEditorTab(editingPlugin,e)}else{me.move(e.shiftKey?'left':'right',e);}}},onEditorTab:function(editingPlugin,e){var me=this,direction=e.shiftKey?'left':'right',position=me.move(direction,e);if(position){if(editingPlugin.startEdit(position.row,position.column)){me.wasEditing=false;}
else{me.wasEditing=true;if(!position.columnHeader.dataIndex){me.onEditorTab(editingPlugin,e);}}}},refresh:function(){var pos=this.getCurrentPosition(),selRowIdx;if(pos&&(selRowIdx=this.store.indexOf(this.selected.last()))!==-1){pos.row=selRowIdx;}},onColumnMove:function(headerCt,header,fromIdx,toIdx){var grid=headerCt.up('tablepanel');if(grid){this.onViewRefresh(grid.view);}},onUpdate:function(record){var me=this,pos;if(me.isSelected(record)){pos=me.selecting?me.nextSelection:me.selection;me.view.onCellSelect(pos);}},onViewRefresh:function(view){var me=this,pos=me.getCurrentPosition(),headerCt=view.headerCt,record,columnHeader;if(pos&&pos.view===view){record=pos.record;columnHeader=pos.columnHeader;if(!columnHeader.isDescendantOf(headerCt)){columnHeader=headerCt.queryById(columnHeader.id)||headerCt.down('[text="'+columnHeader.text+'"]')||headerCt.down('[dataIndex="'+columnHeader.dataIndex+'"]');}
if(columnHeader&&(view.store.indexOfId(record.getId())!==-1)){me.setCurrentPosition({row:record,column:columnHeader,view:view});}}},selectByPosition:function(position){this.setCurrentPosition(position);}},function(){var Selection=this.prototype.Selection=function(model){this.model=model;this.view=model.primaryView;};Selection.prototype.setPosition=function(row,col){var me=this;if(arguments.length===1){if(row.view){me.view=row.view;}
col=row.column;row=row.row;}
me.setRow(row);me.setColumn(col);return me;};Selection.prototype.setRow=function(row){var me=this;if(row!==undefined){if(typeof row==='number'){me.row=Math.max(Math.min(row,me.view.store.getCount()-1),0);me.record=me.view.store.getAt(row);}
else if(row.isModel){me.record=row;me.row=me.view.indexOf(row);}
else if(row.tagName){me.record=me.view.getRecord(row);me.row=me.view.indexOf(me.record);}}};Selection.prototype.setColumn=function(col){var me=this;if(col!==undefined){if(typeof col==='number'){me.column=col;me.columnHeader=me.view.getHeaderAtIndex(col);}
else if(col.isHeader){me.columnHeader=col;me.column=col.getIndex();}}};});Ext.define('Ext.selection.CheckboxModel',{alias:'selection.checkboxmodel',extend:'Ext.selection.RowModel',mode:'MULTI',injectCheckbox:0,checkOnly:false,showHeaderCheckbox:undefined,headerWidth:24,checkerOnCls:Ext.baseCSSPrefix+'grid-hd-checker-on',refreshOnRemove:true,constructor:function(){var me=this;me.callParent(arguments);if(me.mode==='SINGLE'&&me.showHeaderCheckbox!==true){me.showHeaderCheckbox=false;}},beforeViewRender:function(view){var me=this,views=me.views,owner;me.callParent(arguments);if(Ext.Array.indexOf(views,view)===-1){views.push(view);}
if(!me.hasLockedHeader()||view.headerCt.lockedCt){if(me.showHeaderCheckbox!==false){view.headerCt.on('headerclick',me.onHeaderClick,me);}
me.addCheckbox(view,true);owner=view.ownerCt;if(view.headerCt.lockedCt){owner=owner.ownerCt;}
me.mon(owner,'reconfigure',me.onReconfigure,me);}},bindComponent:function(view){var me=this;me.sortable=false;me.callParent(arguments);},hasLockedHeader:function(){var views=this.views,vLen=views.length,v;for(v=0;v<vLen;v++){if(views[v].headerCt.lockedCt){return true;}}
return false;},addCheckbox:function(view,initial){var me=this,checkbox=me.injectCheckbox,headerCt=view.headerCt;if(checkbox!==false){if(checkbox=='first'){checkbox=0;}else if(checkbox=='last'){checkbox=headerCt.getColumnCount();}
Ext.suspendLayouts();headerCt.add(checkbox,me.getHeaderConfig());Ext.resumeLayouts();}
if(initial!==true){view.refresh();}},onReconfigure:function(grid,store,columns){if(columns){this.addCheckbox(this.views[0]);}},toggleUiHeader:function(isChecked){var view=this.views[0],headerCt=view.headerCt,checkHd=headerCt.child('gridcolumn[isCheckerHd]'),cls=this.checkerOnCls;if(checkHd){if(isChecked){checkHd.addCls(cls);}else{checkHd.removeCls(cls);}}},onHeaderClick:function(headerCt,header,e){if(header.isCheckerHd){e.stopEvent();var me=this,isChecked=header.el.hasCls(Ext.baseCSSPrefix+'grid-hd-checker-on');me.preventFocus=true;if(isChecked){me.deselectAll();}else{me.selectAll();}
delete me.preventFocus;}},getHeaderConfig:function(){var me=this,showCheck=me.showHeaderCheckbox!==false;return{isCheckerHd:showCheck,text:'&#160;',width:me.headerWidth,sortable:false,draggable:false,resizable:false,hideable:false,menuDisabled:true,dataIndex:'',cls:showCheck?Ext.baseCSSPrefix+'column-header-checkbox ':'',renderer:Ext.Function.bind(me.renderer,me),editRenderer:me.editRenderer||me.renderEmpty,locked:me.hasLockedHeader()};},renderEmpty:function(){return'&#160;';},refresh:function(){this.callParent(arguments);this.updateHeaderState();},renderer:function(value,metaData,record,rowIndex,colIndex,store,view){var baseCSSPrefix=Ext.baseCSSPrefix;metaData.tdCls=baseCSSPrefix+'grid-cell-special '+baseCSSPrefix+'grid-cell-row-checker';return'<div class="'+baseCSSPrefix+'grid-row-checker">&#160;</div>';},onRowMouseDown:function(view,record,item,index,e){view.el.focus();var me=this,checker=e.getTarget('.'+Ext.baseCSSPrefix+'grid-row-checker'),mode;if(!me.allowRightMouseSelection(e)){return;}
if(me.checkOnly&&!checker){return;}
if(checker){mode=me.getSelectionMode();if(mode!=='SINGLE'){me.setSelectionMode('SIMPLE');}
me.selectWithEvent(record,e);me.setSelectionMode(mode);}else{me.selectWithEvent(record,e);}},onSelectChange:function(){var me=this;me.callParent(arguments);me.updateHeaderState();},onStoreLoad:function(){var me=this;me.callParent(arguments);me.updateHeaderState();},updateHeaderState:function(){var storeCount=this.store.getCount(),hdSelectStatus=storeCount>0&&this.selected.getCount()===storeCount;this.toggleUiHeader(hdSelectStatus);}});Ext.define('Ext.selection.TreeModel',{extend:'Ext.selection.RowModel',alias:'selection.treemodel',pruneRemoved:false,onKeyRight:function(e,t){var focused=this.getLastFocused(),view=this.view;if(focused){if(focused.isExpanded()){this.onKeyDown(e,t);}else if(focused.isExpandable()){view.expand(focused);}}},onKeyLeft:function(e,t){var focused=this.getLastFocused(),view=this.view,viewSm=view.getSelectionModel(),parentNode;if(focused){parentNode=focused.parentNode;if(focused.isExpanded()){view.collapse(focused);}else if(parentNode&&!parentNode.isRoot()){if(e.shiftKey){viewSm.selectRange(parentNode,focused,e.ctrlKey,'up');viewSm.setLastFocused(parentNode);}else if(e.ctrlKey){viewSm.setLastFocused(parentNode);}else{viewSm.select(parentNode);}}}},onKeySpace:function(e,t){this.toggleCheck(e);},onKeyEnter:function(e,t){this.toggleCheck(e);},toggleCheck:function(e){e.stopEvent();var selected=this.getLastSelected();if(selected){this.view.onCheckChange(selected);}}});Ext.define('Ext.form.CheckboxManager',{extend:'Ext.util.MixedCollection',singleton:true,getByName:function(name,formId){return this.filterBy(function(item){return item.name==name&&item.getFormId()==formId;});}});Ext.define('Ext.data.Errors',{extend:'Ext.util.MixedCollection',isValid:function(){return this.length===0;},getByField:function(fieldName){var errors=[],error,field,i;for(i=0;i<this.length;i++){error=this.items[i];if(error.field==fieldName){errors.push(error);}}
return errors;}});Ext.define('Ext.data.AbstractStore',{requires:['Ext.util.MixedCollection','Ext.data.proxy.Proxy','Ext.data.Operation','Ext.util.Filter'],mixins:{observable:'Ext.util.Observable',sortable:'Ext.util.Sortable'},statics:{create:function(store){if(!store.isStore){if(!store.type){store.type='store';}
store=Ext.createByAlias('store.'+store.type,store);}
return store;}},onClassExtended:function(cls,data,hooks){var model=data.model,onBeforeClassCreated;if(typeof model=='string'){onBeforeClassCreated=hooks.onBeforeCreated;hooks.onBeforeCreated=function(){var me=this,args=arguments;Ext.require(model,function(){onBeforeClassCreated.apply(me,args);});};}},remoteSort:false,remoteFilter:false,autoLoad:undefined,autoSync:false,batchUpdateMode:'operation',filterOnLoad:true,sortOnLoad:true,implicitModel:false,defaultProxyType:'memory',isDestroyed:false,isStore:true,sortRoot:'data',constructor:function(config){var me=this,filters;Ext.apply(me,config);me.removed=[];me.mixins.observable.constructor.apply(me,arguments);var configModel=me.model;me.model=Ext.ModelManager.getModel(me.model);Ext.applyIf(me,{modelDefaults:{}});if(!me.model&&me.fields){me.model=Ext.define('Ext.data.Store.ImplicitModel-'+(me.storeId||Ext.id()),{extend:'Ext.data.Model',fields:me.fields,proxy:me.proxy||me.defaultProxyType});delete me.fields;me.implicitModel=true;}
if(!me.model&&me.useModelWarning!==false){var logMsg=[Ext.getClassName(me)||'Store',' created with no model.'];if(typeof configModel==='string'){logMsg.push(" The name '",configModel,"'",' does not correspond to a valid model.');}
Ext.log.warn(logMsg.join(''));}
me.setProxy(me.proxy||me.model.getProxy());me.proxy.on('metachange',me.onMetaChange,me);if(me.id&&!me.storeId){me.storeId=me.id;delete me.id;}
if(me.storeId){Ext.data.StoreManager.register(me);}
me.mixins.sortable.initSortable.call(me);filters=me.decodeFilters(me.filters);me.filters=new Ext.util.MixedCollection();me.filters.addAll(filters);},setProxy:function(proxy){var me=this;if(proxy instanceof Ext.data.proxy.Proxy){proxy.setModel(me.model);}else{if(Ext.isString(proxy)){proxy={type:proxy};}
Ext.applyIf(proxy,{model:me.model});proxy=Ext.createByAlias('proxy.'+proxy.type,proxy);}
me.proxy=proxy;return me.proxy;},getProxy:function(){return this.proxy;},onMetaChange:function(proxy,meta){this.fireEvent('metachange',this,meta);},create:function(data,options){var me=this,instance=Ext.ModelManager.create(Ext.applyIf(data,me.modelDefaults),me.model.modelName),operation;options=options||{};Ext.applyIf(options,{action:'create',records:[instance]});operation=new Ext.data.Operation(options);me.proxy.create(operation,me.onProxyWrite,me);return instance;},read:function(){return this.load.apply(this,arguments);},update:function(options){var me=this,operation;options=options||{};Ext.applyIf(options,{action:'update',records:me.getUpdatedRecords()});operation=new Ext.data.Operation(options);return me.proxy.update(operation,me.onProxyWrite,me);},onProxyWrite:function(operation){var me=this,success=operation.wasSuccessful(),records=operation.getRecords();switch(operation.action){case'create':me.onCreateRecords(records,operation,success);break;case'update':me.onUpdateRecords(records,operation,success);break;case'destroy':me.onDestroyRecords(records,operation,success);break;}
if(success){me.fireEvent('write',me,operation);me.fireEvent('datachanged',me);me.fireEvent('refresh',me);}
Ext.callback(operation.callback,operation.scope||me,[records,operation,success]);},onCreateRecords:Ext.emptyFn,onUpdateRecords:Ext.emptyFn,onDestroyRecords:function(records,operation,success){if(success){this.removed=[];}},destroy:function(options){var me=this,operation;options=options||{};Ext.applyIf(options,{action:'destroy',records:me.getRemovedRecords()});operation=new Ext.data.Operation(options);return me.proxy.destroy(operation,me.onProxyWrite,me);},onBatchOperationComplete:function(batch,operation){return this.onProxyWrite(operation);},onBatchComplete:function(batch,operation){var me=this,operations=batch.operations,length=operations.length,i;me.suspendEvents();for(i=0;i<length;i++){me.onProxyWrite(operations[i]);}
me.resumeEvents();me.fireEvent('datachanged',me);me.fireEvent('refresh',me);},onBatchException:function(batch,operation){},filterNew:function(item){return item.phantom===true&&item.isValid();},getNewRecords:function(){return[];},getUpdatedRecords:function(){return[];},getModifiedRecords:function(){return[].concat(this.getNewRecords(),this.getUpdatedRecords());},filterUpdated:function(item){return item.dirty===true&&item.phantom!==true&&item.isValid();},getRemovedRecords:function(){return this.removed;},filter:function(filters,value){},decodeFilters:function(filters){if(!Ext.isArray(filters)){if(filters===undefined){filters=[];}else{filters=[filters];}}
var length=filters.length,Filter=Ext.util.Filter,config,i;for(i=0;i<length;i++){config=filters[i];if(!(config instanceof Filter)){Ext.apply(config,{root:'data'});if(config.fn){config.filterFn=config.fn;}
if(typeof config=='function'){config={filterFn:config};}
filters[i]=new Filter(config);}}
return filters;},clearFilter:function(supressEvent){},isFiltered:function(){},filterBy:function(fn,scope){},sync:function(options){var me=this,operations={},toCreate=me.getNewRecords(),toUpdate=me.getUpdatedRecords(),toDestroy=me.getRemovedRecords(),needsSync=false;if(toCreate.length>0){operations.create=toCreate;needsSync=true;}
if(toUpdate.length>0){operations.update=toUpdate;needsSync=true;}
if(toDestroy.length>0){operations.destroy=toDestroy;needsSync=true;}
if(needsSync&&me.fireEvent('beforesync',operations)!==false){options=options||{};me.proxy.batch(Ext.apply(options,{operations:operations,listeners:me.getBatchListeners()}));}
return me;},getBatchListeners:function(){var me=this,listeners={scope:me,exception:me.onBatchException};if(me.batchUpdateMode=='operation'){listeners.operationcomplete=me.onBatchOperationComplete;}else{listeners.complete=me.onBatchComplete;}
return listeners;},save:function(){return this.sync.apply(this,arguments);},load:function(options){var me=this,operation;options=Ext.apply({action:'read',filters:me.filters.items,sorters:me.getSorters()},options);me.lastOptions=options;operation=new Ext.data.Operation(options);if(me.fireEvent('beforeload',me,operation)!==false){me.loading=true;me.proxy.read(operation,me.onProxyLoad,me);}
return me;},reload:function(options){return this.load(Ext.apply(this.lastOptions,options));},afterEdit:function(record,modifiedFieldNames){var me=this,i,shouldSync;if(me.autoSync&&!me.autoSyncSuspended){for(i=modifiedFieldNames.length;i--;){if(record.fields.get(modifiedFieldNames[i]).persist){shouldSync=true;break;}}
if(shouldSync){me.sync();}}
me.fireEvent('update',me,record,Ext.data.Model.EDIT,modifiedFieldNames);},afterReject:function(record){this.fireEvent('update',this,record,Ext.data.Model.REJECT,null);},afterCommit:function(record){this.fireEvent('update',this,record,Ext.data.Model.COMMIT,null);},destroyStore:function(){var me=this;if(!me.isDestroyed){if(me.storeId){Ext.data.StoreManager.unregister(me);}
me.clearData();me.data=me.tree=me.sorters=me.filters=me.groupers=null;if(me.reader){me.reader.destroyReader();}
me.proxy=me.reader=me.writer=null;me.clearListeners();me.isDestroyed=true;if(me.implicitModel){Ext.destroy(me.model);}else{me.model=null;}}},doSort:function(sorterFn){var me=this;if(me.remoteSort){me.load();}else{me.data.sortBy(sorterFn);me.fireEvent('datachanged',me);me.fireEvent('refresh',me);}
me.fireEvent('sort',me,me.sorters.getRange());},clearData:Ext.emptyFn,getCount:Ext.emptyFn,getById:Ext.emptyFn,removeAll:Ext.emptyFn,isLoading:function(){return!!this.loading;},suspendAutoSync:function(){this.autoSyncSuspended=true;},resumeAutoSync:function(){this.autoSyncSuspended=false;}});Ext.define('Ext.fx.Animator',{mixins:{observable:'Ext.util.Observable'},requires:['Ext.fx.Manager'],isAnimator:true,duration:250,delay:0,delayStart:0,dynamic:false,easing:'ease',running:false,paused:false,damper:1,iterations:1,currentIteration:0,keyframeStep:0,animKeyFramesRE:/^(from|to|\d+%?)$/,constructor:function(config){var me=this;config=Ext.apply(me,config||{});me.config=config;me.id=Ext.id(null,'ext-animator-');me.addEvents('beforeanimate','keyframe','afteranimate');me.mixins.observable.constructor.call(me,config);me.timeline=[];me.createTimeline(me.keyframes);if(me.target){me.applyAnimator(me.target);Ext.fx.Manager.addAnim(me);}},sorter:function(a,b){return a.pct-b.pct;},createTimeline:function(keyframes){var me=this,attrs=[],to=me.to||{},duration=me.duration,prevMs,ms,i,ln,pct,anim,nextAnim,attr;for(pct in keyframes){if(keyframes.hasOwnProperty(pct)&&me.animKeyFramesRE.test(pct)){attr={attrs:Ext.apply(keyframes[pct],to)};if(pct=="from"){pct=0;}
else if(pct=="to"){pct=100;}
attr.pct=parseInt(pct,10);attrs.push(attr);}}
Ext.Array.sort(attrs,me.sorter);ln=attrs.length;for(i=0;i<ln;i++){prevMs=(attrs[i-1])?duration*(attrs[i-1].pct/100):0;ms=duration*(attrs[i].pct/100);me.timeline.push({duration:ms-prevMs,attrs:attrs[i].attrs});}},applyAnimator:function(target){var me=this,anims=[],timeline=me.timeline,reverse=me.reverse,ln=timeline.length,anim,easing,damper,initial,attrs,lastAttrs,i;if(me.fireEvent('beforeanimate',me)!==false){for(i=0;i<ln;i++){anim=timeline[i];attrs=anim.attrs;easing=attrs.easing||me.easing;damper=attrs.damper||me.damper;delete attrs.easing;delete attrs.damper;anim=new Ext.fx.Anim({target:target,easing:easing,damper:damper,duration:anim.duration,paused:true,to:attrs});anims.push(anim);}
me.animations=anims;me.target=anim.target;for(i=0;i<ln-1;i++){anim=anims[i];anim.nextAnim=anims[i+1];anim.on('afteranimate',function(){this.nextAnim.paused=false;});anim.on('afteranimate',function(){this.fireEvent('keyframe',this,++this.keyframeStep);},me);}
anims[ln-1].on('afteranimate',function(){this.lastFrame();},me);}},start:function(startTime){var me=this,delay=me.delay,delayStart=me.delayStart,delayDelta;if(delay){if(!delayStart){me.delayStart=startTime;return;}
else{delayDelta=startTime-delayStart;if(delayDelta<delay){return;}
else{startTime=new Date(delayStart.getTime()+delay);}}}
if(me.fireEvent('beforeanimate',me)!==false){me.startTime=startTime;me.running=true;me.animations[me.keyframeStep].paused=false;}},lastFrame:function(){var me=this,iter=me.iterations,iterCount=me.currentIteration;iterCount++;if(iterCount<iter){me.startTime=new Date();me.currentIteration=iterCount;me.keyframeStep=0;me.applyAnimator(me.target);me.animations[me.keyframeStep].paused=false;}
else{me.currentIteration=0;me.end();}},end:function(){var me=this;me.fireEvent('afteranimate',me,me.startTime,new Date()-me.startTime);},isReady:function(){return this.paused===false&&this.running===false&&this.iterations>0;},isRunning:function(){return false;}});Ext.define('Ext.data.Types',{singleton:true,requires:['Ext.data.SortTypes']},function(){var st=Ext.data.SortTypes;Ext.apply(Ext.data.Types,{stripRe:/[\$,%]/g,AUTO:{sortType:st.none,type:'auto'},STRING:{convert:function(v){var defaultValue=this.useNull?null:'';return(v===undefined||v===null)?defaultValue:String(v);},sortType:st.asUCString,type:'string'},INT:{convert:function(v){return v!==undefined&&v!==null&&v!==''?parseInt(String(v).replace(Ext.data.Types.stripRe,''),10):(this.useNull?null:0);},sortType:st.none,type:'int'},FLOAT:{convert:function(v){return v!==undefined&&v!==null&&v!==''?parseFloat(String(v).replace(Ext.data.Types.stripRe,''),10):(this.useNull?null:0);},sortType:st.none,type:'float'},BOOL:{convert:function(v){if(this.useNull&&(v===undefined||v===null||v==='')){return null;}
return v===true||v==='true'||v==1;},sortType:st.none,type:'bool'},DATE:{convert:function(v){var df=this.dateReadFormat||this.dateFormat,parsed;if(!v){return null;}
if(Ext.isDate(v)){return v;}
if(df){return Ext.Date.parse(v,df);}
parsed=Date.parse(v);return parsed?new Date(parsed):null;},sortType:st.asDate,type:'date'}});Ext.apply(Ext.data.Types,{BOOLEAN:this.BOOL,INTEGER:this.INT,NUMBER:this.FLOAT});});Ext.define('Ext.data.Field',{requires:['Ext.data.Types','Ext.data.SortTypes'],alias:'data.field',isField:true,constructor:function(config){var me=this,types=Ext.data.Types,st;if(Ext.isString(config)){config={name:config};}
Ext.apply(me,config);st=me.sortType;if(me.type){if(Ext.isString(me.type)){me.type=types[me.type.toUpperCase()]||types.AUTO;}}else{me.type=types.AUTO;}
if(Ext.isString(st)){me.sortType=Ext.data.SortTypes[st];}else if(Ext.isEmpty(st)){me.sortType=me.type.sortType;}
if(!config.hasOwnProperty('convert')){me.convert=me.type.convert;}else if(!me.convert&&me.type.convert&&!config.hasOwnProperty('defaultValue')){me.defaultValue=me.type.convert(me.defaultValue);}
if(config.convert){me.hasCustomConvert=true;}},dateFormat:null,dateReadFormat:null,dateWriteFormat:null,useNull:false,defaultValue:"",mapping:null,sortType:null,sortDir:"ASC",allowBlank:true,persist:true});Ext.define('Ext.data.Model',{alternateClassName:'Ext.data.Record',mixins:{observable:'Ext.util.Observable'},requires:['Ext.ModelManager','Ext.data.IdGenerator','Ext.data.Field','Ext.data.Errors','Ext.data.Operation','Ext.data.validations','Ext.util.MixedCollection'],compareConvertFields:function(f1,f2){var f1SpecialConvert=f1.convert&&f1.type&&f1.convert!==f1.type.convert,f2SpecialConvert=f2.convert&&f2.type&&f2.convert!==f2.type.convert;if(f1SpecialConvert&&!f2SpecialConvert){return 1;}
if(!f1SpecialConvert&&f2SpecialConvert){return-1;}
return 0;},itemNameFn:function(item){return item.name;},onClassExtended:function(cls,data,hooks){var onBeforeClassCreated=hooks.onBeforeCreated;hooks.onBeforeCreated=function(cls,data){var me=this,name=Ext.getClassName(cls),prototype=cls.prototype,superCls=cls.prototype.superclass,validations=data.validations||[],fields=data.fields||[],field,associationsConfigs=data.associations||[],addAssociations=function(items,type){var i=0,len,item;if(items){items=Ext.Array.from(items);for(len=items.length;i<len;++i){item=items[i];if(!Ext.isObject(item)){item={model:item};}
item.type=type;associationsConfigs.push(item);}}},idgen=data.idgen,fieldsMixedCollection=new Ext.util.MixedCollection(false,prototype.itemNameFn),associationsMixedCollection=new Ext.util.MixedCollection(false,prototype.itemNameFn),superValidations=superCls.validations,superFields=superCls.fields,superAssociations=superCls.associations,associationConfig,i,ln,dependencies=[],idProperty=data.idProperty||cls.prototype.idProperty,onFieldAddReplace=function(arg0,arg1,arg2){var newField,pos;if(fieldsMixedCollection.events.add.firing){pos=arg0;newField=arg1;}else{newField=arg2;pos=arg1.originalIndex;}
newField.originalIndex=pos;if(newField.mapping===idProperty||(newField.mapping==null&&newField.name===idProperty)){newField.defaultValue=undefined;}},clsProxy=data.proxy||cls.prototype.proxy||cls.prototype.defaultProxyType,fieldConvertSortFn=function(){fieldsMixedCollection.sortBy(prototype.compareConvertFields);};cls.modelName=name;prototype.modelName=name;if(superValidations){validations=superValidations.concat(validations);}
data.validations=validations;if(superFields){fields=superFields.items.concat(fields);}
fieldsMixedCollection.on({add:onFieldAddReplace,replace:onFieldAddReplace});for(i=0,ln=fields.length;i<ln;++i){field=fields[i];fieldsMixedCollection.add(field.isField?field:new Ext.data.Field(field));}
if(!fieldsMixedCollection.get(idProperty)){fieldsMixedCollection.add(new Ext.data.Field(idProperty));}
fieldConvertSortFn();fieldsMixedCollection.on({add:fieldConvertSortFn,replace:fieldConvertSortFn});data.fields=fieldsMixedCollection;if(idgen){data.idgen=Ext.data.IdGenerator.get(idgen);}
addAssociations(data.belongsTo,'belongsTo');delete data.belongsTo;addAssociations(data.hasMany,'hasMany');delete data.hasMany;addAssociations(data.hasOne,'hasOne');delete data.hasOne;if(superAssociations){associationsConfigs=superAssociations.items.concat(associationsConfigs);}
for(i=0,ln=associationsConfigs.length;i<ln;++i){dependencies.push('association.'+associationsConfigs[i].type.toLowerCase());}
if(clsProxy&&!clsProxy.isProxy){if(typeof clsProxy!=='string'&&!clsProxy.type){Ext.log.warn(name+': proxy type is '+clsProxy.type);}
dependencies.push('proxy.'+(typeof clsProxy==='string'?clsProxy:clsProxy.type));}
Ext.require(dependencies,function(){Ext.ModelManager.registerType(name,cls);for(i=0,ln=associationsConfigs.length;i<ln;++i){associationConfig=associationsConfigs[i];if(associationConfig.isAssociation){associationConfig=Ext.applyIf({ownerModel:name,associatedModel:associationConfig.model},associationConfig.initialConfig);}else{Ext.apply(associationConfig,{ownerModel:name,associatedModel:associationConfig.model});}
if(Ext.ModelManager.getModel(associationConfig.model)===undefined){Ext.ModelManager.registerDeferredAssociation(associationConfig);}else{associationsMixedCollection.add(Ext.data.association.Association.create(associationConfig));}}
data.associations=associationsMixedCollection;onBeforeClassCreated.call(me,cls,data,hooks);cls.setProxy(clsProxy);Ext.ModelManager.onModelDefined(cls);});};},inheritableStatics:{setProxy:function(proxy){if(!proxy.isProxy){if(typeof proxy=="string"){proxy={type:proxy};}
proxy=Ext.createByAlias("proxy."+proxy.type,proxy);}
proxy.setModel(this);this.proxy=this.prototype.proxy=proxy;return proxy;},getProxy:function(){return this.proxy;},setFields:function(fields,idProperty,clientIdProperty){var me=this,proto=me.prototype,prototypeFields=proto.fields,len=fields?fields.length:0,i=0;if(idProperty){proto.idProperty=idProperty;}
if(clientIdProperty){proto.clientIdProperty=clientIdProperty;}
if(prototypeFields){prototypeFields.clear();}
else{prototypeFields=me.prototype.fields=new Ext.util.MixedCollection(false,function(field){return field.name;});}
for(;i<len;i++){prototypeFields.add(new Ext.data.Field(fields[i]));}
if(!prototypeFields.get(proto.idProperty)){prototypeFields.add(new Ext.data.Field(proto.idProperty));}
me.fields=prototypeFields;return prototypeFields;},getFields:function(){return this.prototype.fields.items;},load:function(id,config){config=Ext.apply({},config);config=Ext.applyIf(config,{action:'read',id:id});var operation=new Ext.data.Operation(config),scope=config.scope||this,record=null,callback;callback=function(operation){if(operation.wasSuccessful()){record=operation.getRecords()[0];Ext.callback(config.success,scope,[record,operation]);}else{Ext.callback(config.failure,scope,[record,operation]);}
Ext.callback(config.callback,scope,[record,operation]);};this.proxy.read(operation,callback,this);}},statics:{PREFIX:'ext-record',AUTO_ID:1,EDIT:'edit',REJECT:'reject',COMMIT:'commit',id:function(rec){var id=[this.PREFIX,'-',this.AUTO_ID++].join('');rec.phantom=true;rec.internalId=id;return id;}},idgen:{isGenerator:true,type:'default',generate:function(){return null;},getRecId:function(rec){return rec.modelName+'-'+rec.internalId;}},editing:false,dirty:false,persistenceProperty:'data',evented:false,isModel:true,phantom:false,idProperty:'id',clientIdProperty:null,defaultProxyType:'ajax',constructor:function(data,id,raw,convertedData){data=data||{};var me=this,hasId=(id||id===0),fields,length,field,name,value,newId,persistenceProperty,i;me.internalId=hasId?id:Ext.data.Model.id(me);me.raw=raw||data;if(!me.data){me.data={};}
me.modified={};if(me.persistanceProperty){Ext.log.warn('Ext.data.Model: persistanceProperty has been deprecated. Use persistenceProperty instead.');me.persistenceProperty=me.persistanceProperty;}
persistenceProperty=me[me.persistenceProperty]=convertedData||{};me.mixins.observable.constructor.call(me);if(!convertedData){fields=me.fields.items;length=fields.length;i=0;if(Ext.isArray(data)){for(;i<length;i++){field=fields[i];name=field.name;value=data[field.originalIndex];if(value===undefined){value=field.defaultValue;}
if(field.convert){value=field.convert(value,me);}
if(value!==undefined){persistenceProperty[name]=value;}}}else{for(;i<length;i++){field=fields[i];name=field.name;value=data[name];if(value===undefined){value=field.defaultValue;}
if(field.convert){value=field.convert(value,me);}
if(value!==undefined){persistenceProperty[name]=value;}}}}
if(hasId){persistenceProperty[me.idProperty]=id;}
me.stores=[];if(me.getId()){me.phantom=false;}else if(me.phantom){newId=me.idgen.generate();if(newId!==null){me.setId(newId);}}
me.dirty=false;me.modified={};if(typeof me.init=='function'){me.init();}
me.id=me.idgen.getRecId(me);},get:function(field){return this[this.persistenceProperty][field];},_singleProp:{},set:function(fieldName,newValue){var me=this,data=me[me.persistenceProperty],fields=me.fields,modified=me.modified,single=(typeof fieldName=='string'),currentValue,field,idChanged,key,modifiedFieldNames,name,oldId,newId,value,values;if(single){values=me._singleProp;values[fieldName]=newValue;}else{values=fieldName;}
for(name in values){if(values.hasOwnProperty(name)){value=values[name];if(fields&&(field=fields.get(name))&&field.convert){value=field.convert(value,me);}
currentValue=data[name];if(me.isEqual(currentValue,value)){continue;}
data[name]=value;(modifiedFieldNames||(modifiedFieldNames=[])).push(name);if(field&&field.persist){if(modified.hasOwnProperty(name)){if(me.isEqual(modified[name],value)){delete modified[name];me.dirty=false;for(key in modified){if(modified.hasOwnProperty(key)){me.dirty=true;break;}}}}else{me.dirty=true;modified[name]=currentValue;}}
if(name==me.idProperty){idChanged=true;oldId=currentValue;newId=value;}}}
if(single){delete values[fieldName];}
if(idChanged){me.fireEvent('idchanged',me,oldId,newId);}
if(!me.editing&&modifiedFieldNames){me.afterEdit(modifiedFieldNames);}
return modifiedFieldNames||null;},copyFrom:function(sourceRecord){if(sourceRecord){var me=this,fields=me.fields.items,fieldCount=fields.length,field,i=0,myData=me[me.persistenceProperty],sourceData=sourceRecord[sourceRecord.persistenceProperty],idProperty=me.idProperty,name,value;for(;i<fieldCount;i++){field=fields[i];name=field.name;if(name!=idProperty){value=sourceData[name];if(value!==undefined){myData[name]=value;}}}
if(me.phantom&&!sourceRecord.phantom){me.beginEdit();me.setId(sourceRecord.getId());me.endEdit(true);me.commit(true);}}},isEqual:function(a,b){if(Ext.isDate(a)&&Ext.isDate(b)){return Ext.Date.isEqual(a,b);}
return a===b;},beginEdit:function(){var me=this,key,data,o;if(!me.editing){me.editing=true;me.dirtySave=me.dirty;o=me[me.persistenceProperty];data=me.dataSave={};for(key in o){if(o.hasOwnProperty(key)){data[key]=o[key];}}
o=me.modified;data=me.modifiedSave={};for(key in o){if(o.hasOwnProperty(key)){data[key]=o[key];}}}},cancelEdit:function(){var me=this;if(me.editing){me.editing=false;me.modified=me.modifiedSave;me[me.persistenceProperty]=me.dataSave;me.dirty=me.dirtySave;delete me.modifiedSave;delete me.dataSave;delete me.dirtySave;}},endEdit:function(silent,modifiedFieldNames){var me=this,dataSave,changed;silent=silent===true;if(me.editing){me.editing=false;dataSave=me.dataSave;delete me.modifiedSave;delete me.dataSave;delete me.dirtySave;if(!silent){if(!modifiedFieldNames){modifiedFieldNames=me.getModifiedFieldNames(dataSave);}
changed=me.dirty||modifiedFieldNames.length>0;if(changed){me.afterEdit(modifiedFieldNames);}}}},getModifiedFieldNames:function(saved){var me=this,data=me[me.persistenceProperty],modified=[],key;saved=saved||me.dataSave;for(key in data){if(data.hasOwnProperty(key)){if(!me.isEqual(data[key],saved[key])){modified.push(key);}}}
return modified;},getChanges:function(){var modified=this.modified,changes={},field;for(field in modified){if(modified.hasOwnProperty(field)){changes[field]=this.get(field);}}
return changes;},isModified:function(fieldName){return this.modified.hasOwnProperty(fieldName);},setDirty:function(){var me=this,fields=me.fields.items,fLen=fields.length,field,name,f;me.dirty=true;for(f=0;f<fLen;f++){field=fields[f];if(field.persist){name=field.name;me.modified[name]=me.get(name);}}},markDirty:function(){Ext.log.warn('Ext.data.Model: markDirty has been deprecated. Use setDirty instead.');return this.setDirty.apply(this,arguments);},reject:function(silent){var me=this,modified=me.modified,field;for(field in modified){if(modified.hasOwnProperty(field)){if(typeof modified[field]!="function"){me[me.persistenceProperty][field]=modified[field];}}}
me.dirty=false;me.editing=false;me.modified={};if(silent!==true){me.afterReject();}},commit:function(silent){var me=this;me.phantom=me.dirty=me.editing=false;me.modified={};if(silent!==true){me.afterCommit();}},copy:function(newId){var me=this;return new me.self(me.raw,newId,null,Ext.apply({},me[me.persistenceProperty]));},setProxy:function(proxy){if(!proxy.isProxy){if(typeof proxy==="string"){proxy={type:proxy};}
proxy=Ext.createByAlias("proxy."+proxy.type,proxy);}
proxy.setModel(this.self);this.proxy=proxy;return proxy;},getProxy:function(){return this.proxy;},validate:function(){var errors=new Ext.data.Errors(),validations=this.validations,validators=Ext.data.validations,length,validation,field,valid,type,i;if(validations){length=validations.length;for(i=0;i<length;i++){validation=validations[i];field=validation.field||validation.name;type=validation.type;valid=validators[type](validation,this.get(field));if(!valid){errors.add({field:field,message:validation.message||validators[type+'Message']});}}}
return errors;},isValid:function(){return this.validate().isValid();},save:function(options){options=Ext.apply({},options);var me=this,action=me.phantom?'create':'update',scope=options.scope||me,stores=me.stores,i=0,storeCount,store,args,operation,callback;Ext.apply(options,{records:[me],action:action});operation=new Ext.data.Operation(options);callback=function(operation){args=[me,operation];if(operation.wasSuccessful()){for(storeCount=stores.length;i<storeCount;i++){store=stores[i];store.fireEvent('write',store,operation);store.fireEvent('datachanged',store);}
Ext.callback(options.success,scope,args);}else{Ext.callback(options.failure,scope,args);}
Ext.callback(options.callback,scope,args);};me.getProxy()[action](operation,callback,me);return me;},destroy:function(options){options=Ext.apply({records:[this],action:'destroy'},options);var me=this,isNotPhantom=me.phantom!==true,scope=options.scope||me,stores=me.stores,i=0,storeCount,store,args,operation,callback;operation=new Ext.data.Operation(options);callback=function(operation){args=[me,operation];if(operation.wasSuccessful()){for(storeCount=stores.length;i<storeCount;i++){store=stores[i];store.remove(me,true);if(isNotPhantom){store.fireEvent('write',store,operation);}}
me.clearListeners();Ext.callback(options.success,scope,args);}else{Ext.callback(options.failure,scope,args);}
Ext.callback(options.callback,scope,args);};if(isNotPhantom){me.getProxy().destroy(operation,callback,me);}
else{operation.complete=operation.success=true;operation.resultSet=me.getProxy().reader.nullResultSet;callback(operation);}
return me;},getId:function(){return this.get(this.idProperty);},getObservableId:function(){return this.id;},setId:function(id){this.set(this.idProperty,id);this.phantom=!(id||id===0);},join:function(store){Ext.Array.include(this.stores,store);this.store=this.stores[0];},unjoin:function(store){Ext.Array.remove(this.stores,store);this.store=this.stores[0]||null;},afterEdit:function(modifiedFieldNames){this.callStore('afterEdit',modifiedFieldNames);},afterReject:function(){this.callStore("afterReject");},afterCommit:function(){this.callStore('afterCommit');},callStore:function(fn){var args=Ext.Array.clone(arguments),stores=this.stores,i=0,len=stores.length,store,treeStore;args[0]=this;for(;i<len;++i){store=stores[i];if(store&&typeof store[fn]=="function"){store[fn].apply(store,args);}
treeStore=store.treeStore;if(treeStore&&typeof treeStore[fn]=="function"){treeStore[fn].apply(treeStore,args);}}},getData:function(includeAssociated){var me=this,fields=me.fields.items,fLen=fields.length,data={},name,f;for(f=0;f<fLen;f++){name=fields[f].name;data[name]=me.get(name);}
if(includeAssociated===true){Ext.apply(data,me.getAssociatedData());}
return data;},getAssociatedData:function(){return this.prepareAssociatedData({},1);},prepareAssociatedData:function(seenKeys,depth){var me=this,associations=me.associations.items,associationCount=associations.length,associationData={},toRead=[],toReadKey=[],toReadIndex=[],associatedStore,associatedRecords,associatedRecord,o,index,result,seenDepth,associationId,associatedRecordCount,association,i,j,type,name;for(i=0;i<associationCount;i++){association=associations[i];associationId=association.associationId;seenDepth=seenKeys[associationId];if(seenDepth&&seenDepth!==depth){continue;}
seenKeys[associationId]=depth;type=association.type;name=association.name;if(type=='hasMany'){associatedStore=me[association.storeName];associationData[name]=[];if(associatedStore&&associatedStore.getCount()>0){associatedRecords=associatedStore.data.items;associatedRecordCount=associatedRecords.length;for(j=0;j<associatedRecordCount;j++){associatedRecord=associatedRecords[j];associationData[name][j]=associatedRecord.getData();toRead.push(associatedRecord);toReadKey.push(name);toReadIndex.push(j);}}}else if(type=='belongsTo'||type=='hasOne'){associatedRecord=me[association.instanceName];if(associatedRecord!==undefined){associationData[name]=associatedRecord.getData();toRead.push(associatedRecord);toReadKey.push(name);toReadIndex.push(-1);}}}
for(i=0,associatedRecordCount=toRead.length;i<associatedRecordCount;++i){associatedRecord=toRead[i];o=associationData[toReadKey[i]];index=toReadIndex[i];result=associatedRecord.prepareAssociatedData(seenKeys,depth+1);if(index===-1){Ext.apply(o,result);}else{Ext.apply(o[index],result);}}
return associationData;}});Ext.define('Puma.patch.data.Model',{override:'Ext.data.Model',destroy:function(options){options=Ext.apply({records:[this],action:'destroy'},options);var me=this,isNotPhantom=me.phantom!==true,scope=options.scope||me,stores=me.stores,store,args,operation,callback;operation=new Ext.data.Operation(options);callback=function(operation){args=[me,operation];if(operation.wasSuccessful()){for(var i=stores.length-1;i>=0;i--){store=stores[i];store.remove(me,true);if(isNotPhantom){store.fireEvent('write',store,operation);}}
me.clearListeners();Ext.callback(options.success,scope,args);}else{Ext.callback(options.failure,scope,args);}
Ext.callback(options.callback,scope,args);};if(isNotPhantom){me.getProxy().destroy(operation,callback,me);}
else{operation.complete=operation.success=true;operation.resultSet=me.getProxy().reader.nullResultSet;callback(operation);}
return me;}})
Ext.define('Puma.model.ColumnMap',{extend:'Ext.data.Model',fields:['column','attribute'],idProperty:'attribute',proxy:'memory'});Ext.define('Puma.model.Column',{extend:'Ext.data.Model',fields:['column'],idProperty:'column',proxy:'memory'});Ext.define('Ext.data.NodeInterface',{requires:['Ext.data.Field'],statics:{decorate:function(modelClass){var idName,idField,idType;if(typeof modelClass=='string'){modelClass=Ext.ModelManager.getModel(modelClass);}else if(modelClass.isModel){modelClass=Ext.ModelManager.getModel(modelClass.modelName);}
if(modelClass.prototype.isNode){return;}
idName=modelClass.prototype.idProperty;idField=modelClass.prototype.fields.get(idName);idType=modelClass.prototype.fields.get(idName).type.type;modelClass.override(this.getPrototypeBody());this.applyFields(modelClass,[{name:'parentId',type:idType,defaultValue:null,useNull:idField.useNull},{name:'index',type:'int',defaultValue:null,persist:false},{name:'depth',type:'int',defaultValue:0,persist:false},{name:'expanded',type:'bool',defaultValue:false,persist:false},{name:'expandable',type:'bool',defaultValue:true,persist:false},{name:'checked',type:'auto',defaultValue:null,persist:false},{name:'leaf',type:'bool',defaultValue:false},{name:'cls',type:'string',defaultValue:null,persist:false},{name:'iconCls',type:'string',defaultValue:null,persist:false},{name:'icon',type:'string',defaultValue:null,persist:false},{name:'root',type:'boolean',defaultValue:false,persist:false},{name:'isLast',type:'boolean',defaultValue:false,persist:false},{name:'isFirst',type:'boolean',defaultValue:false,persist:false},{name:'allowDrop',type:'boolean',defaultValue:true,persist:false},{name:'allowDrag',type:'boolean',defaultValue:true,persist:false},{name:'loaded',type:'boolean',defaultValue:false,persist:false},{name:'loading',type:'boolean',defaultValue:false,persist:false},{name:'href',type:'string',defaultValue:null,persist:false},{name:'hrefTarget',type:'string',defaultValue:null,persist:false},{name:'qtip',type:'string',defaultValue:null,persist:false},{name:'qtitle',type:'string',defaultValue:null,persist:false},{name:'children',type:'auto',defaultValue:null,persist:false}]);},applyFields:function(modelClass,addFields){var modelPrototype=modelClass.prototype,fields=modelPrototype.fields,keys=fields.keys,ln=addFields.length,addField,i;for(i=0;i<ln;i++){addField=addFields[i];if(!Ext.Array.contains(keys,addField.name)){fields.add(new Ext.data.Field(addField));}}},getPrototypeBody:function(){return{isNode:true,constructor:function(){var me=this;this.callParent(arguments);Ext.applyIf(me,{firstChild:null,lastChild:null,parentNode:null,previousSibling:null,nextSibling:null,childNodes:[]});me.enableBubble(["append","remove","move","insert","beforeappend","beforeremove","beforemove","beforeinsert","expand","collapse","beforeexpand","beforecollapse","sort"]);return me;},createNode:function(node){if(Ext.isObject(node)&&!node.isModel){node=Ext.ModelManager.create(node,this.modelName);}
if(!node.childNodes){Ext.applyIf(node,{firstChild:null,lastChild:null,parentNode:null,previousSibling:null,nextSibling:null,childNodes:[]});}
return node;},isLeaf:function(){return this.get('leaf')===true;},setFirstChild:function(node){this.firstChild=node;},setLastChild:function(node){this.lastChild=node;},updateInfo:function(commit){var me=this,isRoot=me.isRoot(),parentNode=me.parentNode,isFirst=(!parentNode||isRoot?true:parentNode.firstChild===me),isLast=(!parentNode||isRoot?true:parentNode.lastChild===me),depth=0,parent=me,children=me.childNodes,len=children.length,i=0,phantom=me.phantom;while(parent.parentNode){++depth;parent=parent.parentNode;}
me.beginEdit();me.set({isFirst:isFirst,isLast:isLast,depth:depth,index:parentNode?parentNode.indexOf(me):0,parentId:parentNode?parentNode.getId():null});me.endEdit(true);if(commit){me.commit();me.phantom=phantom;}
for(i=0;i<len;i++){children[i].updateInfo(commit);}},isLast:function(){return this.get('isLast');},isFirst:function(){return this.get('isFirst');},hasChildNodes:function(){return!this.isLeaf()&&this.childNodes.length>0;},isExpandable:function(){var me=this;if(me.get('expandable')){return!(me.isLeaf()||(me.isLoaded()&&!me.hasChildNodes()));}
return false;},triggerUIUpdate:function(){this.afterEdit([]);},appendChild:function(node,suppressEvents,commit){var me=this,i,ln,index,oldParent,ps;if(Ext.isArray(node)){me.callStore('suspendAutoSync');for(i=0,ln=node.length-1;i<ln;i++){me.appendChild(node[i]);}
me.callStore('resumeAutoSync');me.appendChild(node[ln]);}else{node=me.createNode(node);if(suppressEvents!==true&&(!me.hasListeners.beforeappend||me.fireEvent("beforeappend",me,node)===false)){return false;}
index=me.childNodes.length;oldParent=node.parentNode;if(oldParent){if(suppressEvents!==true&&(!me.hasListeners.beforeremove||node.fireEvent("beforemove",node,oldParent,me,index)===false)){return false;}
oldParent.removeChild(node,false,false,true);}
index=me.childNodes.length;if(index===0){me.setFirstChild(node);}
me.childNodes.push(node);node.parentNode=me;node.nextSibling=null;me.setLastChild(node);ps=me.childNodes[index-1];if(ps){node.previousSibling=ps;ps.nextSibling=node;ps.updateInfo(commit);}else{node.previousSibling=null;}
node.updateInfo(commit);if(!me.isLoaded()){me.set('loaded',true);}else if(me.childNodes.length===1){me.triggerUIUpdate();}
if(!node.isLeaf()&&node.phantom){node.set('loaded',true);}
if(suppressEvents!==true){me.fireEvent("append",me,node,index);if(oldParent){node.fireEvent("move",node,oldParent,me,index);}}
return node;}},getBubbleTarget:function(){return this.parentNode;},getOwnerTree:function(){var node=this,store;while(node.parentNode){node=node.parentNode;}
store=node.store;if(store){if(store.treeStore){store=store.treeStore;}
if(store.tree){return store.ownerTree;}}
return undefined;},removeChild:function(node,destroy,suppressEvents,isMove){var me=this,index=me.indexOf(node),i,childCount;if(index==-1||(suppressEvents!==true&&(!me.hasListeners.beforeremove||me.fireEvent("beforeremove",me,node,!!isMove)===false))){return false;}
Ext.Array.erase(me.childNodes,index,1);if(me.firstChild==node){me.setFirstChild(node.nextSibling);}
if(me.lastChild==node){me.setLastChild(node.previousSibling);}
if(node.previousSibling){node.previousSibling.nextSibling=node.nextSibling;}
if(node.nextSibling){node.nextSibling.previousSibling=node.previousSibling;}
node.nextSibling=node.previousSibling=null;for(i=index>0?index-1:0,childCount=me.childNodes.length;i<childCount;i++){me.childNodes[i].updateInfo();}
if(!me.childNodes.length){me.triggerUIUpdate();}
if(suppressEvents!==true){if(me.hasListeners.remove){me.fireEvent("remove",me,node,!!isMove);}}
if(destroy){node.destroy(true);}else{node.clear();}
return node;},copy:function(newId,deep){var me=this,result=me.callParent(arguments),len=me.childNodes?me.childNodes.length:0,i;if(deep){for(i=0;i<len;i++){result.appendChild(me.childNodes[i].copy(undefined,true));}}
return result;},clear:function(destroy){var me=this;me.parentNode=me.previousSibling=me.nextSibling=null;if(destroy){me.firstChild=me.lastChild=null;}},destroy:function(silent){var me=this,options=me.destroyOptions,nodes=me.childNodes,nLen=nodes.length,n;if(silent===true){me.clear(true);for(n=0;n<nLen;n++){nodes[n].destroy(true);}
me.childNodes=null;delete me.destroyOptions;me.callParent([options]);}else{me.destroyOptions=silent;me.remove(true);}},insertBefore:function(node,refNode,suppressEvents){var me=this,index=me.indexOf(refNode),oldParent=node.parentNode,refIndex=index,childCount,ps,i;if(!refNode){return me.appendChild(node);}
if(node==refNode){return false;}
node=me.createNode(node);if(suppressEvents!==true&&(!me.hasListeners.beforeinsert||me.fireEvent("beforeinsert",me,node,refNode)===false)){return false;}
if(oldParent==me&&me.indexOf(node)<index){refIndex--;}
if(oldParent){if(suppressEvents!==true&&(!me.hasListeners.beforeremove||node.fireEvent("beforemove",node,oldParent,me,index,refNode)===false)){return false;}
oldParent.removeChild(node,false,false,true);}
if(refIndex===0){me.setFirstChild(node);}
Ext.Array.splice(me.childNodes,refIndex,0,node);node.parentNode=me;node.nextSibling=refNode;refNode.previousSibling=node;ps=me.childNodes[refIndex-1];if(ps){node.previousSibling=ps;ps.nextSibling=node;}else{node.previousSibling=null;}
for(i=refIndex>0?refIndex-1:0,childCount=me.childNodes.length;i<childCount;i++){me.childNodes[i].updateInfo();}
if(!me.isLoaded()){me.set('loaded',true);}
else if(me.childNodes.length===1){me.triggerUIUpdate();}
if(!node.isLeaf()&&node.phantom){node.set('loaded',true);}
if(suppressEvents!==true){if(me.hasListeners.insert){me.fireEvent("insert",me,node,refNode);}
if(oldParent&&me.hasListeners.move){node.fireEvent("move",node,oldParent,me,refIndex,refNode);}}
return node;},insertChild:function(index,node){var sibling=this.childNodes[index];if(sibling){return this.insertBefore(node,sibling);}
else{return this.appendChild(node);}},remove:function(destroy,suppressEvents){var me=this,parentNode=me.parentNode;if(parentNode){parentNode.removeChild(me,destroy,suppressEvents);}else if(destroy){me.destroy(true);}
return me;},removeAll:function(destroy,suppressEvents,fromParent){var me=this,childNodes=this.childNodes,i=0,len=childNodes.length,treeStore,node;fromParent=fromParent===true;if(!fromParent){treeStore=me.store&&me.store.treeStore;if(treeStore){treeStore.beginBulkRemove();}}
for(;i<len;++i){node=childNodes[i];node.previousSibling=node.nextSibling=node.parentNode=null;me.fireEvent('remove',me,node,false);if(destroy){node.destroy(true);}else{node.removeAll(false,suppressEvents,true);}}
me.firstChild=me.lastChild=null;if(fromParent){me.childNodes=null;}else{me.childNodes.length=0;}
if(!fromParent){me.triggerUIUpdate();if(treeStore){treeStore.endBulkRemove();}}
return me;},getChildAt:function(index){return this.childNodes[index];},replaceChild:function(newChild,oldChild,suppressEvents){var s=oldChild?oldChild.nextSibling:null;this.removeChild(oldChild,false,suppressEvents);this.insertBefore(newChild,s,suppressEvents);return oldChild;},indexOf:function(child){return Ext.Array.indexOf(this.childNodes,child);},indexOfId:function(id){var childNodes=this.childNodes,len=childNodes.length,i=0;for(;i<len;++i){if(childNodes[i].getId()===id){return i;}}
return-1;},getPath:function(field,separator){field=field||this.idProperty;separator=separator||'/';var path=[this.get(field)],parent=this.parentNode;while(parent){path.unshift(parent.get(field));parent=parent.parentNode;}
return separator+path.join(separator);},getDepth:function(){return this.get('depth');},bubble:function(fn,scope,args){var p=this;while(p){if(fn.apply(scope||p,args||[p])===false){break;}
p=p.parentNode;}},cascade:function(){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.data.Node: cascade has been deprecated. Please use cascadeBy instead.');}
return this.cascadeBy.apply(this,arguments);},cascadeBy:function(fn,scope,args){if(fn.apply(scope||this,args||[this])!==false){var childNodes=this.childNodes,length=childNodes.length,i;for(i=0;i<length;i++){childNodes[i].cascadeBy(fn,scope,args);}}},eachChild:function(fn,scope,args){var childNodes=this.childNodes,length=childNodes.length,i;for(i=0;i<length;i++){if(fn.apply(scope||this,args||[childNodes[i]])===false){break;}}},findChild:function(attribute,value,deep){return this.findChildBy(function(){return this.get(attribute)==value;},null,deep);},findChildBy:function(fn,scope,deep){var cs=this.childNodes,len=cs.length,i=0,n,res;for(;i<len;i++){n=cs[i];if(fn.call(scope||n,n)===true){return n;}
else if(deep){res=n.findChildBy(fn,scope,deep);if(res!==null){return res;}}}
return null;},contains:function(node){return node.isAncestor(this);},isAncestor:function(node){var p=this.parentNode;while(p){if(p==node){return true;}
p=p.parentNode;}
return false;},sort:function(sortFn,recursive,suppressEvent){var cs=this.childNodes,ln=cs.length,i,n;if(ln>0){Ext.Array.sort(cs,sortFn);for(i=0;i<ln;i++){n=cs[i];n.previousSibling=cs[i-1];n.nextSibling=cs[i+1];if(i===0){this.setFirstChild(n);}
if(i==ln-1){this.setLastChild(n);}
n.updateInfo();if(recursive&&!n.isLeaf()){n.sort(sortFn,true,true);}}
if(suppressEvent!==true){this.fireEvent('sort',this,cs);}}},isExpanded:function(){return this.get('expanded');},isLoaded:function(){return this.get('loaded');},isLoading:function(){return this.get('loading');},isRoot:function(){return!this.parentNode;},isVisible:function(){var parent=this.parentNode;while(parent){if(!parent.isExpanded()){return false;}
parent=parent.parentNode;}
return true;},expand:function(recursive,callback,scope){var me=this;if(!me.isLeaf()){if(me.isLoading()){me.on('expand',function(){me.expand(recursive,callback,scope);},me,{single:true});}else{if(!me.isExpanded()){me.fireEvent('beforeexpand',me,function(){me.set('expanded',true);if(me.hasListeners.expand){me.fireEvent('expand',me,me.childNodes,false);}
if(recursive){me.expandChildren(true,callback,scope);}else{Ext.callback(callback,scope||me,[me.childNodes]);}},me);}else if(recursive){me.expandChildren(true,callback,scope);}else{Ext.callback(callback,scope||me,[me.childNodes]);}}}else{Ext.callback(callback,scope||me);}},expandChildren:function(recursive,callback,scope){var me=this,i=0,nodes=me.childNodes,ln=nodes.length,node,expanding=0;for(;i<ln;++i){node=nodes[i];if(!node.isLeaf()){expanding++;nodes[i].expand(recursive,function(){expanding--;if(callback&&!expanding){Ext.callback(callback,scope||me,[me.childNodes]);}});}}
if(!expanding&&callback){Ext.callback(callback,scope||me,[me.childNodes]);}},collapse:function(recursive,callback,scope){var me=this;if(!me.isLeaf()){if(!me.collapsing&&me.isExpanded()){me.fireEvent('beforecollapse',me,function(){me.set('expanded',false);if(me.hasListeners.collapse){me.fireEvent('collapse',me,me.childNodes,false);}
if(recursive){me.collapseChildren(true,callback,scope);}
else{Ext.callback(callback,scope||me,[me.childNodes]);}},me);}
else if(recursive){me.collapseChildren(true,callback,scope);}else{Ext.callback(callback,scope||me,[me.childNodes]);}}
else{Ext.callback(callback,scope||me,[me.childNodes]);}},collapseChildren:function(recursive,callback,scope){var me=this,i=0,nodes=me.childNodes,ln=nodes.length,node,collapsing=0;for(;i<ln;++i){node=nodes[i];if(!node.isLeaf()){collapsing++;nodes[i].collapse(recursive,function(){collapsing--;if(callback&&!collapsing){Ext.callback(callback,scope||me,[me.childNodes]);}});}}
if(!collapsing&&callback){Ext.callback(callback,scope||me,[me.childNodes]);}}};}}});Ext.define('Ext.data.TreeStore',{extend:'Ext.data.AbstractStore',alias:'store.tree',requires:['Ext.util.Sorter','Ext.data.Tree','Ext.data.NodeInterface'],clearOnLoad:true,clearRemovedOnLoad:true,nodeParam:'node',defaultRootId:'root',defaultRootText:'Root',defaultRootProperty:'children',rootProperty:'children',fillCount:0,folderSort:false,constructor:function(config){var me=this,root,fields,defaultRoot;config=Ext.apply({},config);fields=config.fields||me.fields;if(!fields){config.fields=[{name:'text',type:'string'}];defaultRoot=config.defaultRootProperty||me.defaultRootProperty;if(defaultRoot!==me.defaultRootProperty){config.fields.push({name:defaultRoot,type:'auto',defaultValue:null,persist:false});}}
me.callParent([config]);me.tree=new Ext.data.Tree();me.relayEvents(me.tree,["append","remove","move","insert","beforeappend","beforeremove","beforemove","beforeinsert","expand","collapse","beforeexpand","beforecollapse","sort","rootchange"]);me.tree.on({scope:me,remove:me.onNodeRemove,beforeexpand:me.onBeforeNodeExpand,beforecollapse:me.onBeforeNodeCollapse,append:me.onNodeAdded,insert:me.onNodeAdded,sort:me.onNodeSort});me.onBeforeSort();root=me.root;if(root){delete me.root;me.setRootNode(root);}
if(Ext.isDefined(me.nodeParameter)){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.data.TreeStore: nodeParameter has been deprecated. Please use nodeParam instead.');}
me.nodeParam=me.nodeParameter;delete me.nodeParameter;}},setProxy:function(proxy){var reader,needsRoot;if(proxy instanceof Ext.data.proxy.Proxy){needsRoot=Ext.isEmpty(proxy.getReader().root);}else if(Ext.isString(proxy)){needsRoot=true;}else{reader=proxy.reader;needsRoot=!(reader&&!Ext.isEmpty(reader.root));}
proxy=this.callParent(arguments);proxy.idParam=this.nodeParam;if(needsRoot){reader=proxy.getReader();reader.root=this.defaultRootProperty;reader.buildExtractors(true);}},onBeforeSort:function(){if(this.folderSort){this.sort({property:'leaf',direction:'ASC'},'prepend',false);}},onBeforeNodeExpand:function(node,callback,scope){if(node.isLoaded()){Ext.callback(callback,scope||node,[node.childNodes]);}
else if(node.isLoading()){this.on('load',function(){Ext.callback(callback,scope||node,[node.childNodes]);},this,{single:true});}
else{this.read({node:node,callback:function(){Ext.callback(callback,scope||node,[node.childNodes]);}});}},getNewRecords:function(){return Ext.Array.filter(this.tree.flatten(),this.filterNew);},getUpdatedRecords:function(){return Ext.Array.filter(this.tree.flatten(),this.filterUpdated);},onBeforeNodeCollapse:function(node,callback,scope){callback.call(scope||node,node.childNodes);},onNodeRemove:function(parent,node,isMove){var me=this,removed=me.removed;node.unjoin(me);if(!node.isReplace&&Ext.Array.indexOf(removed,node)==-1){removed.push(node);}
if(me.autoSync&&!me.autoSyncSuspended&&!isMove){me.sync();}},onNodeAdded:function(parent,node){var me=this,proxy=me.getProxy(),reader=proxy.getReader(),data=node.raw||node[node.persistenceProperty],dataRoot;Ext.Array.remove(me.removed,node);node.join(me);if(!node.isLeaf()){dataRoot=reader.getRoot(data);if(dataRoot){me.fillNode(node,reader.extractData(dataRoot));delete data[reader.root];}}
if(me.autoSync&&!me.autoSyncSuspended&&(node.phantom||node.dirty)){me.sync();}},onNodeSort:function(){if(this.autoSync&&!this.autoSyncSuspended){this.sync();}},setRootNode:function(root,preventLoad){var me=this,model=me.model,idProperty=model.prototype.idProperty
root=root||{};if(!root.isModel){root=Ext.apply({},root);Ext.applyIf(root,{id:me.defaultRootId,text:me.defaultRootText,allowDrag:false});if(root[idProperty]===undefined){root[idProperty]=me.defaultRootId;}
Ext.data.NodeInterface.decorate(model);root=Ext.ModelManager.create(root,model);}else if(root.isModel&&!root.isNode){Ext.data.NodeInterface.decorate(model);}
me.getProxy().getReader().buildExtractors(true);me.tree.setRootNode(root);if(preventLoad!==true&&!root.isLoaded()&&(me.autoLoad===true||root.isExpanded())){me.load({node:root});}
return root;},getRootNode:function(){return this.tree.getRootNode();},getNodeById:function(id){return this.tree.getNodeById(id);},getById:function(id){return this.getNodeById(id);},load:function(options){options=options||{};options.params=options.params||{};var me=this,node=options.node||me.tree.getRootNode();if(!node){node=me.setRootNode({expanded:true},true);}
options.id=node.getId();if(me.clearOnLoad){if(me.clearRemovedOnLoad){me.clearRemoved(node);}
me.tree.un('remove',me.onNodeRemove,me);node.removeAll(false);me.tree.on('remove',me.onNodeRemove,me);}
Ext.applyIf(options,{node:node});if(node){node.set('loading',true);}
return me.callParent([options]);},clearRemoved:function(node){var me=this,removed=me.removed,id=node.getId(),removedLength=removed.length,i=removedLength,recordsToClear={},newRemoved=[],removedHash={},removedNode,targetNode,targetId;if(node===me.getRootNode()){me.removed=[];return;}
for(;i--;){removedNode=removed[i];removedHash[removedNode.getId()]=removedNode;}
for(i=removedLength;i--;){removedNode=removed[i];targetNode=removedNode;while(targetNode&&targetNode.getId()!==id){targetId=targetNode.get('parentId');targetNode=targetNode.parentNode||me.getNodeById(targetId)||removedHash[targetId];}
if(targetNode){recordsToClear[removedNode.getId()]=removedNode;}}
for(i=0;i<removedLength;i++){removedNode=removed[i];if(!recordsToClear[removedNode.getId()]){newRemoved.push(removedNode);}}
me.removed=newRemoved;},fillNode:function(node,newNodes){var me=this,ln=newNodes?newNodes.length:0,sorters=me.sorters,i,sortCollection,needsIndexSort=false,performLocalSort=ln&&me.sortOnLoad&&!me.remoteSort&&sorters&&sorters.items&&sorters.items.length,node1,node2,rootFill;for(i=1;i<ln;i++){node1=newNodes[i];node2=newNodes[i-1];needsIndexSort=node1[node1.persistenceProperty].index!=node2[node2.persistenceProperty].index;if(needsIndexSort){break;}}
if(performLocalSort){if(needsIndexSort){me.sorters.insert(0,me.indexSorter);}
sortCollection=new Ext.util.MixedCollection();sortCollection.addAll(newNodes);sortCollection.sort(me.sorters.items);newNodes=sortCollection.items;me.sorters.remove(me.indexSorter);}else if(needsIndexSort){Ext.Array.sort(newNodes,me.sortByIndex);}
node.set('loaded',true);rootFill=me.fillCount===0;if(rootFill){me.fireEvent('beforefill',me,node,newNodes);}
++me.fillCount;for(i=0;i<ln;i++){node.appendChild(newNodes[i],undefined,true);}
if(rootFill){me.fireEvent('fillcomplete',me,node,newNodes);}
--me.fillCount;return newNodes;},beginBulkRemove:function(){this.fireEvent('beforebulkremove',this);},endBulkRemove:function(){this.fireEvent('bulkremovecomplete',this);},sortByIndex:function(node1,node2){return node1[node1.persistenceProperty].index-node2[node2.persistenceProperty].index;},onProxyLoad:function(operation){var me=this,successful=operation.wasSuccessful(),records=operation.getRecords(),node=operation.node;me.loading=false;node.set('loading',false);if(successful){if(!me.clearOnLoad){records=me.cleanRecords(node,records);}
records=me.fillNode(node,records);}
me.fireEvent('read',me,operation.node,records,successful);me.fireEvent('load',me,operation.node,records,successful);Ext.callback(operation.callback,operation.scope||me,[records,operation,successful]);},onCreateRecords:function(records){this.callParent(arguments);var i=0,len=records.length,tree=this.tree,node;for(;i<len;++i){node=records[i];tree.onNodeIdChanged(node,null,node.getId());}},cleanRecords:function(node,records){var nodeHash={},childNodes=node.childNodes,i=0,len=childNodes.length,out=[],rec;for(;i<len;++i){nodeHash[childNodes[i].getId()]=true;}
for(i=0,len=records.length;i<len;++i){rec=records[i];if(!nodeHash[rec.getId()]){out.push(rec);}}
return out;},removeAll:function(){var root=this.getRootNode();if(root){root.destroy(true);}
this.fireEvent('clear',this);},doSort:function(sorterFn){var me=this;if(me.remoteSort){me.load();}else{me.tree.sort(sorterFn,true);me.fireEvent('datachanged',me);me.fireEvent('refresh',me);}
me.fireEvent('sort',me,me.sorters.getRange());}},function(){var proto=this.prototype;proto.indexSorter=new Ext.util.Sorter({sorterFn:proto.sortByIndex});});Ext.define('Ext.Ajax',{extend:'Ext.data.Connection',singleton:true,autoAbort:false});Ext.define('Ext.data.proxy.Ajax',{requires:['Ext.util.MixedCollection','Ext.Ajax'],extend:'Ext.data.proxy.Server',alias:'proxy.ajax',alternateClassName:['Ext.data.HttpProxy','Ext.data.AjaxProxy'],actionMethods:{create:'POST',read:'GET',update:'POST',destroy:'POST'},binary:false,doRequest:function(operation,callback,scope){var writer=this.getWriter(),request=this.buildRequest(operation);if(operation.allowWrite()){request=writer.write(request);}
Ext.apply(request,{binary:this.binary,headers:this.headers,timeout:this.timeout,scope:this,callback:this.createRequestCallback(request,operation,callback,scope),method:this.getMethod(request),disableCaching:false});Ext.Ajax.request(request);return request;},getMethod:function(request){return this.actionMethods[request.action];},createRequestCallback:function(request,operation,callback,scope){var me=this;return function(options,success,response){me.processResponse(success,operation,request,response,callback,scope);};}},function(){Ext.data.HttpProxy=this;});Ext.define('Ext.data.Store',{extend:'Ext.data.AbstractStore',alias:'store.store',requires:['Ext.data.StoreManager','Ext.data.Model','Ext.data.proxy.Ajax','Ext.data.proxy.Memory','Ext.data.reader.Json','Ext.data.writer.Json','Ext.util.LruCache'],uses:['Ext.ModelManager','Ext.util.Grouper'],remoteSort:false,remoteFilter:false,remoteGroup:false,groupField:undefined,groupDir:"ASC",trailingBufferZone:25,leadingBufferZone:200,pageSize:undefined,currentPage:1,clearOnPageLoad:true,loading:false,sortOnFilter:true,buffered:false,purgePageCount:5,clearRemovedOnLoad:true,defaultPageSize:25,defaultViewSize:100,addRecordsOptions:{addRecords:true},statics:{recordIdFn:function(record){return record.internalId;},recordIndexFn:function(record){return record.index;}},constructor:function(config){config=Ext.apply({},config);var me=this,groupers=config.groupers||me.groupers,groupField=config.groupField||me.groupField,proxy,data;data=config.data||me.data;me.data=new Ext.util.MixedCollection(false,Ext.data.Store.recordIdFn);if(data){me.inlineData=data;delete config.data;}
if(!groupers&&groupField){groupers=[{property:groupField,direction:config.groupDir||me.groupDir}];}
delete config.groupers;me.groupers=new Ext.util.MixedCollection();me.groupers.addAll(me.decodeGroupers(groupers));this.callParent([config]);if(me.buffered){me.pageMap=new me.PageMap({pageSize:me.pageSize,maxSize:me.purgePageCount,listeners:{clear:me.onPageMapClear,scope:me}});me.pageRequests={};me.sortOnLoad=false;me.filterOnLoad=false;}
if(me.remoteGroup){me.remoteSort=true;}
if(me.groupers.items.length&&!me.remoteGroup){me.sort(me.groupers.items,'prepend',false);}
proxy=me.proxy;data=me.inlineData;if(!me.buffered&&!me.pageSize){me.pageSize=me.defaultPageSize;}
if(data){if(proxy instanceof Ext.data.proxy.Memory){proxy.data=data;me.read();}else{me.add.apply(me,[data]);}
if(!me.remoteSort){me.sort();}
delete me.inlineData;}else if(me.autoLoad){Ext.defer(me.load,10,me,[typeof me.autoLoad==='object'?me.autoLoad:undefined]);}},destroyStore:function(){this.callParent(arguments);if(this.pageMap){this.pageMap.clear();}},onBeforeSort:function(){var groupers=this.groupers;if(groupers.getCount()>0){this.sort(groupers.items,'prepend',false);}},decodeGroupers:function(groupers){if(!Ext.isArray(groupers)){if(groupers===undefined){groupers=[];}else{groupers=[groupers];}}
var length=groupers.length,Grouper=Ext.util.Grouper,config,i,result=[];for(i=0;i<length;i++){config=groupers[i];if(!(config instanceof Grouper)){if(Ext.isString(config)){config={property:config};}
config=Ext.apply({root:'data',direction:"ASC"},config);if(config.fn){config.sorterFn=config.fn;}
if(typeof config=='function'){config={sorterFn:config};}
result.push(new Grouper(config));}else{result.push(config);}}
return result;},group:function(groupers,direction){var me=this,hasNew=false,grouper,newGroupers;if(Ext.isArray(groupers)){newGroupers=groupers;}else if(Ext.isObject(groupers)){newGroupers=[groupers];}else if(Ext.isString(groupers)){grouper=me.groupers.get(groupers);if(!grouper){grouper={property:groupers,direction:direction};newGroupers=[grouper];}else if(direction===undefined){grouper.toggle();}else{grouper.setDirection(direction);}}
if(newGroupers&&newGroupers.length){hasNew=true;newGroupers=me.decodeGroupers(newGroupers);me.groupers.clear();me.groupers.addAll(newGroupers);}
if(me.remoteGroup){if(me.buffered){me.pageMap.clear();me.loadPage(1,{groupChange:true});}else{me.load({scope:me,callback:me.fireGroupChange});}}else{me.sort(null,null,null,hasNew);me.fireGroupChange();}},clearGrouping:function(){var me=this,groupers=me.groupers.items,gLen=groupers.length,grouper,g;for(g=0;g<gLen;g++){grouper=groupers[g];me.sorters.remove(grouper);}
me.groupers.clear();if(me.remoteGroup){if(me.buffered){me.pageMap.clear();me.loadPage(1,{groupChange:true});}else{me.load({scope:me,callback:me.fireGroupChange});}}else{me.sort();me.fireGroupChange();}},isGrouped:function(){return this.groupers.getCount()>0;},fireGroupChange:function(){this.fireEvent('groupchange',this,this.groupers);},getGroups:function(requestGroupString){var records=this.data.items,length=records.length,groups=[],pointers={},record,groupStr,group,i;for(i=0;i<length;i++){record=records[i];groupStr=this.getGroupString(record);group=pointers[groupStr];if(group===undefined){group={name:groupStr,children:[]};groups.push(group);pointers[groupStr]=group;}
group.children.push(record);}
return requestGroupString?pointers[requestGroupString]:groups;},getGroupsForGrouper:function(records,grouper){var length=records.length,groups=[],oldValue,newValue,record,group,i;for(i=0;i<length;i++){record=records[i];newValue=grouper.getGroupString(record);if(newValue!==oldValue){group={name:newValue,grouper:grouper,records:[]};groups.push(group);}
group.records.push(record);oldValue=newValue;}
return groups;},getGroupsForGrouperIndex:function(records,grouperIndex){var me=this,groupers=me.groupers,grouper=groupers.getAt(grouperIndex),groups=me.getGroupsForGrouper(records,grouper),length=groups.length,i;if(grouperIndex+1<groupers.length){for(i=0;i<length;i++){groups[i].children=me.getGroupsForGrouperIndex(groups[i].records,grouperIndex+1);}}
for(i=0;i<length;i++){groups[i].depth=grouperIndex;}
return groups;},getGroupData:function(sort){var me=this;if(sort!==false){me.sort();}
return me.getGroupsForGrouperIndex(me.data.items,0);},getGroupString:function(instance){var group=this.groupers.first();if(group){return instance.get(group.property);}
return'';},insert:function(index,records){var me=this,sync=false,i,len,record;records=[].concat(records);len=records.length;if(len){for(i=0;i<len;i++){record=me.createModel(records[i]);record.set(me.modelDefaults);records[i]=record;me.data.insert(index+i,record);record.join(me);sync=sync||record.phantom===true;}
if(me.snapshot){me.snapshot.addAll(records);}
if(me.requireSort){me.suspendEvents();me.sort();me.resumeEvents();}
me.fireEvent('add',me,records,index);me.fireEvent('datachanged',me);if(me.autoSync&&sync&&!me.autoSyncSuspended){me.sync();}}
return records;},add:function(records){if(this.buffered){Ext.Error.raise({msg:'add method may not be called on a buffered store'});}
if(!Ext.isArray(records)){records=Array.prototype.slice.apply(arguments);}else{records=records.slice(0);}
var me=this,i=0,length=records.length,record,isSorted=!me.remoteSort&&me.sorters&&me.sorters.items.length;if(isSorted&&length===1){return[me.addSorted(me.createModel(records[0]))];}
for(;i<length;i++){record=me.createModel(records[i]);records[i]=record;}
if(isSorted){me.requireSort=true;}
records=me.insert(me.data.length,records);delete me.requireSort;return records;},addSorted:function(record){var me=this,index=me.data.findInsertionIndex(record,me.generateComparator());me.insert(index,record);return record;},createModel:function(record){if(!record.isModel){record=Ext.ModelManager.create(record,this.model);}
return record;},each:function(fn,scope){var data=this.data.items,dLen=data.length,record,d;for(d=0;d<dLen;d++){record=data[d];if(fn.call(scope||record,record,d,dLen)===false){break;}}},remove:function(records,isMove){if(!Ext.isArray(records)){records=[records];}
isMove=isMove===true;var me=this,sync=false,snapshot=me.snapshot,data=me.data,i=0,length=records.length,info=[],allRecords=[],indexes=[],item,isNotPhantom,index,record;for(;i<length;++i){record=records[i];if(snapshot){snapshot.remove(record);}
index=data.indexOf(record);if(index>-1){info.push({record:record,index:index});}}
info=Ext.Array.sort(info,function(o1,o2){var index1=o1.index,index2=o2.index;return index1===o2.index2?0:(index1<index2?-1:1);});for(i=0,length=info.length;i<length;i++){item=info[i];record=item.record;index=item.index;allRecords.push(record);indexes.push(index);isNotPhantom=record.phantom!==true;if(!isMove&&isNotPhantom){record.removedFrom=index;me.removed.push(record);}
record.unjoin(me);index=data.indexOf(record);data.remove(record);sync=sync||isNotPhantom;me.fireEvent('remove',me,record,index);}
me.fireEvent('bulkremove',me,allRecords,indexes);me.fireEvent('datachanged',me);if(!isMove&&me.autoSync&&sync&&!me.autoSyncSuspended){me.sync();}},removeAt:function(index,count){var me=this,records;if(index<=me.getCount()){if(arguments.length==1){records=me.getAt(index);if(records){me.remove([records]);}}else{me.remove(me.data.getRange(index,index+count-1));}}},load:function(options){var me=this;options=options||{};if(typeof options=='function'){options={callback:options};}
options.groupers=options.groupers||me.groupers.items;options.page=options.page||me.currentPage;options.start=(options.start!==undefined)?options.start:(options.page-1)*me.pageSize;options.limit=options.limit||me.pageSize;options.addRecords=options.addRecords||false;if(me.buffered){options.limit=me.defaultViewSize;return me.loadToPrefetch(options);}
return me.callParent([options]);},reload:function(options){var me=this,startIdx,endIdx,startPage,endPage,i,waitForReload,bufferZone,records,count=me.getCount();if(!options){options={};}
if(me.buffered){delete me.totalCount;waitForReload=function(){if(me.rangeCached(startIdx,endIdx)){me.loading=false;me.pageMap.un('pageAdded',waitForReload);records=me.pageMap.getRange(startIdx,endIdx);me.loadRecords(records,{start:startIdx});me.fireEvent('load',me,records,true);}};bufferZone=Math.ceil((me.leadingBufferZone+me.trailingBufferZone)/2);startIdx=options.start||(count?me.getAt(0).index:0);endIdx=startIdx+(options.count||(count?count:me.pageSize))-1;startPage=me.getPageFromRecordIndex(Math.max(startIdx-bufferZone,0));endPage=me.getPageFromRecordIndex(endIdx+bufferZone);me.pageMap.clear(true);if(me.fireEvent('beforeload',me,options)!==false){me.loading=true;me.pageMap.on('pageAdded',waitForReload);for(i=startPage;i<=endPage;i++){me.prefetchPage(i,options);}}}else{return me.callParent(arguments);}},onProxyLoad:function(operation){var me=this,resultSet=operation.getResultSet(),records=operation.getRecords(),successful=operation.wasSuccessful();if(resultSet){me.totalCount=resultSet.total;}
if(successful){me.loadRecords(records,operation);}
me.loading=false;if(me.hasListeners.load){me.fireEvent('load',me,records,successful);}
if(me.hasListeners.read){me.fireEvent('read',me,records,successful);}
Ext.callback(operation.callback,operation.scope||me,[records,operation,successful]);},getNewRecords:function(){return this.data.filterBy(this.filterNew).items;},getUpdatedRecords:function(){return this.data.filterBy(this.filterUpdated).items;},filter:function(filters,value){if(Ext.isString(filters)){filters={property:filters,value:value};}
var me=this,decoded=me.decodeFilters(filters),i=0,doLocalSort=me.sorters.length&&me.sortOnFilter&&!me.remoteSort,length=decoded.length;for(;i<length;i++){me.filters.replace(decoded[i]);}
if(me.remoteFilter){delete me.totalCount;if(me.buffered){me.pageMap.clear();me.loadPage(1);}else{me.currentPage=1;me.load();}}else{if(me.filters.getCount()){me.snapshot=me.snapshot||me.data.clone();me.data=me.data.filter(me.filters.items);if(doLocalSort){me.sort();}else{me.fireEvent('datachanged',me);me.fireEvent('refresh',me);}}}},clearFilter:function(suppressEvent){var me=this;me.filters.clear();if(me.remoteFilter){if(suppressEvent){return;}
delete me.totalCount;if(me.buffered){me.pageMap.clear();me.loadPage(1);}else{me.currentPage=1;me.load();}}else if(me.isFiltered()){me.data=me.snapshot.clone();delete me.snapshot;if(suppressEvent!==true){me.fireEvent('datachanged',me);me.fireEvent('refresh',me);}}},isFiltered:function(){var snapshot=this.snapshot;return!!snapshot&&snapshot!==this.data;},filterBy:function(fn,scope){var me=this;me.snapshot=me.snapshot||me.data.clone();me.data=me.queryBy(fn,scope||me);me.fireEvent('datachanged',me);me.fireEvent('refresh',me);},queryBy:function(fn,scope){var me=this,data=me.snapshot||me.data;return data.filterBy(fn,scope||me);},query:function(property,value,anyMatch,caseSensitive,exactMatch){var me=this,queryFn=me.createFilterFn(property,value,anyMatch,caseSensitive,exactMatch),results=me.queryBy(queryFn);if(!results){results=new Ext.util.MixedCollection();}
return results;},loadData:function(data,append){var length=data.length,newData=[],i;for(i=0;i<length;i++){newData.push(this.createModel(data[i]));}
this.loadRecords(newData,append?this.addRecordsOptions:undefined);},loadRawData:function(data,append){var me=this,result=me.proxy.reader.read(data),records=result.records;if(result.success){me.totalCount=result.total;me.loadRecords(records,append?me.addRecordsOptions:undefined);me.fireEvent('load',me,records,true);}},loadRecords:function(records,options){var me=this,i=0,length=records.length,start,addRecords,snapshot=me.snapshot;if(options){start=options.start;addRecords=options.addRecords;}
if(!addRecords){delete me.snapshot;me.clearData(true);}else if(snapshot){snapshot.addAll(records);}
me.data.addAll(records);if(start!==undefined){for(;i<length;i++){records[i].index=start+i;records[i].join(me);}}else{for(;i<length;i++){records[i].join(me);}}
me.suspendEvents();if(me.filterOnLoad&&!me.remoteFilter){me.filter();}
if(me.sortOnLoad&&!me.remoteSort){me.sort(undefined,undefined,undefined,true);}
me.resumeEvents();me.fireEvent('datachanged',me);me.fireEvent('refresh',me);},loadPage:function(page,options){var me=this;me.currentPage=page;options=Ext.apply({page:page,start:(page-1)*me.pageSize,limit:me.pageSize,addRecords:!me.clearOnPageLoad},options);if(me.buffered){return me.loadToPrefetch(options);}
me.read(options);},nextPage:function(options){this.loadPage(this.currentPage+1,options);},previousPage:function(options){this.loadPage(this.currentPage-1,options);},clearData:function(isLoad){var me=this,records=me.data.items,i=records.length;while(i--){records[i].unjoin(me);}
me.data.clear();if(isLoad!==true||me.clearRemovedOnLoad){me.removed.length=0;}},loadToPrefetch:function(options){var me=this,i,records,prefetchOptions=options,startIdx=options.start,endIdx=options.start+options.limit-1,loadEndIdx=Math.min(endIdx,options.start+(me.viewSize||options.limit)-1),startPage=me.getPageFromRecordIndex(Math.max(startIdx-me.trailingBufferZone,0)),endPage=me.getPageFromRecordIndex(endIdx+me.leadingBufferZone),waitForRequestedRange=function(){if(me.rangeCached(startIdx,loadEndIdx)){me.loading=false;records=me.pageMap.getRange(startIdx,loadEndIdx);me.pageMap.un('pageAdded',waitForRequestedRange);if(me.hasListeners.guaranteedrange){me.guaranteeRange(startIdx,loadEndIdx,options.callback,options.scope);}
else{me.loadRecords(records,{start:startIdx});}
me.fireEvent('load',me,records,true);if(options.groupChange){me.fireGroupChange();}}};if(me.fireEvent('beforeload',me,options)!==false){delete me.totalCount;me.loading=true;me.pageMap.on('pageAdded',waitForRequestedRange);if(options.callback){prefetchOptions=Ext.apply({},options);delete options.callback;}
me.on('prefetch',function(){loadEndIdx=Math.min(loadEndIdx,me.getTotalCount()-1);endPage=me.getPageFromRecordIndex(loadEndIdx);for(i=startPage+1;i<=endPage;++i){me.prefetchPage(i,prefetchOptions);}},null,{single:true});me.prefetchPage(startPage,prefetchOptions);}},setViewSize:function(viewSize){var me=this,storeCount=me.getCount(),start;me.viewSize=viewSize;if(storeCount){if(viewSize<storeCount){me.removeAt(me.viewSize,storeCount-me.viewSize);}
else if(viewSize>storeCount){start=me.last().index+1;if(start<me.getTotalCount()){me.guaranteeRange(start,me.first().index+viewSize-1,null,null,{fireEvent:false,callback:function(recs,start,end,options){me.insert(me.getCount(),recs);}});}}}},prefetch:function(options){var me=this,pageSize=me.pageSize,proxy,operation;if(pageSize){if(me.lastPageSize&&pageSize!=me.lastPageSize){Ext.Error.raise("pageSize cannot be dynamically altered");}
if(!me.pageMap.pageSize){me.pageMap.pageSize=pageSize;}}
else{me.pageSize=me.pageMap.pageSize=pageSize=options.limit;}
me.lastPageSize=pageSize;if(!options.page){options.page=me.getPageFromRecordIndex(options.start);options.start=(options.page-1)*pageSize;options.limit=Math.ceil(options.limit/pageSize)*pageSize;}
if(!me.pageRequests[options.page]){options=Ext.apply({action:'read',filters:me.filters.items,sorters:me.sorters.items,groupers:me.groupers.items,generation:me.pageMap.generation},options);operation=new Ext.data.Operation(options);if(me.fireEvent('beforeprefetch',me,operation)!==false){proxy=me.proxy;me.pageRequests[options.page]=proxy.read(operation,me.onProxyPrefetch,me);if(proxy.isSynchronous){delete me.pageRequests[options.page];}}}
return me;},onPageMapClear:function(){var me=this,reqs=me.pageRequests,req,page;if(me.pageMap.events.pageadded){me.pageMap.events.pageadded.clearListeners();}
this.totalCount=0;for(page in reqs){if(reqs.hasOwnProperty(page)){req=reqs[page];delete reqs[page];delete req.callback;}}},prefetchPage:function(page,options){var me=this,pageSize=me.pageSize||me.defaultPageSize,start=(page-1)*me.pageSize,total=me.totalCount;if(total!==undefined&&me.getCount()===total){return;}
me.prefetch(Ext.applyIf({page:page,start:start,limit:pageSize},options));},onProxyPrefetch:function(operation){var me=this,resultSet=operation.getResultSet(),records=operation.getRecords(),successful=operation.wasSuccessful(),page=operation.page;if(operation.generation===me.pageMap.generation){if(resultSet){me.totalCount=resultSet.total;me.fireEvent('totalcountchange',me.totalCount);}
if(page!==undefined){delete me.pageRequests[page];}
me.loading=false;me.fireEvent('prefetch',me,records,successful,operation);if(successful){me.cachePage(records,operation.page);}
Ext.callback(operation.callback,operation.scope||me,[records,operation,successful]);}},cachePage:function(records,page){var me=this;if(!Ext.isDefined(me.totalCount)){me.totalCount=records.length;me.fireEvent('totalcountchange',me.totalCount);}
me.pageMap.addPage(page,records);},rangeCached:function(start,end){return this.pageMap&&this.pageMap.hasRange(start,end);},pageCached:function(page){return this.pageMap&&this.pageMap.hasPage(page);},rangeSatisfied:function(start,end){return this.rangeCached(start,end);},getPageFromRecordIndex:function(index){return Math.floor(index/this.pageSize)+1;},onGuaranteedRange:function(options){var me=this,totalCount=me.getTotalCount(),start=options.prefetchStart,end=((totalCount-1)<options.prefetchEnd)?totalCount-1:options.prefetchEnd,range;end=Math.max(0,end);if(start>end){Ext.log({level:'warn',msg:'Start ('+start+') was greater than end ('+end+') for the range of records requested ('+start+'-'+
options.prefetchEnd+')'+(this.storeId?' from store "'+this.storeId+'"':'')});}
range=me.pageMap.getRange(start,end);if(options.fireEvent!==false){me.fireEvent('guaranteedrange',range,start,end,options);}
if(options.callback){options.callback.call(options.scope||me,range,start,end,options);}},prefetchRange:function(start,end){var me=this,startPage,endPage,page;if(!me.rangeCached(start,end)){startPage=me.getPageFromRecordIndex(start);endPage=me.getPageFromRecordIndex(end);me.pageMap.maxSize=me.purgePageCount?(endPage-startPage+1)+me.purgePageCount:0;for(page=startPage;page<=endPage;page++){if(!me.pageCached(page)){me.prefetchPage(page);}}}},guaranteeRange:function(start,end,callback,scope,options){end=(end>this.totalCount)?this.totalCount-1:end;var me=this,lastRequestStart=me.lastRequestStart,pageAddHandler;options=Ext.apply({prefetchStart:start,prefetchEnd:end,callback:callback,scope:scope},options);me.lastRequestStart=start;if(me.rangeCached(start,end)){if(start<lastRequestStart){start=Math.max(start-me.leadingBufferZone,0);end=Math.min(end+me.trailingBufferZone,me.totalCount-1);}else{start=Math.max(Math.min(start-me.trailingBufferZone,me.totalCount-me.pageSize),0);end=Math.min(end+me.leadingBufferZone,me.totalCount-1);}
if(!me.rangeCached(start,end)){me.prefetchRange(start,end);}
me.onGuaranteedRange(options);}
else{me.fireEvent('cachemiss',me,start,end);start=Math.min(Math.max(Math.floor(start-((me.leadingBufferZone+me.trailingBufferZone)/2)),0),me.totalCount-me.pageSize);end=Math.min(Math.max(Math.ceil(end+((me.leadingBufferZone+me.trailingBufferZone)/2)),0),me.totalCount-1);pageAddHandler=function(page,records){if(me.rangeCached(options.prefetchStart,options.prefetchEnd)){me.fireEvent('cachefilled',me,start,end);me.pageMap.un('pageAdded',pageAddHandler);me.onGuaranteedRange(options);}};me.pageMap.on('pageAdded',pageAddHandler);me.prefetchRange(options.prefetchStart,options.prefetchEnd);me.prefetchRange(start,end);}},sort:function(){var me=this,prefetchData=me.pageMap;if(me.buffered&&me.remoteSort){prefetchData.clear();}
return me.callParent(arguments);},doSort:function(sorterFn){var me=this,range,ln,i;if(me.remoteSort){if(me.buffered){me.pageMap.clear();me.loadPage(1);}else{me.load();}}else{me.data.sortBy(sorterFn);if(!me.buffered){range=me.getRange();ln=range.length;for(i=0;i<ln;i++){range[i].index=i;}}
me.fireEvent('datachanged',me);me.fireEvent('refresh',me);}},find:function(property,value,start,anyMatch,caseSensitive,exactMatch){var fn=this.createFilterFn(property,value,anyMatch,caseSensitive,exactMatch);return fn?this.data.findIndexBy(fn,null,start):-1;},findRecord:function(){var me=this,index=me.find.apply(me,arguments);return index!==-1?me.getAt(index):null;},createFilterFn:function(property,value,anyMatch,caseSensitive,exactMatch){if(Ext.isEmpty(value)){return false;}
value=this.data.createValueMatcher(value,anyMatch,caseSensitive,exactMatch);return function(r){return value.test(r.data[property]);};},findExact:function(property,value,start){return this.data.findIndexBy(function(rec){return rec.isEqual(rec.get(property),value);},this,start);},findBy:function(fn,scope,start){return this.data.findIndexBy(fn,scope,start);},collect:function(dataIndex,allowNull,bypassFilter){var me=this,data=(bypassFilter===true&&me.snapshot)?me.snapshot:me.data;return data.collect(dataIndex,'data',allowNull);},getCount:function(){return this.data.length||0;},getTotalCount:function(){return this.totalCount||0;},getAt:function(index){return this.data.getAt(index);},getRange:function(start,end){return this.data.getRange(start,end);},getById:function(id){return(this.snapshot||this.data).findBy(function(record){return record.getId()===id;});},indexOf:function(record){return this.data.indexOf(record);},indexOfTotal:function(record){var index=record.index;if(index||index===0){return index;}
return this.indexOf(record);},indexOfId:function(id){return this.indexOf(this.getById(id));},removeAll:function(silent){var me=this;me.clearData();if(me.snapshot){me.snapshot.clear();}
if(me.pageMap){me.pageMap.clear();}
if(silent!==true){me.fireEvent('clear',me);}},first:function(grouped){var me=this;if(grouped&&me.isGrouped()){return me.aggregate(function(records){return records.length?records[0]:undefined;},me,true);}else{return me.data.first();}},last:function(grouped){var me=this;if(grouped&&me.isGrouped()){return me.aggregate(function(records){var len=records.length;return len?records[len-1]:undefined;},me,true);}else{return me.data.last();}},sum:function(field,grouped){var me=this;if(grouped&&me.isGrouped()){return me.aggregate(me.getSum,me,true,[field]);}else{return me.getSum(me.data.items,field);}},getSum:function(records,field){var total=0,i=0,len=records.length;for(;i<len;++i){total+=records[i].get(field);}
return total;},count:function(grouped){var me=this;if(grouped&&me.isGrouped()){return me.aggregate(function(records){return records.length;},me,true);}else{return me.getCount();}},min:function(field,grouped){var me=this;if(grouped&&me.isGrouped()){return me.aggregate(me.getMin,me,true,[field]);}else{return me.getMin(me.data.items,field);}},getMin:function(records,field){var i=1,len=records.length,value,min;if(len>0){min=records[0].get(field);}
for(;i<len;++i){value=records[i].get(field);if(value<min){min=value;}}
return min;},max:function(field,grouped){var me=this;if(grouped&&me.isGrouped()){return me.aggregate(me.getMax,me,true,[field]);}else{return me.getMax(me.data.items,field);}},getMax:function(records,field){var i=1,len=records.length,value,max;if(len>0){max=records[0].get(field);}
for(;i<len;++i){value=records[i].get(field);if(value>max){max=value;}}
return max;},average:function(field,grouped){var me=this;if(grouped&&me.isGrouped()){return me.aggregate(me.getAverage,me,true,[field]);}else{return me.getAverage(me.data.items,field);}},getAverage:function(records,field){var i=0,len=records.length,sum=0;if(records.length>0){for(;i<len;++i){sum+=records[i].get(field);}
return sum/len;}
return 0;},aggregate:function(fn,scope,grouped,args){args=args||[];if(grouped&&this.isGrouped()){var groups=this.getGroups(),i=0,len=groups.length,out={},group;for(;i<len;++i){group=groups[i];out[group.name]=fn.apply(scope||this,[group.children].concat(args));}
return out;}else{return fn.apply(scope||this,[this.data.items].concat(args));}},commitChanges:function(){var me=this,recs=me.getModifiedRecords(),len=recs.length,i=0;for(;i<len;i++){recs[i].commit();}
me.removed.length=0;},filterNewOnly:function(item){return item.phantom===true;},getRejectRecords:function(){return Ext.Array.push(this.data.filterBy(this.filterNewOnly).items,this.getUpdatedRecords());},rejectChanges:function(){var me=this,recs=me.getRejectRecords(),len=recs.length,i=0,rec;for(;i<len;i++){rec=recs[i];rec.reject();if(rec.phantom){me.remove(rec);}}
recs=me.removed;len=recs.length;for(i=0;i<len;i++){rec=recs[i];me.insert(rec.removedFrom||0,rec);rec.reject();}
me.removed.length=0;}},function(){Ext.regStore('ext-empty-store',{fields:[],proxy:'memory'});this.prototype.PageMap=new Ext.Class({extend:'Ext.util.LruCache',clear:function(initial){this.generation=(this.generation||0)+1;this.callParent(arguments);},getPageFromRecordIndex:this.prototype.getPageFromRecordIndex,addPage:function(pageNumber,records){var me=this,recCount=records.length,pageCount,i,startIdx=0,page;if(recCount>me.pageSize){pageCount=Math.floor(records.length/me.pageSize);for(i=0;i<pageCount;i++){pageNumber+=i;page=Ext.Array.slice(records,startIdx,startIdx+me.pageSize);this.add(pageNumber,page);this.fireEvent('pageAdded',pageNumber,page);startIdx+=me.pageSize;}}
else{this.add(pageNumber,records);this.fireEvent('pageAdded',pageNumber,records);}},getPage:function(pageNumber){return this.get(pageNumber);},hasRange:function(start,end){var pageNumber=this.getPageFromRecordIndex(start),endPageNumber=this.getPageFromRecordIndex(end);for(;pageNumber<=endPageNumber;pageNumber++){if(!this.hasPage(pageNumber)){return false;}}
return true;},hasPage:function(pageNumber){return!!this.get(pageNumber);},getRange:function(start,end){if(!this.hasRange(start,end)){Ext.Error.raise('PageMap asked for range which it does not have');}
var me=this,startPageNumber=me.getPageFromRecordIndex(start),endPageNumber=me.getPageFromRecordIndex(end),dataStart=(startPageNumber-1)*me.pageSize,dataEnd=(endPageNumber*me.pageSize)-1,pageNumber=startPageNumber,result=[],sliceBegin,sliceEnd,doSlice,i=0,len;for(;pageNumber<=endPageNumber;pageNumber++){if(pageNumber==startPageNumber){sliceBegin=start-dataStart;doSlice=true;}else{sliceBegin=0;doSlice=false;}
if(pageNumber==endPageNumber){sliceEnd=me.pageSize-(dataEnd-end);doSlice=true;}
if(doSlice){Ext.Array.push(result,Ext.Array.slice(me.getPage(pageNumber),sliceBegin,sliceEnd));}else{Ext.Array.push(result,me.getPage(pageNumber));}}
for(len=result.length;i<len;i++){result[i].index=start++;}
return result;}});});Ext.define('Puma.patch.data.Store',{override:'Ext.data.Store',load:function(){this.callParent();if(!this.loadEventPrepared){this.on('load',this.syncLoad);this.loadEventPrepared=true;}},syncLoad:function(){var stores=this.findMasterSlaves();for(var i=0;i<stores.length;i++){var store=stores[i];if(store.slave){store.load();}}},filter:function(filters,value){if(!filters){filters=this.filters.getRange();this.clearFilter(true);}
this.callParent(filters,value)},addWithSlaves:function(model){var stores=this.findMasterSlaves();for(var i=0;i<stores.length;i++){var store=stores[i];if(this!=store){store.addSorted(model);}}
this.addSorted(model);},findMasterSlaves:function(){var model=this.model.$className;var stores=Ext.StoreMgr.getRange();var foundStores=[];for(var i=0;i<stores.length;i++){var store=stores[i];if(store.model.$className==model&&!store.independent){foundStores.push(store);}}
return foundStores;}})
Ext.define('Ext.data.ArrayStore',{extend:'Ext.data.Store',alias:'store.array',requires:['Ext.data.proxy.Memory','Ext.data.reader.Array'],constructor:function(config){config=Ext.apply({proxy:{type:'memory',reader:'array'}},config);this.callParent([config]);},loadData:function(data,append){if(this.expandData===true){var r=[],i=0,ln=data.length;for(;i<ln;i++){r[r.length]=[data[i]];}
data=r;}
this.callParent([data,append]);}},function(){Ext.data.SimpleStore=Ext.data.ArrayStore;});Ext.define('Ext.data.NodeStore',{extend:'Ext.data.Store',alias:'store.node',requires:['Ext.data.NodeInterface'],node:null,recursive:false,rootVisible:false,collapseCount:0,constructor:function(config){var me=this,node;config=config||{};Ext.apply(me,config);if(Ext.isDefined(me.proxy)){Ext.Error.raise("A NodeStore cannot be bound to a proxy. Instead bind it to a record "+"decorated with the NodeInterface by setting the node config.");}
me.useModelWarning=false;config.proxy={type:'proxy'};me.callParent([config]);node=me.node;if(node){me.node=null;me.setNode(node);}},setNode:function(node){var me=this;if(me.node&&me.node!=node){me.mun(me.node,{expand:me.onNodeExpand,collapse:me.onNodeCollapse,append:me.onNodeAppend,insert:me.onNodeInsert,remove:me.onNodeRemove,sort:me.onNodeSort,scope:me});me.node=null;}
if(node){Ext.data.NodeInterface.decorate(node.self);me.removeAll();if(me.rootVisible){me.add(node);}else if(!node.isExpanded()&&me.treeStore.autoLoad!==false){node.expand();}
me.mon(node,{expand:me.onNodeExpand,collapse:me.onNodeCollapse,append:me.onNodeAppend,insert:me.onNodeInsert,remove:me.onNodeRemove,sort:me.onNodeSort,scope:me});me.node=node;if(node.isExpanded()&&node.isLoaded()){me.onNodeExpand(node,node.childNodes,true);}}},onNodeSort:function(node,childNodes){var me=this;if((me.indexOf(node)!==-1||(node===me.node&&!me.rootVisible)&&node.isExpanded())){me.onNodeCollapse(node,childNodes,true);me.onNodeExpand(node,childNodes,true);}},onNodeExpand:function(parent,records,suppressEvent){var me=this,insertIndex=me.indexOf(parent)+1,ln=records?records.length:0,i,record;if(!me.recursive&&parent!==me.node){return;}
if(parent!==this.node&&!me.isVisible(parent)){return;}
if(!suppressEvent&&me.fireEvent('beforeexpand',parent,records,insertIndex)===false){return;}
if(ln){me.insert(insertIndex,records);for(i=0;i<ln;i++){record=records[i];if(record.isExpanded()){if(record.isLoaded()){me.onNodeExpand(record,record.childNodes,true);}
else{record.set('expanded',false);record.expand();}}}}
if(!suppressEvent){me.fireEvent('expand',parent,records);}},onNodeCollapse:function(parent,records,suppressEvent){var me=this,ln=records.length,collapseIndex=me.indexOf(parent)+1,isTopLevel=me.collapseCount===0,i,record;if(!me.recursive&&parent!==me.node){return;}
if(!suppressEvent&&me.fireEvent('beforecollapse',parent,records,collapseIndex)===false){return;}
++me.collapseCount;if(isTopLevel){me.fireEvent('collapsestart',me,parent);}
for(i=0;i<ln;i++){record=records[i];me.remove(record);if(record.isExpanded()){me.onNodeCollapse(record,record.childNodes,true);}}
if(isTopLevel){me.fireEvent('collapsecomplete',me,parent)}
--me.collapseCount;if(!suppressEvent){me.fireEvent('collapse',parent,records,collapseIndex);}},onNodeAppend:function(parent,node,index){var me=this,refNode,sibling;if(me.isVisible(node)){if(index===0){refNode=parent;}else{sibling=node.previousSibling;while(sibling.isExpanded()&&sibling.lastChild){sibling=sibling.lastChild;}
refNode=sibling;}
me.insert(me.indexOf(refNode)+1,node);if(!node.isLeaf()&&node.isExpanded()){if(node.isLoaded()){me.onNodeExpand(node,node.childNodes,true);}
else{node.set('expanded',false);node.expand();}}}},onNodeInsert:function(parent,node,refNode){var me=this,index=this.indexOf(refNode);if(index!=-1&&me.isVisible(node)){me.insert(index,node);if(!node.isLeaf()&&node.isExpanded()){if(node.isLoaded()){me.onNodeExpand(node,node.childNodes,true);}
else{node.set('expanded',false);node.expand();}}}},onNodeRemove:function(parent,node,index){var me=this;if(me.indexOf(node)!=-1){if(!node.isLeaf()&&node.isExpanded()){me.onNodeCollapse(node,node.childNodes,true);}
me.remove(node);}},isVisible:function(node){var parent=node.parentNode;while(parent){if(parent===this.node&&!this.rootVisible&&parent.isExpanded()){return true;}
if(this.indexOf(parent)===-1||!parent.isExpanded()){return false;}
parent=parent.parentNode;}
return true;}});Ext.define('Ext.container.DockingContainer',{requires:['Ext.util.MixedCollection','Ext.Element'],isDockingContainer:true,defaultDockWeights:{top:{render:1,visual:1},left:{render:3,visual:5},right:{render:5,visual:7},bottom:{render:7,visual:3}},dockOrder:{top:-1,left:-1,right:1,bottom:1},horizontalDocks:0,addDocked:function(items,pos){var me=this,i=0,item,length;items=me.prepareItems(items);length=items.length;for(;i<length;i++){item=items[i];item.dock=item.dock||'top';if(item.dock==='left'||item.dock==='right'){me.horizontalDocks++;}
if(pos!==undefined){me.dockedItems.insert(pos+i,item);}else{me.dockedItems.add(item);}
if(item.onAdded!==Ext.emptyFn){item.onAdded(me,i);}
if(me.onDockedAdd!==Ext.emptyFn){me.onDockedAdd(item);}}
if(me.rendered&&!me.suspendLayout){me.updateLayout();}
return items;},destroyDockedItems:function(){var dockedItems=this.dockedItems,c;if(dockedItems){while((c=dockedItems.first())){this.removeDocked(c,true);}}},doRenderDockedItems:function(out,renderData,after){var me=renderData.$comp,layout=me.componentLayout,items,tree;if(layout.getDockedItems&&!renderData.$skipDockedItems){items=layout.getDockedItems('render',!after);tree=items&&layout.getItemsRenderTree(items);if(tree){Ext.DomHelper.generateMarkup(tree,out);}}},getDockedComponent:function(comp){if(Ext.isObject(comp)){comp=comp.getItemId();}
return this.dockedItems.get(comp);},getDockedItems:function(selector,beforeBody){var dockedItems=this.getComponentLayout().getDockedItems('render',beforeBody);if(selector&&dockedItems.length){dockedItems=Ext.ComponentQuery.query(selector,dockedItems);}
return dockedItems;},getDockingRefItems:function(deep,containerItems){var selector=deep&&'*,* *',dockedItems=this.getDockedItems(selector,true),items;dockedItems.push.apply(dockedItems,containerItems);items=this.getDockedItems(selector,false);dockedItems.push.apply(dockedItems,items);return dockedItems;},initDockingItems:function(){var me=this,items=me.dockedItems;me.dockedItems=new Ext.util.AbstractMixedCollection(false,me.getComponentId);if(items){me.addDocked(items);}},insertDocked:function(pos,items){this.addDocked(items,pos);},onDockedAdd:Ext.emptyFn,onDockedRemove:Ext.emptyFn,removeDocked:function(item,autoDestroy){var me=this,layout,hasLayout;if(!me.dockedItems.contains(item)){return item;}
if(item.dock==='left'||item.dock==='right'){me.horizontalDocks--;}
layout=me.componentLayout;hasLayout=layout&&me.rendered;if(hasLayout){layout.onRemove(item);}
me.dockedItems.remove(item);item.onRemoved();me.onDockedRemove(item);if(autoDestroy===true||(autoDestroy!==false&&me.autoDestroy)){item.destroy();}else if(hasLayout){layout.afterRemove(item);}
if(!me.destroying&&!me.suspendLayout){me.updateLayout();}
return item;},setupDockingRenderTpl:function(renderTpl){renderTpl.renderDockedItems=this.doRenderDockedItems;}});Ext.define('Ext.ComponentQuery',{singleton:true,requires:['Ext.ComponentManager']},function(){var cq=this,nthRe=/(\d*)n\+?(\d*)/,nthRe2=/\D/,filterFnPattern=['var r = [],','i = 0,','it = items,','l = it.length,','c;','for (; i < l; i++) {','c = it[i];','if (c.{0}) {','r.push(c);','}','}','return r;'].join(''),filterItems=function(items,operation){return operation.method.apply(this,[items].concat(operation.args));},getItems=function(items,mode){var result=[],i=0,length=items.length,candidate,deep=mode!=='>';for(;i<length;i++){candidate=items[i];if(candidate.getRefItems){result=result.concat(candidate.getRefItems(deep));}}
return result;},getAncestors=function(items){var result=[],i=0,length=items.length,candidate;for(;i<length;i++){candidate=items[i];while(!!(candidate=(candidate.ownerCt||candidate.floatParent))){result.push(candidate);}}
return result;},filterByXType=function(items,xtype,shallow){if(xtype==='*'){return items.slice();}
else{var result=[],i=0,length=items.length,candidate;for(;i<length;i++){candidate=items[i];if(candidate.isXType(xtype,shallow)){result.push(candidate);}}
return result;}},filterByClassName=function(items,className){var result=[],i=0,length=items.length,candidate;for(;i<length;i++){candidate=items[i];if(candidate.hasCls(className)){result.push(candidate);}}
return result;},filterByAttribute=function(items,property,operator,value){var result=[],i=0,length=items.length,candidate,getValue;for(;i<length;i++){candidate=items[i];if(operator==='~='){getValue=null;if(candidate[property]){getValue=String(candidate[property]);}
if(getValue){if(!Ext.isArray(getValue)){getValue=getValue.split(' ');}
if(Ext.Array.indexOf(getValue,value)!==-1){result.push(candidate);}}}else if(!value?!!candidate[property]:(String(candidate[property])===value)){result.push(candidate);}}
return result;},filterById=function(items,id){var result=[],i=0,length=items.length,candidate;for(;i<length;i++){candidate=items[i];if(candidate.getItemId()===id){result.push(candidate);}}
return result;},filterByPseudo=function(items,name,value){return cq.pseudos[name](items,value);},modeRe=/^(\s?([>\^])\s?|\s|$)/,tokenRe=/^(#)?([\w\-]+|\*)(?:\((true|false)\))?/,matchers=[{re:/^\.([\w\-]+)(?:\((true|false)\))?/,method:filterByXType},{re:/^(?:[\[](?:@)?([\w\-]+)\s?(?:(=|.=)\s?['"]?(.*?)["']?)?[\]])/,method:filterByAttribute},{re:/^#([\w\-]+)/,method:filterById},{re:/^\:([\w\-]+)(?:\(((?:\{[^\}]+\})|(?:(?!\{)[^\s>\/]*?(?!\})))\))?/,method:filterByPseudo},{re:/^(?:\{([^\}]+)\})/,method:filterFnPattern}];cq.Query=Ext.extend(Object,{constructor:function(cfg){cfg=cfg||{};Ext.apply(this,cfg);},execute:function(root){var operations=this.operations,i=0,length=operations.length,operation,workingItems;if(!root){workingItems=Ext.ComponentManager.all.getArray();}
else if(Ext.isIterable(root)){workingItems=root;}
else if(root.isMixedCollection){workingItems=root.items;}
for(;i<length;i++){operation=operations[i];if(operation.mode==='^'){workingItems=getAncestors(workingItems||[root]);}
else if(operation.mode){workingItems=getItems(workingItems||[root],operation.mode);}
else{workingItems=filterItems(workingItems||getItems([root]),operation);}
if(i===length-1){return workingItems;}}
return[];},is:function(component){var operations=this.operations,components=Ext.isArray(component)?component:[component],originalLength=components.length,lastOperation=operations[operations.length-1],ln,i;components=filterItems(components,lastOperation);if(components.length===originalLength){if(operations.length>1){for(i=0,ln=components.length;i<ln;i++){if(Ext.Array.indexOf(this.execute(),components[i])===-1){return false;}}}
return true;}
return false;}});Ext.apply(this,{cache:{},pseudos:{not:function(components,selector){var CQ=Ext.ComponentQuery,i=0,length=components.length,results=[],index=-1,component;for(;i<length;++i){component=components[i];if(!CQ.is(component,selector)){results[++index]=component;}}
return results;},first:function(components){var ret=[];if(components.length>0){ret.push(components[0]);}
return ret;},last:function(components){var len=components.length,ret=[];if(len>0){ret.push(components[len-1]);}
return ret;},focusable:function(cmps){var len=cmps.length,results=[],i=0,c;for(;i<len;i++){c=cmps[i];if(c.isFocusable()){results.push(c);}}
return results;},"nth-child":function(c,a){var result=[],m=nthRe.exec(a=="even"&&"2n"||a=="odd"&&"2n+1"||!nthRe2.test(a)&&"n+"+a||a),f=(m[1]||1)-0,l=m[2]-0,i,n,nodeIndex;for(i=0;n=c[i];i++){nodeIndex=i+1;if(f==1){if(l==0||nodeIndex==l){result.push(n);}}else if((nodeIndex+l)%f==0){result.push(n);}}
return result;}},query:function(selector,root){var selectors=selector.split(','),length=selectors.length,i=0,results=[],noDupResults=[],dupMatcher={},query,resultsLn,cmp;for(;i<length;i++){selector=Ext.String.trim(selectors[i]);query=this.cache[selector]||(this.cache[selector]=this.parse(selector));results=results.concat(query.execute(root));}
if(length>1){resultsLn=results.length;for(i=0;i<resultsLn;i++){cmp=results[i];if(!dupMatcher[cmp.id]){noDupResults.push(cmp);dupMatcher[cmp.id]=true;}}
results=noDupResults;}
return results;},is:function(component,selector){if(!selector){return true;}
var selectors=selector.split(','),length=selectors.length,i=0,query;for(;i<length;i++){selector=Ext.String.trim(selectors[i]);query=this.cache[selector]||(this.cache[selector]=this.parse(selector));if(query.is(component)){return true;}}
return false;},parse:function(selector){var operations=[],length=matchers.length,lastSelector,tokenMatch,matchedChar,modeMatch,selectorMatch,i,matcher,method;while(selector&&lastSelector!==selector){lastSelector=selector;tokenMatch=selector.match(tokenRe);if(tokenMatch){matchedChar=tokenMatch[1];if(matchedChar==='#'){operations.push({method:filterById,args:[Ext.String.trim(tokenMatch[2])]});}
else if(matchedChar==='.'){operations.push({method:filterByClassName,args:[Ext.String.trim(tokenMatch[2])]});}
else{operations.push({method:filterByXType,args:[Ext.String.trim(tokenMatch[2]),Boolean(tokenMatch[3])]});}
selector=selector.replace(tokenMatch[0],'');}
while(!(modeMatch=selector.match(modeRe))){for(i=0;selector&&i<length;i++){matcher=matchers[i];selectorMatch=selector.match(matcher.re);method=matcher.method;if(selectorMatch){operations.push({method:Ext.isString(matcher.method)?Ext.functionFactory('items',Ext.String.format.apply(Ext.String,[method].concat(selectorMatch.slice(1)))):matcher.method,args:selectorMatch.slice(1)});selector=selector.replace(selectorMatch[0],'');break;}
if(i===(length-1)){Ext.Error.raise('Invalid ComponentQuery selector: "'+arguments[0]+'"');}}}
if(modeMatch[1]){operations.push({mode:modeMatch[2]||modeMatch[1]});selector=selector.replace(modeMatch[0],'');}}
return new cq.Query({operations:operations});}});});Ext.define('Ext.draw.Draw',{singleton:true,requires:['Ext.draw.Color'],pathToStringRE:/,?([achlmqrstvxz]),?/gi,pathCommandRE:/([achlmqstvz])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?\s*,?\s*)+)/ig,pathValuesRE:/(-?\d*\.?\d*(?:e[-+]?\d+)?)\s*,?\s*/ig,stopsRE:/^(\d+%?)$/,radian:Math.PI/180,availableAnimAttrs:{along:"along",blur:null,"clip-rect":"csv",cx:null,cy:null,fill:"color","fill-opacity":null,"font-size":null,height:null,opacity:null,path:"path",r:null,rotation:"csv",rx:null,ry:null,scale:"csv",stroke:"color","stroke-opacity":null,"stroke-width":null,translation:"csv",width:null,x:null,y:null},is:function(o,type){type=String(type).toLowerCase();return(type=="object"&&o===Object(o))||(type=="undefined"&&typeof o==type)||(type=="null"&&o===null)||(type=="array"&&Array.isArray&&Array.isArray(o))||(Object.prototype.toString.call(o).toLowerCase().slice(8,-1))==type;},ellipsePath:function(sprite){var attr=sprite.attr;return Ext.String.format("M{0},{1}A{2},{3},0,1,1,{0},{4}A{2},{3},0,1,1,{0},{1}z",attr.x,attr.y-attr.ry,attr.rx,attr.ry,attr.y+attr.ry);},rectPath:function(sprite){var attr=sprite.attr;if(attr.radius){return Ext.String.format("M{0},{1}l{2},0a{3},{3},0,0,1,{3},{3}l0,{5}a{3},{3},0,0,1,{4},{3}l{6},0a{3},{3},0,0,1,{4},{4}l0,{7}a{3},{3},0,0,1,{3},{4}z",attr.x+attr.radius,attr.y,attr.width-attr.radius*2,attr.radius,-attr.radius,attr.height-attr.radius*2,attr.radius*2-attr.width,attr.radius*2-attr.height);}
else{return Ext.String.format("M{0},{1}L{2},{1},{2},{3},{0},{3}z",attr.x,attr.y,attr.width+attr.x,attr.height+attr.y);}},path2string:function(){return this.join(",").replace(Ext.draw.Draw.pathToStringRE,"$1");},pathToString:function(arrayPath){return arrayPath.join(",").replace(Ext.draw.Draw.pathToStringRE,"$1");},parsePathString:function(pathString){if(!pathString){return null;}
var paramCounts={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},data=[],me=this;if(me.is(pathString,"array")&&me.is(pathString[0],"array")){data=me.pathClone(pathString);}
if(!data.length){String(pathString).replace(me.pathCommandRE,function(a,b,c){var params=[],name=b.toLowerCase();c.replace(me.pathValuesRE,function(a,b){b&&params.push(+b);});if(name=="m"&&params.length>2){data.push([b].concat(Ext.Array.splice(params,0,2)));name="l";b=(b=="m")?"l":"L";}
while(params.length>=paramCounts[name]){data.push([b].concat(Ext.Array.splice(params,0,paramCounts[name])));if(!paramCounts[name]){break;}}});}
data.toString=me.path2string;return data;},mapPath:function(path,matrix){if(!matrix){return path;}
var x,y,i,ii,j,jj,pathi;path=this.path2curve(path);for(i=0,ii=path.length;i<ii;i++){pathi=path[i];for(j=1,jj=pathi.length;j<jj-1;j+=2){x=matrix.x(pathi[j],pathi[j+1]);y=matrix.y(pathi[j],pathi[j+1]);pathi[j]=x;pathi[j+1]=y;}}
return path;},pathClone:function(pathArray){var res=[],j,jj,i,ii;if(!this.is(pathArray,"array")||!this.is(pathArray&&pathArray[0],"array")){pathArray=this.parsePathString(pathArray);}
for(i=0,ii=pathArray.length;i<ii;i++){res[i]=[];for(j=0,jj=pathArray[i].length;j<jj;j++){res[i][j]=pathArray[i][j];}}
res.toString=this.path2string;return res;},pathToAbsolute:function(pathArray){if(!this.is(pathArray,"array")||!this.is(pathArray&&pathArray[0],"array")){pathArray=this.parsePathString(pathArray);}
var res=[],x=0,y=0,mx=0,my=0,i=0,ln=pathArray.length,r,pathSegment,j,ln2;if(ln&&pathArray[0][0]=="M"){x=+pathArray[0][1];y=+pathArray[0][2];mx=x;my=y;i++;res[0]=["M",x,y];}
for(;i<ln;i++){r=res[i]=[];pathSegment=pathArray[i];if(pathSegment[0]!=pathSegment[0].toUpperCase()){r[0]=pathSegment[0].toUpperCase();switch(r[0]){case"A":r[1]=pathSegment[1];r[2]=pathSegment[2];r[3]=pathSegment[3];r[4]=pathSegment[4];r[5]=pathSegment[5];r[6]=+(pathSegment[6]+x);r[7]=+(pathSegment[7]+y);break;case"V":r[1]=+pathSegment[1]+y;break;case"H":r[1]=+pathSegment[1]+x;break;case"M":mx=+pathSegment[1]+x;my=+pathSegment[2]+y;default:j=1;ln2=pathSegment.length;for(;j<ln2;j++){r[j]=+pathSegment[j]+((j%2)?x:y);}}}
else{j=0;ln2=pathSegment.length;for(;j<ln2;j++){res[i][j]=pathSegment[j];}}
switch(r[0]){case"Z":x=mx;y=my;break;case"H":x=r[1];break;case"V":y=r[1];break;case"M":pathSegment=res[i];ln2=pathSegment.length;mx=pathSegment[ln2-2];my=pathSegment[ln2-1];default:pathSegment=res[i];ln2=pathSegment.length;x=pathSegment[ln2-2];y=pathSegment[ln2-1];}}
res.toString=this.path2string;return res;},pathToRelative:function(pathArray){if(!this.is(pathArray,"array")||!this.is(pathArray&&pathArray[0],"array")){pathArray=this.parsePathString(pathArray);}
var res=[],x=0,y=0,mx=0,my=0,start=0,r,pa,i,j,k,len,ii,jj,kk;if(pathArray[0][0]=="M"){x=pathArray[0][1];y=pathArray[0][2];mx=x;my=y;start++;res.push(["M",x,y]);}
for(i=start,ii=pathArray.length;i<ii;i++){r=res[i]=[];pa=pathArray[i];if(pa[0]!=pa[0].toLowerCase()){r[0]=pa[0].toLowerCase();switch(r[0]){case"a":r[1]=pa[1];r[2]=pa[2];r[3]=pa[3];r[4]=pa[4];r[5]=pa[5];r[6]=+(pa[6]-x).toFixed(3);r[7]=+(pa[7]-y).toFixed(3);break;case"v":r[1]=+(pa[1]-y).toFixed(3);break;case"m":mx=pa[1];my=pa[2];default:for(j=1,jj=pa.length;j<jj;j++){r[j]=+(pa[j]-((j%2)?x:y)).toFixed(3);}}}else{r=res[i]=[];if(pa[0]=="m"){mx=pa[1]+x;my=pa[2]+y;}
for(k=0,kk=pa.length;k<kk;k++){res[i][k]=pa[k];}}
len=res[i].length;switch(res[i][0]){case"z":x=mx;y=my;break;case"h":x+=+res[i][len-1];break;case"v":y+=+res[i][len-1];break;default:x+=+res[i][len-2];y+=+res[i][len-1];}}
res.toString=this.path2string;return res;},path2curve:function(path){var me=this,points=me.pathToAbsolute(path),ln=points.length,attrs={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},i,seg,segLn,point;for(i=0;i<ln;i++){points[i]=me.command2curve(points[i],attrs);if(points[i].length>7){points[i].shift();point=points[i];while(point.length){Ext.Array.splice(points,i++,0,["C"].concat(Ext.Array.splice(point,0,6)));}
Ext.Array.erase(points,i,1);ln=points.length;i--;}
seg=points[i];segLn=seg.length;attrs.x=seg[segLn-2];attrs.y=seg[segLn-1];attrs.bx=parseFloat(seg[segLn-4])||attrs.x;attrs.by=parseFloat(seg[segLn-3])||attrs.y;}
return points;},interpolatePaths:function(path,path2){var me=this,p=me.pathToAbsolute(path),p2=me.pathToAbsolute(path2),attrs={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},attrs2={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},fixArc=function(pp,i){if(pp[i].length>7){pp[i].shift();var pi=pp[i];while(pi.length){Ext.Array.splice(pp,i++,0,["C"].concat(Ext.Array.splice(pi,0,6)));}
Ext.Array.erase(pp,i,1);ii=Math.max(p.length,p2.length||0);}},fixM=function(path1,path2,a1,a2,i){if(path1&&path2&&path1[i][0]=="M"&&path2[i][0]!="M"){Ext.Array.splice(path2,i,0,["M",a2.x,a2.y]);a1.bx=0;a1.by=0;a1.x=path1[i][1];a1.y=path1[i][2];ii=Math.max(p.length,p2.length||0);}},i,ii,seg,seg2,seglen,seg2len;for(i=0,ii=Math.max(p.length,p2.length||0);i<ii;i++){p[i]=me.command2curve(p[i],attrs);fixArc(p,i);(p2[i]=me.command2curve(p2[i],attrs2));fixArc(p2,i);fixM(p,p2,attrs,attrs2,i);fixM(p2,p,attrs2,attrs,i);seg=p[i];seg2=p2[i];seglen=seg.length;seg2len=seg2.length;attrs.x=seg[seglen-2];attrs.y=seg[seglen-1];attrs.bx=parseFloat(seg[seglen-4])||attrs.x;attrs.by=parseFloat(seg[seglen-3])||attrs.y;attrs2.bx=(parseFloat(seg2[seg2len-4])||attrs2.x);attrs2.by=(parseFloat(seg2[seg2len-3])||attrs2.y);attrs2.x=seg2[seg2len-2];attrs2.y=seg2[seg2len-1];}
return[p,p2];},command2curve:function(pathCommand,d){var me=this;if(!pathCommand){return["C",d.x,d.y,d.x,d.y,d.x,d.y];}
if(pathCommand[0]!="T"&&pathCommand[0]!="Q"){d.qx=d.qy=null;}
switch(pathCommand[0]){case"M":d.X=pathCommand[1];d.Y=pathCommand[2];break;case"A":pathCommand=["C"].concat(me.arc2curve.apply(me,[d.x,d.y].concat(pathCommand.slice(1))));break;case"S":pathCommand=["C",d.x+(d.x-(d.bx||d.x)),d.y+(d.y-(d.by||d.y))].concat(pathCommand.slice(1));break;case"T":d.qx=d.x+(d.x-(d.qx||d.x));d.qy=d.y+(d.y-(d.qy||d.y));pathCommand=["C"].concat(me.quadratic2curve(d.x,d.y,d.qx,d.qy,pathCommand[1],pathCommand[2]));break;case"Q":d.qx=pathCommand[1];d.qy=pathCommand[2];pathCommand=["C"].concat(me.quadratic2curve(d.x,d.y,pathCommand[1],pathCommand[2],pathCommand[3],pathCommand[4]));break;case"L":pathCommand=["C"].concat(d.x,d.y,pathCommand[1],pathCommand[2],pathCommand[1],pathCommand[2]);break;case"H":pathCommand=["C"].concat(d.x,d.y,pathCommand[1],d.y,pathCommand[1],d.y);break;case"V":pathCommand=["C"].concat(d.x,d.y,d.x,pathCommand[1],d.x,pathCommand[1]);break;case"Z":pathCommand=["C"].concat(d.x,d.y,d.X,d.Y,d.X,d.Y);break;}
return pathCommand;},quadratic2curve:function(x1,y1,ax,ay,x2,y2){var _13=1/3,_23=2/3;return[_13*x1+_23*ax,_13*y1+_23*ay,_13*x2+_23*ax,_13*y2+_23*ay,x2,y2];},rotate:function(x,y,rad){var cos=Math.cos(rad),sin=Math.sin(rad),X=x*cos-y*sin,Y=x*sin+y*cos;return{x:X,y:Y};},arc2curve:function(x1,y1,rx,ry,angle,large_arc_flag,sweep_flag,x2,y2,recursive){var me=this,PI=Math.PI,radian=me.radian,_120=PI*120/180,rad=radian*(+angle||0),res=[],math=Math,mcos=math.cos,msin=math.sin,msqrt=math.sqrt,mabs=math.abs,masin=math.asin,xy,cos,sin,x,y,h,rx2,ry2,k,cx,cy,f1,f2,df,c1,s1,c2,s2,t,hx,hy,m1,m2,m3,m4,newres,i,ln,f2old,x2old,y2old;if(!recursive){xy=me.rotate(x1,y1,-rad);x1=xy.x;y1=xy.y;xy=me.rotate(x2,y2,-rad);x2=xy.x;y2=xy.y;cos=mcos(radian*angle);sin=msin(radian*angle);x=(x1-x2)/2;y=(y1-y2)/2;h=(x*x)/(rx*rx)+(y*y)/(ry*ry);if(h>1){h=msqrt(h);rx=h*rx;ry=h*ry;}
rx2=rx*rx;ry2=ry*ry;k=(large_arc_flag==sweep_flag?-1:1)*msqrt(mabs((rx2*ry2-rx2*y*y-ry2*x*x)/(rx2*y*y+ry2*x*x)));cx=k*rx*y/ry+(x1+x2)/2;cy=k*-ry*x/rx+(y1+y2)/2;f1=masin(((y1-cy)/ry).toFixed(7));f2=masin(((y2-cy)/ry).toFixed(7));f1=x1<cx?PI-f1:f1;f2=x2<cx?PI-f2:f2;if(f1<0){f1=PI*2+f1;}
if(f2<0){f2=PI*2+f2;}
if(sweep_flag&&f1>f2){f1=f1-PI*2;}
if(!sweep_flag&&f2>f1){f2=f2-PI*2;}}
else{f1=recursive[0];f2=recursive[1];cx=recursive[2];cy=recursive[3];}
df=f2-f1;if(mabs(df)>_120){f2old=f2;x2old=x2;y2old=y2;f2=f1+_120*(sweep_flag&&f2>f1?1:-1);x2=cx+rx*mcos(f2);y2=cy+ry*msin(f2);res=me.arc2curve(x2,y2,rx,ry,angle,0,sweep_flag,x2old,y2old,[f2,f2old,cx,cy]);}
df=f2-f1;c1=mcos(f1);s1=msin(f1);c2=mcos(f2);s2=msin(f2);t=math.tan(df/4);hx=4/3*rx*t;hy=4/3*ry*t;m1=[x1,y1];m2=[x1+hx*s1,y1-hy*c1];m3=[x2+hx*s2,y2-hy*c2];m4=[x2,y2];m2[0]=2*m1[0]-m2[0];m2[1]=2*m1[1]-m2[1];if(recursive){return[m2,m3,m4].concat(res);}
else{res=[m2,m3,m4].concat(res).join().split(",");newres=[];ln=res.length;for(i=0;i<ln;i++){newres[i]=i%2?me.rotate(res[i-1],res[i],rad).y:me.rotate(res[i],res[i+1],rad).x;}
return newres;}},rotateAndTranslatePath:function(sprite){var alpha=sprite.rotation.degrees,cx=sprite.rotation.x,cy=sprite.rotation.y,dx=sprite.translation.x,dy=sprite.translation.y,path,i,p,xy,j,res=[];if(!alpha&&!dx&&!dy){return this.pathToAbsolute(sprite.attr.path);}
dx=dx||0;dy=dy||0;path=this.pathToAbsolute(sprite.attr.path);for(i=path.length;i--;){p=res[i]=path[i].slice();if(p[0]=="A"){xy=this.rotatePoint(p[6],p[7],alpha,cx,cy);p[6]=xy.x+dx;p[7]=xy.y+dy;}else{j=1;while(p[j+1]!=null){xy=this.rotatePoint(p[j],p[j+1],alpha,cx,cy);p[j]=xy.x+dx;p[j+1]=xy.y+dy;j+=2;}}}
return res;},rotatePoint:function(x,y,alpha,cx,cy){if(!alpha){return{x:x,y:y};}
cx=cx||0;cy=cy||0;x=x-cx;y=y-cy;alpha=alpha*this.radian;var cos=Math.cos(alpha),sin=Math.sin(alpha);return{x:x*cos-y*sin+cx,y:x*sin+y*cos+cy};},pathDimensions:function(path){if(!path||!(path+"")){return{x:0,y:0,width:0,height:0};}
path=this.path2curve(path);var x=0,y=0,X=[],Y=[],i=0,ln=path.length,p,xmin,ymin,xmax,ymax,dim;for(;i<ln;i++){p=path[i];if(p[0]=="M"){x=p[1];y=p[2];X.push(x);Y.push(y);}
else{dim=this.curveDim(x,y,p[1],p[2],p[3],p[4],p[5],p[6]);X=X.concat(dim.min.x,dim.max.x);Y=Y.concat(dim.min.y,dim.max.y);x=p[5];y=p[6];}}
xmin=Math.min.apply(0,X);ymin=Math.min.apply(0,Y);xmax=Math.max.apply(0,X);ymax=Math.max.apply(0,Y);return{x:Math.round(xmin),y:Math.round(ymin),path:path,width:Math.round(xmax-xmin),height:Math.round(ymax-ymin)};},intersectInside:function(path,cp1,cp2){return(cp2[0]-cp1[0])*(path[1]-cp1[1])>(cp2[1]-cp1[1])*(path[0]-cp1[0]);},intersectIntersection:function(s,e,cp1,cp2){var p=[],dcx=cp1[0]-cp2[0],dcy=cp1[1]-cp2[1],dpx=s[0]-e[0],dpy=s[1]-e[1],n1=cp1[0]*cp2[1]-cp1[1]*cp2[0],n2=s[0]*e[1]-s[1]*e[0],n3=1/(dcx*dpy-dcy*dpx);p[0]=(n1*dpx-n2*dcx)*n3;p[1]=(n1*dpy-n2*dcy)*n3;return p;},intersect:function(subjectPolygon,clipPolygon){var me=this,i=0,ln=clipPolygon.length,cp1=clipPolygon[ln-1],outputList=subjectPolygon,cp2,s,e,point,ln2,inputList,j;for(;i<ln;++i){cp2=clipPolygon[i];inputList=outputList;outputList=[];s=inputList[inputList.length-1];j=0;ln2=inputList.length;for(;j<ln2;j++){e=inputList[j];if(me.intersectInside(e,cp1,cp2)){if(!me.intersectInside(s,cp1,cp2)){outputList.push(me.intersectIntersection(s,e,cp1,cp2));}
outputList.push(e);}
else if(me.intersectInside(s,cp1,cp2)){outputList.push(me.intersectIntersection(s,e,cp1,cp2));}
s=e;}
cp1=cp2;}
return outputList;},bezier:function(a,b,c,d,x){if(x===0){return a;}
else if(x===1){return d;}
var du=1-x,d3=du*du*du,r=x/du;return d3*(a+r*(3*b+r*(3*c+d*r)));},bezierDim:function(a,b,c,d){var points=[],r,A,top,C,delta,bottom,s,min,max,i;if(a+3*c==d+3*b){r=a-b;r/=2*(a-b-b+c);if(r<1&&r>0){points.push(r);}}else{A=a-3*b+3*c-d;top=2*(a-b-b+c);C=a-b;delta=top*top-4*A*C;bottom=A+A;if(delta===0){r=top/bottom;if(r<1&&r>0){points.push(r);}}else if(delta>0){s=Math.sqrt(delta);r=(s+top)/bottom;if(r<1&&r>0){points.push(r);}
r=(top-s)/bottom;if(r<1&&r>0){points.push(r);}}}
min=Math.min(a,d);max=Math.max(a,d);for(i=0;i<points.length;i++){min=Math.min(min,this.bezier(a,b,c,d,points[i]));max=Math.max(max,this.bezier(a,b,c,d,points[i]));}
return[min,max];},curveDim:function(p1x,p1y,c1x,c1y,c2x,c2y,p2x,p2y){var x=this.bezierDim(p1x,c1x,c2x,p2x),y=this.bezierDim(p1y,c1y,c2y,p2y);return{min:{x:x[0],y:y[0]},max:{x:x[1],y:y[1]}};},getAnchors:function(prevX,prevY,curX,curY,nextX,nextY,value){value=value||4;var M=Math,PI=M.PI,halfPI=PI/2,abs=M.abs,sin=M.sin,cos=M.cos,atan=M.atan,control1Length,control2Length,control1Angle,control2Angle,control1X,control1Y,control2X,control2Y,alpha;control1Length=(curX-prevX)/value;control2Length=(nextX-curX)/value;if((curY>=prevY&&curY>=nextY)||(curY<=prevY&&curY<=nextY)){control1Angle=control2Angle=halfPI;}else{control1Angle=atan((curX-prevX)/abs(curY-prevY));if(prevY<curY){control1Angle=PI-control1Angle;}
control2Angle=atan((nextX-curX)/abs(curY-nextY));if(nextY<curY){control2Angle=PI-control2Angle;}}
alpha=halfPI-((control1Angle+control2Angle)%(PI*2))/2;if(alpha>halfPI){alpha-=PI;}
control1Angle+=alpha;control2Angle+=alpha;control1X=curX-control1Length*sin(control1Angle);control1Y=curY+control1Length*cos(control1Angle);control2X=curX+control2Length*sin(control2Angle);control2Y=curY+control2Length*cos(control2Angle);if((curY>prevY&&control1Y<prevY)||(curY<prevY&&control1Y>prevY)){control1X+=abs(prevY-control1Y)*(control1X-curX)/(control1Y-curY);control1Y=prevY;}
if((curY>nextY&&control2Y<nextY)||(curY<nextY&&control2Y>nextY)){control2X-=abs(nextY-control2Y)*(control2X-curX)/(control2Y-curY);control2Y=nextY;}
return{x1:control1X,y1:control1Y,x2:control2X,y2:control2Y};},smooth:function(originalPath,value){var path=this.path2curve(originalPath),newp=[path[0]],x=path[0][1],y=path[0][2],j,points,i=1,ii=path.length,beg=1,mx=x,my=y,cx=0,cy=0,pathi,pathil,pathim,pathiml,pathip,pathipl,begl;for(;i<ii;i++){pathi=path[i];pathil=pathi.length;pathim=path[i-1];pathiml=pathim.length;pathip=path[i+1];pathipl=pathip&&pathip.length;if(pathi[0]=="M"){mx=pathi[1];my=pathi[2];j=i+1;while(path[j][0]!="C"){j++;}
cx=path[j][5];cy=path[j][6];newp.push(["M",mx,my]);beg=newp.length;x=mx;y=my;continue;}
if(pathi[pathil-2]==mx&&pathi[pathil-1]==my&&(!pathip||pathip[0]=="M")){begl=newp[beg].length;points=this.getAnchors(pathim[pathiml-2],pathim[pathiml-1],mx,my,newp[beg][begl-2],newp[beg][begl-1],value);newp[beg][1]=points.x2;newp[beg][2]=points.y2;}
else if(!pathip||pathip[0]=="M"){points={x1:pathi[pathil-2],y1:pathi[pathil-1]};}else{points=this.getAnchors(pathim[pathiml-2],pathim[pathiml-1],pathi[pathil-2],pathi[pathil-1],pathip[pathipl-2],pathip[pathipl-1],value);}
newp.push(["C",x,y,points.x1,points.y1,pathi[pathil-2],pathi[pathil-1]]);x=points.x2;y=points.y2;}
return newp;},findDotAtSegment:function(p1x,p1y,c1x,c1y,c2x,c2y,p2x,p2y,t){var t1=1-t;return{x:Math.pow(t1,3)*p1x+Math.pow(t1,2)*3*t*c1x+t1*3*t*t*c2x+Math.pow(t,3)*p2x,y:Math.pow(t1,3)*p1y+Math.pow(t1,2)*3*t*c1y+t1*3*t*t*c2y+Math.pow(t,3)*p2y};},snapEnds:function(from,to,stepsMax,prettyNumbers){if(Ext.isDate(from)){return this.snapEndsByDate(from,to,stepsMax);}
var step=(to-from)/stepsMax,level=Math.floor(Math.log(step)/Math.LN10)+1,m=Math.pow(10,level),cur,floor,modulo=Math.round((step%m)*Math.pow(10,2-level)),interval=[[0,15],[20,4],[25,2],[50,9],[100,15]],stepCount=0,value,weight,i,topValue,topWeight=1e9,ln=interval.length;floor=Math.floor(from/m)*m;if(from==floor&&floor>0){floor=Math.floor((from-(m/10))/m)*m;}
cur=from=floor;if(prettyNumbers){for(i=0;i<ln;i++){value=interval[i][0];weight=(value-modulo)<0?1e6:(value-modulo)/interval[i][1];if(weight<topWeight){topValue=value;topWeight=weight;}}
step=Math.floor(step*Math.pow(10,-level))*Math.pow(10,level)+topValue*Math.pow(10,level-2);while(cur<to){cur+=step;stepCount++;}
to=+cur.toFixed(10);}else{stepCount=stepsMax;}
return{from:from,to:to,power:level,step:step,steps:stepCount};},snapEndsByDate:function(from,to,stepsMax,lockEnds){var selectedStep=false,scales=[[Ext.Date.MILLI,[1,2,5,10,20,50,100,200,250,500]],[Ext.Date.SECOND,[1,2,5,10,15,30]],[Ext.Date.MINUTE,[1,2,5,10,15,30]],[Ext.Date.HOUR,[1,2,3,4,6,12]],[Ext.Date.DAY,[1,2,7,14]],[Ext.Date.MONTH,[1,2,3,6]]],sLen=scales.length,stop=false,scale,j,yearDiff,s;for(s=0;s<sLen;s++){scale=scales[s];if(!stop){for(j=0;j<scale[1].length;j++){if(to<Ext.Date.add(from,scale[0],scale[1][j]*stepsMax)){selectedStep=[scale[0],scale[1][j]];stop=true;break;}}}}
if(!selectedStep){yearDiff=this.snapEnds(from.getFullYear(),to.getFullYear()+1,stepsMax,lockEnds);selectedStep=[Date.YEAR,Math.round(yearDiff.step)];}
return this.snapEndsByDateAndStep(from,to,selectedStep,lockEnds);},snapEndsByDateAndStep:function(from,to,step,lockEnds){var fromStat=[from.getFullYear(),from.getMonth(),from.getDate(),from.getHours(),from.getMinutes(),from.getSeconds(),from.getMilliseconds()],steps,testFrom,testTo,date,month,day,fractionalMonth,stepUnit=step[0],stepValue=step[1];if(lockEnds){testFrom=from;}else{switch(stepUnit){case Ext.Date.MILLI:testFrom=new Date(fromStat[0],fromStat[1],fromStat[2],fromStat[3],fromStat[4],fromStat[5],Math.floor(fromStat[6]/stepValue)*stepValue);break;case Ext.Date.SECOND:testFrom=new Date(fromStat[0],fromStat[1],fromStat[2],fromStat[3],fromStat[4],Math.floor(fromStat[5]/stepValue)*stepValue,0);break;case Ext.Date.MINUTE:testFrom=new Date(fromStat[0],fromStat[1],fromStat[2],fromStat[3],Math.floor(fromStat[4]/stepValue)*stepValue,0,0);break;case Ext.Date.HOUR:testFrom=new Date(fromStat[0],fromStat[1],fromStat[2],Math.floor(fromStat[3]/stepValue)*stepValue,0,0,0);break;case Ext.Date.DAY:testFrom=new Date(fromStat[0],fromStat[1],Math.floor((fromStat[2]-1)/stepValue)*stepValue+1,0,0,0,0);break;case Ext.Date.MONTH:testFrom=new Date(fromStat[0],Math.floor(fromStat[1]/stepValue)*stepValue,1,0,0,0,0);break;default:testFrom=new Date(Math.floor(fromStat[0]/stepValue)*stepValue,0,1,0,0,0,0);break;}}
fractionalMonth=((stepUnit===Ext.Date.MONTH)&&(stepValue==1/2||stepValue==1/3||stepValue==1/4));steps=(fractionalMonth?[]:0);testTo=new Date(testFrom);while(testTo<to){if(fractionalMonth){date=new Date(testTo);year=date.getFullYear();month=date.getMonth();day=date.getDate();switch(stepValue){case 1/2:if(day>=15){day=1;if(++month>11){year++;}}
else{day=15;}
break;case 1/3:if(day>=20){day=1;if(++month>11){year++;}}
else{if(day>=10){day=20}
else{day=10;}}
break;case 1/4:if(day>=22){day=1;if(++month>11){year++;}}
else{if(day>=15){day=22}
else{if(day>=8){day=15}
else{day=8;}}}
break;}
testTo.setYear(year);testTo.setMonth(month);testTo.setDate(day);steps.push(new Date(testTo));}
else{testTo=Ext.Date.add(testTo,stepUnit,stepValue);steps++;}}
if(lockEnds){testTo=to;}
if(fractionalMonth){return{from:+testFrom,to:+testTo,steps:steps};}
else{return{from:+testFrom,to:+testTo,step:(testTo-testFrom)/steps,steps:steps};}},sorter:function(a,b){return a.offset-b.offset;},rad:function(degrees){return degrees%360*Math.PI/180;},degrees:function(radian){return radian*180/Math.PI%360;},withinBox:function(x,y,bbox){bbox=bbox||{};return(x>=bbox.x&&x<=(bbox.x+bbox.width)&&y>=bbox.y&&y<=(bbox.y+bbox.height));},parseGradient:function(gradient){var me=this,type=gradient.type||'linear',angle=gradient.angle||0,radian=me.radian,stops=gradient.stops,stopsArr=[],stop,vector,max,stopObj;if(type=='linear'){vector=[0,0,Math.cos(angle*radian),Math.sin(angle*radian)];max=1/(Math.max(Math.abs(vector[2]),Math.abs(vector[3]))||1);vector[2]*=max;vector[3]*=max;if(vector[2]<0){vector[0]=-vector[2];vector[2]=0;}
if(vector[3]<0){vector[1]=-vector[3];vector[3]=0;}}
for(stop in stops){if(stops.hasOwnProperty(stop)&&me.stopsRE.test(stop)){stopObj={offset:parseInt(stop,10),color:Ext.draw.Color.toHex(stops[stop].color)||'#ffffff',opacity:stops[stop].opacity||1};stopsArr.push(stopObj);}}
Ext.Array.sort(stopsArr,me.sorter);if(type=='linear'){return{id:gradient.id,type:type,vector:vector,stops:stopsArr};}
else{return{id:gradient.id,type:type,centerX:gradient.centerX,centerY:gradient.centerY,focalX:gradient.focalX,focalY:gradient.focalY,radius:gradient.radius,vector:vector,stops:stopsArr};}}});Ext.define('Ext.fx.PropertyHandler',{requires:['Ext.draw.Draw'],statics:{defaultHandler:{pixelDefaultsRE:/width|height|top$|bottom$|left$|right$/i,unitRE:/^(-?\d*\.?\d*){1}(em|ex|px|in|cm|mm|pt|pc|%)*$/,scrollRE:/^scroll/i,computeDelta:function(from,end,damper,initial,attr){damper=(typeof damper=='number')?damper:1;var unitRE=this.unitRE,match=unitRE.exec(from),start,units;if(match){from=match[1];units=match[2];if(!this.scrollRE.test(attr)&&!units&&this.pixelDefaultsRE.test(attr)){units='px';}}
from=+from||0;match=unitRE.exec(end);if(match){end=match[1];units=match[2]||units;}
end=+end||0;start=(initial!=null)?initial:from;return{from:from,delta:(end-start)*damper,units:units};},get:function(from,end,damper,initialFrom,attr){var ln=from.length,out=[],i,initial,res,j,len;for(i=0;i<ln;i++){if(initialFrom){initial=initialFrom[i][1].from;}
if(Ext.isArray(from[i][1])&&Ext.isArray(end)){res=[];j=0;len=from[i][1].length;for(;j<len;j++){res.push(this.computeDelta(from[i][1][j],end[j],damper,initial,attr));}
out.push([from[i][0],res]);}
else{out.push([from[i][0],this.computeDelta(from[i][1],end,damper,initial,attr)]);}}
return out;},set:function(values,easing){var ln=values.length,out=[],i,val,res,len,j;for(i=0;i<ln;i++){val=values[i][1];if(Ext.isArray(val)){res=[];j=0;len=val.length;for(;j<len;j++){res.push(val[j].from+val[j].delta*easing+(val[j].units||0));}
out.push([values[i][0],res]);}else{out.push([values[i][0],val.from+val.delta*easing+(val.units||0)]);}}
return out;}},stringHandler:{computeDelta:function(from,end,damper,initial,attr){return{from:from,delta:end};},get:function(from,end,damper,initialFrom,attr){var ln=from.length,out=[],i,initial,res,j,len;for(i=0;i<ln;i++){out.push([from[i][0],this.computeDelta(from[i][1],end,damper,initial,attr)]);}
return out;},set:function(values,easing){var ln=values.length,out=[],i,val,res,len,j;for(i=0;i<ln;i++){val=values[i][1];out.push([values[i][0],val.delta]);}
return out;}},color:{rgbRE:/^rgb\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\)$/i,hexRE:/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,hex3RE:/^#?([0-9A-F]{1})([0-9A-F]{1})([0-9A-F]{1})$/i,parseColor:function(color,damper){damper=(typeof damper=='number')?damper:1;var out=false,reList=[this.hexRE,this.rgbRE,this.hex3RE],length=reList.length,match,base,re,i;for(i=0;i<length;i++){re=reList[i];base=(i%2===0)?16:10;match=re.exec(color);if(match&&match.length===4){if(i===2){match[1]+=match[1];match[2]+=match[2];match[3]+=match[3];}
out={red:parseInt(match[1],base),green:parseInt(match[2],base),blue:parseInt(match[3],base)};break;}}
return out||color;},computeDelta:function(from,end,damper,initial){from=this.parseColor(from);end=this.parseColor(end,damper);var start=initial?initial:from,tfrom=typeof start,tend=typeof end;if(tfrom=='string'||tfrom=='undefined'||tend=='string'||tend=='undefined'){return end||start;}
return{from:from,delta:{red:Math.round((end.red-start.red)*damper),green:Math.round((end.green-start.green)*damper),blue:Math.round((end.blue-start.blue)*damper)}};},get:function(start,end,damper,initialFrom){var ln=start.length,out=[],i,initial;for(i=0;i<ln;i++){if(initialFrom){initial=initialFrom[i][1].from;}
out.push([start[i][0],this.computeDelta(start[i][1],end,damper,initial)]);}
return out;},set:function(values,easing){var ln=values.length,out=[],i,val,parsedString,from,delta;for(i=0;i<ln;i++){val=values[i][1];if(val){from=val.from;delta=val.delta;val=(typeof val=='object'&&'red'in val)?'rgb('+val.red+', '+val.green+', '+val.blue+')':val;val=(typeof val=='object'&&val.length)?val[0]:val;if(typeof val=='undefined'){return[];}
parsedString=typeof val=='string'?val:'rgb('+[(from.red+Math.round(delta.red*easing))%256,(from.green+Math.round(delta.green*easing))%256,(from.blue+Math.round(delta.blue*easing))%256].join(',')+')';out.push([values[i][0],parsedString]);}}
return out;}},object:{interpolate:function(prop,damper){damper=(typeof damper=='number')?damper:1;var out={},p;for(p in prop){out[p]=parseFloat(prop[p])*damper;}
return out;},computeDelta:function(from,end,damper,initial){from=this.interpolate(from);end=this.interpolate(end,damper);var start=initial?initial:from,delta={},p;for(p in end){delta[p]=end[p]-start[p];}
return{from:from,delta:delta};},get:function(start,end,damper,initialFrom){var ln=start.length,out=[],i,initial;for(i=0;i<ln;i++){if(initialFrom){initial=initialFrom[i][1].from;}
out.push([start[i][0],this.computeDelta(start[i][1],end,damper,initial)]);}
return out;},set:function(values,easing){var ln=values.length,out=[],outObject={},i,from,delta,val,p;for(i=0;i<ln;i++){val=values[i][1];from=val.from;delta=val.delta;for(p in from){outObject[p]=from[p]+delta[p]*easing;}
out.push([values[i][0],outObject]);}
return out;}},path:{computeDelta:function(from,end,damper,initial){damper=(typeof damper=='number')?damper:1;var start;from=+from||0;end=+end||0;start=(initial!=null)?initial:from;return{from:from,delta:(end-start)*damper};},forcePath:function(path){if(!Ext.isArray(path)&&!Ext.isArray(path[0])){path=Ext.draw.Draw.parsePathString(path);}
return path;},get:function(start,end,damper,initialFrom){var endPath=this.forcePath(end),out=[],startLn=start.length,startPathLn,pointsLn,i,deltaPath,initial,j,k,path,startPath;for(i=0;i<startLn;i++){startPath=this.forcePath(start[i][1]);deltaPath=Ext.draw.Draw.interpolatePaths(startPath,endPath);startPath=deltaPath[0];endPath=deltaPath[1];startPathLn=startPath.length;path=[];for(j=0;j<startPathLn;j++){deltaPath=[startPath[j][0]];pointsLn=startPath[j].length;for(k=1;k<pointsLn;k++){initial=initialFrom&&initialFrom[0][1][j][k].from;deltaPath.push(this.computeDelta(startPath[j][k],endPath[j][k],damper,initial));}
path.push(deltaPath);}
out.push([start[i][0],path]);}
return out;},set:function(values,easing){var ln=values.length,out=[],i,j,k,newPath,calcPath,deltaPath,deltaPathLn,pointsLn;for(i=0;i<ln;i++){deltaPath=values[i][1];newPath=[];deltaPathLn=deltaPath.length;for(j=0;j<deltaPathLn;j++){calcPath=[deltaPath[j][0]];pointsLn=deltaPath[j].length;for(k=1;k<pointsLn;k++){calcPath.push(deltaPath[j][k].from+deltaPath[j][k].delta*easing);}
newPath.push(calcPath.join(','));}
out.push([values[i][0],newPath.join(',')]);}
return out;}}}},function(){var props=['outlineColor','backgroundColor','borderColor','borderTopColor','borderRightColor','borderBottomColor','borderLeftColor','fill','stroke'],length=props.length,i=0,prop;for(;i<length;i++){prop=props[i];this[prop]=this.color;}
props=['cursor'];length=props.length;i=0;for(;i<length;i++){prop=props[i];this[prop]=this.stringHandler;}});Ext.define('Ext.fx.Anim',{mixins:{observable:'Ext.util.Observable'},requires:['Ext.fx.Manager','Ext.fx.Animator','Ext.fx.Easing','Ext.fx.CubicBezier','Ext.fx.PropertyHandler'],isAnimation:true,duration:250,delay:0,delayStart:0,dynamic:false,easing:'ease',damper:1,bezierRE:/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,reverse:false,running:false,paused:false,iterations:1,alternate:false,currentIteration:0,startTime:0,frameCount:0,constructor:function(config){var me=this,curve;config=config||{};if(config.keyframes){return new Ext.fx.Animator(config);}
Ext.apply(me,config);if(me.from===undefined){me.from={};}
me.propHandlers={};me.config=config;me.target=Ext.fx.Manager.createTarget(me.target);me.easingFn=Ext.fx.Easing[me.easing];me.target.dynamic=me.dynamic;if(!me.easingFn){me.easingFn=String(me.easing).match(me.bezierRE);if(me.easingFn&&me.easingFn.length==5){curve=me.easingFn;me.easingFn=Ext.fx.CubicBezier.cubicBezier(+curve[1],+curve[2],+curve[3],+curve[4]);}}
me.id=Ext.id(null,'ext-anim-');me.addEvents('beforeanimate','afteranimate','lastframe');me.mixins.observable.constructor.call(me);Ext.fx.Manager.addAnim(me);},setAttr:function(attr,value){return Ext.fx.Manager.items.get(this.id).setAttr(this.target,attr,value);},initAttrs:function(){var me=this,from=me.from,to=me.to,initialFrom=me.initialFrom||{},out={},start,end,propHandler,attr;for(attr in to){if(to.hasOwnProperty(attr)){start=me.target.getAttr(attr,from[attr]);end=to[attr];if(!Ext.fx.PropertyHandler[attr]){if(Ext.isObject(end)){propHandler=me.propHandlers[attr]=Ext.fx.PropertyHandler.object;}else{propHandler=me.propHandlers[attr]=Ext.fx.PropertyHandler.defaultHandler;}}
else{propHandler=me.propHandlers[attr]=Ext.fx.PropertyHandler[attr];}
out[attr]=propHandler.get(start,end,me.damper,initialFrom[attr],attr);}}
me.currentAttrs=out;},start:function(startTime){var me=this,delay=me.delay,delayStart=me.delayStart,delayDelta;if(delay){if(!delayStart){me.delayStart=startTime;return;}
else{delayDelta=startTime-delayStart;if(delayDelta<delay){return;}
else{startTime=new Date(delayStart.getTime()+delay);}}}
if(me.fireEvent('beforeanimate',me)!==false){me.startTime=startTime;if(!me.paused&&!me.currentAttrs){me.initAttrs();}
me.running=true;me.frameCount=0;}},runAnim:function(elapsedTime){var me=this,attrs=me.currentAttrs,duration=me.duration,easingFn=me.easingFn,propHandlers=me.propHandlers,ret={},easing,values,attr,lastFrame;if(elapsedTime>=duration){elapsedTime=duration;lastFrame=true;}
if(me.reverse){elapsedTime=duration-elapsedTime;}
for(attr in attrs){if(attrs.hasOwnProperty(attr)){values=attrs[attr];easing=lastFrame?1:easingFn(elapsedTime/duration);ret[attr]=propHandlers[attr].set(values,easing);}}
me.frameCount++;return ret;},lastFrame:function(){var me=this,iter=me.iterations,iterCount=me.currentIteration;iterCount++;if(iterCount<iter){if(me.alternate){me.reverse=!me.reverse;}
me.startTime=new Date();me.currentIteration=iterCount;me.paused=false;}
else{me.currentIteration=0;me.end();me.fireEvent('lastframe',me,me.startTime);}},endWasCalled:0,end:function(){if(this.endWasCalled++){return;}
var me=this;me.startTime=0;me.paused=false;me.running=false;Ext.fx.Manager.removeAnim(me);me.fireEvent('afteranimate',me,me.startTime);Ext.callback(me.callback,me.scope,[me,me.startTime]);},isReady:function(){return this.paused===false&&this.running===false&&this.iterations>0;},isRunning:function(){return this.paused===false&&this.running===true&&this.isAnimator!==true;}});Ext.enableFx=true;Ext.define('Ext.layout.Context',{requires:['Ext.util.Queue','Ext.layout.ContextItem','Ext.layout.Layout','Ext.fx.Anim','Ext.fx.Manager'],remainingLayouts:0,state:0,constructor:function(config){var me=this;Ext.apply(me,config);me.items={};me.layouts={};me.blockCount=0;me.cycleCount=0;me.flushCount=0;me.calcCount=0;me.animateQueue=me.newQueue();me.completionQueue=me.newQueue();me.finalizeQueue=me.newQueue();me.finishQueue=me.newQueue();me.flushQueue=me.newQueue();me.invalidateData={};me.layoutQueue=me.newQueue();me.invalidQueue=[];me.triggers={data:{},dom:{}};},callLayout:function(layout,methodName){this.currentLayout=layout;layout[methodName](this.getCmp(layout.owner));},cancelComponent:function(comp,isChild,isDestroying){var me=this,components=comp,isArray=!comp.isComponent,length=isArray?components.length:1,i,k,klen,items,layout,newQueue,oldQueue,entry,temp,ownerCtContext;for(i=0;i<length;++i){if(isArray){comp=components[i];}
if(isDestroying&&comp.ownerCt){ownerCtContext=this.items[comp.ownerCt.el.id];if(ownerCtContext){Ext.Array.remove(ownerCtContext.childItems,me.getCmp(comp));}}
if(!isChild){oldQueue=me.invalidQueue;klen=oldQueue.length;if(klen){me.invalidQueue=newQueue=[];for(k=0;k<klen;++k){entry=oldQueue[k];temp=entry.item.target;if(temp!=comp&&!temp.isDescendant(comp)){newQueue.push(entry);}}}}
layout=comp.componentLayout;me.cancelLayout(layout);if(layout.getLayoutItems){items=layout.getLayoutItems();if(items.length){me.cancelComponent(items,true);}}
if(comp.isContainer&&!comp.collapsed){layout=comp.layout;me.cancelLayout(layout);items=layout.getVisibleItems();if(items.length){me.cancelComponent(items,true);}}}},cancelLayout:function(layout){var me=this;me.completionQueue.remove(layout);me.finalizeQueue.remove(layout);me.finishQueue.remove(layout);me.layoutQueue.remove(layout);if(layout.running){me.layoutDone(layout);}
layout.ownerContext=null;},clearTriggers:function(layout,inDom){var id=layout.id,collection=this.triggers[inDom?'dom':'data'],triggers=collection&&collection[id],length=(triggers&&triggers.length)||0,collection,i,item,trigger;for(i=0;i<length;++i){trigger=triggers[i];item=trigger.item;collection=inDom?item.domTriggers:item.triggers;delete collection[trigger.prop][id];}},flush:function(){var me=this,items=me.flushQueue.clear(),length=items.length,i;if(length){++me.flushCount;for(i=0;i<length;++i){items[i].flush();}}},flushAnimations:function(){var me=this,items=me.animateQueue.clear(),len=items.length,i;if(len){for(i=0;i<len;i++){if(items[i].target.animate!==false){items[i].flushAnimations();}}
Ext.fx.Manager.runner();}},flushInvalidates:function(){var me=this,queue=me.invalidQueue,length=queue&&queue.length,comp,components,entry,i;me.invalidQueue=[];if(length){components=[];for(i=0;i<length;++i){comp=(entry=queue[i]).item.target;if(!comp.container.isDetachedBody){components.push(comp);if(entry.options){me.invalidateData[comp.id]=entry.options;}}}
me.invalidate(components,null);}},flushLayouts:function(queueName,methodName,dontClear){var me=this,layouts=dontClear?me[queueName].items:me[queueName].clear(),length=layouts.length,i,layout;if(length){for(i=0;i<length;++i){layout=layouts[i];if(!layout.running){me.callLayout(layout,methodName);}}
me.currentLayout=null;}},getCmp:function(cmp){return this.getItem(cmp,cmp.el);},getEl:function(parent,el){var item=this.getItem(el,el);if(!item.parent){item.parent=parent;if(parent.children.length){parent.children.push(item);}else{parent.children=[item];}}
return item;},getItem:function(target,el){var id=el.id,items=this.items,item=items[id]||(items[id]=new Ext.layout.ContextItem({context:this,target:target,el:el}));return item;},handleFailure:function(){var layouts=this.layouts,layout,key;Ext.failedLayouts=(Ext.failedLayouts||0)+1;Ext.log('Layout run failed');for(key in layouts){layout=layouts[key];if(layouts.hasOwnProperty(key)){layout.running=false;layout.ownerContext=null;}}},invalidate:function(components,full){var me=this,isArray=!components.isComponent,componentChildrenDone,containerChildrenDone,containerLayoutDone,firstTime,i,comp,item,items,length,componentLayout,layout,invalidateOptions,token;for(i=0,length=isArray?components.length:1;i<length;++i){comp=isArray?components[i]:components;if(comp.rendered&&!comp.hidden){item=me.getCmp(comp);componentLayout=comp.componentLayout;firstTime=!componentLayout.ownerContext;layout=(comp.isContainer&&!comp.collapsed)?comp.layout:null;invalidateOptions=me.invalidateData[item.id];delete me.invalidateData[item.id];token=item.init(full,invalidateOptions);if(invalidateOptions){me.processInvalidate(invalidateOptions,item,'before');}
if(componentLayout.beforeLayoutCycle){componentLayout.beforeLayoutCycle(item);}
token=item.initContinue(token);componentChildrenDone=containerChildrenDone=containerLayoutDone=true;if(componentLayout.getLayoutItems){componentLayout.renderChildren();items=componentLayout.getLayoutItems();if(items.length){me.invalidate(items,true);componentChildrenDone=false;}}
if(layout){containerLayoutDone=false;layout.renderChildren();items=layout.getVisibleItems();if(items.length){me.invalidate(items,true);containerChildrenDone=false;}}
item.initDone(token,componentChildrenDone,containerChildrenDone,containerLayoutDone);me.resetLayout(componentLayout,item,firstTime);if(layout){me.resetLayout(layout,item,firstTime);}
item.initAnimation();if(invalidateOptions){me.processInvalidate(invalidateOptions,item,'after');}}}
me.currentLayout=null;},layoutDone:function(layout){var ownerContext=layout.ownerContext,ownerCtContext;layout.running=false;if(layout.isComponentLayout){if(ownerContext.measuresBox){ownerContext.onBoxMeasured();}
ownerContext.setProp('done',true);ownerCtContext=ownerContext.ownerCtContext;if(ownerCtContext){if(ownerContext.target.ownerLayout.isComponentLayout){if(!--ownerCtContext.remainingComponentChildLayouts){ownerCtContext.setProp('componentChildrenDone',true);}}else{if(!--ownerCtContext.remainingContainerChildLayouts){ownerCtContext.setProp('containerChildrenDone',true);}}
if(!--ownerCtContext.remainingChildLayouts){ownerCtContext.setProp('childrenDone',true);}}}else{ownerContext.setProp('containerLayoutDone',true);}
--this.remainingLayouts;++this.progressCount;},newQueue:function(){return new Ext.util.Queue();},processInvalidate:function(options,item,name){if(options[name]){var me=this,currentLayout=me.currentLayout;me.currentLayout=options.layout||null;options[name](item,options);me.currentLayout=currentLayout;}},queueAnimation:function(item){this.animateQueue.add(item);},queueCompletion:function(layout){this.completionQueue.add(layout);},queueFinalize:function(layout){this.finalizeQueue.add(layout);},queueFlush:function(item){this.flushQueue.add(item);},chainFns:function(oldOptions,newOptions,funcName){var me=this,oldLayout=oldOptions.layout,newLayout=newOptions.layout,oldFn=oldOptions[funcName],newFn=newOptions[funcName];return function(contextItem){var prev=me.currentLayout;if(oldFn){me.currentLayout=oldLayout;oldFn.call(oldOptions.scope||oldOptions,contextItem,oldOptions);}
me.currentLayout=newLayout;newFn.call(newOptions.scope||newOptions,contextItem,newOptions);me.currentLayout=prev;};},queueInvalidate:function(item,options){var me=this,newQueue=[],oldQueue=me.invalidQueue,index=oldQueue.length,comp,old,oldComp,oldOptions,oldState;if(item.isComponent){item=me.getCmp(comp=item);}else{comp=item.target;}
item.invalid=true;while(index--){old=oldQueue[index];oldComp=old.item.target;if(comp.isDescendant(oldComp)){return;}
if(oldComp==comp){if(!(oldOptions=old.options)){old.options=options;}else if(options){if(options.widthModel){oldOptions.widthModel=options.widthModel;}
if(options.heightModel){oldOptions.heightModel=options.heightModel;}
if(!(oldState=oldOptions.state)){oldOptions.state=options.state;}else if(options.state){Ext.apply(oldState,options.state);}
if(options.before){oldOptions.before=me.chainFns(oldOptions,options,'before');}
if(options.after){oldOptions.after=me.chainFns(oldOptions,options,'after');}}
return;}
if(!oldComp.isDescendant(comp)){newQueue.push(old);}}
newQueue.push({item:item,options:options});me.invalidQueue=newQueue;},queueItemLayouts:function(item){var comp=item.isComponent?item:item.target,layout=comp.componentLayout;if(!layout.pending&&!layout.invalid&&!layout.done){this.queueLayout(layout);}
layout=comp.layout;if(layout&&!layout.pending&&!layout.invalid&&!layout.done){this.queueLayout(layout);}},queueLayout:function(layout){this.layoutQueue.add(layout);layout.pending=true;},resetLayout:function(layout,ownerContext,firstTime){var me=this,ownerCtContext;me.currentLayout=layout;layout.done=false;layout.pending=true;layout.firedTriggers=0;me.layoutQueue.add(layout);if(firstTime){me.layouts[layout.id]=layout;layout.running=true;if(layout.finishedLayout){me.finishQueue.add(layout);}
++me.remainingLayouts;++layout.layoutCount;layout.ownerContext=ownerContext;layout.beginCount=0;layout.blockCount=0;layout.calcCount=0;layout.triggerCount=0;if(layout.isComponentLayout&&(ownerCtContext=ownerContext.ownerCtContext)){if(ownerContext.target.ownerLayout.isComponentLayout){++ownerCtContext.remainingComponentChildLayouts;}else{++ownerCtContext.remainingContainerChildLayouts;}
++ownerCtContext.remainingChildLayouts;}
if(!layout.initialized){layout.initLayout();}
layout.beginLayout(ownerContext);}else{++layout.beginCount;if(!layout.running){++me.remainingLayouts;layout.running=true;if(layout.isComponentLayout){ownerContext.unsetProp('done');ownerCtContext=ownerContext.ownerCtContext;if(ownerCtContext){if(ownerContext.target.ownerLayout.isComponentLayout){if(++ownerCtContext.remainingComponentChildLayouts==1){ownerCtContext.unsetProp('componentChildrenDone');}}else{if(++ownerCtContext.remainingContainerChildLayouts==1){ownerCtContext.unsetProp('containerChildrenDone');}}
if(++ownerCtContext.remainingChildLayouts==1){ownerCtContext.unsetProp('childrenDone');}}}
me.completionQueue.remove(layout);me.finalizeQueue.remove(layout);}}
layout.beginLayoutCycle(ownerContext,firstTime);},run:function(){var me=this,flushed=false,watchDog=100;me.flushInvalidates();me.state=1;me.totalCount=me.layoutQueue.getCount();me.flush();while((me.remainingLayouts||me.invalidQueue.length)&&watchDog--){if(me.invalidQueue.length){me.flushInvalidates();}
if(me.runCycle()){flushed=false;}else if(!flushed){me.flush();flushed=true;me.flushLayouts('completionQueue','completeLayout');}else{me.state=2;break;}
if(!(me.remainingLayouts||me.invalidQueue.length)){me.flush();me.flushLayouts('completionQueue','completeLayout');me.flushLayouts('finalizeQueue','finalizeLayout');}}
return me.runComplete();},runComplete:function(){var me=this;me.state=2;if(me.remainingLayouts){me.handleFailure();return false;}
me.flush();me.flushLayouts('finishQueue','finishedLayout',true);me.flushLayouts('finishQueue','notifyOwner');me.flush();me.flushAnimations();return true;},runCycle:function(){var me=this,layouts=me.layoutQueue.clear(),length=layouts.length,i;++me.cycleCount;me.progressCount=0;for(i=0;i<length;++i){me.runLayout(me.currentLayout=layouts[i]);}
me.currentLayout=null;return me.progressCount>0;},runLayout:function(layout){var me=this,ownerContext=me.getCmp(layout.owner);layout.pending=false;if(ownerContext.state.blocks){return;}
layout.done=true;++layout.calcCount;++me.calcCount;layout.calculate(ownerContext);if(layout.done){me.layoutDone(layout);if(layout.completeLayout){me.queueCompletion(layout);}
if(layout.finalizeLayout){me.queueFinalize(layout);}}else if(!layout.pending&&!layout.invalid&&!(layout.blockCount+layout.triggerCount-layout.firedTriggers)){me.queueLayout(layout);}},setItemSize:function(item,width,height){var items=item,len=1,contextItem,i;if(item.isComposite){items=item.elements;len=items.length;item=items[0];}else if(!item.dom&&!item.el){len=items.length;item=items[0];}
for(i=0;i<len;){contextItem=this.get(item);contextItem.setSize(width,height);item=items[++i];}}});Ext.define('Ext.dd.DragDropManager',{singleton:true,requires:['Ext.util.Region'],uses:['Ext.tip.QuickTipManager'],alternateClassName:['Ext.dd.DragDropMgr','Ext.dd.DDM'],ids:{},handleIds:{},dragCurrent:null,dragOvers:{},deltaX:0,deltaY:0,preventDefault:true,stopPropagation:true,initialized:false,locked:false,init:function(){this.initialized=true;},POINT:0,INTERSECT:1,mode:0,notifyOccluded:false,_execOnAll:function(sMethod,args){var i,j,oDD;for(i in this.ids){for(j in this.ids[i]){oDD=this.ids[i][j];if(!this.isTypeOfDD(oDD)){continue;}
oDD[sMethod].apply(oDD,args);}}},_onLoad:function(){this.init();var Event=Ext.EventManager;Event.on(document,"mouseup",this.handleMouseUp,this,true);Event.on(document,"mousemove",this.handleMouseMove,this,true);Event.on(window,"unload",this._onUnload,this,true);Event.on(window,"resize",this._onResize,this,true);},_onResize:function(e){this._execOnAll("resetConstraints",[]);},lock:function(){this.locked=true;},unlock:function(){this.locked=false;},isLocked:function(){return this.locked;},locationCache:{},useCache:true,clickPixelThresh:3,clickTimeThresh:350,dragThreshMet:false,clickTimeout:null,startX:0,startY:0,regDragDrop:function(oDD,sGroup){if(!this.initialized){this.init();}
if(!this.ids[sGroup]){this.ids[sGroup]={};}
this.ids[sGroup][oDD.id]=oDD;},removeDDFromGroup:function(oDD,sGroup){if(!this.ids[sGroup]){this.ids[sGroup]={};}
var obj=this.ids[sGroup];if(obj&&obj[oDD.id]){delete obj[oDD.id];}},_remove:function(oDD){for(var g in oDD.groups){if(g&&this.ids[g]&&this.ids[g][oDD.id]){delete this.ids[g][oDD.id];}}
delete this.handleIds[oDD.id];},regHandle:function(sDDId,sHandleId){if(!this.handleIds[sDDId]){this.handleIds[sDDId]={};}
this.handleIds[sDDId][sHandleId]=sHandleId;},isDragDrop:function(id){return(this.getDDById(id))?true:false;},getRelated:function(p_oDD,bTargetsOnly){var oDDs=[],i,j,dd;for(i in p_oDD.groups){for(j in this.ids[i]){dd=this.ids[i][j];if(!this.isTypeOfDD(dd)){continue;}
if(!bTargetsOnly||dd.isTarget){oDDs[oDDs.length]=dd;}}}
return oDDs;},isLegalTarget:function(oDD,oTargetDD){var targets=this.getRelated(oDD,true),i,len;for(i=0,len=targets.length;i<len;++i){if(targets[i].id==oTargetDD.id){return true;}}
return false;},isTypeOfDD:function(oDD){return(oDD&&oDD.__ygDragDrop);},isHandle:function(sDDId,sHandleId){return(this.handleIds[sDDId]&&this.handleIds[sDDId][sHandleId]);},getDDById:function(id){var i,dd;for(i in this.ids){dd=this.ids[i][id];if(dd instanceof Ext.dd.DDTarget){return dd;}}
return null;},handleMouseDown:function(e,oDD){if(Ext.quickTipsActive){Ext.tip.QuickTipManager.ddDisable();}
if(this.dragCurrent){this.handleMouseUp(e);}
this.currentTarget=e.getTarget();this.dragCurrent=oDD;var el=oDD.getEl();if(Ext.isIE&&el.setCapture){el.setCapture();}
this.startX=e.getPageX();this.startY=e.getPageY();this.deltaX=this.startX-el.offsetLeft;this.deltaY=this.startY-el.offsetTop;this.dragThreshMet=false;this.clickTimeout=setTimeout(function(){var DDM=Ext.dd.DragDropManager;DDM.startDrag(DDM.startX,DDM.startY);},this.clickTimeThresh);},startDrag:function(x,y){clearTimeout(this.clickTimeout);if(this.dragCurrent){this.dragCurrent.b4StartDrag(x,y);this.dragCurrent.startDrag(x,y);}
this.dragThreshMet=true;},handleMouseUp:function(e){var current=this.dragCurrent;if(Ext.quickTipsActive){Ext.tip.QuickTipManager.ddEnable();}
if(!current){return;}
if(Ext.isIE&&document.releaseCapture){document.releaseCapture();}
clearTimeout(this.clickTimeout);if(this.dragThreshMet){this.fireEvents(e,true);}
this.stopDrag(e);this.stopEvent(e);},stopEvent:function(e){if(this.stopPropagation){e.stopPropagation();}
if(this.preventDefault){e.preventDefault();}},stopDrag:function(e){if(this.dragCurrent){if(this.dragThreshMet){this.dragCurrent.b4EndDrag(e);this.dragCurrent.endDrag(e);}
this.dragCurrent.onMouseUp(e);}
this.dragCurrent=null;this.dragOvers={};},handleMouseMove:function(e){var me=this,diffX,diffY;if(!me.dragCurrent){return true;}
if(!me.dragThreshMet){diffX=Math.abs(me.startX-e.getPageX());diffY=Math.abs(me.startY-e.getPageY());if(diffX>me.clickPixelThresh||diffY>me.clickPixelThresh){me.startDrag(me.startX,me.startY);}}
if(me.dragThreshMet){me.dragCurrent.b4Drag(e);me.dragCurrent.onDrag(e);if(!me.dragCurrent.moveOnly){me.fireEvents(e,false);}}
me.stopEvent(e);return true;},fireEvents:function(e,isDrop){var me=this,dragCurrent=me.dragCurrent,mousePoint=e.getPoint(),overTarget,overTargetEl,allTargets=[],oldOvers=[],outEvts=[],overEvts=[],dropEvts=[],enterEvts=[],needsSort,i,len,sGroup;if(!dragCurrent||dragCurrent.isLocked()){return;}
for(i in me.dragOvers){overTarget=me.dragOvers[i];if(!me.isTypeOfDD(overTarget)){continue;}
if(!this.isOverTarget(mousePoint,overTarget,me.mode)){outEvts.push(overTarget);}
oldOvers[i]=true;delete me.dragOvers[i];}
for(sGroup in dragCurrent.groups){if("string"!=typeof sGroup){continue;}
for(i in me.ids[sGroup]){overTarget=me.ids[sGroup][i];if(me.isTypeOfDD(overTarget)&&(overTargetEl=overTarget.getEl())&&(overTarget.isTarget)&&(!overTarget.isLocked())&&(Ext.fly(overTargetEl).isVisible(true))&&((overTarget!=dragCurrent)||(dragCurrent.ignoreSelf===false))){if((overTarget.zIndex=me.getZIndex(overTargetEl))!==-1){needsSort=true;}
allTargets.push(overTarget);}}}
if(needsSort){Ext.Array.sort(allTargets,me.byZIndex);}
for(i=0,len=allTargets.length;i<len;i++){overTarget=allTargets[i];if(me.isOverTarget(mousePoint,overTarget,me.mode)){if(isDrop){dropEvts.push(overTarget);}else{if(!oldOvers[overTarget.id]){enterEvts.push(overTarget);}else{overEvts.push(overTarget);}
me.dragOvers[overTarget.id]=overTarget;}
if(!me.notifyOccluded){break;}}}
if(me.mode){if(outEvts.length){dragCurrent.b4DragOut(e,outEvts);dragCurrent.onDragOut(e,outEvts);}
if(enterEvts.length){dragCurrent.onDragEnter(e,enterEvts);}
if(overEvts.length){dragCurrent.b4DragOver(e,overEvts);dragCurrent.onDragOver(e,overEvts);}
if(dropEvts.length){dragCurrent.b4DragDrop(e,dropEvts);dragCurrent.onDragDrop(e,dropEvts);}}else{for(i=0,len=outEvts.length;i<len;++i){dragCurrent.b4DragOut(e,outEvts[i].id);dragCurrent.onDragOut(e,outEvts[i].id);}
for(i=0,len=enterEvts.length;i<len;++i){dragCurrent.onDragEnter(e,enterEvts[i].id);}
for(i=0,len=overEvts.length;i<len;++i){dragCurrent.b4DragOver(e,overEvts[i].id);dragCurrent.onDragOver(e,overEvts[i].id);}
for(i=0,len=dropEvts.length;i<len;++i){dragCurrent.b4DragDrop(e,dropEvts[i].id);dragCurrent.onDragDrop(e,dropEvts[i].id);}}
if(isDrop&&!dropEvts.length){dragCurrent.onInvalidDrop(e);}},getZIndex:function(element){var body=document.body,z,zIndex=-1;element=Ext.getDom(element);while(element!==body){if(!isNaN(z=Number(Ext.fly(element).getStyle('zIndex')))){zIndex=z;}
element=element.parentNode;}
return zIndex;},byZIndex:function(d1,d2){return d1.zIndex<d2.zIndex;},getBestMatch:function(dds){var winner=null,len=dds.length,i,dd;if(len==1){winner=dds[0];}else{for(i=0;i<len;++i){dd=dds[i];if(dd.cursorIsOver){winner=dd;break;}else{if(!winner||winner.overlap.getArea()<dd.overlap.getArea()){winner=dd;}}}}
return winner;},refreshCache:function(groups){var sGroup,i,oDD,loc;for(sGroup in groups){if("string"!=typeof sGroup){continue;}
for(i in this.ids[sGroup]){oDD=this.ids[sGroup][i];if(this.isTypeOfDD(oDD)){loc=this.getLocation(oDD);if(loc){this.locationCache[oDD.id]=loc;}else{delete this.locationCache[oDD.id];}}}}},verifyEl:function(el){if(el){var parent;if(Ext.isIE){try{parent=el.offsetParent;}catch(e){}}else{parent=el.offsetParent;}
if(parent){return true;}}
return false;},getLocation:function(oDD){if(!this.isTypeOfDD(oDD)){return null;}
if(oDD.getRegion){return oDD.getRegion();}
var el=oDD.getEl(),pos,x1,x2,y1,y2,t,r,b,l;try{pos=Ext.Element.getXY(el);}catch(e){}
if(!pos){return null;}
x1=pos[0];x2=x1+el.offsetWidth;y1=pos[1];y2=y1+el.offsetHeight;t=y1-oDD.padding[0];r=x2+oDD.padding[1];b=y2+oDD.padding[2];l=x1-oDD.padding[3];return new Ext.util.Region(t,r,b,l);},isOverTarget:function(pt,oTarget,intersect){var loc=this.locationCache[oTarget.id],dc,pos,el,curRegion,overlap;if(!loc||!this.useCache){loc=this.getLocation(oTarget);this.locationCache[oTarget.id]=loc;}
if(!loc){return false;}
oTarget.cursorIsOver=loc.contains(pt);dc=this.dragCurrent;if(!dc||!dc.getTargetCoord||(!intersect&&!dc.constrainX&&!dc.constrainY)){return oTarget.cursorIsOver;}
oTarget.overlap=null;pos=dc.getTargetCoord(pt.x,pt.y);el=dc.getDragEl();curRegion=new Ext.util.Region(pos.y,pos.x+el.offsetWidth,pos.y+el.offsetHeight,pos.x);overlap=curRegion.intersect(loc);if(overlap){oTarget.overlap=overlap;return(intersect)?true:oTarget.cursorIsOver;}else{return false;}},_onUnload:function(e,me){Ext.dd.DragDropManager.unregAll();},unregAll:function(){if(this.dragCurrent){this.stopDrag();this.dragCurrent=null;}
this._execOnAll("unreg",[]);for(var i in this.elementCache){delete this.elementCache[i];}
this.elementCache={};this.ids={};},elementCache:{},getElWrapper:function(id){var oWrapper=this.elementCache[id];if(!oWrapper||!oWrapper.el){oWrapper=this.elementCache[id]=new this.ElementWrapper(Ext.getDom(id));}
return oWrapper;},getElement:function(id){return Ext.getDom(id);},getCss:function(id){var el=Ext.getDom(id);return(el)?el.style:null;},ElementWrapper:function(el){this.el=el||null;this.id=this.el&&el.id;this.css=this.el&&el.style;},getPosX:function(el){return Ext.Element.getX(el);},getPosY:function(el){return Ext.Element.getY(el);},swapNode:function(n1,n2){if(n1.swapNode){n1.swapNode(n2);}else{var p=n2.parentNode,s=n2.nextSibling;if(s==n1){p.insertBefore(n1,n2);}else if(n2==n1.nextSibling){p.insertBefore(n2,n1);}else{n1.parentNode.replaceChild(n2,n1);p.insertBefore(n1,s);}}},getScroll:function(){var doc=window.document,docEl=doc.documentElement,body=doc.body,top=0,left=0;if(Ext.isGecko4){top=window.scrollYOffset;left=window.scrollXOffset;}else{if(docEl&&(docEl.scrollTop||docEl.scrollLeft)){top=docEl.scrollTop;left=docEl.scrollLeft;}else if(body){top=body.scrollTop;left=body.scrollLeft;}}
return{top:top,left:left};},getStyle:function(el,styleProp){return Ext.fly(el).getStyle(styleProp);},getScrollTop:function(){return this.getScroll().top;},getScrollLeft:function(){return this.getScroll().left;},moveToEl:function(moveEl,targetEl){var aCoord=Ext.Element.getXY(targetEl);Ext.Element.setXY(moveEl,aCoord);},numericSort:function(a,b){return(a-b);},_timeoutCount:0,_addListeners:function(){if(document){this._onLoad();}else{if(this._timeoutCount<=2000){setTimeout(this._addListeners,10);if(document&&document.body){this._timeoutCount+=1;}}}},handleWasClicked:function(node,id){if(this.isHandle(id,node.id)){return true;}else{var p=node.parentNode;while(p){if(this.isHandle(id,p.id)){return true;}else{p=p.parentNode;}}}
return false;}},function(){this._addListeners();});Ext.define('Ext.layout.container.Auto',{alias:['layout.auto','layout.autocontainer'],extend:'Ext.layout.container.Container',type:'autocontainer',childEls:['clearEl'],renderTpl:['{%this.renderBody(out,values)%}','<div id="{ownerId}-clearEl" class="',Ext.baseCSSPrefix,'clear" role="presentation"></div>'],calculate:function(ownerContext){var me=this,containerSize;if(!ownerContext.hasDomProp('containerChildrenDone')){me.done=false;}else{containerSize=me.getContainerSize(ownerContext);if(!containerSize.gotAll){me.done=false;}
me.calculateContentSize(ownerContext);}}});Ext.define('Ext.form.action.Load',{extend:'Ext.form.action.Action',requires:['Ext.data.Connection'],alternateClassName:'Ext.form.Action.Load',alias:'formaction.load',type:'load',run:function(){Ext.Ajax.request(Ext.apply(this.createCallback(),{method:this.getMethod(),url:this.getUrl(),headers:this.headers,params:this.getParams()}));},onSuccess:function(response){var result=this.processResponse(response),form=this.form;if(result===true||!result.success||!result.data){this.failureType=Ext.form.action.Action.LOAD_FAILURE;form.afterAction(this,false);return;}
form.clearInvalid();form.setValues(result.data);form.afterAction(this,true);},handleResponse:function(response){var reader=this.form.reader,rs,data;if(reader){rs=reader.read(response);data=rs.records&&rs.records[0]?rs.records[0].data:null;return{success:rs.success,data:data};}
return Ext.decode(response.responseText);}});Ext.define('Ext.form.action.Submit',{extend:'Ext.form.action.Action',alternateClassName:'Ext.form.Action.Submit',alias:'formaction.submit',type:'submit',run:function(){var form=this.form;if(this.clientValidation===false||form.isValid()){this.doSubmit();}else{this.failureType=Ext.form.action.Action.CLIENT_INVALID;form.afterAction(this,false);}},doSubmit:function(){var me=this,ajaxOptions=Ext.apply(me.createCallback(),{url:me.getUrl(),method:me.getMethod(),headers:me.headers}),form=me.form,paramsProp=form.jsonSubmit?'jsonData':'params',formEl;if(form.hasUpload()){formEl=ajaxOptions.form=me.buildForm();ajaxOptions.isUpload=true;}else{ajaxOptions[paramsProp]=me.getParams();}
Ext.Ajax.request(ajaxOptions);if(formEl){Ext.removeNode(formEl);}},getParams:function(){var nope=false,configParams=this.callParent(),fieldParams=this.form.getValues(nope,nope,this.submitEmptyText!==nope);return Ext.apply({},fieldParams,configParams);},buildForm:function(){var fieldsSpec=[],formSpec,formEl,basicForm=this.form,params=this.getParams(),uploadFields=[],fields=basicForm.getFields().items,f,fLen=fields.length,field,key,value,v,vLen,u,uLen;for(f=0;f<fLen;f++){field=fields[f];if(field.isFileUpload()){uploadFields.push(field);}}
function addField(name,val){fieldsSpec.push({tag:'input',type:'hidden',name:name,value:Ext.String.htmlEncode(val)});}
for(key in params){if(params.hasOwnProperty(key)){value=params[key];if(Ext.isArray(value)){vLen=value.length;for(v=0;v<vLen;v++){addField(key,value[v]);}}else{addField(key,value);}}}
formSpec={tag:'form',action:this.getUrl(),method:this.getMethod(),target:this.target||'_self',style:'display:none',cn:fieldsSpec};if(uploadFields.length){formSpec.encoding=formSpec.enctype='multipart/form-data';}
formEl=Ext.DomHelper.append(Ext.getBody(),formSpec);uLen=uploadFields.length;for(u=0;u<uLen;u++){field=uploadFields[u];if(field.rendered){formEl.appendChild(field.extractFileInput());}}
return formEl;},onSuccess:function(response){var form=this.form,success=true,result=this.processResponse(response);if(result!==true&&!result.success){if(result.errors){form.markInvalid(result.errors);}
this.failureType=Ext.form.action.Action.SERVER_INVALID;success=false;}
form.afterAction(this,success);},handleResponse:function(response){var form=this.form,errorReader=form.errorReader,rs,errors,i,len,records;if(errorReader){rs=errorReader.read(response);records=rs.records;errors=[];if(records){for(i=0,len=records.length;i<len;i++){errors[i]=records[i].data;}}
if(errors.length<1){errors=null;}
return{success:rs.success,errors:errors};}
return Ext.decode(response.responseText);}});Ext.define('Ext.state.Manager',{singleton:true,requires:['Ext.state.Provider'],constructor:function(){this.provider=new Ext.state.Provider();},setProvider:function(stateProvider){this.provider=stateProvider;},get:function(key,defaultValue){return this.provider.get(key,defaultValue);},set:function(key,value){this.provider.set(key,value);},clear:function(key){this.provider.clear(key);},getProvider:function(){return this.provider;}});Ext.define('Ext.state.Stateful',{mixins:{observable:'Ext.util.Observable'},requires:['Ext.state.Manager'],stateful:false,saveDelay:100,constructor:function(config){var me=this;config=config||{};if(config.stateful!==undefined){me.stateful=config.stateful;}
if(config.saveDelay!==undefined){me.saveDelay=config.saveDelay;}
me.stateId=me.stateId||config.stateId;if(!me.stateEvents){me.stateEvents=[];}
if(config.stateEvents){me.stateEvents.concat(config.stateEvents);}
this.addEvents('beforestaterestore','staterestore','beforestatesave','statesave');me.mixins.observable.constructor.call(me);if(me.stateful!==false){me.addStateEvents(me.stateEvents);me.initState();}},addStateEvents:function(events){var me=this,i,event,stateEventsByName;if(me.stateful&&me.getStateId()){if(typeof events=='string'){events=Array.prototype.slice.call(arguments,0);}
stateEventsByName=me.stateEventsByName||(me.stateEventsByName={});for(i=events.length;i--;){event=events[i];if(!stateEventsByName[event]){stateEventsByName[event]=1;me.on(event,me.onStateChange,me);}}}},onStateChange:function(){var me=this,delay=me.saveDelay,statics,runner;if(!me.stateful){return;}
if(delay){if(!me.stateTask){statics=Ext.state.Stateful;runner=statics.runner||(statics.runner=new Ext.util.TaskRunner());me.stateTask=runner.newTask({run:me.saveState,scope:me,interval:delay,repeat:1});}
me.stateTask.start();}else{me.saveState();}},saveState:function(){var me=this,id=me.stateful&&me.getStateId(),hasListeners=me.hasListeners,state;if(id){state=me.getState()||{};if(!hasListeners.beforestatesave||me.fireEvent('beforestatesave',me,state)!==false){Ext.state.Manager.set(id,state);if(hasListeners.statesave){me.fireEvent('statesave',me,state);}}}},getState:function(){return null;},applyState:function(state){if(state){Ext.apply(this,state);}},getStateId:function(){var me=this;return me.stateId||(me.autoGenId?null:me.id);},initState:function(){var me=this,id=me.stateful&&me.getStateId(),hasListeners=me.hasListeners,state;if(id){state=Ext.state.Manager.get(id);if(state){state=Ext.apply({},state);if(!hasListeners.beforestaterestore||me.fireEvent('beforestaterestore',me,state)!==false){me.applyState(state);if(hasListeners.staterestore){me.fireEvent('staterestore',me,state);}}}}},savePropToState:function(propName,state,stateName){var me=this,value=me[propName],config=me.initialConfig;if(me.hasOwnProperty(propName)){if(!config||config[propName]!==value){if(state){state[stateName||propName]=value;}
return true;}}
return false;},savePropsToState:function(propNames,state){var me=this,i,n;if(typeof propNames=='string'){me.savePropToState(propNames,state);}else{for(i=0,n=propNames.length;i<n;++i){me.savePropToState(propNames[i],state);}}
return state;},destroy:function(){var me=this,task=me.stateTask;if(task){task.destroy();me.stateTask=null;}
me.clearListeners();}});Ext.define('Ext.AbstractComponent',{requires:['Ext.ComponentQuery','Ext.ComponentManager','Ext.util.ProtoElement','Ext.dom.CompositeElement'],mixins:{observable:'Ext.util.Observable',animate:'Ext.util.Animate',elementCt:'Ext.util.ElementContainer',renderable:'Ext.util.Renderable',state:'Ext.state.Stateful'},uses:['Ext.PluginManager','Ext.Element','Ext.DomHelper','Ext.XTemplate','Ext.ComponentLoader','Ext.EventManager','Ext.layout.Context','Ext.layout.Layout','Ext.layout.component.Auto','Ext.LoadMask','Ext.ZIndexManager'],statics:{AUTO_ID:1000,pendingLayouts:null,layoutSuspendCount:0,cancelLayout:function(comp,isDestroying){var context=this.runningLayoutContext||this.pendingLayouts;if(context){context.cancelComponent(comp,false,isDestroying);}},flushLayouts:function(){var me=this,context=me.pendingLayouts;if(context&&context.invalidQueue.length){me.pendingLayouts=null;me.runningLayoutContext=context;Ext.override(context,{runComplete:function(){me.runningLayoutContext=null;return this.callParent();}});context.run();}},resumeLayouts:function(flush){if(this.layoutSuspendCount&&!--this.layoutSuspendCount){if(flush){this.flushLayouts();}}},suspendLayouts:function(){++this.layoutSuspendCount;},updateLayout:function(comp,defer){var me=this,running=me.runningLayoutContext,pending;if(running){running.queueInvalidate(comp);}else{pending=me.pendingLayouts||(me.pendingLayouts=new Ext.layout.Context());pending.queueInvalidate(comp);if(!defer&&!me.layoutSuspendCount&&!comp.isLayoutSuspended()){me.flushLayouts();}}}},isComponent:true,getAutoId:function(){this.autoGenId=true;return++Ext.AbstractComponent.AUTO_ID;},deferLayouts:false,autoGenId:false,renderTpl:'{%this.renderContent(out,values)%}',frameSize:{left:0,top:0,right:0,bottom:0,width:0,height:0},tplWriteMode:'overwrite',baseCls:Ext.baseCSSPrefix+'component',disabledCls:Ext.baseCSSPrefix+'item-disabled',ui:'default',uiCls:[],hidden:false,disabled:false,draggable:false,floating:false,hideMode:'display',styleHtmlContent:false,styleHtmlCls:Ext.baseCSSPrefix+'html',autoShow:false,autoRender:false,allowDomMove:true,rendered:false,componentLayoutCounter:0,shrinkWrap:2,weight:0,maskOnDisable:true,_isLayoutRoot:false,constructor:function(config){var me=this,i,len,xhooks;if(config){Ext.apply(me,config);xhooks=me.xhooks;if(xhooks){delete me.xhooks;Ext.override(me,xhooks);}}else{config={};}
me.initialConfig=config;me.mixins.elementCt.constructor.call(me);me.addEvents('beforeactivate','activate','beforedeactivate','deactivate','added','disable','enable','beforeshow','show','beforehide','hide','removed','beforerender','render','afterrender','boxready','beforedestroy','destroy','resize','move','focus','blur');me.getId();me.setupProtoEl();if(me.cls){me.initialCls=me.cls;me.protoEl.addCls(me.cls);}
if(me.style){me.initialStyle=me.style;me.protoEl.setStyle(me.style);}
me.mons=[];me.renderData=me.renderData||{};me.renderSelectors=me.renderSelectors||{};if(me.plugins){me.plugins=me.constructPlugins();}
if(!me.hasListeners){me.hasListeners=new me.HasListeners();}
me.initComponent();Ext.ComponentManager.register(me);me.mixins.observable.constructor.call(me);me.mixins.state.constructor.call(me,config);this.addStateEvents('resize');if(me.plugins){for(i=0,len=me.plugins.length;i<len;i++){me.plugins[i]=me.initPlugin(me.plugins[i]);}}
me.loader=me.getLoader();if(me.renderTo){me.render(me.renderTo);}
if(me.autoShow&&!me.isContained){me.show();}
if(Ext.isDefined(me.disabledClass)){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.Component: disabledClass has been deprecated. Please use disabledCls.');}
me.disabledCls=me.disabledClass;delete me.disabledClass;}},initComponent:function(){this.plugins=this.constructPlugins();this.setSize(this.width,this.height);},getState:function(){var me=this,state=null,sizeModel=me.getSizeModel();if(sizeModel.width.configured){state=me.addPropertyToState(state,'width');}
if(sizeModel.height.configured){state=me.addPropertyToState(state,'height');}
return state;},addPropertyToState:function(state,propName,value){var me=this,len=arguments.length;if(len==3||me.hasOwnProperty(propName)){if(len<3){value=me[propName];}
if(value!==me.initialConfig[propName]){(state||(state={}))[propName]=value;}}
return state;},show:Ext.emptyFn,animate:function(animObj){var me=this,hasToWidth,hasToHeight,toHeight,toWidth,to,clearWidth,clearHeight,curWidth,w,curHeight,h,needsResize;animObj=animObj||{};to=animObj.to||{};if(Ext.fx.Manager.hasFxBlock(me.id)){return me;}
hasToWidth=Ext.isDefined(to.width);if(hasToWidth){toWidth=Ext.Number.constrain(to.width,me.minWidth,me.maxWidth);}
hasToHeight=Ext.isDefined(to.height);if(hasToHeight){toHeight=Ext.Number.constrain(to.height,me.minHeight,me.maxHeight);}
if(!animObj.dynamic&&(hasToWidth||hasToHeight)){curWidth=(animObj.from?animObj.from.width:undefined)||me.getWidth();w=curWidth;curHeight=(animObj.from?animObj.from.height:undefined)||me.getHeight();h=curHeight;needsResize=false;if(hasToHeight&&toHeight>curHeight){h=toHeight;needsResize=true;}
if(hasToWidth&&toWidth>curWidth){w=toWidth;needsResize=true;}
if(needsResize){clearWidth=!Ext.isNumber(me.width);clearHeight=!Ext.isNumber(me.height);me.setSize(w,h);me.el.setSize(curWidth,curHeight);if(clearWidth){delete me.width;}
if(clearHeight){delete me.height;}}
if(hasToWidth){to.width=toWidth;}
if(hasToHeight){to.height=toHeight;}}
return me.mixins.animate.animate.apply(me,arguments);},onHide:function(){this.updateLayout({isRoot:false});},onShow:function(){this.updateLayout({isRoot:false});},constructPlugin:function(plugin){if(plugin.ptype&&typeof plugin.init!='function'){plugin.cmp=this;plugin=Ext.PluginManager.create(plugin);}
else if(typeof plugin=='string'){plugin=Ext.PluginManager.create({ptype:plugin,cmp:this});}
return plugin;},constructPlugins:function(){var me=this,plugins,result=[],i,len;if(me.plugins){plugins=Ext.isArray(me.plugins)?me.plugins:[me.plugins];for(i=0,len=plugins.length;i<len;i++){result[i]=me.constructPlugin(plugins[i]);}
return result;}},initPlugin:function(plugin){plugin.init(this);return plugin;},updateAria:Ext.emptyFn,registerFloatingItem:function(cmp){var me=this;if(!me.floatingDescendants){me.floatingDescendants=new Ext.ZIndexManager(me);}
me.floatingDescendants.register(cmp);},unregisterFloatingItem:function(cmp){var me=this;if(me.floatingDescendants){me.floatingDescendants.unregister(cmp);}},layoutSuspendCount:0,suspendLayouts:function(){var me=this;if(!me.rendered){return;}
if(++me.layoutSuspendCount==1){me.suspendLayout=true;}},resumeLayouts:function(flushOptions){var me=this;if(!me.rendered){return;}
if(!--me.layoutSuspendCount){me.suspendLayout=false;if(flushOptions&&!me.isLayoutSuspended()){me.updateLayout(flushOptions);}}},setupProtoEl:function(){var me=this,cls=[me.baseCls,me.getComponentLayout().targetCls];if(Ext.isDefined(me.cmpCls)){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.Component: cmpCls has been deprecated. Please use componentCls.');}
me.componentCls=me.cmpCls;delete me.cmpCls;}
if(me.componentCls){cls.push(me.componentCls);}else{me.componentCls=me.baseCls;}
me.protoEl=new Ext.util.ProtoElement({cls:cls.join(' ')});},setUI:function(ui){var me=this,oldUICls=Ext.Array.clone(me.uiCls),newUICls=[],classes=[],cls,i;for(i=0;i<oldUICls.length;i++){cls=oldUICls[i];classes=classes.concat(me.removeClsWithUI(cls,true));newUICls.push(cls);}
if(classes.length){me.removeCls(classes);}
me.removeUIFromElement();me.ui=ui;me.addUIToElement();classes=[];for(i=0;i<newUICls.length;i++){cls=newUICls[i];classes=classes.concat(me.addClsWithUI(cls,true));}
if(classes.length){me.addCls(classes);}
if(me.rendered){me.updateLayout();}},addClsWithUI:function(classes,skip){var me=this,clsArray=[],length,i=0,cls;if(typeof classes==="string"){classes=(classes.indexOf(' ')<0)?[classes]:Ext.String.splitWords(classes);}
length=classes.length;me.uiCls=Ext.Array.clone(me.uiCls);for(;i<length;i++){cls=classes[i];if(cls&&!me.hasUICls(cls)){me.uiCls.push(cls);clsArray=clsArray.concat(me.addUIClsToElement(cls));}}
if(skip!==true){me.addCls(clsArray);}
return clsArray;},removeClsWithUI:function(classes,skip){var me=this,clsArray=[],i=0,length,cls;if(typeof classes==="string"){classes=(classes.indexOf(' ')<0)?[classes]:Ext.String.splitWords(classes);}
length=classes.length;for(i=0;i<length;i++){cls=classes[i];if(cls&&me.hasUICls(cls)){me.uiCls=Ext.Array.remove(me.uiCls,cls);clsArray=clsArray.concat(me.removeUIClsFromElement(cls));}}
if(skip!==true){me.removeCls(clsArray);}
return clsArray;},hasUICls:function(cls){var me=this,uiCls=me.uiCls||[];return Ext.Array.contains(uiCls,cls);},frameElementsArray:['tl','tc','tr','ml','mc','mr','bl','bc','br'],addUIClsToElement:function(cls){var me=this,baseClsUi=me.baseCls+'-'+me.ui+'-'+cls,result=[Ext.baseCSSPrefix+cls,me.baseCls+'-'+cls,baseClsUi],frameElementCls=me.frameElementCls,frameElementsArray,frameElementsLength,i,el,frameElement,c;if(me.frame&&!Ext.supports.CSS3BorderRadius){frameElementsArray=me.frameElementsArray;frameElementsLength=frameElementsArray.length;i=0;for(;i<frameElementsLength;i++){frameElement=frameElementsArray[i];el=me['frame'+frameElement.toUpperCase()];c=baseClsUi+'-'+frameElement;if(el&&el.dom){el.addCls(c);}else if(Ext.Array.indexOf(frameElementCls[frameElement],c)==-1){frameElementCls[frameElement].push(c);}}}
me.frameElementCls=frameElementCls;return result;},removeUIClsFromElement:function(cls){var me=this,baseClsUi=me.baseCls+'-'+me.ui+'-'+cls,result=[Ext.baseCSSPrefix+cls,me.baseCls+'-'+cls,baseClsUi],frameElementCls=me.frameElementCls,frameElementsArray,frameElementsLength,i,el,frameElement,c;if(me.frame&&!Ext.supports.CSS3BorderRadius){frameElementsArray=me.frameElementsArray;frameElementsLength=frameElementsArray.length;i=0;for(;i<frameElementsLength;i++){frameElement=frameElementsArray[i];el=me['frame'+frameElement.toUpperCase()];c=baseClsUi+'-'+frameElement;if(el&&el.dom){el.addCls(c);}else{Ext.Array.remove(frameElementCls[frameElement],c);}}}
me.frameElementCls=frameElementCls;return result;},addUIToElement:function(){var me=this,baseClsUI=me.baseCls+'-'+me.ui,frameElementCls=me.frameElementCls,frameElementsArray,frameElementsLength,i,el,frameElement,c;me.addCls(baseClsUI);if(me.frame&&!Ext.supports.CSS3BorderRadius){frameElementsArray=me.frameElementsArray;frameElementsLength=frameElementsArray.length;i=0;for(;i<frameElementsLength;i++){frameElement=frameElementsArray[i];el=me['frame'+frameElement.toUpperCase()];c=baseClsUI+'-'+frameElement;if(el){el.addCls(c);}else{if(!Ext.Array.contains(frameElementCls[frameElement],c)){frameElementCls[frameElement].push(c);}}}}},removeUIFromElement:function(){var me=this,baseClsUI=me.baseCls+'-'+me.ui,frameElementCls=me.frameElementCls,frameElementsArray,frameElementsLength,i,el,frameElement,c;me.removeCls(baseClsUI);if(me.frame&&!Ext.supports.CSS3BorderRadius){frameElementsArray=me.frameElementsArray;frameElementsLength=frameElementsArray.length;i=0;for(;i<frameElementsLength;i++){frameElement=frameElementsArray[i];el=me['frame'+frameElement.toUpperCase()];c=baseClsUI+'-'+frameElement;if(el){el.removeCls(c);}else{Ext.Array.remove(frameElementCls[frameElement],c);}}}},getTpl:function(name){return Ext.XTemplate.getTpl(this,name);},initStyles:function(targetEl){var me=this,Element=Ext.Element,padding=me.padding,margin=me.margin,x=me.x,y=me.y,width,height;if(padding!==undefined){targetEl.setStyle('padding',Element.unitizeBox((padding===true)?5:padding));}
if(margin!==undefined){targetEl.setStyle('margin',Element.unitizeBox((margin===true)?5:margin));}
if(me.border!==undefined){me.setBorder(me.border,targetEl);}
if(me.cls&&me.cls!=me.initialCls){targetEl.addCls(me.cls);delete me.cls;delete me.initialCls;}
if(me.style&&me.style!=me.initialStyle){targetEl.setStyle(me.style);delete me.style;delete me.initialStyle;}
if(x!==undefined){targetEl.setStyle('left',(typeof x=='number')?(x+'px'):x);}
if(y!==undefined){targetEl.setStyle('top',(typeof y=='number')?(y+'px'):y);}
if(!me.getFrameInfo()){width=me.width;height=me.height;if(width!==undefined){if(typeof width==='number'){if(Ext.isBorderBox){targetEl.setStyle('width',width+'px');}}else{targetEl.setStyle('width',width);}}
if(height!==undefined){if(typeof height==='number'){if(Ext.isBorderBox){targetEl.setStyle('height',height+'px');}}else{targetEl.setStyle('height',height);}}}},initEvents:function(){var me=this,afterRenderEvents=me.afterRenderEvents,el,property,fn=function(listeners){me.mon(el,listeners);};if(afterRenderEvents){for(property in afterRenderEvents){if(afterRenderEvents.hasOwnProperty(property)){el=me[property];if(el&&el.on){Ext.each(afterRenderEvents[property],fn);}}}}
me.addFocusListener();},addFocusListener:function(){var me=this,focusEl=me.getFocusEl(),needsTabIndex;if(focusEl){if(focusEl.isComponent){return focusEl.addFocusListener();}
needsTabIndex=focusEl.needsTabIndex();if(!me.focusListenerAdded&&(!needsTabIndex||Ext.FocusManager.enabled)){if(needsTabIndex){focusEl.dom.tabIndex=-1;}
focusEl.on({focus:me.onFocus,blur:me.onBlur,scope:me});me.focusListenerAdded=true;}}},getFocusEl:Ext.emptyFn,isFocusable:function(){var me=this,focusEl;if((me.focusable!==false)&&(focusEl=me.getFocusEl())&&me.rendered&&!me.destroying&&!me.isDestroyed&&!me.disabled&&me.isVisible(true)){return focusEl.isFocusable(true);}},beforeFocus:Ext.emptyFn,onFocus:function(e){var me=this,focusCls=me.focusCls,focusEl=me.getFocusEl();if(!me.disabled){me.beforeFocus(e);if(focusCls&&focusEl){focusEl.addCls(me.addClsWithUI(focusCls,true));}
if(!me.hasFocus){me.hasFocus=true;me.fireEvent('focus',me,e);}}},beforeBlur:Ext.emptyFn,onBlur:function(e){var me=this,focusCls=me.focusCls,focusEl=me.getFocusEl();if(me.destroying){return;}
me.beforeBlur(e);if(focusCls&&focusEl){focusEl.removeCls(me.removeClsWithUI(focusCls,true));}
if(me.validateOnBlur){me.validate();}
me.hasFocus=false;me.fireEvent('blur',me,e);me.postBlur(e);},postBlur:Ext.emptyFn,is:function(selector){return Ext.ComponentQuery.is(this,selector);},up:function(selector){var result=this.getBubbleTarget();if(selector){for(;result;result=result.getBubbleTarget()){if(Ext.ComponentQuery.is(result,selector)){return result;}}}
return result;},nextSibling:function(selector){var o=this.ownerCt,it,last,idx,c;if(o){it=o.items;idx=it.indexOf(this)+1;if(idx){if(selector){for(last=it.getCount();idx<last;idx++){if((c=it.getAt(idx)).is(selector)){return c;}}}else{if(idx<it.getCount()){return it.getAt(idx);}}}}
return null;},previousSibling:function(selector){var o=this.ownerCt,it,idx,c;if(o){it=o.items;idx=it.indexOf(this);if(idx!=-1){if(selector){for(--idx;idx>=0;idx--){if((c=it.getAt(idx)).is(selector)){return c;}}}else{if(idx){return it.getAt(--idx);}}}}
return null;},previousNode:function(selector,includeSelf){var node=this,ownerCt=node.ownerCt,result,it,i,sib;if(includeSelf&&node.is(selector)){return node;}
if(ownerCt){for(it=ownerCt.items.items,i=Ext.Array.indexOf(it,node)-1;i>-1;i--){sib=it[i];if(sib.query){result=sib.query(selector);result=result[result.length-1];if(result){return result;}}
if(sib.is(selector)){return sib;}}
return ownerCt.previousNode(selector,true);}
return null;},nextNode:function(selector,includeSelf){var node=this,ownerCt=node.ownerCt,result,it,len,i,sib;if(includeSelf&&node.is(selector)){return node;}
if(ownerCt){for(it=ownerCt.items.items,i=Ext.Array.indexOf(it,node)+1,len=it.length;i<len;i++){sib=it[i];if(sib.is(selector)){return sib;}
if(sib.down){result=sib.down(selector);if(result){return result;}}}
return ownerCt.nextNode(selector);}
return null;},getId:function(){return this.id||(this.id='ext-comp-'+(this.getAutoId()));},getItemId:function(){return this.itemId||this.id;},getEl:function(){return this.el;},getTargetEl:function(){return this.frameBody||this.el;},getOverflowStyle:function(){var me=this,result=null;if(typeof me.autoScroll=='boolean'){result={overflow:me.autoScroll?'auto':''};}else if(me.overflowX!==undefined||me.overflowY!==undefined){result={'overflow-x':(me.overflowX||''),'overflow-y':(me.overflowY||'')};}
if(result&&(Ext.isIE6||Ext.isIE7)){result.position='relative';}
return result;},isXType:function(xtype,shallow){if(shallow){return this.xtype===xtype;}
else{return this.xtypesMap[xtype];}},getXTypes:function(){var self=this.self,xtypes,parentPrototype,parentXtypes;if(!self.xtypes){xtypes=[];parentPrototype=this;while(parentPrototype){parentXtypes=parentPrototype.xtypes;if(parentXtypes!==undefined){xtypes.unshift.apply(xtypes,parentXtypes);}
parentPrototype=parentPrototype.superclass;}
self.xtypeChain=xtypes;self.xtypes=xtypes.join('/');}
return self.xtypes;},update:function(htmlOrData,loadScripts,cb){var me=this;if(me.tpl&&!Ext.isString(htmlOrData)){me.data=htmlOrData;if(me.rendered){me.tpl[me.tplWriteMode](me.getTargetEl(),htmlOrData||{});}}else{me.html=Ext.isObject(htmlOrData)?Ext.DomHelper.markup(htmlOrData):htmlOrData;if(me.rendered){me.getTargetEl().update(me.html,loadScripts,cb);}}
if(me.rendered){me.updateLayout();}},setVisible:function(visible){return this[visible?'show':'hide']();},isVisible:function(deep){var me=this,child=me,visible=me.rendered&&!me.hidden,ancestor=me.ownerCt;me.hiddenAncestor=false;if(me.destroyed){return false;}
if(deep&&visible&&ancestor){while(ancestor){if(ancestor.hidden||(ancestor.collapsed&&!(ancestor.getDockedItems&&Ext.Array.contains(ancestor.getDockedItems(),child)))){me.hiddenAncestor=ancestor;visible=false;break;}
child=ancestor;ancestor=ancestor.ownerCt;}}
return visible;},onBoxReady:function(){var me=this;if(me.disableOnBoxReady){me.onDisable();}else if(me.enableOnBoxReady){me.onEnable();}
if(me.resizable){me.initResizable(me.resizable);}
if(me.draggable){me.initDraggable();}},enable:function(silent){var me=this;delete me.disableOnBoxReady;me.removeCls(me.disabledCls);if(me.rendered){me.onEnable();}else{me.enableOnBoxReady=true;}
me.disabled=false;delete me.resetDisable;if(silent!==true){me.fireEvent('enable',me);}
return me;},disable:function(silent){var me=this;delete me.enableOnBoxReady;me.addCls(me.disabledCls);if(me.rendered){me.onDisable();}else{me.disableOnBoxReady=true;}
me.disabled=true;if(silent!==true){delete me.resetDisable;me.fireEvent('disable',me);}
return me;},onEnable:function(){if(this.maskOnDisable){this.el.dom.disabled=false;this.unmask();}},onDisable:function(){var me=this,focusCls=me.focusCls,focusEl=me.getFocusEl();if(focusCls&&focusEl){focusEl.removeCls(me.removeClsWithUI(focusCls,true));}
if(me.maskOnDisable){me.el.dom.disabled=true;me.mask();}},mask:function(){var box=this.lastBox,target=this.getMaskTarget(),args=[];if(box){args[2]=box.height;}
target.mask.apply(target,args);},unmask:function(){this.getMaskTarget().unmask();},getMaskTarget:function(){return this.el;},isDisabled:function(){return this.disabled;},setDisabled:function(disabled){return this[disabled?'disable':'enable']();},isHidden:function(){return this.hidden;},addCls:function(cls){var me=this,el=me.rendered?me.el:me.protoEl;el.addCls.apply(el,arguments);return me;},addClass:function(){return this.addCls.apply(this,arguments);},hasCls:function(cls){var me=this,el=me.rendered?me.el:me.protoEl;return el.hasCls.apply(el,arguments);},removeCls:function(cls){var me=this,el=me.rendered?me.el:me.protoEl;el.removeCls.apply(el,arguments);return me;},removeClass:function(){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.Component: removeClass has been deprecated. Please use removeCls.');}
return this.removeCls.apply(this,arguments);},addOverCls:function(){var me=this;if(!me.disabled){me.el.addCls(me.overCls);}},removeOverCls:function(){this.el.removeCls(this.overCls);},addListener:function(element,listeners,scope,options){var me=this,fn,option;if(Ext.isString(element)&&(Ext.isObject(listeners)||options&&options.element)){if(options.element){fn=listeners;listeners={};listeners[element]=fn;element=options.element;if(scope){listeners.scope=scope;}
for(option in options){if(options.hasOwnProperty(option)){if(me.eventOptionsRe.test(option)){listeners[option]=options[option];}}}}
if(me[element]&&me[element].on){me.mon(me[element],listeners);}else{me.afterRenderEvents=me.afterRenderEvents||{};if(!me.afterRenderEvents[element]){me.afterRenderEvents[element]=[];}
me.afterRenderEvents[element].push(listeners);}
return;}
return me.mixins.observable.addListener.apply(me,arguments);},removeManagedListenerItem:function(isClear,managedListener,item,ename,fn,scope){var me=this,element=managedListener.options?managedListener.options.element:null;if(element){element=me[element];if(element&&element.un){if(isClear||(managedListener.item===item&&managedListener.ename===ename&&(!fn||managedListener.fn===fn)&&(!scope||managedListener.scope===scope))){element.un(managedListener.ename,managedListener.fn,managedListener.scope);if(!isClear){Ext.Array.remove(me.managedListeners,managedListener);}}}}else{return me.mixins.observable.removeManagedListenerItem.apply(me,arguments);}},getBubbleTarget:function(){return this.ownerCt;},isFloating:function(){return this.floating;},isDraggable:function(){return!!this.draggable;},isDroppable:function(){return!!this.droppable;},onAdded:function(container,pos){var me=this;me.ownerCt=container;if(me.hasListeners.added){me.fireEvent('added',me,container,pos);}},onRemoved:function(destroying){var me=this;if(me.hasListeners.removed){me.fireEvent('removed',me,me.ownerCt);}
delete me.ownerCt;delete me.ownerLayout;},beforeDestroy:Ext.emptyFn,onResize:Ext.emptyFn,setSize:function(width,height){var me=this;if(width&&typeof width=='object'){height=width.height;width=width.width;}
if(typeof width=='number'){me.width=Ext.Number.constrain(width,me.minWidth,me.maxWidth);}else if(width===null){delete me.width;}
if(typeof height=='number'){me.height=Ext.Number.constrain(height,me.minHeight,me.maxHeight);}else if(height===null){delete me.height;}
if(me.rendered&&me.isVisible()){me.updateLayout({isRoot:false});}
return me;},isLayoutRoot:function(){var me=this,ownerLayout=me.ownerLayout;if(!ownerLayout||me._isLayoutRoot||me.floating){return true;}
return ownerLayout.isItemLayoutRoot(me);},isLayoutSuspended:function(){var comp=this,ownerLayout;while(comp){if(comp.layoutSuspendCount||comp.suspendLayout){return true;}
ownerLayout=comp.ownerLayout;if(!ownerLayout){break;}
comp=ownerLayout.owner;}
return false;},updateLayout:function(options){var me=this,defer,isRoot=options&&options.isRoot;if(!me.rendered||me.layoutSuspendCount||me.suspendLayout){return;}
if(me.hidden){Ext.AbstractComponent.cancelLayout(me);}else if(typeof isRoot!='boolean'){isRoot=me.isLayoutRoot();}
if(isRoot||!me.ownerLayout||!me.ownerLayout.onContentChange(me)){if(!me.isLayoutSuspended()){defer=(options&&options.hasOwnProperty('defer'))?options.defer:me.deferLayouts;Ext.AbstractComponent.updateLayout(me,defer);}}},getSizeModel:function(ownerCtSizeModel){var me=this,models=Ext.layout.SizeModel,ownerContext=me.componentLayout.ownerContext,width=me.width,height=me.height,typeofWidth,typeofHeight,hasPixelWidth,hasPixelHeight,heightModel,ownerLayout,policy,shrinkWrap,topLevel,widthModel;if(ownerContext){widthModel=ownerContext.widthModel;heightModel=ownerContext.heightModel;}
if(!widthModel||!heightModel){hasPixelWidth=((typeofWidth=typeof width)=='number');hasPixelHeight=((typeofHeight=typeof height)=='number');topLevel=me.floating||!(ownerLayout=me.ownerLayout);if(topLevel){policy=Ext.layout.Layout.prototype.autoSizePolicy;shrinkWrap=me.floating?3:me.shrinkWrap;if(hasPixelWidth){widthModel=models.configured;}
if(hasPixelHeight){heightModel=models.configured;}}else{policy=ownerLayout.getItemSizePolicy(me,ownerCtSizeModel);shrinkWrap=ownerLayout.isItemShrinkWrap(me);}
shrinkWrap=(shrinkWrap===true)?3:(shrinkWrap||0);if(topLevel&&shrinkWrap){if(width&&typeofWidth=='string'){shrinkWrap&=2;}
if(height&&typeofHeight=='string'){shrinkWrap&=1;}}
if(shrinkWrap!==3){if(!ownerCtSizeModel){ownerCtSizeModel=me.ownerCt&&me.ownerCt.getSizeModel();}
if(ownerCtSizeModel){shrinkWrap|=(ownerCtSizeModel.width.shrinkWrap?1:0)|(ownerCtSizeModel.height.shrinkWrap?2:0);}}
if(!widthModel){if(!policy.setsWidth){if(hasPixelWidth){widthModel=models.configured;}else{widthModel=(shrinkWrap&1)?models.shrinkWrap:models.natural;}}else if(policy.readsWidth){if(hasPixelWidth){widthModel=models.calculatedFromConfigured;}else{widthModel=(shrinkWrap&1)?models.calculatedFromShrinkWrap:models.calculatedFromNatural;}}else{widthModel=models.calculated;}}
if(!heightModel){if(!policy.setsHeight){if(hasPixelHeight){heightModel=models.configured;}else{heightModel=(shrinkWrap&2)?models.shrinkWrap:models.natural;}}else if(policy.readsHeight){if(hasPixelHeight){heightModel=models.calculatedFromConfigured;}else{heightModel=(shrinkWrap&2)?models.calculatedFromShrinkWrap:models.calculatedFromNatural;}}else{heightModel=models.calculated;}}}
return widthModel.pairsByHeightOrdinal[heightModel.ordinal];},isDescendant:function(ancestor){if(ancestor.isContainer){for(var c=this.ownerCt;c;c=c.ownerCt){if(c===ancestor){return true;}}}
return false;},doComponentLayout:function(){this.updateLayout();return this;},forceComponentLayout:function(){this.updateLayout();},setComponentLayout:function(layout){var currentLayout=this.componentLayout;if(currentLayout&&currentLayout.isLayout&&currentLayout!=layout){currentLayout.setOwner(null);}
this.componentLayout=layout;layout.setOwner(this);},getComponentLayout:function(){var me=this;if(!me.componentLayout||!me.componentLayout.isLayout){me.setComponentLayout(Ext.layout.Layout.create(me.componentLayout,'autocomponent'));}
return me.componentLayout;},afterComponentLayout:function(width,height,oldWidth,oldHeight){var me=this,floaters,len,i,floater;if(++me.componentLayoutCounter===1){me.afterFirstLayout(width,height);}
if(me.floatingItems){floaters=me.floatingItems.items;len=floaters.length;for(i=0;i<len;i++){floater=floaters[i];if(!floater.rendered&&floater.autoShow){floater.show();}}}
if(me.hasListeners.resize&&(width!==oldWidth||height!==oldHeight)){me.fireEvent('resize',me,width,height,oldWidth,oldHeight);}},beforeComponentLayout:function(width,height){return true;},setPosition:function(x,y,animate){var me=this,pos=me.beforeSetPosition.apply(me,arguments);if(pos&&me.rendered){pos=me.convertPosition(pos);if(pos.left!==me.el.getLeft()||pos.top!==me.el.getTop()){if(animate){me.stopAnimation();me.animate(Ext.apply({duration:1000,listeners:{afteranimate:Ext.Function.bind(me.afterSetPosition,me,[pos.left,pos.top])},to:pos},animate));}else{if(pos.left!==undefined&&pos.top!==undefined){me.el.setLeftTop(pos.left,pos.top);}else if(pos.left!==undefined){me.el.setLeft(pos.left);}else if(pos.top!==undefined){me.el.setTop(pos.top);}
me.afterSetPosition(pos.left,pos.top);}}}
return me;},beforeSetPosition:function(x,y,animate){var pos,x0;if(!x||Ext.isNumber(x)){pos={x:x,y:y,anim:animate};}else if(Ext.isNumber(x0=x[0])){pos={x:x0,y:x[1],anim:y};}else{pos={x:x.x,y:x.y,anim:y};}
pos.hasX=Ext.isNumber(pos.x);pos.hasY=Ext.isNumber(pos.y);this.x=pos.x;this.y=pos.y;return(pos.hasX||pos.hasY)?pos:null;},afterSetPosition:function(x,y){var me=this;me.onPosition(x,y);if(me.hasListeners.move){me.fireEvent('move',me,x,y);}},convertPosition:function(pos,withUnits){var ret={},El=Ext.Element;if(pos.hasX){ret.left=withUnits?El.addUnits(pos.x):pos.x;}
if(pos.hasY){ret.top=withUnits?El.addUnits(pos.y):pos.y;}
return ret;},onPosition:Ext.emptyFn,setWidth:function(width){return this.setSize(width);},setHeight:function(height){return this.setSize(undefined,height);},getSize:function(){return this.el.getSize();},getWidth:function(){return this.el.getWidth();},getHeight:function(){return this.el.getHeight();},getLoader:function(){var me=this,autoLoad=me.autoLoad?(Ext.isObject(me.autoLoad)?me.autoLoad:{url:me.autoLoad}):null,loader=me.loader||autoLoad;if(loader){if(!loader.isLoader){me.loader=new Ext.ComponentLoader(Ext.apply({target:me,autoLoad:autoLoad},loader));}else{loader.setTarget(me);}
return me.loader;}
return null;},setDocked:function(dock,layoutParent){var me=this;me.dock=dock;if(layoutParent&&me.ownerCt&&me.rendered){me.ownerCt.updateLayout();}
return me;},setBorder:function(border,targetEl){var me=this,initial=!!targetEl;if(me.rendered||initial){if(!initial){targetEl=me.el;}
if(!border){border=0;}else{border=Ext.Element.unitizeBox((border===true)?1:border);}
targetEl.setStyle('border-width',border);if(!initial){me.updateLayout();}}
me.border=border;},onDestroy:function(){var me=this;if(me.monitorResize&&Ext.EventManager.resizeEvent){Ext.EventManager.resizeEvent.removeListener(me.setSize,me);}
Ext.destroy(me.componentLayout,me.loadMask,me.floatingDescendants);},destroy:function(){var me=this,selectors=me.renderSelectors,selector,el;if(!me.isDestroyed){if(!me.hasListeners.beforedestroy||me.fireEvent('beforedestroy',me)!==false){me.destroying=true;me.beforeDestroy();if(me.floating){delete me.floatParent;if(me.zIndexManager){me.zIndexManager.unregister(me);}}else if(me.ownerCt&&me.ownerCt.remove){me.ownerCt.remove(me,false);}
me.stopAnimation();me.onDestroy();Ext.destroy(me.plugins);if(me.hasListeners.destroy){me.fireEvent('destroy',me);}
Ext.ComponentManager.unregister(me);me.mixins.state.destroy.call(me);me.clearListeners();if(me.rendered){if(!me.preserveElOnDestroy){me.el.remove();}
me.mixins.elementCt.destroy.call(me);if(selectors){for(selector in selectors){if(selectors.hasOwnProperty(selector)){el=me[selector];if(el){delete me[selector];el.remove();}}}}
delete me.el;delete me.frameBody;delete me.rendered;}
me.destroying=false;me.isDestroyed=true;}}},getPlugin:function(pluginId){var i=0,plugins=this.plugins,ln=plugins.length;for(;i<ln;i++){if(plugins[i].pluginId===pluginId){return plugins[i];}}},isDescendantOf:function(container){return!!this.findParentBy(function(p){return p===container;});}},function(){var AbstractComponent=this;AbstractComponent.createAlias({on:'addListener',prev:'previousSibling',next:'nextSibling'});Ext.resumeLayouts=function(flush){AbstractComponent.resumeLayouts(flush);};Ext.suspendLayouts=function(){AbstractComponent.suspendLayouts();};Ext.batchLayouts=function(fn,scope){AbstractComponent.suspendLayouts();fn.call(scope);AbstractComponent.resumeLayouts(true);};});Ext.define('Ext.Component',{alias:['widget.component','widget.box'],extend:'Ext.AbstractComponent',uses:['Ext.util.DelayedTask','Ext.Layer','Ext.resizer.Resizer','Ext.util.ComponentDragger'],mixins:{floating:'Ext.util.Floating'},statics:{DIRECTION_TOP:'top',DIRECTION_RIGHT:'right',DIRECTION_BOTTOM:'bottom',DIRECTION_LEFT:'left',VERTICAL_DIRECTION_Re:/^(?:top|bottom)$/,INVALID_ID_CHARS_Re:/[\.,\s]/g},resizeHandles:'all',floating:false,defaultAlign:'tl-bl?',toFrontOnShow:true,hideMode:'display',offsetsCls:Ext.baseCSSPrefix+'hide-offsets',bubbleEvents:[],defaultComponentLayoutType:'autocomponent',constructor:function(config){var me=this;config=config||{};if(config.initialConfig){if(config.isAction){me.baseAction=config;}
config=config.initialConfig;}
else if(config.tagName||config.dom||Ext.isString(config)){config={applyTo:config,id:config.id||config};}
me.callParent([config]);if(me.baseAction){me.baseAction.addComponent(me);}},initComponent:function(){var me=this;me.callParent();if(me.listeners){me.on(me.listeners);me.listeners=null;}
me.enableBubble(me.bubbleEvents);me.mons=[];},afterRender:function(){var me=this;me.callParent();if(!(me.x&&me.y)&&(me.pageX||me.pageY)){me.setPagePosition(me.pageX,me.pageY);}},setAutoScroll:function(scroll){var me=this;me.autoScroll=!!scroll;if(me.rendered){me.getTargetEl().setStyle(me.getOverflowStyle());}
me.updateLayout();return me;},setOverflowXY:function(overflowX,overflowY){var me=this,argCount=arguments.length;if(argCount){me.overflowX=overflowX||'';if(argCount>1){me.overflowY=overflowY||'';}}
if(me.rendered){me.getTargetEl().setStyle(me.getOverflowStyle());}
me.updateLayout();return me;},beforeRender:function(){var me=this,floating=me.floating,cls;if(floating){me.addCls(Ext.baseCSSPrefix+'layer');cls=floating.cls;if(cls){me.addCls(cls);}}
return me.callParent();},afterComponentLayout:function(){this.callParent(arguments);if(this.floating){this.onAfterFloatLayout();}},makeFloating:function(dom){this.mixins.floating.constructor.call(this,dom);},wrapPrimaryEl:function(dom){if(this.floating){this.makeFloating(dom);}else{this.callParent(arguments);}},initResizable:function(resizable){var me=this;resizable=Ext.apply({target:me,dynamic:false,constrainTo:me.constrainTo||(me.floatParent?me.floatParent.getTargetEl():null),handles:me.resizeHandles},resizable);resizable.target=me;me.resizer=new Ext.resizer.Resizer(resizable);},getDragEl:function(){return this.el;},initDraggable:function(){var me=this,dragTarget=(me.resizer&&me.resizer.el!==me.el)?me.resizerComponent=new Ext.Component({el:me.resizer.el,rendered:true,container:me.container}):me,ddConfig=Ext.applyIf({el:dragTarget.getDragEl(),constrainTo:me.constrain?(me.constrainTo||(me.floatParent?me.floatParent.getTargetEl():me.el.getScopeParent())):undefined},me.draggable);if(me.constrain||me.constrainDelegate){ddConfig.constrain=me.constrain;ddConfig.constrainDelegate=me.constrainDelegate;}
me.dd=new Ext.util.ComponentDragger(dragTarget,ddConfig);},scrollBy:function(deltaX,deltaY,animate){var el;if((el=this.getTargetEl())&&el.dom){el.scrollBy.apply(el,arguments);}},setLoading:function(load,targetEl){var me=this,config;if(me.rendered){Ext.destroy(me.loadMask);me.loadMask=null;if(load!==false&&!me.collapsed){if(Ext.isObject(load)){config=Ext.apply({},load);}else if(Ext.isString(load)){config={msg:load};}else{config={};}
if(targetEl){Ext.applyIf(config,{useTargetEl:true});}
me.loadMask=new Ext.LoadMask(me,config);me.loadMask.show();}}
return me.loadMask;},beforeSetPosition:function(){var me=this,pos=me.callParent(arguments),adj;if(pos){adj=me.adjustPosition(pos.x,pos.y);pos.x=adj.x;pos.y=adj.y;}
return pos||null;},afterSetPosition:function(ax,ay){this.onPosition(ax,ay);this.fireEvent('move',this,ax,ay);},showAt:function(x,y,animate){var me=this;if(!me.rendered&&(me.autoRender||me.floating)){me.doAutoRender();me.hidden=true;}
if(me.floating){me.setPosition(x,y,animate);}else{me.setPagePosition(x,y,animate);}
me.show();},showBy:function(cmp,pos,off){var me=this;if(!me.floating){Ext.log.warn('Using showBy on a non-floating component');return me;}
if(me.floating&&cmp){me.show();if(me.rendered&&!me.hidden){me.setPagePosition(me.el.getAlignToXY(cmp.el||cmp,pos||me.defaultAlign,off));}}
return me;},setPagePosition:function(x,y,animate){var me=this,p,floatParentBox;if(Ext.isArray(x)){y=x[1];x=x[0];}
me.pageX=x;me.pageY=y;if(me.floating){if(me.isContainedFloater()){floatParentBox=me.floatParent.getTargetEl().getViewRegion();if(Ext.isNumber(x)&&Ext.isNumber(floatParentBox.left)){x-=floatParentBox.left;}
if(Ext.isNumber(y)&&Ext.isNumber(floatParentBox.top)){y-=floatParentBox.top;}}else{p=me.el.translatePoints(x,y);x=p.left;y=p.top;}
me.setPosition(x,y,animate);}else{p=me.el.translatePoints(x,y);me.setPosition(p.left,p.top,animate);}
return me;},isContainedFloater:function(){return(this.floating&&this.floatParent);},getBox:function(local){var pos=local?this.getPosition(local):this.el.getXY(),size=this.getSize();size.x=pos[0];size.y=pos[1];return size;},updateBox:function(box){this.setSize(box.width,box.height);this.setPagePosition(box.x,box.y);return this;},getOuterSize:function(){var el=this.el;return{width:el.getWidth()+el.getMargin('lr'),height:el.getHeight()+el.getMargin('tb')};},adjustPosition:function(x,y){var me=this,floatParentBox;if(me.isContainedFloater()){floatParentBox=me.floatParent.getTargetEl().getViewRegion();x+=floatParentBox.left;y+=floatParentBox.top;}
return{x:x,y:y};},getPosition:function(local){var me=this,el=me.el,xy,isContainedFloater=me.isContainedFloater(),floatParentBox;if((local===true)&&!isContainedFloater){return[el.getLocalX(),el.getLocalY()];}
xy=me.el.getXY();if((local===true)&&isContainedFloater){floatParentBox=me.floatParent.getTargetEl().getViewRegion();xy[0]-=floatParentBox.left;xy[1]-=floatParentBox.top;}
return xy;},getId:function(){var me=this,xtype;if(!me.id){xtype=me.getXType();if(xtype){xtype=xtype.replace(Ext.Component.INVALID_ID_CHARS_Re,'-');}else{xtype=Ext.name.toLowerCase()+'-comp';}
me.id=xtype+'-'+me.getAutoId();}
return me.id;},show:function(animateTarget,cb,scope){var me=this,rendered=me.rendered;if(rendered&&me.isVisible()){if(me.toFrontOnShow&&me.floating){me.toFront();}}else{if(me.fireEvent('beforeshow',me)!==false){me.hidden=false;if(!rendered&&(me.autoRender||me.floating)){me.doAutoRender();rendered=me.rendered;}
if(rendered){me.beforeShow();me.onShow.apply(me,arguments);me.afterShow.apply(me,arguments);}}else{me.onShowVeto();}}
return me;},onShowVeto:Ext.emptyFn,beforeShow:Ext.emptyFn,onShow:function(){var me=this;me.el.show();me.callParent(arguments);if(me.floating){if(me.maximized){me.fitContainer();}
else if(me.constrain){me.doConstrain();}}},getAnimateTarget:function(target){target=target||this.animateTarget;if(target){target=target.isComponent?target.getEl():Ext.get(target);}
return target||null;},afterShow:function(animateTarget,cb,scope){var me=this,fromBox,toBox,ghostPanel;animateTarget=me.getAnimateTarget(animateTarget);if(!me.ghost){animateTarget=null;}
if(animateTarget){toBox=me.el.getBox();fromBox=animateTarget.getBox();me.el.addCls(me.offsetsCls);ghostPanel=me.ghost();ghostPanel.el.stopAnimation();ghostPanel.el.setX(-10000);me.ghostBox=toBox;ghostPanel.el.animate({from:fromBox,to:toBox,listeners:{afteranimate:function(){delete ghostPanel.componentLayout.lastComponentSize;me.unghost();delete me.ghostBox;me.el.removeCls(me.offsetsCls);me.onShowComplete(cb,scope);}}});}
else{me.onShowComplete(cb,scope);}},onShowComplete:function(cb,scope){var me=this;if(me.floating){me.toFront();me.onFloatShow();}
Ext.callback(cb,scope||me);me.fireEvent('show',me);delete me.hiddenByLayout;},hide:function(){var me=this;me.showOnParentShow=false;if(!(me.rendered&&!me.isVisible())&&me.fireEvent('beforehide',me)!==false){me.hidden=true;if(me.rendered){me.onHide.apply(me,arguments);}}
return me;},onHide:function(animateTarget,cb,scope){var me=this,ghostPanel,toBox,activeEl=Ext.Element.getActiveElement();if(activeEl===me.el||me.el.contains(activeEl)){activeEl.blur();}
animateTarget=me.getAnimateTarget(animateTarget);if(!me.ghost){animateTarget=null;}
if(animateTarget){ghostPanel=me.ghost();ghostPanel.el.stopAnimation();toBox=animateTarget.getBox();ghostPanel.el.animate({to:toBox,listeners:{afteranimate:function(){delete ghostPanel.componentLayout.lastComponentSize;ghostPanel.el.hide();me.afterHide(cb,scope);}}});}
me.el.hide();if(!animateTarget){me.afterHide(cb,scope);}},afterHide:function(cb,scope){var me=this;delete me.hiddenByLayout;Ext.AbstractComponent.prototype.onHide.call(this);Ext.callback(cb,scope||me);me.fireEvent('hide',me);},onDestroy:function(){var me=this;if(me.rendered){Ext.destroy(me.proxy,me.proxyWrap,me.resizer,me.resizerComponent);}
delete me.focusTask;me.callParent();},deleteMembers:function(){var args=arguments,len=args.length,i=0;for(;i<len;++i){delete this[args[i]];}},focus:function(selectText,delay){var me=this,focusEl,focusElDom,containerScrollTop;if(delay){if(!me.focusTask){me.focusTask=new Ext.util.DelayedTask(me.focus);}
me.focusTask.delay(Ext.isNumber(delay)?delay:10,null,me,[selectText,false]);return me;}
if(me.rendered&&!me.isDestroyed&&me.isVisible(true)&&(focusEl=me.getFocusEl())){if(focusEl.isComponent){return focusEl.focus(selectText,delay);}
if((focusElDom=focusEl.dom)){if(focusEl.needsTabIndex()){focusElDom.tabIndex=-1;}
if(me.floating){containerScrollTop=me.container.dom.scrollTop;}
focusEl.focus();if(selectText===true){focusElDom.select();}}
if(me.floating){me.toFront(true);if(containerScrollTop!==undefined){me.container.dom.scrollTop=containerScrollTop;}}}
return me;},cancelFocus:function(){var task=this.focusTask;if(task){task.cancel();}},blur:function(){var focusEl;if(this.rendered&&(focusEl=this.getFocusEl())){focusEl.blur();}
return this;},getEl:function(){return this.el;},getResizeEl:function(){return this.el;},getPositionEl:function(){return this.el;},getActionEl:function(){return this.el;},getVisibilityEl:function(){return this.el;},onResize:Ext.emptyFn,getBubbleTarget:function(){return this.ownerCt||this.floatParent;},getContentTarget:function(){return this.el;},cloneConfig:function(overrides){overrides=overrides||{};var id=overrides.id||Ext.id(),cfg=Ext.applyIf(overrides,this.initialConfig),self;cfg.id=id;self=Ext.getClass(this);return new self(cfg);},getXType:function(){return this.self.xtype;},findParentBy:function(fn){var p;for(p=this.getBubbleTarget();p&&!fn(p,this);p=p.getBubbleTarget()){}
return p||null;},findParentByType:function(xtype){return Ext.isFunction(xtype)?this.findParentBy(function(p){return p.constructor===xtype;}):this.up(xtype);},bubble:function(fn,scope,args){var p=this;while(p){if(fn.apply(scope||p,args||[p])===false){break;}
p=p.getBubbleTarget();}
return this;},getProxy:function(){var me=this,target;if(!me.proxy){target=Ext.getBody();if(Ext.scopeResetCSS){me.proxyWrap=target=Ext.getBody().createChild({cls:Ext.resetCls});}
me.proxy=me.el.createProxy(Ext.baseCSSPrefix+'proxy-el',target,true);}
return me.proxy;}});Ext.define('Puma.patch.Component',{override:'Ext.Component',initComponent:function(){this.callParent();},onHelpClick:function(a,b,c){a.preventDefault();}})
Ext.define('Ext.Img',{extend:'Ext.Component',alias:['widget.image','widget.imagecomponent'],autoEl:'img',src:'',alt:'',title:'',imgCls:'',getElConfig:function(){var me=this,config=me.callParent(),img;if(me.autoEl=='img'){img=config;}else{config.cn=[img={tag:'img',id:me.id+'-img'}];}
if(me.imgCls){img.cls=(img.cls?img.cls+' ':'')+me.imgCls;}
img.src=me.src||Ext.BLANK_IMAGE_URL;if(me.alt){img.alt=me.alt;}
if(me.title){img.title=me.title;}
return config;},onRender:function(){var me=this,el;me.callParent(arguments);el=me.el;me.imgEl=(me.autoEl=='img')?el:el.getById(me.id+'-img');},onDestroy:function(){Ext.destroy(this.imgEl);this.imgEl=null;this.callParent();},setSrc:function(src){var me=this,imgEl=me.imgEl;me.src=src;if(imgEl){imgEl.dom.src=src||Ext.BLANK_IMAGE_URL;}}});Ext.define('Ext.picker.Color',{extend:'Ext.Component',requires:'Ext.XTemplate',alias:'widget.colorpicker',alternateClassName:'Ext.ColorPalette',componentCls:Ext.baseCSSPrefix+'color-picker',selectedCls:Ext.baseCSSPrefix+'color-picker-selected',value:null,clickEvent:'click',allowReselect:false,colors:['000000','993300','333300','003300','003366','000080','333399','333333','800000','FF6600','808000','008000','008080','0000FF','666699','808080','FF0000','FF9900','99CC00','339966','33CCCC','3366FF','800080','969696','FF00FF','FFCC00','FFFF00','00FF00','00FFFF','00CCFF','993366','C0C0C0','FF99CC','FFCC99','FFFF99','CCFFCC','CCFFFF','99CCFF','CC99FF','FFFFFF'],colorRe:/(?:^|\s)color-(.{6})(?:\s|$)/,renderTpl:['<tpl for="colors">','<a href="#" class="color-{.}" hidefocus="on">','<em><span style="background:#{.}" unselectable="on">&#160;</span></em>','</a>','</tpl>'],initComponent:function(){var me=this;me.callParent(arguments);me.addEvents('select');if(me.handler){me.on('select',me.handler,me.scope,true);}},initRenderData:function(){var me=this;return Ext.apply(me.callParent(),{itemCls:me.itemCls,colors:me.colors});},onRender:function(){var me=this,clickEvent=me.clickEvent;me.callParent(arguments);me.mon(me.el,clickEvent,me.handleClick,me,{delegate:'a'});if(clickEvent!='click'){me.mon(me.el,'click',Ext.emptyFn,me,{delegate:'a',stopEvent:true});}},afterRender:function(){var me=this,value;me.callParent(arguments);if(me.value){value=me.value;me.value=null;me.select(value,true);}},handleClick:function(event,target){var me=this,color;event.stopEvent();if(!me.disabled){color=target.className.match(me.colorRe)[1];me.select(color.toUpperCase());}},select:function(color,suppressEvent){var me=this,selectedCls=me.selectedCls,value=me.value,el;color=color.replace('#','');if(!me.rendered){me.value=color;return;}
if(color!=value||me.allowReselect){el=me.el;if(me.value){el.down('a.color-'+value).removeCls(selectedCls);}
el.down('a.color-'+color).addCls(selectedCls);me.value=color;if(suppressEvent!==true){me.fireEvent('select',me,color);}}},getValue:function(){return(Ext.isArray(this.value)?Ext.Array.clone(this.value):this.value)||null;}});Ext.define('Puma.patch.picker.Color',{override:'Ext.picker.Color',select:function(color,suppressEvent){var me=this,selectedCls=me.selectedCls,value=me.value,el;if(!me.rendered){if(me.allowToggle&&Ext.isArray(color)){me.xValue=[];me.value=[];for(var i=0;i<color.length;i++){var partColor=color[i];partColor=partColor.replace('#','').toLowerCase();Ext.Array.include(me.xValue,partColor);}}
else{color=color.replace('#','').toLowerCase();me.value=color;}
return;}
if(Ext.isArray(color)){color=null;}
else{color=color.replace('#','').toLowerCase();}
if(me.allowToggle){value=me.xValue||((value&&Ext.isArray(value))?value:[]);me.xValue=null;if(Ext.Array.contains(value,color)&&color){value=Ext.Array.difference(value,[color])}
else if(color){Ext.Array.include(value,color)}
el=me.el;for(var i=0;i<me.colors.length;i++){var partColor=me.colors[i];if(Ext.Array.contains(value,partColor)){el.down('a.color-'+partColor).addCls(selectedCls);}
else{el.down('a.color-'+partColor).removeCls(selectedCls);}}
me.value=value;if(suppressEvent!==true){me.fireEvent('select',me,value);}}
else if(color!=value||me.allowReselect){el=me.el;if(me.value){el.down('a.color-'+value).removeCls(selectedCls);}
el.down('a.color-'+color).addCls(selectedCls);me.value=color;if(suppressEvent!==true){me.fireEvent('select',me,color);}}}})
Ext.define('Ext.app.EventBus',{requires:['Ext.util.Event','Ext.Component'],mixins:{observable:'Ext.util.Observable'},constructor:function(){this.mixins.observable.constructor.call(this);this.bus={};var me=this;Ext.override(Ext.Component,{fireEvent:function(ev){if(Ext.util.Observable.prototype.fireEvent.apply(this,arguments)!==false){return me.dispatch.call(me,ev,this,arguments);}
return false;}});},dispatch:function(ev,target,args){var bus=this.bus,selectors=bus[ev],selector,controllers,id,events,event,i,ln;if(selectors){for(selector in selectors){if(selectors.hasOwnProperty(selector)&&target.is(selector)){controllers=selectors[selector];for(id in controllers){if(controllers.hasOwnProperty(id)){events=controllers[id];for(i=0,ln=events.length;i<ln;i++){event=events[i];if(event.fire.apply(event,Array.prototype.slice.call(args,1))===false){return false;}}}}}}}
return true;},control:function(selectors,listeners,controller){var bus=this.bus,hasListeners,tree,list,selector,options,listener,scope,event,listenerList,ev;if(Ext.isString(selectors)){selector=selectors;selectors={};selectors[selector]=listeners;this.control(selectors,null,controller);return;}
hasListeners=Ext.util.Observable.HasListeners.prototype;for(selector in selectors){if(selectors.hasOwnProperty(selector)){listenerList=selectors[selector]||{};for(ev in listenerList){if(listenerList.hasOwnProperty(ev)){options={};listener=listenerList[ev];scope=controller;event=new Ext.util.Event(controller,ev);if(Ext.isObject(listener)){options=listener;listener=options.fn;scope=options.scope||controller;delete options.fn;delete options.scope;}
event.addListener(listener,scope,options);hasListeners[ev]=1;tree=bus[ev]||(bus[ev]={});tree=tree[selector]||(tree[selector]={});list=tree[controller.id]||(tree[controller.id]=[]);list.push(event);}}}}}});Ext.define('Ext.menu.Item',{extend:'Ext.Component',alias:'widget.menuitem',alternateClassName:'Ext.menu.TextItem',activeCls:Ext.baseCSSPrefix+'menu-item-active',ariaRole:'menuitem',canActivate:true,clickHideDelay:1,destroyMenu:true,disabledCls:Ext.baseCSSPrefix+'menu-item-disabled',hideOnClick:true,isMenuItem:true,menuAlign:'tl-tr?',menuExpandDelay:200,menuHideDelay:200,tooltipType:'qtip',arrowCls:Ext.baseCSSPrefix+'menu-item-arrow',childEls:['itemEl','iconEl','textEl','arrowEl'],renderTpl:['<tpl if="plain">','{text}','<tpl else>','<a id="{id}-itemEl" class="'+Ext.baseCSSPrefix+'menu-item-link" href="{href}" <tpl if="hrefTarget">target="{hrefTarget}"</tpl> hidefocus="true" unselectable="on">','<img id="{id}-iconEl" src="{icon}" class="'+Ext.baseCSSPrefix+'menu-item-icon {iconCls}" />','<span id="{id}-textEl" class="'+Ext.baseCSSPrefix+'menu-item-text" <tpl if="arrowCls">style="margin-right: 17px;"</tpl> >{text}</span>','<img id="{id}-arrowEl" src="{blank}" class="{arrowCls}" />','</a>','</tpl>'],maskOnDisable:false,activate:function(){var me=this;if(!me.activated&&me.canActivate&&me.rendered&&!me.isDisabled()&&me.isVisible()){me.el.addCls(me.activeCls);me.focus();me.activated=true;me.fireEvent('activate',me);}},getFocusEl:function(){return this.itemEl;},deactivate:function(){var me=this;if(me.activated){me.el.removeCls(me.activeCls);me.blur();me.hideMenu();me.activated=false;me.fireEvent('deactivate',me);}},deferExpandMenu:function(){var me=this;if(me.activated&&(!me.menu.rendered||!me.menu.isVisible())){me.parentMenu.activeChild=me.menu;me.menu.parentItem=me;me.menu.parentMenu=me.menu.ownerCt=me.parentMenu;me.menu.showBy(me,me.menuAlign);}},deferHideMenu:function(){if(this.menu.isVisible()){this.menu.hide();}},cancelDeferHide:function(){clearTimeout(this.hideMenuTimer);},deferHideParentMenus:function(){var ancestor;Ext.menu.Manager.hideAll();if(!Ext.Element.getActiveElement()){ancestor=this.up(':not([hidden])');if(ancestor){ancestor.focus();}}},expandMenu:function(delay){var me=this;if(me.menu){me.cancelDeferHide();if(delay===0){me.deferExpandMenu();}else{me.expandMenuTimer=Ext.defer(me.deferExpandMenu,Ext.isNumber(delay)?delay:me.menuExpandDelay,me);}}},getRefItems:function(deep){var menu=this.menu,items;if(menu){items=menu.getRefItems(deep);items.unshift(menu);}
return items||[];},hideMenu:function(delay){var me=this;if(me.menu){clearTimeout(me.expandMenuTimer);me.hideMenuTimer=Ext.defer(me.deferHideMenu,Ext.isNumber(delay)?delay:me.menuHideDelay,me);}},initComponent:function(){var me=this,prefix=Ext.baseCSSPrefix,cls=[prefix+'menu-item'],menu;me.addEvents('activate','click','deactivate','textchange','iconchange');if(me.plain){cls.push(prefix+'menu-item-plain');}
if(me.cls){cls.push(me.cls);}
me.cls=cls.join(' ');if(me.menu){menu=me.menu;delete me.menu;me.setMenu(menu);}
me.callParent(arguments);},onClick:function(e){var me=this;if(!me.href){e.stopEvent();}
if(me.disabled){return;}
if(me.hideOnClick){me.deferHideParentMenusTimer=Ext.defer(me.deferHideParentMenus,me.clickHideDelay,me);}
Ext.callback(me.handler,me.scope||me,[me,e]);me.fireEvent('click',me,e);if(!me.hideOnClick){me.focus();}},onRemoved:function(){var me=this;if(me.activated&&me.parentMenu.activeItem===me){me.parentMenu.deactivateActiveItem();}
me.callParent(arguments);delete me.parentMenu;delete me.ownerButton;},beforeDestroy:function(){var me=this;if(me.rendered){me.clearTip();}
me.callParent();},onDestroy:function(){var me=this;clearTimeout(me.expandMenuTimer);me.cancelDeferHide();clearTimeout(me.deferHideParentMenusTimer);me.setMenu(null);me.callParent(arguments);},beforeRender:function(){var me=this,blank=Ext.BLANK_IMAGE_URL,iconCls,arrowCls;me.callParent();if(me.iconAlign==='right'){iconCls=me.checkChangeDisabled?me.disabledCls:'';arrowCls=Ext.baseCSSPrefix+'menu-item-icon-right '+me.iconCls;}else{iconCls=me.iconCls+(me.checkChangeDisabled?' '+me.disabledCls:'');arrowCls=me.menu?me.arrowCls:'';}
Ext.applyIf(me.renderData,{href:me.href||'#',hrefTarget:me.hrefTarget,icon:me.icon||blank,iconCls:iconCls,hasIcon:!!(me.icon||me.iconCls),iconAlign:me.iconAlign,plain:me.plain,text:me.text,arrowCls:arrowCls,blank:blank});},onRender:function(){var me=this;me.callParent(arguments);if(me.tooltip){me.setTooltip(me.tooltip,true);}},setMenu:function(menu,destroyMenu){var me=this,oldMenu=me.menu,arrowEl=me.arrowEl;if(oldMenu){delete oldMenu.parentItem;delete oldMenu.parentMenu;delete oldMenu.ownerCt;delete oldMenu.ownerItem;if(destroyMenu===true||(destroyMenu!==false&&me.destroyMenu)){Ext.destroy(oldMenu);}}
if(menu){me.menu=Ext.menu.Manager.get(menu);me.menu.ownerItem=me;}else{me.menu=null;}
if(me.rendered&&!me.destroying&&arrowEl){arrowEl[me.menu?'addCls':'removeCls'](me.arrowCls);}},setHandler:function(fn,scope){this.handler=fn||null;this.scope=scope;},setIcon:function(icon){var iconEl=this.iconEl,oldIcon=this.icon;if(iconEl){iconEl.src=icon||Ext.BLANK_IMAGE_URL;}
this.icon=icon;this.fireEvent('iconchange',this,oldIcon,icon);},setIconCls:function(iconCls){var me=this,iconEl=me.iconEl,oldCls=me.iconCls;if(iconEl){if(me.iconCls){iconEl.removeCls(me.iconCls);}
if(iconCls){iconEl.addCls(iconCls);}}
me.iconCls=iconCls;me.fireEvent('iconchange',me,oldCls,iconCls);},setText:function(text){var me=this,el=me.textEl||me.el,oldText=me.text;me.text=text;if(me.rendered){el.update(text||'');me.ownerCt.updateLayout();}
me.fireEvent('textchange',me,oldText,text);},getTipAttr:function(){return this.tooltipType=='qtip'?'data-qtip':'title';},clearTip:function(){if(Ext.quickTipsActive&&Ext.isObject(this.tooltip)){Ext.tip.QuickTipManager.unregister(this.itemEl);}},setTooltip:function(tooltip,initial){var me=this;if(me.rendered){if(!initial){me.clearTip();}
if(Ext.quickTipsActive&&Ext.isObject(tooltip)){Ext.tip.QuickTipManager.register(Ext.apply({target:me.itemEl.id},tooltip));me.tooltip=tooltip;}else{me.itemEl.dom.setAttribute(me.getTipAttr(),tooltip);}}else{me.tooltip=tooltip;}
return me;}});Ext.define('Ext.menu.CheckItem',{extend:'Ext.menu.Item',alias:'widget.menucheckitem',checkedCls:Ext.baseCSSPrefix+'menu-item-checked',uncheckedCls:Ext.baseCSSPrefix+'menu-item-unchecked',groupCls:Ext.baseCSSPrefix+'menu-group-icon',hideOnClick:false,checkChangeDisabled:false,childEls:['itemEl','iconEl','textEl','checkEl'],showCheckbox:true,renderTpl:['<tpl if="plain">','{text}','<tpl else>','{%var showCheckbox = values.showCheckbox,','      rightCheckbox = showCheckbox && values.hasIcon && (values.iconAlign !== "left"), textCls = rightCheckbox ? "'+Ext.baseCSSPrefix+'right-check-item-text" : "";%}','<a id="{id}-itemEl" class="'+Ext.baseCSSPrefix+'menu-item-link" href="{href}" <tpl if="hrefTarget">target="{hrefTarget}"</tpl> hidefocus="true" unselectable="on">','{%if (values.hasIcon && (values.iconAlign !== "left")) {%}','<img id="{id}-iconEl" src="{icon}" class="'+Ext.baseCSSPrefix+'menu-item-icon {iconCls}" />','{%} else if (showCheckbox){%}','<img id="{id}-checkEl" src="{blank}" class="'+Ext.baseCSSPrefix+'menu-item-icon" />','{%}%}','<span id="{id}-textEl" class="'+Ext.baseCSSPrefix+'menu-item-text {[textCls]}" <tpl if="arrowCls">style="margin-right: 17px;"</tpl> >{text}</span>','{%if (rightCheckbox) {%}','<img id="{id}-checkEl" src="{blank}" class="'+Ext.baseCSSPrefix+'menu-item-icon-right" />','{%} else if (values.arrowCls) {%}','<img id="{id}-arrowEl" src="{blank}" class="{arrowCls}" />','{%}%}','</a>','</tpl>'],initComponent:function(){var me=this;me.addEvents('beforecheckchange','checkchange');me.callParent(arguments);Ext.menu.Manager.registerCheckable(me);if(me.group){me.showCheckbox=false;if(!me.iconCls){me.iconCls=me.groupCls;}
if(me.initialConfig.hideOnClick!==false){me.hideOnClick=true;}}},beforeRender:function(){this.callParent();this.renderData.showCheckbox=this.showCheckbox;},afterRender:function(){var me=this;me.callParent();me.checked=!me.checked;me.setChecked(!me.checked,true);if(me.checkChangeDisabled){me.disableCheckChange();}},disableCheckChange:function(){var me=this,checkEl=me.checkEl;if(checkEl){checkEl.addCls(me.disabledCls);}
if(!(Ext.isIE9&&Ext.isStrict)&&me.rendered){me.el.repaint();}
me.checkChangeDisabled=true;},enableCheckChange:function(){var me=this,checkEl=me.checkEl;if(checkEl){checkEl.removeCls(me.disabledCls);}
me.checkChangeDisabled=false;},onClick:function(e){var me=this;if(!me.disabled&&!me.checkChangeDisabled&&!(me.checked&&me.group)){me.setChecked(!me.checked);}
this.callParent([e]);},onDestroy:function(){Ext.menu.Manager.unregisterCheckable(this);this.callParent(arguments);},setChecked:function(checked,suppressEvents){var me=this;if(me.checked!==checked&&(suppressEvents||me.fireEvent('beforecheckchange',me,checked)!==false)){if(me.el){me.el[checked?'addCls':'removeCls'](me.checkedCls)[!checked?'addCls':'removeCls'](me.uncheckedCls);}
me.checked=checked;Ext.menu.Manager.onCheckChange(me,checked);if(!suppressEvents){Ext.callback(me.checkHandler,me.scope,[me,checked]);me.fireEvent('checkchange',me,checked);}}}});Ext.define('Ext.menu.Separator',{extend:'Ext.menu.Item',alias:'widget.menuseparator',canActivate:false,focusable:false,hideOnClick:false,plain:true,separatorCls:Ext.baseCSSPrefix+'menu-item-separator',text:'&#160;',beforeRender:function(ct,pos){var me=this;me.callParent();me.addCls(me.separatorCls);}});Ext.define('Ext.form.field.Base',{extend:'Ext.Component',mixins:{labelable:'Ext.form.Labelable',field:'Ext.form.field.Field'},alias:'widget.field',alternateClassName:['Ext.form.Field','Ext.form.BaseField'],requires:['Ext.util.DelayedTask','Ext.XTemplate','Ext.layout.component.field.Field'],fieldSubTpl:['<input id="{id}" type="{type}" {inputAttrTpl}',' size="1"','<tpl if="name"> name="{name}"</tpl>','<tpl if="value"> value="{[Ext.util.Format.htmlEncode(values.value)]}"</tpl>','<tpl if="placeholder"> placeholder="{placeholder}"</tpl>','{%if (values.maxLength !== undefined){%} maxlength="{maxLength}"{%}%}','<tpl if="readOnly"> readonly="readonly"</tpl>','<tpl if="disabled"> disabled="disabled"</tpl>','<tpl if="tabIdx"> tabIndex="{tabIdx}"</tpl>','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',' class="{fieldCls} {typeCls} {editableCls}" autocomplete="off"/>',{disableFormats:true}],subTplInsertions:['inputAttrTpl'],inputType:'text',invalidText:'The value in this field is invalid',fieldCls:Ext.baseCSSPrefix+'form-field',focusCls:'form-focus',dirtyCls:Ext.baseCSSPrefix+'form-dirty',checkChangeEvents:Ext.isIE&&(!document.documentMode||document.documentMode<9)?['change','propertychange','keyup']:['change','input','textInput','keyup','dragdrop'],checkChangeBuffer:50,componentLayout:'field',readOnly:false,readOnlyCls:Ext.baseCSSPrefix+'form-readonly',validateOnBlur:true,hasFocus:false,baseCls:Ext.baseCSSPrefix+'field',maskOnDisable:false,stretchInputElFixed:true,initComponent:function(){var me=this;me.callParent();me.subTplData=me.subTplData||{};me.addEvents('specialkey','writeablechange');me.initLabelable();me.initField();if(!me.name){me.name=me.getInputId();}},beforeRender:function(){var me=this;me.callParent(arguments);me.beforeLabelableRender();if(me.readOnly){me.addCls(me.readOnlyCls);}},getInputId:function(){return this.inputId||(this.inputId=this.id+'-inputEl');},getSubTplData:function(){var me=this,type=me.inputType,inputId=me.getInputId(),data;data=Ext.apply({id:inputId,cmpId:me.id,name:me.name||inputId,disabled:me.disabled,readOnly:me.readOnly,value:me.getRawValue(),type:type,fieldCls:me.fieldCls,fieldStyle:me.getFieldStyle(),tabIdx:me.tabIndex,typeCls:Ext.baseCSSPrefix+'form-'+(type==='password'?'text':type)},me.subTplData);me.getInsertionRenderData(data,me.subTplInsertions);return data;},afterFirstLayout:function(){this.callParent();var el=this.inputEl;if(el){el.selectable();}},applyRenderSelectors:function(){var me=this;me.callParent();me.inputEl=me.el.getById(me.getInputId());},getSubTplMarkup:function(){return this.getTpl('fieldSubTpl').apply(this.getSubTplData());},initRenderTpl:function(){var me=this;if(!me.hasOwnProperty('renderTpl')){me.renderTpl=me.getTpl('labelableRenderTpl');}
return me.callParent();},initRenderData:function(){return Ext.applyIf(this.callParent(),this.getLabelableRenderData());},setFieldStyle:function(style){var me=this,inputEl=me.inputEl;if(inputEl){inputEl.applyStyles(style);}
me.fieldStyle=style;},getFieldStyle:function(){return Ext.isObject(this.fieldStyle)?Ext.DomHelper.generateStyles(this.fieldStyle):this.fieldStyle||'';},onRender:function(){var me=this;me.callParent(arguments);me.onLabelableRender();me.renderActiveError();},getFocusEl:function(){return this.inputEl;},isFileUpload:function(){return this.inputType==='file';},extractFileInput:function(){var me=this,fileInput=me.isFileUpload()?me.inputEl.dom:null,clone;if(fileInput){clone=fileInput.cloneNode(true);fileInput.parentNode.replaceChild(clone,fileInput);me.inputEl=Ext.get(clone);}
return fileInput;},getSubmitData:function(){var me=this,data=null,val;if(!me.disabled&&me.submitValue&&!me.isFileUpload()){val=me.getSubmitValue();if(val!==null){data={};data[me.getName()]=val;}}
return data;},getSubmitValue:function(){return this.processRawValue(this.getRawValue());},getRawValue:function(){var me=this,v=(me.inputEl?me.inputEl.getValue():Ext.value(me.rawValue,''));me.rawValue=v;return v;},setRawValue:function(value){var me=this;value=Ext.value(me.transformRawValue(value),'');me.rawValue=value;if(me.inputEl){me.inputEl.dom.value=value;}
return value;},transformRawValue:Ext.identityFn,valueToRaw:function(value){return''+Ext.value(value,'');},rawToValue:Ext.identityFn,processRawValue:Ext.identityFn,getValue:function(){var me=this,val=me.rawToValue(me.processRawValue(me.getRawValue()));me.value=val;return val;},setValue:function(value){var me=this;me.setRawValue(me.valueToRaw(value));return me.mixins.field.setValue.call(me,value);},onBoxReady:function(){var me=this;me.callParent();if(me.setReadOnlyOnBoxReady){me.setReadOnly(me.readOnly);}},onDisable:function(){var me=this,inputEl=me.inputEl;me.callParent();if(inputEl){inputEl.dom.disabled=true;if(me.hasActiveError()){me.clearInvalid();me.needsValidateOnEnable=true;}}},onEnable:function(){var me=this,inputEl=me.inputEl;me.callParent();if(inputEl){inputEl.dom.disabled=false;if(me.needsValidateOnEnable){delete me.needsValidateOnEnable;me.forceValidation=true;me.isValid();delete me.forceValidation;}}},setReadOnly:function(readOnly){var me=this,inputEl=me.inputEl;readOnly=!!readOnly;me[readOnly?'addCls':'removeCls'](me.readOnlyCls);me.readOnly=readOnly;if(inputEl){inputEl.dom.readOnly=readOnly;}else if(me.rendering){me.setReadOnlyOnBoxReady=true;}
me.fireEvent('writeablechange',me,readOnly);},fireKey:function(e){if(e.isSpecialKey()){this.fireEvent('specialkey',this,new Ext.EventObjectImpl(e));}},initEvents:function(){var me=this,inputEl=me.inputEl,onChangeTask,onChangeEvent,events=me.checkChangeEvents,e,eLen=events.length,event;if(me.inEditor){me.onBlur=Ext.Function.createBuffered(me.onBlur,10);}
if(inputEl){me.mon(inputEl,Ext.EventManager.getKeyEvent(),me.fireKey,me);onChangeTask=new Ext.util.DelayedTask(me.checkChange,me);me.onChangeEvent=onChangeEvent=function(){onChangeTask.delay(me.checkChangeBuffer);};for(e=0;e<eLen;e++){event=events[e];if(event==='propertychange'){me.usesPropertychange=true;}
me.mon(inputEl,event,onChangeEvent);}}
me.callParent();},doComponentLayout:function(){var me=this,inputEl=me.inputEl,usesPropertychange=me.usesPropertychange,ename='propertychange',onChangeEvent=me.onChangeEvent;if(usesPropertychange){me.mun(inputEl,ename,onChangeEvent);}
me.callParent(arguments);if(usesPropertychange){me.mon(inputEl,ename,onChangeEvent);}},onDirtyChange:function(isDirty){this[isDirty?'addCls':'removeCls'](this.dirtyCls);},isValid:function(){var me=this,disabled=me.disabled,validate=me.forceValidation||!disabled;return validate?me.validateValue(me.processRawValue(me.getRawValue())):disabled;},validateValue:function(value){var me=this,errors=me.getErrors(value),isValid=Ext.isEmpty(errors);if(!me.preventMark){if(isValid){me.clearInvalid();}else{me.markInvalid(errors);}}
return isValid;},markInvalid:function(errors){var me=this,oldMsg=me.getActiveError(),active;me.setActiveErrors(Ext.Array.from(errors));active=me.getActiveError();if(oldMsg!==active){me.setError(active);}},clearInvalid:function(){var me=this,hadError=me.hasActiveError();delete me.needsValidateOnEnable;me.unsetActiveError();if(hadError){me.setError('');}},setError:function(active){var me=this,msgTarget=me.msgTarget,prop;if(me.rendered){if(msgTarget=='title'||msgTarget=='qtip'){if(me.rendered){prop=msgTarget=='qtip'?'data-errorqtip':'title';}
me.getActionEl().dom.setAttribute(prop,active||'');}else{me.updateLayout();}}},renderActiveError:function(){var me=this,hasError=me.hasActiveError();if(me.inputEl){me.inputEl[hasError?'addCls':'removeCls'](me.invalidCls+'-field');}
me.mixins.labelable.renderActiveError.call(me);},getActionEl:function(){return this.inputEl||this.el;}});Ext.define('Puma.patch.form.field.Base',{override:'Ext.form.field.Base',initComponent:function(){this.callParent();this.on('enable',function(){this.validate();});this.toBeEnabled=!this.disabled;}})
Ext.define('Ext.form.field.Checkbox',{extend:'Ext.form.field.Base',alias:['widget.checkboxfield','widget.checkbox'],alternateClassName:'Ext.form.Checkbox',requires:['Ext.XTemplate','Ext.form.CheckboxManager'],componentLayout:'field',stretchInputElFixed:false,childEls:['boxLabelEl'],fieldSubTpl:['<tpl if="boxLabel && boxLabelAlign == \'before\'">','{beforeBoxLabelTpl}','<label id="{cmpId}-boxLabelEl" {boxLabelAttrTpl} class="{boxLabelCls} {boxLabelCls}-{boxLabelAlign}" for="{id}">','{beforeBoxLabelTextTpl}','{boxLabel}','{afterBoxLabelTextTpl}','</label>','{afterBoxLabelTpl}','</tpl>','<input type="button" id="{id}" {inputAttrTpl}','<tpl if="tabIdx"> tabIndex="{tabIdx}"</tpl>','<tpl if="disabled"> disabled="disabled"</tpl>','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',' class="{fieldCls} {typeCls}" autocomplete="off" hidefocus="true" />','<tpl if="boxLabel && boxLabelAlign == \'after\'">','{beforeBoxLabelTpl}','<label id="{cmpId}-boxLabelEl" {boxLabelAttrTpl} class="{boxLabelCls} {boxLabelCls}-{boxLabelAlign}" for="{id}">','{beforeBoxLabelTextTpl}','{boxLabel}','{afterBoxLabelTextTpl}','</label>','{afterBoxLabelTpl}','</tpl>',{disableFormats:true,compiled:true}],subTplInsertions:['beforeBoxLabelTpl','afterBoxLabelTpl','beforeBoxLabelTextTpl','afterBoxLabelTextTpl','boxLabelAttrTpl','inputAttrTpl'],isCheckbox:true,focusCls:'form-cb-focus',fieldBodyCls:Ext.baseCSSPrefix+'form-cb-wrap',checked:false,checkedCls:Ext.baseCSSPrefix+'form-cb-checked',boxLabelCls:Ext.baseCSSPrefix+'form-cb-label',boxLabelAlign:'after',inputValue:'on',checkChangeEvents:[],inputType:'checkbox',onRe:/^on$/i,initComponent:function(){this.callParent(arguments);this.getManager().add(this);},initValue:function(){var me=this,checked=!!me.checked;me.originalValue=me.lastValue=checked;me.setValue(checked);},getElConfig:function(){var me=this;if(me.isChecked(me.rawValue,me.inputValue)){me.addCls(me.checkedCls);}
return me.callParent();},getFieldStyle:function(){return Ext.isObject(this.fieldStyle)?Ext.DomHelper.generateStyles(this.fieldStyle):this.fieldStyle||'';},getSubTplData:function(){var me=this;return Ext.apply(me.callParent(),{disabled:me.readOnly||me.disabled,boxLabel:me.boxLabel,boxLabelCls:me.boxLabelCls,boxLabelAlign:me.boxLabelAlign});},initEvents:function(){var me=this;me.callParent();me.mon(me.inputEl,'click',me.onBoxClick,me);},onBoxClick:function(e){var me=this;if(!me.disabled&&!me.readOnly){this.setValue(!this.checked);}},getRawValue:function(){return this.checked;},getValue:function(){return this.checked;},getSubmitValue:function(){var unchecked=this.uncheckedValue,uncheckedVal=Ext.isDefined(unchecked)?unchecked:null;return this.checked?this.inputValue:uncheckedVal;},isChecked:function(rawValue,inputValue){return(rawValue===true||rawValue==='true'||rawValue==='1'||rawValue===1||(((Ext.isString(rawValue)||Ext.isNumber(rawValue))&&inputValue)?rawValue==inputValue:this.onRe.test(rawValue)));},setRawValue:function(value){var me=this,inputEl=me.inputEl,checked=me.isChecked(value,me.inputValue);if(inputEl){me[checked?'addCls':'removeCls'](me.checkedCls);}
me.checked=me.rawValue=checked;return checked;},setValue:function(checked){var me=this,boxes,i,len,box;if(Ext.isArray(checked)){boxes=me.getManager().getByName(me.name,me.getFormId()).items;len=boxes.length;for(i=0;i<len;++i){box=boxes[i];box.setValue(Ext.Array.contains(checked,box.inputValue));}}else{me.callParent(arguments);}
return me;},valueToRaw:function(value){return value;},onChange:function(newVal,oldVal){var me=this,handler=me.handler;if(handler){handler.call(me.scope||me,me,newVal);}
me.callParent(arguments);},resetOriginalValue:function(fromBoxInGroup){var me=this,boxes,box,len,i;if(!fromBoxInGroup){boxes=me.getManager().getByName(me.name,me.getFormId()).items;len=boxes.length;for(i=0;i<len;++i){box=boxes[i];if(box!==me){boxes[i].resetOriginalValue(true);}}}
me.callParent();},beforeDestroy:function(){this.callParent();this.getManager().removeAtKey(this.id);},getManager:function(){return Ext.form.CheckboxManager;},onEnable:function(){var me=this,inputEl=me.inputEl;me.callParent();if(inputEl){inputEl.dom.disabled=me.readOnly;}},setReadOnly:function(readOnly){var me=this,inputEl=me.inputEl;if(inputEl){inputEl.dom.disabled=!!readOnly||me.disabled;}
me.callParent(arguments);},getFormId:function(){var me=this,form;if(!me.formId){form=me.up('form');if(form){me.formId=form.id;}}
return me.formId;}});Ext.define('Ext.form.field.Hidden',{extend:'Ext.form.field.Base',alias:['widget.hiddenfield','widget.hidden'],alternateClassName:'Ext.form.Hidden',inputType:'hidden',hideLabel:true,initComponent:function(){this.formItemCls+='-hidden';this.callParent();},isEqual:function(value1,value2){return this.isEqualAsString(value1,value2);},initEvents:Ext.emptyFn,setSize:Ext.emptyFn,setWidth:Ext.emptyFn,setHeight:Ext.emptyFn,setPosition:Ext.emptyFn,setPagePosition:Ext.emptyFn,markInvalid:Ext.emptyFn,clearInvalid:Ext.emptyFn});Ext.define('Gisatlib.form.HiddenStoreField',{extend:'Ext.form.field.Hidden',alias:'widget.storefield',initComponent:function(){this.callParent();if(this.autoSave){this.store.on('write',this.onStoreChanged,this)
this.store.on('remove',this.onStoreItemRemoved,this)
this.store.on('add',this.onStoreChanged,this)}
else{this.store.on('update',this.validateStore,this)}},validateStore:function(){this.validate();},getErrors:function(value){var errors=this.callParent(arguments);if(Ext.isFunction(this.validator)){var msg=this.validator.call(this,value);if(msg!==true){errors.push(msg);}}
return errors;},onStoreItemRemoved:function(store){this.onStoreChanged(store,true);},onStoreChanged:function(store,remove){var form=this.up('form');var record=form.getRecord();debugger;if(record&&(remove!==true||!store.dragging)){var base=form.getForm();base.updateRecord(record);if(!base.isValid()){return;}
form.fireEvent('beforesave',form,record);record.save();}},setValue:function(value){var ret;if(this.store.getRootNode){ret=this.setValueTree(value);}
else{ret=this.store.loadData(value||[]);}
this.validate();return ret},getValue:function(){if(this.store.getRootNode){return this.getValueTree();}
var records=this.store.getRange();var data=[];for(var i=0;i<records.length;i++){data.push(Ext.clone(records[i].data));}
return data;},getRawValue:function(){return this.getValue();},getValueTree:function(){var root=this.store.getRootNode();var obj=this.parseNode(root);return obj;},parseNode:function(node){var obj=Ext.clone(this.store.proxy.writer.getRecordData(node));delete obj['parentId'];delete obj['_id'];var childNodes=node.childNodes||[];var children=[];for(var i=0;i<childNodes.length;i++){var childNode=childNodes[i];var parsed=this.parseNode(childNode);children.push(parsed);}
if(children.length){obj.children=children;}
return obj;},setValueTree:function(value){if(!value){var nodes=this.store.getRootNode().removeAll(false);return;}
var ret=this.store.setRootNode(Ext.clone(value));this.store.getRootNode().expand(true);return ret;},reset:function(){if(this.disableReset)return;this.callParent();}})
Ext.define('Ext.button.Button',{alias:'widget.button',extend:'Ext.Component',requires:['Ext.menu.Manager','Ext.util.ClickRepeater','Ext.layout.component.Button','Ext.util.TextMetrics','Ext.util.KeyMap'],alternateClassName:'Ext.Button',isButton:true,componentLayout:'button',hidden:false,disabled:false,pressed:false,enableToggle:false,menuAlign:'tl-bl?',showEmptyMenu:false,textAlign:'center',type:'button',clickEvent:'click',preventDefault:true,handleMouseEvents:true,tooltipType:'qtip',baseCls:Ext.baseCSSPrefix+'btn',pressedCls:'pressed',overCls:'over',focusCls:'focus',menuActiveCls:'menu-active',hrefTarget:'_blank',border:true,childEls:['btnEl','btnWrap','btnInnerEl','btnIconEl'],renderTpl:['<em id="{id}-btnWrap"<tpl if="splitCls"> class="{splitCls}"</tpl>>','<tpl if="href">','<a id="{id}-btnEl" href="{href}" class="{btnCls}" target="{hrefTarget}"','<tpl if="tabIndex"> tabIndex="{tabIndex}"</tpl>','<tpl if="disabled"> disabled="disabled"</tpl>',' role="link">','<span id="{id}-btnInnerEl" class="{baseCls}-inner">','{text}','</span>','<span id="{id}-btnIconEl" class="{baseCls}-icon {iconCls}"<tpl if="iconUrl"> style="background-image:url({iconUrl})"</tpl>></span>','</a>','<tpl else>','<button id="{id}-btnEl" type="{type}" class="{btnCls}" hidefocus="true"','<tpl if="tabIndex"> tabIndex="{tabIndex}"</tpl>','<tpl if="disabled"> disabled="disabled"</tpl>',' role="button" autocomplete="off">','<span id="{id}-btnInnerEl" class="{baseCls}-inner" style="{innerSpanStyle}">','{text}','</span>','<span id="{id}-btnIconEl" class="{baseCls}-icon {iconCls}"<tpl if="iconUrl"> style="background-image:url({iconUrl})"</tpl>></span>','</button>','</tpl>','</em>','<tpl if="closable">','<a id="{id}-closeEl" href="#" class="{baseCls}-close-btn" title="{closeText}"></a>','</tpl>'],scale:'small',allowedScales:['small','medium','large'],iconAlign:'left',arrowAlign:'right',arrowCls:'arrow',maskOnDisable:false,persistentPadding:undefined,shrinkWrap:3,frame:true,initComponent:function(){var me=this;me.callParent(arguments);me.addEvents('click','toggle','mouseover','mouseout','menushow','menuhide','menutriggerover','menutriggerout','textchange','iconchange');if(me.menu){me.split=true;me.menu=Ext.menu.Manager.get(me.menu);me.menu.ownerButton=me;}
if(me.url){me.href=me.url;}
if(me.href&&!me.hasOwnProperty('preventDefault')){me.preventDefault=false;}
if(Ext.isString(me.toggleGroup)&&me.toggleGroup!==''){me.enableToggle=true;}
if(me.html&&!me.text){me.text=me.html;delete me.html;}},getActionEl:function(){return this.btnEl;},getFocusEl:function(){return this.useElForFocus?this.el:this.btnEl;},onFocus:function(e){var me=this;me.useElForFocus=true;me.callParent(arguments);me.useElForFocus=false;},onBlur:function(e){this.useElForFocus=true;this.callParent(arguments);this.useElForFocus=false;},onDisable:function(){this.useElForFocus=true;this.callParent(arguments);this.useElForFocus=false;},setComponentCls:function(){var me=this,cls=me.getComponentCls();if(!Ext.isEmpty(me.oldCls)){me.removeClsWithUI(me.oldCls);me.removeClsWithUI(me.pressedCls);}
me.oldCls=cls;me.addClsWithUI(cls);},getComponentCls:function(){var me=this,cls=[];if(me.iconCls||me.icon){if(me.text){cls.push('icon-text-'+me.iconAlign);}else{cls.push('icon');}}else if(me.text){cls.push('noicon');}
if(me.pressed){cls.push(me.pressedCls);}
return cls;},beforeRender:function(){var me=this;me.callParent();me.oldCls=me.getComponentCls();me.addClsWithUI(me.oldCls);Ext.applyIf(me.renderData,me.getTemplateArgs());if(me.scale){me.setScale(me.scale);}},onRender:function(){var me=this,addOnclick,btn,btnListeners;me.doc=Ext.getDoc();me.callParent(arguments);if(me.split&&me.arrowTooltip){me.arrowEl.dom.setAttribute(me.getTipAttr(),me.arrowTooltip);}
btn=me.el;if(me.tooltip){me.setTooltip(me.tooltip,true);}
if(me.handleMouseEvents){btnListeners={scope:me,mouseover:me.onMouseOver,mouseout:me.onMouseOut,mousedown:me.onMouseDown};if(me.split){btnListeners.mousemove=me.onMouseMove;}}else{btnListeners={scope:me};}
if(me.menu){me.mon(me.menu,{scope:me,show:me.onMenuShow,hide:me.onMenuHide});me.keyMap=new Ext.util.KeyMap({target:me.el,key:Ext.EventObject.DOWN,handler:me.onDownKey,scope:me});}
if(me.repeat){me.mon(new Ext.util.ClickRepeater(btn,Ext.isObject(me.repeat)?me.repeat:{}),'click',me.onRepeatClick,me);}else{if(btnListeners[me.clickEvent]){addOnclick=true;}else{btnListeners[me.clickEvent]=me.onClick;}}
me.mon(btn,btnListeners);if(addOnclick){me.mon(btn,me.clickEvent,me.onClick,me);}
Ext.ButtonToggleManager.register(me);},getTemplateArgs:function(){var me=this,persistentPadding=me.getPersistentPadding(),innerSpanStyle='';if(Math.max.apply(Math,persistentPadding)>0){innerSpanStyle='margin:'+Ext.Array.map(persistentPadding,function(pad){return-pad+'px';}).join(' ');}
return{href:me.getHref(),disabled:me.disabled,hrefTarget:me.hrefTarget,type:me.type,btnCls:me.getBtnCls(),splitCls:me.getSplitCls(),iconUrl:me.icon,iconCls:me.iconCls,text:me.text||'&#160;',tabIndex:me.tabIndex,innerSpanStyle:innerSpanStyle};},getHref:function(){var me=this,params=Ext.apply({},me.baseParams);params=Ext.apply(params,me.params);return me.href?Ext.urlAppend(me.href,Ext.Object.toQueryString(params)):false;},setParams:function(params){this.params=params;this.btnEl.dom.href=this.getHref();},getSplitCls:function(){var me=this;return me.split?(me.baseCls+'-'+me.arrowCls)+' '+(me.baseCls+'-'+me.arrowCls+'-'+me.arrowAlign):'';},getBtnCls:function(){return this.textAlign?this.baseCls+'-'+this.textAlign:'';},setIcon:function(icon){icon=icon||'';var me=this,btnIconEl=me.btnIconEl,oldIcon=me.icon||'';me.icon=icon;if(icon!=oldIcon){if(btnIconEl){btnIconEl.setStyle('background-image',icon?'url('+icon+')':'');me.setComponentCls();if(me.didIconStateChange(oldIcon,icon)){me.updateLayout();}}
me.fireEvent('iconchange',me,oldIcon,icon);}
return me;},setIconCls:function(cls){cls=cls||'';var me=this,btnIconEl=me.btnIconEl,oldCls=me.iconCls||'';me.iconCls=cls;if(oldCls!=cls){if(btnIconEl){btnIconEl.removeCls(oldCls);btnIconEl.addCls(cls||'');me.setComponentCls();if(me.didIconStateChange(oldCls,cls)){me.updateLayout();}}
me.fireEvent('iconchange',me,oldCls,cls);}
return me;},setTooltip:function(tooltip,initial){var me=this;if(me.rendered){if(!initial){me.clearTip();}
if(Ext.quickTipsActive&&Ext.isObject(tooltip)){Ext.tip.QuickTipManager.register(Ext.apply({target:me.btnEl.id},tooltip));me.tooltip=tooltip;}else{me.btnEl.dom.setAttribute(me.getTipAttr(),tooltip);}}else{me.tooltip=tooltip;}
return me;},setTextAlign:function(align){var me=this,btnEl=me.btnEl;if(btnEl){btnEl.removeCls(me.baseCls+'-'+me.textAlign);btnEl.addCls(me.baseCls+'-'+align);}
me.textAlign=align;return me;},getTipAttr:function(){return this.tooltipType=='qtip'?'data-qtip':'title';},getRefItems:function(deep){var menu=this.menu,items;if(menu){items=menu.getRefItems(deep);items.unshift(menu);}
return items||[];},clearTip:function(){if(Ext.quickTipsActive&&Ext.isObject(this.tooltip)){Ext.tip.QuickTipManager.unregister(this.btnEl);}},beforeDestroy:function(){var me=this;if(me.rendered){me.clearTip();}
if(me.menu&&me.destroyMenu!==false){Ext.destroy(me.menu);}
Ext.destroy(me.btnInnerEl,me.repeater);me.callParent();},onDestroy:function(){var me=this;if(me.rendered){me.doc.un('mouseover',me.monitorMouseOver,me);me.doc.un('mouseup',me.onMouseUp,me);delete me.doc;Ext.ButtonToggleManager.unregister(me);Ext.destroy(me.keyMap);delete me.keyMap;}
me.callParent();},setHandler:function(handler,scope){this.handler=handler;this.scope=scope;return this;},setText:function(text){text=text||'';var me=this,oldText=me.text||'';if(text!=oldText){me.text=text;if(me.rendered){me.btnInnerEl.update(text||'&#160;');me.setComponentCls();if(Ext.isStrict&&Ext.isIE8){me.el.repaint();}
me.updateLayout();}
me.fireEvent('textchange',me,oldText,text);}
return me;},didIconStateChange:function(old,current){var currentEmpty=Ext.isEmpty(current);return Ext.isEmpty(old)?!currentEmpty:currentEmpty;},getText:function(){return this.text;},toggle:function(state,suppressEvent){var me=this;state=state===undefined?!me.pressed:!!state;if(state!==me.pressed){if(me.rendered){me[state?'addClsWithUI':'removeClsWithUI'](me.pressedCls);}
me.pressed=state;if(!suppressEvent){me.fireEvent('toggle',me,state);Ext.callback(me.toggleHandler,me.scope||me,[me,state]);}}
return me;},maybeShowMenu:function(){var me=this;if(me.menu&&!me.hasVisibleMenu()&&!me.ignoreNextClick){me.showMenu(true);}},showMenu:function(fromEvent){var me=this,menu=me.menu;if(me.rendered){if(me.tooltip&&Ext.quickTipsActive&&me.getTipAttr()!='title'){Ext.tip.QuickTipManager.getQuickTip().cancelShow(me.btnEl);}
if(menu.isVisible()){menu.hide();}
if(!fromEvent||me.showEmptyMenu||menu.items.getCount()>0){menu.showBy(me.el,me.menuAlign,((!Ext.isStrict&&Ext.isIE)||Ext.isIE6)?[-2,-2]:undefined);}}
return me;},hideMenu:function(){if(this.hasVisibleMenu()){this.menu.hide();}
return this;},hasVisibleMenu:function(){var menu=this.menu;return menu&&menu.rendered&&menu.isVisible();},onRepeatClick:function(repeat,e){this.onClick(e);},onClick:function(e){var me=this;if(me.preventDefault||(me.disabled&&me.getHref())&&e){e.preventDefault();}
if(e.button!==0){return;}
if(!me.disabled){me.doToggle();me.maybeShowMenu();me.fireHandler(e);}},fireHandler:function(e){var me=this,handler=me.handler;if(me.fireEvent('click',me,e)!==false){if(handler){handler.call(me.scope||me,me,e);}
me.blur();}},doToggle:function(){var me=this;if(me.enableToggle&&(me.allowDepress!==false||!me.pressed)){me.toggle();}},onMouseOver:function(e){var me=this;if(!me.disabled&&!e.within(me.el,true,true)){me.onMouseEnter(e);}},onMouseOut:function(e){var me=this;if(!e.within(me.el,true,true)){if(me.overMenuTrigger){me.onMenuTriggerOut(e);}
me.onMouseLeave(e);}},onMouseMove:function(e){var me=this,el=me.el,over=me.overMenuTrigger,overlap,btnSize;if(me.split){if(me.arrowAlign==='right'){overlap=e.getX()-el.getX();btnSize=el.getWidth();}else{overlap=e.getY()-el.getY();btnSize=el.getHeight();}
if(overlap>(btnSize-me.getTriggerSize())){if(!over){me.onMenuTriggerOver(e);}}else{if(over){me.onMenuTriggerOut(e);}}}},getTriggerSize:function(){var me=this,size=me.triggerSize,side,sideFirstLetter,undef;if(size===undef){side=me.arrowAlign;sideFirstLetter=side.charAt(0);size=me.triggerSize=me.el.getFrameWidth(sideFirstLetter)+me.btnWrap.getFrameWidth(sideFirstLetter)+me.frameSize[side];}
return size;},onMouseEnter:function(e){var me=this;me.addClsWithUI(me.overCls);me.fireEvent('mouseover',me,e);},onMouseLeave:function(e){var me=this;me.removeClsWithUI(me.overCls);me.fireEvent('mouseout',me,e);},onMenuTriggerOver:function(e){var me=this;me.overMenuTrigger=true;me.fireEvent('menutriggerover',me,me.menu,e);},onMenuTriggerOut:function(e){var me=this;delete me.overMenuTrigger;me.fireEvent('menutriggerout',me,me.menu,e);},enable:function(silent){var me=this;me.callParent(arguments);if(me.btnEl){me.btnEl.dom.disabled=false;}
me.removeClsWithUI('disabled');return me;},disable:function(silent){var me=this;me.callParent(arguments);if(me.btnEl){me.btnEl.dom.disabled=true;}
me.addClsWithUI('disabled');me.removeClsWithUI(me.overCls);if(me.btnInnerEl&&(Ext.isIE6||Ext.isIE7)){me.btnInnerEl.repaint();}
return me;},setScale:function(scale){var me=this,ui=me.ui.replace('-'+me.scale,'');if(!Ext.Array.contains(me.allowedScales,scale)){throw('#setScale: scale must be an allowed scale ('+me.allowedScales.join(', ')+')');}
me.scale=scale;me.setUI(ui);},setUI:function(ui){var me=this;if(me.scale&&!ui.match(me.scale)){ui=ui+'-'+me.scale;}
me.callParent([ui]);},onMouseDown:function(e){var me=this;if(!me.disabled&&e.button===0){me.addClsWithUI(me.pressedCls);me.doc.on('mouseup',me.onMouseUp,me);}},onMouseUp:function(e){var me=this;if(e.button===0){if(!me.pressed){me.removeClsWithUI(me.pressedCls);}
me.doc.un('mouseup',me.onMouseUp,me);}},onMenuShow:function(e){var me=this;me.ignoreNextClick=0;me.addClsWithUI(me.menuActiveCls);me.fireEvent('menushow',me,me.menu);},onMenuHide:function(e){var me=this;me.removeClsWithUI(me.menuActiveCls);me.ignoreNextClick=Ext.defer(me.restoreClick,250,me);me.fireEvent('menuhide',me,me.menu);},restoreClick:function(){this.ignoreNextClick=0;},onDownKey:function(){var me=this;if(!me.disabled){if(me.menu){me.showMenu();}}},getPersistentPadding:function(){var me=this,reset=Ext.scopeResetCSS,padding=me.persistentPadding,btn,leftTop,btnEl,btnInnerEl,wrap;if(!padding){padding=me.self.prototype.persistentPadding=[0,0,0,0];if(!Ext.isIE){btn=new Ext.button.Button({text:'test',style:'position:absolute;top:-999px;'});btn.el=Ext.DomHelper.append(Ext.resetElement,btn.getRenderTree(),true);btn.applyChildEls(btn.el);btnEl=btn.btnEl;btnInnerEl=btn.btnInnerEl;btnEl.setSize(null,null);leftTop=btnInnerEl.getOffsetsTo(btnEl);padding[0]=leftTop[1];padding[1]=btnEl.getWidth()-btnInnerEl.getWidth()-leftTop[0];padding[2]=btnEl.getHeight()-btnInnerEl.getHeight()-leftTop[1];padding[3]=leftTop[0];btn.destroy();btn.el.remove();}}
return padding;}},function(){var groups={},toggleGroup=function(btn,state){if(state){var g=groups[btn.toggleGroup],length=g.length,i;for(i=0;i<length;i++){if(g[i]!==btn){g[i].toggle(false);}}}};Ext.ButtonToggleManager={register:function(btn){if(!btn.toggleGroup){return;}
var group=groups[btn.toggleGroup];if(!group){group=groups[btn.toggleGroup]=[];}
group.push(btn);btn.on('toggle',toggleGroup);},unregister:function(btn){if(!btn.toggleGroup){return;}
var group=groups[btn.toggleGroup];if(group){Ext.Array.remove(group,btn);btn.un('toggle',toggleGroup);}},getPressed:function(group){var g=groups[group],i=0,len;if(g){for(len=g.length;i<len;i++){if(g[i].pressed===true){return g[i];}}}
return null;}};});Ext.define('Puma.patch.button.Button',{override:'Ext.button.Button',initComponent:function(){this.persistentPadding=[0,0,0,0];this.callParent();}})
Ext.define('Ext.picker.Month',{extend:'Ext.Component',requires:['Ext.XTemplate','Ext.util.ClickRepeater','Ext.Date','Ext.button.Button'],alias:'widget.monthpicker',alternateClassName:'Ext.MonthPicker',childEls:['bodyEl','prevEl','nextEl','buttonsEl','monthEl','yearEl'],renderTpl:['<div id="{id}-bodyEl" class="{baseCls}-body">','<div id="{id}-monthEl" class="{baseCls}-months">','<tpl for="months">','<div class="{parent.baseCls}-item {parent.baseCls}-month"><a style="{parent.monthStyle}" href="#" hidefocus="on">{.}</a></div>','</tpl>','</div>','<div id="{id}-yearEl" class="{baseCls}-years">','<div class="{baseCls}-yearnav">','<button id="{id}-prevEl" class="{baseCls}-yearnav-prev"></button>','<button id="{id}-nextEl" class="{baseCls}-yearnav-next"></button>','</div>','<tpl for="years">','<div class="{parent.baseCls}-item {parent.baseCls}-year"><a href="#" hidefocus="on">{.}</a></div>','</tpl>','</div>','<div class="'+Ext.baseCSSPrefix+'clear"></div>','</div>','<tpl if="showButtons">','<div id="{id}-buttonsEl" class="{baseCls}-buttons">{%','var me=values.$comp, okBtn=me.okBtn, cancelBtn=me.cancelBtn;','okBtn.ownerLayout = cancelBtn.ownerLayout = me.componentLayout;','okBtn.ownerCt = cancelBtn.ownerCt = me;','Ext.DomHelper.generateMarkup(okBtn.getRenderTree(), out);','Ext.DomHelper.generateMarkup(cancelBtn.getRenderTree(), out);','%}</div>','</tpl>'],okText:'OK',cancelText:'Cancel',baseCls:Ext.baseCSSPrefix+'monthpicker',showButtons:true,width:178,measureWidth:35,measureMaxHeight:20,smallCls:Ext.baseCSSPrefix+'monthpicker-small',totalYears:10,yearOffset:5,monthOffset:6,initComponent:function(){var me=this;me.selectedCls=me.baseCls+'-selected';me.addEvents('cancelclick','monthclick','monthdblclick','okclick','select','yearclick','yeardblclick');if(me.small){me.addCls(me.smallCls);}
me.setValue(me.value);me.activeYear=me.getYear(new Date().getFullYear()-4,-4);if(me.showButtons){me.okBtn=new Ext.button.Button({text:me.okText,handler:me.onOkClick,scope:me});me.cancelBtn=new Ext.button.Button({text:me.cancelText,handler:me.onCancelClick,scope:me});}
this.callParent();},beforeRender:function(){var me=this,i=0,months=[],shortName=Ext.Date.getShortMonthName,monthLen=me.monthOffset,margin=me.monthMargin,style='';me.callParent();for(;i<monthLen;++i){months.push(shortName(i),shortName(i+monthLen));}
if(Ext.isDefined(margin)){style='margin: 0 '+margin+'px;';}
Ext.apply(me.renderData,{months:months,years:me.getYears(),showButtons:me.showButtons,monthStyle:style});},afterRender:function(){var me=this,body=me.bodyEl,buttonsEl=me.buttonsEl;me.callParent();me.mon(body,'click',me.onBodyClick,me);me.mon(body,'dblclick',me.onBodyClick,me);me.years=body.select('.'+me.baseCls+'-year a');me.months=body.select('.'+me.baseCls+'-month a');me.backRepeater=new Ext.util.ClickRepeater(me.prevEl,{handler:Ext.Function.bind(me.adjustYear,me,[-me.totalYears])});me.prevEl.addClsOnOver(me.baseCls+'-yearnav-prev-over');me.nextRepeater=new Ext.util.ClickRepeater(me.nextEl,{handler:Ext.Function.bind(me.adjustYear,me,[me.totalYears])});me.nextEl.addClsOnOver(me.baseCls+'-yearnav-next-over');me.updateBody();if(!Ext.isDefined(me.monthMargin)){Ext.picker.Month.prototype.monthMargin=me.calculateMonthMargin();}},calculateMonthMargin:function(){var me=this,monthEl=me.monthEl,months=me.months,first=months.first(),itemMargin=first.getMargin('l');while(itemMargin&&me.getLargest()>me.measureMaxHeight){--itemMargin;months.setStyle('margin','0 '+itemMargin+'px');}
return itemMargin;},getLargest:function(months){var largest=0;this.months.each(function(item){var h=item.getHeight();if(h>largest){largest=h;}});return largest;},setValue:function(value){var me=this,active=me.activeYear,offset=me.monthOffset,year,index;if(!value){me.value=[null,null];}else if(Ext.isDate(value)){me.value=[value.getMonth(),value.getFullYear()];}else{me.value=[value[0],value[1]];}
if(me.rendered){year=me.value[1];if(year!==null){if((year<active||year>active+me.yearOffset)){me.activeYear=year-me.yearOffset+1;}}
me.updateBody();}
return me;},getValue:function(){return this.value;},hasSelection:function(){var value=this.value;return value[0]!==null&&value[1]!==null;},getYears:function(){var me=this,offset=me.yearOffset,start=me.activeYear,end=start+offset,i=start,years=[];for(;i<end;++i){years.push(i,i+offset);}
return years;},updateBody:function(){var me=this,years=me.years,months=me.months,yearNumbers=me.getYears(),cls=me.selectedCls,value=me.getYear(null),month=me.value[0],monthOffset=me.monthOffset,year,yearItems,y,yLen,el;if(me.rendered){years.removeCls(cls);months.removeCls(cls);yearItems=years.elements;yLen=yearItems.length;for(y=0;y<yLen;y++){el=Ext.fly(yearItems[y]);year=yearNumbers[y];el.dom.innerHTML=year;if(year==value){el.dom.className=cls;}}
if(month!==null){if(month<monthOffset){month=month*2;}else{month=(month-monthOffset)*2+1;}
months.item(month).addCls(cls);}}},getYear:function(defaultValue,offset){var year=this.value[1];offset=offset||0;return year===null?defaultValue:year+offset;},onBodyClick:function(e,t){var me=this,isDouble=e.type=='dblclick';if(e.getTarget('.'+me.baseCls+'-month')){e.stopEvent();me.onMonthClick(t,isDouble);}else if(e.getTarget('.'+me.baseCls+'-year')){e.stopEvent();me.onYearClick(t,isDouble);}},adjustYear:function(offset){if(typeof offset!='number'){offset=this.totalYears;}
this.activeYear+=offset;this.updateBody();},onOkClick:function(){this.fireEvent('okclick',this,this.value);},onCancelClick:function(){this.fireEvent('cancelclick',this);},onMonthClick:function(target,isDouble){var me=this;me.value[0]=me.resolveOffset(me.months.indexOf(target),me.monthOffset);me.updateBody();me.fireEvent('month'+(isDouble?'dbl':'')+'click',me,me.value);me.fireEvent('select',me,me.value);},onYearClick:function(target,isDouble){var me=this;me.value[1]=me.activeYear+me.resolveOffset(me.years.indexOf(target),me.yearOffset);me.updateBody();me.fireEvent('year'+(isDouble?'dbl':'')+'click',me,me.value);me.fireEvent('select',me,me.value);},resolveOffset:function(index,offset){if(index%2===0){return(index/2);}else{return offset+Math.floor(index/2);}},beforeDestroy:function(){var me=this;me.years=me.months=null;Ext.destroyMembers(me,'backRepeater','nextRepeater','okBtn','cancelBtn');me.callParent();},finishRenderChildren:function(){var me=this;this.callParent(arguments);if(this.showButtons){me.okBtn.finishRender();me.cancelBtn.finishRender();}},onDestroy:function(){Ext.destroyMembers(this,'okBtn','cancelBtn');this.callParent();}});Ext.define('Ext.button.Split',{alias:'widget.splitbutton',extend:'Ext.button.Button',alternateClassName:'Ext.SplitButton',arrowCls:'split',split:true,initComponent:function(){this.callParent();this.addEvents("arrowclick");},setArrowHandler:function(handler,scope){this.arrowHandler=handler;this.scope=scope;},onClick:function(e,t){var me=this;e.preventDefault();if(!me.disabled){if(me.overMenuTrigger){me.maybeShowMenu();me.fireEvent("arrowclick",me,e);if(me.arrowHandler){me.arrowHandler.call(me.scope||me,me,e);}}else{me.doToggle();me.fireHandler(e);}}}});Ext.define('Ext.picker.Date',{extend:'Ext.Component',requires:['Ext.XTemplate','Ext.button.Button','Ext.button.Split','Ext.util.ClickRepeater','Ext.util.KeyNav','Ext.EventObject','Ext.fx.Manager','Ext.picker.Month'],alias:'widget.datepicker',alternateClassName:'Ext.DatePicker',childEls:['innerEl','eventEl','prevEl','nextEl','middleBtnEl','footerEl'],border:true,renderTpl:['<div id="{id}-innerEl" role="grid">','<div role="presentation" class="{baseCls}-header">','<div class="{baseCls}-prev"><a id="{id}-prevEl" href="#" role="button" title="{prevText}"></a></div>','<div class="{baseCls}-month" id="{id}-middleBtnEl">{%this.renderMonthBtn(values, out)%}</div>','<div class="{baseCls}-next"><a id="{id}-nextEl" href="#" role="button" title="{nextText}"></a></div>','</div>','<table id="{id}-eventEl" class="{baseCls}-inner" cellspacing="0" role="presentation">','<thead role="presentation"><tr role="presentation">','<tpl for="dayNames">','<th role="columnheader" title="{.}"><span>{.:this.firstInitial}</span></th>','</tpl>','</tr></thead>','<tbody role="presentation"><tr role="presentation">','<tpl for="days">','{#:this.isEndOfWeek}','<td role="gridcell" id="{[Ext.id()]}">','<a role="presentation" href="#" hidefocus="on" class="{parent.baseCls}-date" tabIndex="1">','<em role="presentation"><span role="presentation"></span></em>','</a>','</td>','</tpl>','</tr></tbody>','</table>','<tpl if="showToday">','<div id="{id}-footerEl" role="presentation" class="{baseCls}-footer">{%this.renderTodayBtn(values, out)%}</div>','</tpl>','</div>',{firstInitial:function(value){return Ext.picker.Date.prototype.getDayInitial(value);},isEndOfWeek:function(value){value--;var end=value%7===0&&value!==0;return end?'</tr><tr role="row">':'';},renderTodayBtn:function(values,out){Ext.DomHelper.generateMarkup(values.$comp.todayBtn.getRenderTree(),out);},renderMonthBtn:function(values,out){Ext.DomHelper.generateMarkup(values.$comp.monthBtn.getRenderTree(),out);}}],todayText:'Today',ariaTitle:'Date Picker: {0}',ariaTitleDateFormat:'F d, Y',todayTip:'{0} (Spacebar)',minText:'This date is before the minimum date',maxText:'This date is after the maximum date',disabledDaysText:'Disabled',disabledDatesText:'Disabled',nextText:'Next Month (Control+Right)',prevText:'Previous Month (Control+Left)',monthYearText:'Choose a month (Control+Up/Down to move years)',monthYearFormat:'F Y',startDay:0,showToday:true,disableAnim:false,baseCls:Ext.baseCSSPrefix+'datepicker',longDayFormat:'F d, Y',focusOnShow:false,focusOnSelect:true,width:178,initHour:12,numDays:42,initComponent:function(){var me=this,clearTime=Ext.Date.clearTime;me.selectedCls=me.baseCls+'-selected';me.disabledCellCls=me.baseCls+'-disabled';me.prevCls=me.baseCls+'-prevday';me.activeCls=me.baseCls+'-active';me.nextCls=me.baseCls+'-prevday';me.todayCls=me.baseCls+'-today';me.dayNames=me.dayNames.slice(me.startDay).concat(me.dayNames.slice(0,me.startDay));me.callParent();me.value=me.value?clearTime(me.value,true):clearTime(new Date());me.addEvents('select');me.initDisabledDays();},beforeRender:function(){var me=this,days=new Array(me.numDays),today=Ext.Date.format(new Date(),me.format);if(me.up('menu')){me.addCls(Ext.baseCSSPrefix+'menu');}
me.monthBtn=new Ext.button.Split({ownerCt:me,ownerLayout:me.getComponentLayout(),text:'',tooltip:me.monthYearText,listeners:{click:me.showMonthPicker,arrowclick:me.showMonthPicker,scope:me}});if(me.showToday){me.todayBtn=new Ext.button.Button({ownerCt:me,ownerLayout:me.getComponentLayout(),text:Ext.String.format(me.todayText,today),tooltip:Ext.String.format(me.todayTip,today),tooltipType:'title',handler:me.selectToday,scope:me});}
me.callParent();Ext.applyIf(me,{renderData:{}});Ext.apply(me.renderData,{dayNames:me.dayNames,showToday:me.showToday,prevText:me.prevText,nextText:me.nextText,days:days});},finishRenderChildren:function(){var me=this;me.callParent();me.monthBtn.finishRender();if(me.showToday){me.todayBtn.finishRender();}},onRender:function(container,position){var me=this;me.callParent(arguments);me.el.unselectable();me.cells=me.eventEl.select('tbody td');me.textNodes=me.eventEl.query('tbody td span');me.mon(me.eventEl,{scope:me,mousewheel:me.handleMouseWheel,click:{fn:me.handleDateClick,delegate:'a.'+me.baseCls+'-date'}});},initEvents:function(){var me=this,eDate=Ext.Date,day=eDate.DAY;me.callParent();me.prevRepeater=new Ext.util.ClickRepeater(me.prevEl,{handler:me.showPrevMonth,scope:me,preventDefault:true,stopDefault:true});me.nextRepeater=new Ext.util.ClickRepeater(me.nextEl,{handler:me.showNextMonth,scope:me,preventDefault:true,stopDefault:true});me.keyNav=new Ext.util.KeyNav(me.eventEl,Ext.apply({scope:me,left:function(e){if(e.ctrlKey){me.showPrevMonth();}else{me.update(eDate.add(me.activeDate,day,-1));}},right:function(e){if(e.ctrlKey){me.showNextMonth();}else{me.update(eDate.add(me.activeDate,day,1));}},up:function(e){if(e.ctrlKey){me.showNextYear();}else{me.update(eDate.add(me.activeDate,day,-7));}},down:function(e){if(e.ctrlKey){me.showPrevYear();}else{me.update(eDate.add(me.activeDate,day,7));}},pageUp:me.showNextMonth,pageDown:me.showPrevMonth,enter:function(e){e.stopPropagation();return true;}},me.keyNavConfig));if(me.showToday){me.todayKeyListener=me.eventEl.addKeyListener(Ext.EventObject.SPACE,me.selectToday,me);}
me.update(me.value);},initDisabledDays:function(){var me=this,dd=me.disabledDates,re='(?:',len,d,dLen,dI;if(!me.disabledDatesRE&&dd){len=dd.length-1;dLen=dd.length;for(d=0;d<dLen;d++){dI=dd[d];re+=Ext.isDate(dI)?'^'+Ext.String.escapeRegex(Ext.Date.dateFormat(dI,me.format))+'$':dI;if(d!=len){re+='|';}}
me.disabledDatesRE=new RegExp(re+')');}},setDisabledDates:function(dd){var me=this;if(Ext.isArray(dd)){me.disabledDates=dd;me.disabledDatesRE=null;}else{me.disabledDatesRE=dd;}
me.initDisabledDays();me.update(me.value,true);return me;},setDisabledDays:function(dd){this.disabledDays=dd;return this.update(this.value,true);},setMinDate:function(dt){this.minDate=dt;return this.update(this.value,true);},setMaxDate:function(dt){this.maxDate=dt;return this.update(this.value,true);},setValue:function(value){this.value=Ext.Date.clearTime(value,true);return this.update(this.value);},getValue:function(){return this.value;},getDayInitial:function(value){return value.substr(0,1);},focus:function(){this.update(this.activeDate);},onEnable:function(){this.callParent();this.setDisabledStatus(false);this.update(this.activeDate);},onDisable:function(){this.callParent();this.setDisabledStatus(true);},setDisabledStatus:function(disabled){var me=this;me.keyNav.setDisabled(disabled);me.prevRepeater.setDisabled(disabled);me.nextRepeater.setDisabled(disabled);if(me.showToday){me.todayKeyListener.setDisabled(disabled);me.todayBtn.setDisabled(disabled);}},getActive:function(){return this.activeDate||this.value;},runAnimation:function(isHide){var picker=this.monthPicker,options={duration:200,callback:function(){if(isHide){picker.hide();}else{picker.show();}}};if(isHide){picker.el.slideOut('t',options);}else{picker.el.slideIn('t',options);}},hideMonthPicker:function(animate){var me=this,picker=me.monthPicker;if(picker){if(me.shouldAnimate(animate)){me.runAnimation(true);}else{picker.hide();}}
return me;},showMonthPicker:function(animate){var me=this,picker;if(me.rendered&&!me.disabled){picker=me.createMonthPicker();picker.setValue(me.getActive());picker.setSize(me.getSize());picker.setPosition(-1,-1);if(me.shouldAnimate(animate)){me.runAnimation(false);}else{picker.show();}}
return me;},shouldAnimate:function(animate){return Ext.isDefined(animate)?animate:!this.disableAnim;},createMonthPicker:function(){var me=this,picker=me.monthPicker;if(!picker){me.monthPicker=picker=new Ext.picker.Month({renderTo:me.el,floating:true,shadow:false,small:me.showToday===false,listeners:{scope:me,cancelclick:me.onCancelClick,okclick:me.onOkClick,yeardblclick:me.onOkClick,monthdblclick:me.onOkClick}});if(!me.disableAnim){picker.el.setStyle('display','none');}
me.on('beforehide',Ext.Function.bind(me.hideMonthPicker,me,[false]));}
return picker;},onOkClick:function(picker,value){var me=this,month=value[0],year=value[1],date=new Date(year,month,me.getActive().getDate());if(date.getMonth()!==month){date=Ext.Date.getLastDateOfMonth(new Date(year,month,1));}
me.setValue(date);me.hideMonthPicker();},onCancelClick:function(){this.selectedUpdate(this.activeDate);this.hideMonthPicker();},showPrevMonth:function(e){return this.setValue(Ext.Date.add(this.activeDate,Ext.Date.MONTH,-1));},showNextMonth:function(e){return this.setValue(Ext.Date.add(this.activeDate,Ext.Date.MONTH,1));},showPrevYear:function(){return this.setValue(Ext.Date.add(this.activeDate,Ext.Date.YEAR,-1));},showNextYear:function(){return this.setValue(Ext.Date.add(this.activeDate,Ext.Date.YEAR,1));},handleMouseWheel:function(e){e.stopEvent();if(!this.disabled){var delta=e.getWheelDelta();if(delta>0){this.showPrevMonth();}else if(delta<0){this.showNextMonth();}}},handleDateClick:function(e,t){var me=this,handler=me.handler;e.stopEvent();if(!me.disabled&&t.dateValue&&!Ext.fly(t.parentNode).hasCls(me.disabledCellCls)){me.doCancelFocus=me.focusOnSelect===false;me.setValue(new Date(t.dateValue));delete me.doCancelFocus;me.fireEvent('select',me,me.value);if(handler){handler.call(me.scope||me,me,me.value);}
me.onSelect();}},onSelect:function(){if(this.hideOnSelect){this.hide();}},selectToday:function(){var me=this,btn=me.todayBtn,handler=me.handler;if(btn&&!btn.disabled){me.setValue(Ext.Date.clearTime(new Date()));me.fireEvent('select',me,me.value);if(handler){handler.call(me.scope||me,me,me.value);}
me.onSelect();}
return me;},selectedUpdate:function(date){var me=this,t=date.getTime(),cells=me.cells,cls=me.selectedCls,cellItems=cells.elements,c,cLen=cellItems.length,cell;cells.removeCls(cls);for(c=0;c<cLen;c++){cell=Ext.fly(cellItems[c]);if(cell.dom.firstChild.dateValue==t){me.fireEvent('highlightitem',me,cell);cell.addCls(cls);if(me.isVisible()&&!me.doCancelFocus){Ext.fly(cell.dom.firstChild).focus(50);}
break;}}},fullUpdate:function(date){var me=this,cells=me.cells.elements,textNodes=me.textNodes,disabledCls=me.disabledCellCls,eDate=Ext.Date,i=0,extraDays=0,visible=me.isVisible(),sel=+eDate.clearTime(date,true),today=+eDate.clearTime(new Date()),min=me.minDate?eDate.clearTime(me.minDate,true):Number.NEGATIVE_INFINITY,max=me.maxDate?eDate.clearTime(me.maxDate,true):Number.POSITIVE_INFINITY,ddMatch=me.disabledDatesRE,ddText=me.disabledDatesText,ddays=me.disabledDays?me.disabledDays.join(''):false,ddaysText=me.disabledDaysText,format=me.format,days=eDate.getDaysInMonth(date),firstOfMonth=eDate.getFirstDateOfMonth(date),startingPos=firstOfMonth.getDay()-me.startDay,previousMonth=eDate.add(date,eDate.MONTH,-1),longDayFormat=me.longDayFormat,prevStart,current,disableToday,tempDate,setCellClass,html,cls,formatValue,value;if(startingPos<0){startingPos+=7;}
days+=startingPos;prevStart=eDate.getDaysInMonth(previousMonth)-startingPos;current=new Date(previousMonth.getFullYear(),previousMonth.getMonth(),prevStart,me.initHour);if(me.showToday){tempDate=eDate.clearTime(new Date());disableToday=(tempDate<min||tempDate>max||(ddMatch&&format&&ddMatch.test(eDate.dateFormat(tempDate,format)))||(ddays&&ddays.indexOf(tempDate.getDay())!=-1));if(!me.disabled){me.todayBtn.setDisabled(disableToday);me.todayKeyListener.setDisabled(disableToday);}}
setCellClass=function(cell){value=+eDate.clearTime(current,true);cell.title=eDate.format(current,longDayFormat);cell.firstChild.dateValue=value;if(value==today){cell.className+=' '+me.todayCls;cell.title=me.todayText;}
if(value==sel){cell.className+=' '+me.selectedCls;me.fireEvent('highlightitem',me,cell);if(visible&&me.floating){Ext.fly(cell.firstChild).focus(50);}}
if(value<min){cell.className=disabledCls;cell.title=me.minText;return;}
if(value>max){cell.className=disabledCls;cell.title=me.maxText;return;}
if(ddays){if(ddays.indexOf(current.getDay())!=-1){cell.title=ddaysText;cell.className=disabledCls;}}
if(ddMatch&&format){formatValue=eDate.dateFormat(current,format);if(ddMatch.test(formatValue)){cell.title=ddText.replace('%0',formatValue);cell.className=disabledCls;}}};for(;i<me.numDays;++i){if(i<startingPos){html=(++prevStart);cls=me.prevCls;}else if(i>=days){html=(++extraDays);cls=me.nextCls;}else{html=i-startingPos+1;cls=me.activeCls;}
textNodes[i].innerHTML=html;cells[i].className=cls;current.setDate(current.getDate()+1);setCellClass(cells[i]);}
me.monthBtn.setText(Ext.Date.format(date,me.monthYearFormat));},update:function(date,forceRefresh){var me=this,active=me.activeDate;if(me.rendered){me.activeDate=date;if(!forceRefresh&&active&&me.el&&active.getMonth()==date.getMonth()&&active.getFullYear()==date.getFullYear()){me.selectedUpdate(date,active);}else{me.fullUpdate(date,active);}
me.innerEl.dom.title=Ext.String.format(me.ariaTitle,Ext.Date.format(me.activeDate,me.ariaTitleDateFormat));}
return me;},beforeDestroy:function(){var me=this;if(me.rendered){Ext.destroy(me.todayKeyListener,me.keyNav,me.monthPicker,me.monthBtn,me.nextRepeater,me.prevRepeater,me.todayBtn);delete me.textNodes;delete me.cells.elements;}
me.callParent();},onShow:function(){this.callParent(arguments);if(this.focusOnShow){this.focus();}}},function(){var proto=this.prototype,date=Ext.Date;proto.monthNames=date.monthNames;proto.dayNames=date.dayNames;proto.format=date.defaultFormat;});Ext.define('Ext.FocusManager',{singleton:true,alternateClassName:['Ext.FocusMgr'],mixins:{observable:'Ext.util.Observable'},requires:['Ext.AbstractComponent','Ext.Component','Ext.ComponentManager','Ext.ComponentQuery','Ext.util.HashMap','Ext.util.KeyNav'],enabled:false,focusElementCls:Ext.baseCSSPrefix+'focus-element',focusFrameCls:Ext.baseCSSPrefix+'focus-frame',whitelist:['textfield'],constructor:function(config){var me=this,CQ=Ext.ComponentQuery;me.mixins.observable.constructor.call(me,config);me.addEvents('beforecomponentfocus','componentfocus','disable','enable');me.focusTask=new Ext.util.DelayedTask(me.handleComponentFocus,me);Ext.override(Ext.AbstractComponent,{onFocus:function(){this.callParent(arguments);if(me.enabled&&this.hasFocus){Array.prototype.unshift.call(arguments,this);me.onComponentFocus.apply(me,arguments);}},onBlur:function(){this.callParent(arguments);if(me.enabled&&!this.hasFocus){Array.prototype.unshift.call(arguments,this);me.onComponentBlur.apply(me,arguments);}},onDestroy:function(){this.callParent(arguments);if(me.enabled){Array.prototype.unshift.call(arguments,this);me.onComponentDestroy.apply(me,arguments);}}});Ext.override(Ext.Component,{afterHide:function(){this.callParent(arguments);if(me.enabled){Array.prototype.unshift.call(arguments,this);me.onComponentHide.apply(me,arguments);}}});me.keyNav=new Ext.util.KeyNav(Ext.getDoc(),{disabled:true,scope:me,backspace:me.focusLast,enter:me.navigateIn,esc:me.navigateOut,tab:me.navigateSiblings,space:me.navigateIn,del:me.focusLast,left:me.navigateSiblings,right:me.navigateSiblings,down:me.navigateSiblings,up:me.navigateSiblings});me.focusData={};me.subscribers=new Ext.util.HashMap();me.focusChain={};Ext.apply(CQ.pseudos,{nextFocus:function(cmps,idx,step){step=step||1;idx=parseInt(idx,10);var len=cmps.length,i=idx,c;for(;;){if((i+=step)>=len){i=0;}else if(i<0){i=len-1;}
if(i===idx){return[];}
if((c=cmps[i]).isFocusable()){return[c];}}
return[];},prevFocus:function(cmps,idx){return this.nextFocus(cmps,idx,-1);},root:function(cmps){var len=cmps.length,results=[],i=0,c;for(;i<len;i++){c=cmps[i];if(!c.ownerCt){results.push(c);}}
return results;}});},addXTypeToWhitelist:function(xtype){var me=this;if(Ext.isArray(xtype)){Ext.Array.forEach(xtype,me.addXTypeToWhitelist,me);return;}
if(!Ext.Array.contains(me.whitelist,xtype)){me.whitelist.push(xtype);}},clearComponent:function(cmp){clearTimeout(this.cmpFocusDelay);if(!cmp.isDestroyed){cmp.blur();}},disable:function(){var me=this;if(!me.enabled){return;}
delete me.options;me.enabled=false;me.removeDOM();me.keyNav.disable();me.fireEvent('disable',me);},enable:function(options){var me=this;if(options===true){options={focusFrame:true};}
me.options=options=options||{};if(me.enabled){return;}
me.enabled=true;me.initDOM(options);me.keyNav.enable();me.focusEl.focus();delete me.focusedCmp;me.fireEvent('enable',me);},focusLast:function(e){var me=this;if(me.isWhitelisted(me.focusedCmp)){return true;}
if(me.previousFocusedCmp){me.previousFocusedCmp.focus();}},getRootComponents:function(){var CQ=Ext.ComponentQuery,inline=CQ.query(':focusable:root:not([floating])'),floating=CQ.query(':focusable:root[floating]');floating.sort(function(a,b){return a.el.getZIndex()>b.el.getZIndex();});return floating.concat(inline);},initDOM:function(options){var me=this,cls=me.focusFrameCls,needListeners=Ext.ComponentQuery.query('{getFocusEl()}:not([focusListenerAdded])'),i=0,len=needListeners.length;if(!Ext.isReady){return Ext.onReady(me.initDOM,me);}
for(;i<len;i++){needListeners[i].addFocusListener();}
if(!me.focusEl){me.focusEl=Ext.getBody();me.focusEl.dom.tabIndex=-1;}
if(!me.focusFrame&&options.focusFrame){me.focusFrame=Ext.getBody().createChild({cls:cls,children:[{cls:cls+'-top'},{cls:cls+'-bottom'},{cls:cls+'-left'},{cls:cls+'-right'}],style:'top: -100px; left: -100px;'});me.focusFrame.setVisibilityMode(Ext.Element.DISPLAY);me.focusFrame.hide().setLeftTop(0,0);}},isWhitelisted:function(cmp){return cmp&&Ext.Array.some(this.whitelist,function(x){return cmp.isXType(x);});},navigateIn:function(e){var me=this,focusedCmp=me.focusedCmp,defaultRoot,firstChild;if(me.isWhitelisted(focusedCmp)){return true;}
if(!focusedCmp){defaultRoot=me.getRootComponents()[0];if(defaultRoot){if(defaultRoot.getFocusEl()===me.focusEl){me.focusEl.blur();}
defaultRoot.focus();}}else{firstChild=focusedCmp.hasFocus?Ext.ComponentQuery.query('>:focusable',focusedCmp)[0]:focusedCmp;if(firstChild){firstChild.focus();}else{if(Ext.isFunction(focusedCmp.onClick)){e.button=0;focusedCmp.onClick(e);if(focusedCmp.isVisible(true)){focusedCmp.focus();}else{me.navigateOut();}}}}},navigateOut:function(e){var me=this,parent;if(!me.focusedCmp||!(parent=me.focusedCmp.up(':focusable'))){me.focusEl.focus();}else{parent.focus();}
return true;},navigateSiblings:function(e,source,parent){var me=this,src=source||me,key=e.getKey(),EO=Ext.EventObject,goBack=e.shiftKey||key==EO.LEFT||key==EO.UP,checkWhitelist=key==EO.LEFT||key==EO.RIGHT||key==EO.UP||key==EO.DOWN,nextSelector=goBack?'prev':'next',idx,next,focusedCmp,siblings;focusedCmp=(src.focusedCmp&&src.focusedCmp.comp)||src.focusedCmp;if(!focusedCmp&&!parent){return true;}
if(checkWhitelist&&me.isWhitelisted(focusedCmp)){return true;}
if(!focusedCmp||focusedCmp.is(':root')){siblings=me.getRootComponents();}else{parent=parent||focusedCmp.up();if(parent){siblings=parent.getRefItems();}}
if(siblings){idx=focusedCmp?Ext.Array.indexOf(siblings,focusedCmp):-1;next=Ext.ComponentQuery.query(':'+nextSelector+'Focus('+idx+')',siblings)[0];if(next&&focusedCmp!==next){next.focus();return next;}}},onComponentBlur:function(cmp,e){var me=this;if(me.focusedCmp===cmp){me.previousFocusedCmp=cmp;delete me.focusedCmp;}
if(me.focusFrame){me.focusFrame.hide();}},onComponentFocus:function(cmp,e){var me=this,chain=me.focusChain,parent;if(!cmp.isFocusable()){me.clearComponent(cmp);if(chain[cmp.id]){return;}
parent=cmp.up();if(parent){chain[cmp.id]=true;parent.focus();}
return;}
me.focusChain={};me.focusTask.delay(10,null,null,[cmp,cmp.getFocusEl()]);},handleComponentFocus:function(cmp,focusEl){var me=this,cls,ff,box,bt,bl,bw,bh,ft,fb,fl,fr;if(me.fireEvent('beforecomponentfocus',me,cmp,me.previousFocusedCmp)===false){me.clearComponent(cmp);return;}
me.focusedCmp=cmp;if(me.shouldShowFocusFrame(cmp)){cls='.'+me.focusFrameCls+'-';ff=me.focusFrame;box=(focusEl.dom?focusEl:focusEl.el).getPageBox();bt=box.top;bl=box.left;bw=box.width;bh=box.height;ft=ff.child(cls+'top');fb=ff.child(cls+'bottom');fl=ff.child(cls+'left');fr=ff.child(cls+'right');ft.setWidth(bw).setLeftTop(bl,bt);fb.setWidth(bw).setLeftTop(bl,bt+bh-2);fl.setHeight(bh-2).setLeftTop(bl,bt+2);fr.setHeight(bh-2).setLeftTop(bl+bw-2,bt+2);ff.show();}
me.fireEvent('componentfocus',me,cmp,me.previousFocusedCmp);},onComponentHide:function(cmp){var me=this,cmpHadFocus=false,focusedCmp=me.focusedCmp,parent;if(focusedCmp){cmpHadFocus=cmp.hasFocus||(cmp.isContainer&&cmp.isAncestor(me.focusedCmp));}
me.clearComponent(cmp);if(cmpHadFocus&&(parent=cmp.up(':focusable'))){parent.focus();}else{me.focusEl.focus();}},onComponentDestroy:function(){},removeDOM:function(){var me=this;if(me.enabled||me.subscribers.length){return;}
Ext.destroy(me.focusFrame);delete me.focusEl;delete me.focusFrame;},removeXTypeFromWhitelist:function(xtype){var me=this;if(Ext.isArray(xtype)){Ext.Array.forEach(xtype,me.removeXTypeFromWhitelist,me);return;}
Ext.Array.remove(me.whitelist,xtype);},setupSubscriberKeys:function(container,keys){var me=this,el=container.getFocusEl(),scope=keys.scope,handlers={backspace:me.focusLast,enter:me.navigateIn,esc:me.navigateOut,scope:me},navSiblings=function(e){if(me.focusedCmp===container){return me.navigateSiblings(e,me,container);}else{return me.navigateSiblings(e);}};Ext.iterate(keys,function(key,cb){handlers[key]=function(e){var ret=navSiblings(e);if(Ext.isFunction(cb)&&cb.call(scope||container,e,ret)===true){return true;}
return ret;};},me);return new Ext.util.KeyNav(el,handlers);},shouldShowFocusFrame:function(cmp){var me=this,opts=me.options||{};if(!me.focusFrame||!cmp){return false;}
if(opts.focusFrame){return true;}
if(me.focusData[cmp.id].focusFrame){return true;}
return false;}});Ext.define('Ext.menu.KeyNav',{extend:'Ext.util.KeyNav',requires:['Ext.FocusManager'],constructor:function(menu){var me=this;me.menu=menu;me.callParent([menu.el,{down:me.down,enter:me.enter,esc:me.escape,left:me.left,right:me.right,space:me.enter,tab:me.tab,up:me.up}]);},down:function(e){var me=this,fi=me.menu.focusedItem;if(fi&&e.getKey()==Ext.EventObject.DOWN&&me.isWhitelisted(fi)){return true;}
me.focusNextItem(1);},enter:function(e){var menu=this.menu,focused=menu.focusedItem;if(menu.activeItem){menu.onClick(e);}else if(focused&&focused.isFormField){return true;}},escape:function(e){Ext.menu.Manager.hideAll();},focusNextItem:function(step){var menu=this.menu,items=menu.items,focusedItem=menu.focusedItem,startIdx=focusedItem?items.indexOf(focusedItem):-1,idx=startIdx+step,len=items.length,count=0,item;while(count<len&&idx!==startIdx){if(idx<0){idx=len-1;}else if(idx>=len){idx=0;}
item=items.getAt(idx);if(menu.canActivateItem(item)){menu.setActiveItem(item);break;}
idx+=step;++count;}},isWhitelisted:function(item){return Ext.FocusManager.isWhitelisted(item);},left:function(e){var menu=this.menu,fi=menu.focusedItem,ai=menu.activeItem;if(fi&&this.isWhitelisted(fi)){return true;}
menu.hide();if(menu.parentMenu){menu.parentMenu.focus();}},right:function(e){var menu=this.menu,fi=menu.focusedItem,ai=menu.activeItem,am;if(fi&&this.isWhitelisted(fi)){return true;}
if(ai){am=menu.activeItem.menu;if(am){ai.expandMenu(0);Ext.defer(function(){am.setActiveItem(am.items.getAt(0));},25);}}},tab:function(e){var me=this;if(e.shiftKey){me.up(e);}else{me.down(e);}},up:function(e){var me=this,fi=me.menu.focusedItem;if(fi&&e.getKey()==Ext.EventObject.UP&&me.isWhitelisted(fi)){return true;}
me.focusNextItem(-1);}});Ext.define('Ext.container.AbstractContainer',{extend:'Ext.Component',requires:['Ext.util.MixedCollection','Ext.layout.container.Auto','Ext.ZIndexManager'],renderTpl:'{%this.renderContainer(out,values)%}',suspendLayout:false,autoDestroy:true,defaultType:'panel',detachOnRemove:true,isContainer:true,layoutCounter:0,baseCls:Ext.baseCSSPrefix+'container',bubbleEvents:['add','remove'],defaultLayoutType:'auto',initComponent:function(){var me=this;me.addEvents('afterlayout','beforeadd','beforeremove','add','remove');me.callParent();me.getLayout();me.initItems();},initItems:function(){var me=this,items=me.items;me.items=new Ext.util.AbstractMixedCollection(false,me.getComponentId);me.floatingItems=new Ext.util.MixedCollection(false,me.getComponentId);if(items){if(!Ext.isArray(items)){items=[items];}
me.add(items);}},getFocusEl:function(){return this.getTargetEl();},finishRenderChildren:function(){this.callParent();var layout=this.getLayout();if(layout){layout.finishRender();}},beforeRender:function(){var me=this,layout=me.getLayout();me.callParent();if(!layout.initialized){layout.initLayout();}},setupRenderTpl:function(renderTpl){var layout=this.getLayout();this.callParent(arguments);layout.setupRenderTpl(renderTpl);},setLayout:function(layout){var currentLayout=this.layout;if(currentLayout&&currentLayout.isLayout&&currentLayout!=layout){currentLayout.setOwner(null);}
this.layout=layout;layout.setOwner(this);},getLayout:function(){var me=this;if(!me.layout||!me.layout.isLayout){me.setLayout(Ext.layout.Layout.create(me.layout,me.self.prototype.layout||me.defaultLayoutType));}
return me.layout;},doLayout:function(){this.updateLayout();return this;},afterLayout:function(layout){var me=this;++me.layoutCounter;if(me.hasListeners.afterlayout){me.fireEvent('afterlayout',me,layout);}},prepareItems:function(items,applyDefaults){if(Ext.isArray(items)){items=items.slice();}else{items=[items];}
var me=this,i=0,len=items.length,item;for(;i<len;i++){item=items[i];if(item==null){Ext.Array.erase(items,i,1);--i;--len;}else{if(applyDefaults){item=this.applyDefaults(item);}
item.isContained=me;items[i]=me.lookupComponent(item);delete item.isContained;delete items[i].isContained;}}
return items;},applyDefaults:function(config){var defaults=this.defaults;if(defaults){if(Ext.isFunction(defaults)){defaults=defaults.call(this,config);}
if(Ext.isString(config)){config=Ext.ComponentManager.get(config);}
Ext.applyIf(config,defaults);}
return config;},lookupComponent:function(comp){return(typeof comp=='string')?Ext.ComponentManager.get(comp):Ext.ComponentManager.create(comp,this.defaultType);},getComponentId:function(comp){return comp.getItemId();},add:function(){var me=this,args=Ext.Array.slice(arguments),index=(typeof args[0]=='number')?args.shift():-1,layout=me.getLayout(),addingArray,items,i,length,item,pos,ret;if(args.length==1&&Ext.isArray(args[0])){items=args[0];addingArray=true;}else{items=args;}
ret=items=me.prepareItems(items,true);length=items.length;if(me.rendered){Ext.suspendLayouts();}
if(!addingArray&&length==1){ret=items[0];}
for(i=0;i<length;i++){item=items[i];if(!item){Ext.Error.raise("Cannot add null item to Container with itemId/id: "+me.getItemId());}
pos=(index<0)?me.items.length:(index+i);if(item.floating){me.floatingItems.add(item);item.onAdded(me,pos);if(me.hasListeners.add){me.fireEvent('add',me,item,pos);}}else if((!me.hasListeners.beforeadd||me.fireEvent('beforeadd',me,item,pos)!==false)&&me.onBeforeAdd(item)!==false){me.items.insert(pos,item);item.onAdded(me,pos);me.onAdd(item,pos);layout.onAdd(item,pos);if(me.hasListeners.add){me.fireEvent('add',me,item,pos);}}}
me.updateLayout();if(me.rendered){Ext.resumeLayouts(true);}
return ret;},onAdd:Ext.emptyFn,onRemove:Ext.emptyFn,insert:function(index,comp){return this.add(index,comp);},move:function(fromIdx,toIdx){var items=this.items,item;item=items.removeAt(fromIdx);if(item===false){return false;}
items.insert(toIdx,item);this.updateLayout();return item;},onBeforeAdd:function(item){var me=this,border=item.border;if(item.ownerCt&&item.ownerCt!==me){item.ownerCt.remove(item,false);}
if(me.border===false||me.border===0){item.border=Ext.isDefined(border)&&border!==false&&border!==0;}},remove:function(comp,autoDestroy){var me=this,c=me.getComponent(comp);if(Ext.isDefined(Ext.global.console)&&!c){Ext.global.console.warn("Attempted to remove a component that does not exist. Ext.container.Container: remove takes an argument of the component to remove. cmp.remove() is incorrect usage.");}
if(c&&(!me.hasListeners.beforeremove||me.fireEvent('beforeremove',me,c)!==false)){me.doRemove(c,autoDestroy);if(me.hasListeners.remove){me.fireEvent('remove',me,c);}
if(!me.destroying&&!c.floating){me.updateLayout();}}
return c;},doRemove:function(component,autoDestroy){var me=this,layout=me.layout,hasLayout=layout&&me.rendered,destroying=autoDestroy===true||(autoDestroy!==false&&me.autoDestroy),floating=component.floating;autoDestroy=autoDestroy===true||(autoDestroy!==false&&me.autoDestroy);if(floating){me.floatingItems.remove(component);}else{me.items.remove(component);}
if(hasLayout&&!floating){if(layout.running){Ext.AbstractComponent.cancelLayout(component,destroying);}
layout.onRemove(component,destroying);}
component.onRemoved(destroying);me.onRemove(component,destroying);if(destroying){component.destroy();}
else{if(hasLayout&&!floating){layout.afterRemove(component);}
if(me.detachOnRemove&&component.rendered){Ext.getDetachedBody().appendChild(component.getEl());}}},removeAll:function(autoDestroy){var me=this,removeItems=me.items.items.slice().concat(me.floatingItems.items),items=[],i=0,len=removeItems.length,item;me.suspendLayouts();for(;i<len;i++){item=removeItems[i];me.remove(item,autoDestroy);if(item.ownerCt!==me){items.push(item);}}
me.resumeLayouts(!!len);return items;},getRefItems:function(deep){var me=this,items=me.items.items,len=items.length,i=0,item,result=[];for(;i<len;i++){item=items[i];result.push(item);if(deep&&item.getRefItems){result.push.apply(result,item.getRefItems(true));}}
result.push.apply(result,me.floatingItems.items);return result;},cascade:function(fn,scope,origArgs){var me=this,cs=me.items?me.items.items:[],len=cs.length,i=0,c,args=origArgs?origArgs.concat(me):[me],componentIndex=args.length-1;if(fn.apply(scope||me,args)!==false){for(;i<len;i++){c=cs[i];if(c.cascade){c.cascade(fn,scope,origArgs);}else{args[componentIndex]=c;fn.apply(scope||cs,args);}}}
return this;},isAncestor:function(possibleDescendant){while(possibleDescendant){if(possibleDescendant.ownerCt===this){return true;}
possibleDescendant=possibleDescendant.ownerCt;}},getComponent:function(comp){if(Ext.isObject(comp)){comp=comp.getItemId();}
var c=this.items.get(comp);if(!c&&typeof comp!='number'){c=this.floatingItems.get(comp);}
return c;},query:function(selector){selector=selector||'*';return Ext.ComponentQuery.query(selector,this);},queryBy:function(fn,scope){var out=[],items=this.getRefItems(true),i=0,len=items.length,item;for(;i<len;++i){item=items[i];if(fn.call(scope||item,item)!==false){out.push(item);}}
return out;},queryById:function(id){return this.down('#'+id);},child:function(selector){selector=selector||'';return this.query('> '+selector)[0]||null;},nextChild:function(child,selector){var me=this,result,childIndex=me.items.indexOf(child);if(childIndex!==-1){result=selector?Ext.ComponentQuery(selector,me.items.items.slice(childIndex+1)):me.items.getAt(childIndex+1);if(!result&&me.ownerCt){result=me.ownerCt.nextChild(me,selector);}}
return result;},prevChild:function(child,selector){var me=this,result,childIndex=me.items.indexOf(child);if(childIndex!==-1){result=selector?Ext.ComponentQuery(selector,me.items.items.slice(childIndex+1)):me.items.getAt(childIndex+1);if(!result&&me.ownerCt){result=me.ownerCt.nextChild(me,selector);}}
return result;},down:function(selector){return this.query(selector)[0]||null;},enable:function(){this.callParent(arguments);var itemsToDisable=this.getChildItemsToDisable(),length=itemsToDisable.length,item,i;for(i=0;i<length;i++){item=itemsToDisable[i];if(item.resetDisable){item.enable();}}
return this;},disable:function(){this.callParent(arguments);var itemsToDisable=this.getChildItemsToDisable(),length=itemsToDisable.length,item,i;for(i=0;i<length;i++){item=itemsToDisable[i];if(item.resetDisable!==false&&!item.disabled){item.disable();item.resetDisable=true;}}
return this;},getChildItemsToDisable:function(){return this.query('[isFormField],button');},beforeLayout:function(){return true;},beforeDestroy:function(){var me=this,items=me.items,floatingItems=me.floatingItems,c;if(items){while((c=items.first())){me.doRemove(c,true);}}
if(floatingItems){while((c=floatingItems.first())){me.doRemove(c,true);}}
Ext.destroy(me.layout);me.callParent();}});Ext.define('Ext.container.Container',{extend:'Ext.container.AbstractContainer',alias:'widget.container',alternateClassName:'Ext.Container',fireHierarchyEvent:function(ename){this.hierarchyEventSource.fireEvent(ename,this);},afterHide:function(){this.callParent(arguments);this.fireHierarchyEvent('hide');},afterShow:function(){this.callParent(arguments);this.fireHierarchyEvent('show');},onAdded:function(){this.callParent(arguments);if(this.hierarchyEventSource.hasListeners.added){this.fireHierarchyEvent('added');}},getChildByElement:function(el,deep){var item,itemEl,i=0,it=this.getRefItems(),ln=it.length;el=Ext.getDom(el);for(;i<ln;i++){item=it[i];itemEl=item.getEl();if(itemEl&&((itemEl.dom===el)||itemEl.contains(el))){return(deep&&item.getChildByElement)?item.getChildByElement(el,deep):item;}}
return null;}},function(){this.hierarchyEventSource=this.prototype.hierarchyEventSource=new Ext.util.Observable({events:{hide:true,show:true,collapse:true,expand:true,added:true}});});Ext.define('PumaMain.view.Chart',{extend:'Ext.container.Container',alias:'widget.chartcmp',colspan:2,border:0,autoScroll:true,initComponent:function(){this.callParent();}})
Ext.define('Puma.view.container.Common',{extend:'Ext.container.Container',alias:'widget.commoncontainer',frame:false,border:0,requires:[],initComponent:function(){this.layout={type:'hbox',align:'stretchmax',pack:'center'}
this.callParent();}});Ext.define('Ext.panel.Header',{extend:'Ext.container.Container',uses:['Ext.panel.Tool','Ext.util.CSS','Ext.layout.component.Body','Ext.Img'],alias:'widget.header',isHeader:true,defaultType:'tool',indicateDrag:false,weight:-1,componentLayout:'body',titleAlign:'left',childEls:['body'],renderTpl:['<div id="{id}-body" class="{baseCls}-body {bodyCls}','<tpl for="uiCls"> {parent.baseCls}-body-{parent.ui}-{.}</tpl>"','<tpl if="bodyStyle"> style="{bodyStyle}"</tpl>>','{%this.renderContainer(out,values)%}','</div>'],headingTpl:'<span id="{id}-textEl" class="{cls}-text {cls}-text-{ui}">{title}</span>',shrinkWrap:3,initComponent:function(){var me=this;me.addEvents('click','dblclick');me.indicateDragCls=me.baseCls+'-draggable';me.title=me.title||'&#160;';me.tools=me.tools||[];me.items=me.items||[];me.orientation=me.orientation||'horizontal';me.dock=(me.dock)?me.dock:(me.orientation=='horizontal')?'top':'left';me.addClsWithUI([me.orientation,me.dock]);if(me.indicateDrag){me.addCls(me.indicateDragCls);}
if(!Ext.isEmpty(me.iconCls)||!Ext.isEmpty(me.icon)){me.initIconCmp();me.items.push(me.iconCmp);}
me.titleCmp=new Ext.Component({ariaRole:'heading',focusable:false,noWrap:true,flex:1,id:me.id+'_hd',style:'text-align:'+me.titleAlign,cls:me.baseCls+'-text-container',renderTpl:me.getTpl('headingTpl'),renderData:{title:me.title,cls:me.baseCls,ui:me.ui},childEls:['textEl'],listeners:{render:me.onTitleRender,scope:me}});me.layout=(me.orientation=='vertical')?{type:'vbox',align:'center'}:{type:'hbox',align:'middle'};me.items.push(me.titleCmp);me.items=me.items.concat(me.tools);me.tools=[];me.callParent();me.on({dblclick:me.onDblClick,click:me.onClick,element:'el',scope:me});},initIconCmp:function(){var me=this,cfg={focusable:false,src:Ext.BLANK_IMAGE_URL,cls:[me.baseCls+'-icon',me.iconCls],id:me.id+'-iconEl',iconCls:me.iconCls};if(!Ext.isEmpty(me.icon)){delete cfg.iconCls;cfg.src=me.icon;}
me.iconCmp=new Ext.Img(cfg);},afterLayout:function(){var me=this,titleEl;if(me.orientation==='vertical'){if(!Ext.isIE9m){titleEl=me.titleCmp.el;titleEl.setStyle('left',titleEl.getWidth()+'px');}else if(Ext.isIE7&&Ext.isStrict&&me.frame){me.el.repaint();}}},onTitleRender:function(){if(this.orientation==='vertical'){this.titleCmp.el.setVertical();}},afterRender:function(){this.el.unselectable();this.callParent();},addUIClsToElement:function(cls){var me=this,result=me.callParent(arguments),classes=[me.baseCls+'-body-'+cls,me.baseCls+'-body-'+me.ui+'-'+cls],array,i;if(me.bodyCls){array=me.bodyCls.split(' ');for(i=0;i<classes.length;i++){if(!Ext.Array.contains(array,classes[i])){array.push(classes[i]);}}
me.bodyCls=array.join(' ');}else{me.bodyCls=classes.join(' ');}
return result;},removeUIClsFromElement:function(cls){var me=this,result=me.callParent(arguments),classes=[me.baseCls+'-body-'+cls,me.baseCls+'-body-'+me.ui+'-'+cls],array,i;if(me.bodyCls){array=me.bodyCls.split(' ');for(i=0;i<classes.length;i++){Ext.Array.remove(array,classes[i]);}
me.bodyCls=array.join(' ');}
return result;},addUIToElement:function(){var me=this,array,cls;me.callParent(arguments);cls=me.baseCls+'-body-'+me.ui;if(me.rendered){if(me.bodyCls){me.body.addCls(me.bodyCls);}else{me.body.addCls(cls);}}else{if(me.bodyCls){array=me.bodyCls.split(' ');if(!Ext.Array.contains(array,cls)){array.push(cls);}
me.bodyCls=array.join(' ');}else{me.bodyCls=cls;}}
if(me.titleCmp&&me.titleCmp.rendered&&me.titleCmp.textEl){me.titleCmp.textEl.addCls(me.baseCls+'-text-'+me.ui);}},removeUIFromElement:function(){var me=this,array,cls;me.callParent(arguments);cls=me.baseCls+'-body-'+me.ui;if(me.rendered){if(me.bodyCls){me.body.removeCls(me.bodyCls);}else{me.body.removeCls(cls);}}else{if(me.bodyCls){array=me.bodyCls.split(' ');Ext.Array.remove(array,cls);me.bodyCls=array.join(' ');}else{me.bodyCls=cls;}}
if(me.titleCmp&&me.titleCmp.rendered&&me.titleCmp.textEl){me.titleCmp.textEl.removeCls(me.baseCls+'-text-'+me.ui);}},onClick:function(e){this.fireClickEvent('click',e);},onDblClick:function(e){this.fireClickEvent('dblclick',e);},fireClickEvent:function(type,e){var toolCls='.'+Ext.panel.Tool.prototype.baseCls;if(!e.getTarget(toolCls)){this.fireEvent(type,this,e);}},getFocusEl:function(){return this.el;},getTargetEl:function(){return this.body||this.frameBody||this.el;},setTitle:function(title){var me=this,titleCmp=me.titleCmp;me.title=title;if(titleCmp.rendered){titleCmp.textEl.update(me.title||'&#160;');titleCmp.updateLayout();}else{me.titleCmp.on({render:function(){me.setTitle(title);},single:true});}},getMinWidth:function(){var me=this,textEl=me.titleCmp.textEl.dom,result,tools=me.tools,l,i;textEl.style.display='inline';result=textEl.offsetWidth;textEl.style.display='';if(tools&&(l=tools.length)){for(i=0;i<l;i++){if(tools[i].el){result+=tools[i].el.dom.offsetWidth;}}}
if(me.iconCmp){result+=me.iconCmp.el.dom.offsetWidth;}
return result+10;},setIconCls:function(cls){var me=this,isEmpty=!cls||!cls.length,iconCmp=me.iconCmp;me.iconCls=cls;if(!me.iconCmp&&!isEmpty){me.initIconCmp();me.insert(0,me.iconCmp);}else if(iconCmp){if(isEmpty){me.iconCmp.destroy();delete me.iconCmp;}else{iconCmp.removeCls(iconCmp.iconCls);iconCmp.addCls(cls);iconCmp.iconCls=cls;}}},setIcon:function(icon){var me=this,isEmpty=!icon||!icon.length,iconCmp=me.iconCmp;me.icon=icon;if(!me.iconCmp&&!isEmpty){me.initIconCmp();me.insert(0,me.iconCmp);}else if(iconCmp){if(isEmpty){me.iconCmp.destroy();delete me.iconCmp;}else{iconCmp.setSrc(me.icon);}}},getTools:function(){return this.tools.slice();},addTool:function(tool){this.add(Ext.ComponentManager.create(tool,'tool'));},onAdd:function(component,index){var tools=this.tools;this.callParent(arguments);if(component instanceof Ext.panel.Tool){component.bindTo(this.ownerCt);tools.push(component);tools[component.type]=component;}},initRenderData:function(){return Ext.applyIf(this.callParent(),{bodyCls:this.bodyCls});}});Ext.define('Puma.patch.panel.Header',{override:'Ext.panel.Header',initComponent:function(){{var me=this;me.addEvents('click','dblclick');me.indicateDragCls=me.baseCls+'-draggable';me.title=me.title||'&#160;';me.tools=me.tools||[];me.items=me.items||[];me.orientation=me.orientation||'horizontal';me.dock=(me.dock)?me.dock:(me.orientation=='horizontal')?'top':'left';me.addClsWithUI([me.orientation,me.dock]);if(me.indicateDrag){me.addCls(me.indicateDragCls);}
if(!Ext.isEmpty(me.iconCls)||!Ext.isEmpty(me.icon)){me.initIconCmp();me.iconCmp.margin='0 5 0 0';me.items.push(me.iconCmp);}
me.titleCmp=new Ext.Component({ariaRole:'heading',focusable:false,noWrap:true,flex:1,id:me.id+'_hd',style:'text-align:'+me.titleAlign,cls:me.baseCls+'-text-container',renderTpl:me.getTpl('headingTpl'),renderData:{title:me.title,cls:me.baseCls,ui:me.ui},childEls:['textEl'],listeners:{render:me.onTitleRender,scope:me}});me.layout=(me.orientation=='vertical')?{type:'vbox',align:'center'}:{type:'hbox',align:'middle'};me.items.push(me.titleCmp);me.items=me.items.concat(me.tools);me.tools=[];var collapseTool=null
for(var i=0;i<me.items.length;i++){var item=me.items[i];if(item.type=='collapse-top'||item.type=='expand-bottom'){collapseTool=item;break;}}
if(collapseTool&&me.collapseLeft){Ext.Array.remove(me.items,collapseTool)
Ext.Array.insert(me.items,0,[collapseTool])
collapseTool.margin=(me.topMargin||'0')+' 10 0 '+(me.leftMargin||'-5');}
if(collapseTool&&me.collapseRight){Ext.Array.remove(me.items,collapseTool)
Ext.Array.insert(me.items,me.items.length,[collapseTool])}
me.callSuper();me.on({dblclick:me.onDblClick,click:me.onClick,element:'el',scope:me});}},initIconCmp:function(){var me=this,cfg={focusable:false,src:Ext.BLANK_IMAGE_URL,cls:[me.baseCls+'-icon',me.iconCls],id:me.id+'-iconEl',margin:'0 0 0 '+me.leftSpace||5,iconCls:me.iconCls};if(!Ext.isEmpty(me.icon)){delete cfg.iconCls;cfg.src=me.icon;}
me.iconCmp=new Ext.Img(cfg);}})
Ext.define('Ext.toolbar.Fill',{extend:'Ext.Component',alias:'widget.tbfill',alternateClassName:'Ext.Toolbar.Fill',isFill:true,flex:1});Ext.define('Ext.dd.StatusProxy',{extend:'Ext.Component',animRepair:false,childEls:['ghost'],renderTpl:['<div class="'+Ext.baseCSSPrefix+'dd-drop-icon"></div>'+'<div id="{id}-ghost" class="'+Ext.baseCSSPrefix+'dd-drag-ghost"></div>'],repairCls:Ext.baseCSSPrefix+'dd-drag-repair',constructor:function(config){var me=this;config=config||{};Ext.apply(me,{hideMode:'visibility',hidden:true,floating:true,id:me.id||Ext.id(),cls:Ext.baseCSSPrefix+'dd-drag-proxy '+this.dropNotAllowed,shadow:config.shadow||false,renderTo:Ext.getDetachedBody()});me.callParent(arguments);this.dropStatus=this.dropNotAllowed;},dropAllowed:Ext.baseCSSPrefix+'dd-drop-ok',dropNotAllowed:Ext.baseCSSPrefix+'dd-drop-nodrop',setStatus:function(cssClass){cssClass=cssClass||this.dropNotAllowed;if(this.dropStatus!=cssClass){this.el.replaceCls(this.dropStatus,cssClass);this.dropStatus=cssClass;}},reset:function(clearGhost){var me=this,clsPrefix=Ext.baseCSSPrefix+'dd-drag-proxy ';me.el.replaceCls(clsPrefix+me.dropAllowed,clsPrefix+me.dropNotAllowed);me.dropStatus=me.dropNotAllowed;if(clearGhost){me.ghost.update('');}},update:function(html){if(typeof html=="string"){this.ghost.update(html);}else{this.ghost.update("");html.style.margin="0";this.ghost.dom.appendChild(html);}
var el=this.ghost.dom.firstChild;if(el){Ext.fly(el).setStyle('float','none');}},getGhost:function(){return this.ghost;},hide:function(clear){this.callParent();if(clear){this.reset(true);}},stop:function(){if(this.anim&&this.anim.isAnimated&&this.anim.isAnimated()){this.anim.stop();}},sync:function(){this.el.sync();},repair:function(xy,callback,scope){var me=this;me.callback=callback;me.scope=scope;if(xy&&me.animRepair!==false){me.el.addCls(me.repairCls);me.el.hideUnders(true);me.anim=me.el.animate({duration:me.repairDuration||500,easing:'ease-out',to:{x:xy[0],y:xy[1]},stopAnimation:true,callback:me.afterRepair,scope:me});}else{me.afterRepair();}},afterRepair:function(){var me=this;me.hide(true);me.el.removeCls(me.repairCls);if(typeof me.callback=="function"){me.callback.call(me.scope||me);}
delete me.callback;delete me.scope;}});Ext.define('Ext.form.field.Display',{extend:'Ext.form.field.Base',alias:'widget.displayfield',requires:['Ext.util.Format','Ext.XTemplate'],alternateClassName:['Ext.form.DisplayField','Ext.form.Display'],fieldSubTpl:['<div id="{id}"','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',' class="{fieldCls}">{value}</div>',{compiled:true,disableFormats:true}],fieldCls:Ext.baseCSSPrefix+'form-display-field',htmlEncode:false,validateOnChange:false,initEvents:Ext.emptyFn,submitValue:false,isDirty:function(){return false;},isValid:function(){return true;},validate:function(){return true;},getRawValue:function(){return this.rawValue;},setRawValue:function(value){var me=this,display;value=Ext.value(value,'');me.rawValue=value;if(me.rendered){me.inputEl.dom.innerHTML=me.getDisplayValue();me.updateLayout();}
return value;},getDisplayValue:function(){var me=this,value=this.getRawValue(),display;if(me.renderer){display=me.renderer.call(me.scope||me,value,me);}else{display=me.htmlEncode?Ext.util.Format.htmlEncode(value):value;}
return display;},getSubTplData:function(){var ret=this.callParent(arguments);ret.value=this.getDisplayValue();return ret;}});Ext.define('Ext.layout.container.Anchor',{alias:'layout.anchor',extend:'Ext.layout.container.Container',alternateClassName:'Ext.layout.AnchorLayout',type:'anchor',manageOverflow:2,renderTpl:['{%this.renderBody(out,values);this.renderPadder(out,values)%}'],defaultAnchor:'100%',parseAnchorRE:/^(r|right|b|bottom)$/i,beginLayout:function(ownerContext){var me=this,dimensions=0,anchorSpec,childContext,childItems,i,length,target;me.callParent(arguments);childItems=ownerContext.childItems;length=childItems.length;for(i=0;i<length;++i){childContext=childItems[i];anchorSpec=childContext.target.anchorSpec;if(anchorSpec){if(childContext.widthModel.calculated&&anchorSpec.right){dimensions|=1;}
if(childContext.heightModel.calculated&&anchorSpec.bottom){dimensions|=2;}
if(dimensions==3){break;}}}
ownerContext.anchorDimensions=dimensions;if(!Ext.supports.RightMargin&&!me.rightMarginCleanerFn){target=ownerContext.targetContext.el;me.rightMarginCleanerFn=Ext.Element.getRightMarginFixCleaner(target);target.addCls(Ext.baseCSSPrefix+'inline-children');}
me.sanityCheck(ownerContext);},calculate:function(ownerContext){var me=this,containerSize=me.getContainerSize(ownerContext);if(ownerContext.anchorDimensions!==ownerContext.state.calculatedAnchors){me.calculateAnchors(ownerContext,containerSize);}
if(ownerContext.hasDomProp('containerChildrenDone')){if(!containerSize.gotAll){me.done=false;}
me.calculateContentSize(ownerContext,ownerContext.anchorDimensions);if(me.done){me.calculateOverflow(ownerContext,containerSize,ownerContext.anchorDimensions);return;}}
me.done=false;},calculateAnchors:function(ownerContext,containerSize){var me=this,childItems=ownerContext.childItems,length=childItems.length,gotHeight=containerSize.gotHeight,gotWidth=containerSize.gotWidth,ownerHeight=containerSize.height,ownerWidth=containerSize.width,state=ownerContext.state,calculatedAnchors=(gotWidth?1:0)|(gotHeight?2:0),anchorSpec,childContext,childMargins,height,i,width;state.calculatedAnchors=(state.calculatedAnchors||0)|calculatedAnchors;for(i=0;i<length;i++){childContext=childItems[i];childMargins=childContext.getMarginInfo();anchorSpec=childContext.target.anchorSpec;if(gotWidth&&childContext.widthModel.calculated){width=anchorSpec.right(ownerWidth)-childMargins.width;width=me.adjustWidthAnchor(width,childContext);childContext.setWidth(width);}
if(gotHeight&&childContext.heightModel.calculated){height=anchorSpec.bottom(ownerHeight)-childMargins.height;height=me.adjustHeightAnchor(height,childContext);childContext.setHeight(height);}}},finishedLayout:function(ownerContext){var cleanerFn=this.rightMarginCleanerFn;if(cleanerFn){delete this.rightMarginCleanerFn;ownerContext.targetContext.el.removeCls(Ext.baseCSSPrefix+'inline-children');cleanerFn();}},sanityCheck:function(ownerContext){var shrinkWrapWidth=ownerContext.widthModel.shrinkWrap,shrinkWrapHeight=ownerContext.heightModel.shrinkWrap,children=ownerContext.childItems,anchorSpec,comp,childContext,i,length;for(i=0,length=children.length;i<length;++i){childContext=children[i];comp=childContext.target;anchorSpec=comp.anchorSpec;if(anchorSpec){if(childContext.widthModel.calculated&&anchorSpec.right){if(shrinkWrapWidth){Ext.log({level:'warn',msg:'Right anchor on '+comp.id+' in shrinkWrap width container'});}}
if(childContext.heightModel.calculated&&anchorSpec.bottom){if(shrinkWrapHeight){Ext.log({level:'warn',msg:'Bottom anchor on '+comp.id+' in shrinkWrap height container'});}}}}},anchorFactory:{offset:function(delta){return function(v){return v+delta;};},ratio:function(ratio){return function(v){return Math.floor(v*ratio);};},standard:function(diff){return function(v){return v-diff;};}},parseAnchor:function(a,start,cstart){if(a&&a!='none'){var factory=this.anchorFactory,delta;if(this.parseAnchorRE.test(a)){return factory.standard(cstart-start);}
if(a.indexOf('%')!=-1){return factory.ratio(parseFloat(a.replace('%',''))*0.01);}
delta=parseInt(a,10);if(!isNaN(delta)){return factory.offset(delta);}}
return null;},adjustWidthAnchor:function(value,childContext){return value;},adjustHeightAnchor:function(value,childContext){return value;},configureItem:function(item){var me=this,owner=me.owner,anchor=item.anchor,anchorsArray,anchorWidth,anchorHeight;me.callParent(arguments);if(!item.anchor&&item.items&&!Ext.isNumber(item.width)&&!(Ext.isIE6&&Ext.isStrict)){item.anchor=anchor=me.defaultAnchor;}
if(owner.anchorSize){if(typeof owner.anchorSize=='number'){anchorWidth=owner.anchorSize;}else{anchorWidth=owner.anchorSize.width;anchorHeight=owner.anchorSize.height;}}else{anchorWidth=owner.initialConfig.width;anchorHeight=owner.initialConfig.height;}
if(anchor){anchorsArray=anchor.split(' ');item.anchorSpec={right:me.parseAnchor(anchorsArray[0],item.initialConfig.width,anchorWidth),bottom:me.parseAnchor(anchorsArray[1],item.initialConfig.height,anchorHeight)};}},sizePolicy:{'':{setsWidth:0,setsHeight:0},b:{setsWidth:0,setsHeight:1},r:{'':{setsWidth:1,setsHeight:0},b:{setsWidth:1,setsHeight:1}}},getItemSizePolicy:function(item){var anchorSpec=item.anchorSpec,key='',policy=this.sizePolicy,sizeModel;if(anchorSpec){sizeModel=this.owner.getSizeModel();if(anchorSpec.right&&!sizeModel.width.shrinkWrap){policy=policy.r;}
if(anchorSpec.bottom&&!sizeModel.height.shrinkWrap){key='b';}}
return policy[key];}});Ext.define('Ext.layout.component.BoundList',{extend:'Ext.layout.component.Auto',alias:'layout.boundlist',type:'component',beginLayout:function(ownerContext){var me=this,owner=me.owner,toolbar=owner.pagingToolbar;me.callParent(arguments);if(owner.floating){ownerContext.savedXY=owner.el.getXY();owner.el.setXY([-9999,-9999]);}
if(toolbar){ownerContext.toolbarContext=ownerContext.context.getCmp(toolbar);}
ownerContext.listContext=ownerContext.getEl('listEl');},beginLayoutCycle:function(ownerContext){var owner=this.owner;this.callParent(arguments);if(ownerContext.heightModel.auto){owner.el.setHeight('auto');owner.listEl.setHeight('auto');}},getLayoutItems:function(){var toolbar=this.owner.pagingToolbar;return toolbar?[toolbar]:[];},isValidParent:function(){return true;},finishedLayout:function(ownerContext){var xy=ownerContext.savedXY;this.callParent(arguments);if(xy){this.owner.el.setXY(xy);}},measureContentWidth:function(ownerContext){return this.owner.listEl.getWidth();},measureContentHeight:function(ownerContext){return this.owner.listEl.getHeight();},publishInnerHeight:function(ownerContext,height){var toolbar=ownerContext.toolbarContext,toolbarHeight=0;if(toolbar){toolbarHeight=toolbar.getProp('height');}
if(toolbarHeight===undefined){this.done=false;}else{ownerContext.listContext.setHeight(height-ownerContext.getFrameInfo().height-toolbarHeight);}},calculateOwnerHeightFromContentHeight:function(ownerContext){var height=this.callParent(arguments),toolbar=ownerContext.toolbarContext;if(toolbar){height+=toolbar.getProp('height');}
return height;}});Ext.define('Ext.layout.component.field.Trigger',{alias:'layout.triggerfield',extend:'Ext.layout.component.field.Field',type:'triggerfield',beginLayout:function(ownerContext){var me=this,owner=me.owner,flags;ownerContext.triggerWrap=ownerContext.getEl('triggerWrap');me.callParent(arguments);flags=owner.getTriggerStateFlags();if(flags!=owner.lastTriggerStateFlags){owner.lastTriggerStateFlags=flags;me.updateEditState();}},beginLayoutCycle:function(ownerContext){this.callParent(arguments);if(ownerContext.widthModel.shrinkWrap&&!this.owner.inputWidth){ownerContext.inputContext.el.setStyle('width','');}},beginLayoutFixed:function(ownerContext,width,suffix){var me=this,owner=ownerContext.target,ieInputWidthAdjustment=me.ieInputWidthAdjustment||0,inputWidth='100%',triggerWrap=owner.triggerWrap;me.callParent(arguments);owner.inputCell.setStyle('width','100%');if(ieInputWidthAdjustment){owner.inputCell.setStyle('padding-right',ieInputWidthAdjustment+'px');if(suffix==='px'){if(owner.inputWidth){inputWidth=owner.inputWidth-owner.getTriggerWidth();}else{inputWidth=width-ieInputWidthAdjustment-owner.getTriggerWidth();}
inputWidth+='px';}}
owner.inputEl.setStyle('width',inputWidth);inputWidth=owner.inputWidth;if(inputWidth){triggerWrap.setStyle('width',inputWidth+(ieInputWidthAdjustment)+'px');}else{triggerWrap.setStyle('width',width+suffix);}
triggerWrap.setStyle('table-layout','fixed');},beginLayoutShrinkWrap:function(ownerContext){var owner=ownerContext.target,emptyString='',inputWidth=owner.inputWidth,triggerWrap=owner.triggerWrap,ieInputWidthAdjustment=this.ieInputWidthAdjustment||0;this.callParent(arguments);if(inputWidth){triggerWrap.setStyle('width',inputWidth+'px');inputWidth=(inputWidth-owner.getTriggerWidth())+'px';owner.inputEl.setStyle('width',inputWidth);owner.inputCell.setStyle('width',inputWidth);}else{owner.inputCell.setStyle('width',emptyString);owner.inputEl.setStyle('width',emptyString);triggerWrap.setStyle('width',emptyString);triggerWrap.setStyle('table-layout','auto');}},getTextWidth:function(){var me=this,owner=me.owner,inputEl=owner.inputEl,value;value=(inputEl.dom.value||(owner.hasFocus?'':owner.emptyText)||'')+owner.growAppend;return inputEl.getTextWidth(value);},publishOwnerWidth:function(ownerContext,width){var owner=this.owner;this.callParent(arguments);if(!owner.grow&&!owner.inputWidth){width-=owner.getTriggerWidth();if(owner.labelAlign!='top'){width-=owner.getLabelWidth();}
ownerContext.inputContext.setWidth(width);}},measureContentWidth:function(ownerContext){var me=this,owner=me.owner,width=me.callParent(arguments),inputContext=ownerContext.inputContext,calcWidth,max,min;if(owner.grow&&!ownerContext.state.growHandled){calcWidth=me.getTextWidth()+ownerContext.inputContext.getFrameInfo().width;max=owner.growMax;min=Math.min(max,width);max=Math.max(owner.growMin,max,min);calcWidth=Ext.Number.constrain(calcWidth,owner.growMin,max);inputContext.setWidth(calcWidth);ownerContext.state.growHandled=true;inputContext.domBlock(me,'width');width=NaN;}else if(!owner.inputWidth){width-=owner.getTriggerWidth();}
return width;},updateEditState:function(){var me=this,owner=me.owner,inputEl=owner.inputEl,noeditCls=Ext.baseCSSPrefix+'trigger-noedit',displayed,readOnly;if(me.owner.readOnly){inputEl.addCls(noeditCls);readOnly=true;displayed=false;}else{if(me.owner.editable){inputEl.removeCls(noeditCls);readOnly=false;}else{inputEl.addCls(noeditCls);readOnly=true;}
displayed=!me.owner.hideTrigger;}
owner.triggerCell.setDisplayed(displayed);inputEl.dom.readOnly=readOnly;}});Ext.define('Ext.layout.component.field.ComboBox',{extend:'Ext.layout.component.field.Trigger',alias:'layout.combobox',requires:['Ext.util.TextMetrics'],type:'combobox',startingWidth:null,getTextWidth:function(){var me=this,owner=me.owner,store=owner.store,field=owner.displayField,storeLn=store.data.length,value='',i=0,n=0,ln,item,width;for(;i<storeLn;i++){item=store.getAt(i).data[field];ln=item.length;if(ln>n){n=ln;value=item;}}
width=Math.max(me.callParent(arguments),owner.inputEl.getTextWidth(value+owner.growAppend));if(!me.startingWidth||owner.removingRecords){me.startingWidth=width;if(width<owner.growMin){owner.defaultListConfig.minWidth=owner.growMin;}
owner.removingRecords=false;}
return(width<me.startingWidth)?me.startingWidth:width;}});Ext.define('Ext.LoadMask',{extend:'Ext.Component',alias:'widget.loadmask',mixins:{floating:'Ext.util.Floating',bindable:'Ext.util.Bindable'},uses:['Ext.data.StoreManager'],msg:'Loading...',msgCls:Ext.baseCSSPrefix+'mask-loading',maskCls:Ext.baseCSSPrefix+'mask',useMsg:true,useTargetEl:false,baseCls:Ext.baseCSSPrefix+'mask-msg',childEls:['msgEl'],renderTpl:'<div id="{id}-msgEl" style="position:relative" class="{[values.$comp.msgCls]}"></div>',floating:{shadow:'frame'},focusOnToFront:false,bringParentToFront:false,constructor:function(comp,config){var me=this;if(!comp.isComponent){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.LoadMask: LoadMask for elements has been deprecated, use Ext.dom.Element.mask & Ext.dom.Element.unmask');}
comp=Ext.get(comp);this.isElement=true;}
me.ownerCt=comp;if(!this.isElement){me.bindComponent(comp);}
me.callParent([config]);if(me.store){me.bindStore(me.store,true);}},bindComponent:function(comp){var me=this,listeners={scope:this,resize:me.sizeMask,added:me.onComponentAdded,removed:me.onComponentRemoved},hierarchyEventSource=Ext.container.Container.hierarchyEventSource;if(comp.floating){listeners.move=me.sizeMask;me.activeOwner=comp;}else if(comp.ownerCt){me.onComponentAdded(comp.ownerCt);}else{me.preventBringToFront=true;}
me.mon(comp,listeners);me.mon(hierarchyEventSource,{show:me.onContainerShow,hide:me.onContainerHide,expand:me.onContainerExpand,collapse:me.onContainerCollapse,scope:me});},onComponentAdded:function(owner){var me=this;delete me.activeOwner;me.floatParent=owner;if(!owner.floating){owner=owner.up('[floating]');}
if(owner){me.activeOwner=owner;me.mon(owner,'move',me.sizeMask,me);}else{me.preventBringToFront=true;}
owner=me.floatParent.ownerCt;if(me.rendered&&me.isVisible()&&owner){me.floatOwner=owner;me.mon(owner,'afterlayout',me.sizeMask,me,{single:true});}},onComponentRemoved:function(owner){var me=this,activeOwner=me.activeOwner,floatOwner=me.floatOwner;if(activeOwner){me.mun(activeOwner,'move',me.sizeMask,me);}
if(floatOwner){me.mun(floatOwner,'afterlayout',me.sizeMask,me);}
delete me.activeOwner;delete me.floatOwner;},afterRender:function(){this.callParent(arguments);this.container=this.floatParent.getContentTarget();},onContainerShow:function(container){if(this.isActiveContainer(container)){this.onComponentShow();}},onContainerHide:function(container){if(this.isActiveContainer(container)){this.onComponentHide();}},onContainerExpand:function(container){if(this.isActiveContainer(container)){this.onComponentShow();}},onContainerCollapse:function(container){if(this.isActiveContainer(container)){this.onComponentHide();}},isActiveContainer:function(container){return this.isDescendantOf(container);},onComponentHide:function(){var me=this;if(me.rendered&&me.isVisible()){me.hide();me.showNext=true;}},onComponentShow:function(){if(this.showNext){this.show();}
delete this.showNext;},sizeMask:function(){var me=this,target;if(me.rendered&&me.isVisible()){me.center();target=me.getMaskTarget();me.getMaskEl().show().setSize(target.getSize()).alignTo(target,'tl-tl');}},bindStore:function(store,initial){var me=this;me.mixins.bindable.bindStore.apply(me,arguments);store=me.store;if(store&&store.isLoading()){me.onBeforeLoad();}},getStoreListeners:function(store){var result={exception:this.onLoad,cachemiss:this.onBeforeLoad,cachefilled:this.onLoad};if(!store.proxy.isSynchronous){result.beforeLoad=this.onBeforeLoad;result.load=this.onLoad;}
return result;},onDisable:function(){this.callParent(arguments);if(this.loading){this.onLoad();}},getOwner:function(){return this.ownerCt||this.floatParent;},getMaskTarget:function(){var owner=this.getOwner();return this.useTargetEl?owner.getTargetEl():owner.getEl();},onBeforeLoad:function(){var me=this,owner=me.getOwner(),origin;if(!me.disabled){me.loading=true;if(owner.componentLayoutCounter){me.maybeShow();}else{origin=owner.afterComponentLayout;owner.afterComponentLayout=function(){owner.afterComponentLayout=origin;origin.apply(owner,arguments);me.maybeShow();};}}},maybeShow:function(){var me=this,owner=me.getOwner();if(!owner.isVisible(true)){me.showNext=true;}
else if(me.loading&&owner.rendered){me.show();}},getMaskEl:function(){var me=this;return me.maskEl||(me.maskEl=me.el.insertSibling({cls:me.maskCls,style:{zIndex:me.el.getStyle('zIndex')-2}},'before'));},onShow:function(){var me=this,msgEl=me.msgEl;me.callParent(arguments);me.loading=true;if(me.useMsg){msgEl.show().update(me.msg);}else{msgEl.parent().hide();}},hide:function(){if(this.isElement){this.ownerCt.unmask();this.fireEvent('hide',this);return;}
delete this.showNext;return this.callParent(arguments);},onHide:function(){this.callParent();this.getMaskEl().hide();},show:function(){if(this.isElement){this.ownerCt.mask(this.useMsg?this.msg:'',this.msgCls);this.fireEvent('show',this);return;}
return this.callParent(arguments);},afterShow:function(){this.callParent(arguments);this.sizeMask();},setZIndex:function(index){var me=this,owner=me.activeOwner;if(owner){index=parseInt(owner.el.getStyle('zIndex'),10)+1;}
me.getMaskEl().setStyle('zIndex',index-1);return me.mixins.floating.setZIndex.apply(me,arguments);},onLoad:function(){this.loading=false;this.hide();},onDestroy:function(){var me=this;if(me.isElement){me.ownerCt.unmask();}
Ext.destroy(me.maskEl);me.callParent();}});Ext.define('Ext.selection.DataViewModel',{extend:'Ext.selection.Model',requires:['Ext.util.KeyNav'],deselectOnContainerClick:true,enableKeyNav:true,constructor:function(cfg){this.addEvents('beforedeselect','beforeselect','deselect','select');this.callParent(arguments);},bindComponent:function(view){var me=this,eventListeners={refresh:me.refresh,scope:me};me.view=view;me.bindStore(view.getStore());eventListeners[view.triggerEvent]=me.onItemClick;eventListeners[view.triggerCtEvent]=me.onContainerClick;view.on(eventListeners);if(me.enableKeyNav){me.initKeyNav(view);}},onUpdate:function(record){var view=this.view;if(view&&this.isSelected(record)){view.onItemSelect(record);}},onItemClick:function(view,record,item,index,e){this.selectWithEvent(record,e);},onContainerClick:function(){if(this.deselectOnContainerClick){this.deselectAll();}},initKeyNav:function(view){var me=this;if(!view.rendered){view.on({render:Ext.Function.bind(me.initKeyNav,me,[view]),single:true});return;}
view.el.set({tabIndex:-1});me.keyNav=new Ext.util.KeyNav({target:view.el,ignoreInputFields:true,down:Ext.pass(me.onNavKey,[1],me),right:Ext.pass(me.onNavKey,[1],me),left:Ext.pass(me.onNavKey,[-1],me),up:Ext.pass(me.onNavKey,[-1],me),scope:me});},onNavKey:function(step){step=step||1;var me=this,view=me.view,selected=me.getSelection()[0],numRecords=me.view.store.getCount(),idx;if(selected){idx=view.indexOf(view.getNode(selected))+step;}else{idx=0;}
if(idx<0){idx=numRecords-1;}else if(idx>=numRecords){idx=0;}
me.select(idx);},onSelectChange:function(record,isSelected,suppressEvent,commitFn){var me=this,view=me.view,eventName=isSelected?'select':'deselect';if((suppressEvent||me.fireEvent('before'+eventName,me,record))!==false&&commitFn()!==false){if(view){if(isSelected){view.onItemSelect(record);}else{view.onItemDeselect(record);}}
if(!suppressEvent){me.fireEvent(eventName,me,record);}}},onLastFocusChanged:function(oldFocus,newFocus,suppressFocus){var view=this.view;if(view&&!suppressFocus&&newFocus){view.focusNode(newFocus);}},destroy:function(){Ext.destroy(this.keyNav);this.callParent();}});Ext.define('Ext.view.AbstractView',{extend:'Ext.Component',requires:['Ext.LoadMask','Ext.data.StoreManager','Ext.CompositeElementLite','Ext.DomQuery','Ext.selection.DataViewModel'],mixins:{bindable:'Ext.util.Bindable'},inheritableStatics:{getRecord:function(node){return this.getBoundView(node).getRecord(node);},getBoundView:function(node){return Ext.getCmp(node.boundView);}},deferInitialRefresh:true,itemCls:Ext.baseCSSPrefix+'dataview-item',loadingText:'Loading...',loadMask:true,loadingUseMsg:true,selectedItemCls:Ext.baseCSSPrefix+'item-selected',emptyText:"",deferEmptyText:true,trackOver:false,blockRefresh:false,preserveScrollOnRefresh:false,last:false,triggerEvent:'itemclick',triggerCtEvent:'containerclick',addCmpEvents:function(){},initComponent:function(){var me=this,isDef=Ext.isDefined,itemTpl=me.itemTpl,memberFn={};if(itemTpl){if(Ext.isArray(itemTpl)){itemTpl=itemTpl.join('');}else if(Ext.isObject(itemTpl)){memberFn=Ext.apply(memberFn,itemTpl.initialConfig);itemTpl=itemTpl.html;}
if(!me.itemSelector){me.itemSelector='.'+me.itemCls;}
itemTpl=Ext.String.format('<tpl for="."><div class="{0}">{1}</div></tpl>',me.itemCls,itemTpl);me.tpl=new Ext.XTemplate(itemTpl,memberFn);}
if(!isDef(me.tpl)||!isDef(me.itemSelector)){Ext.Error.raise({sourceClass:'Ext.view.View',tpl:me.tpl,itemSelector:me.itemSelector,msg:"DataView requires both tpl and itemSelector configurations to be defined."});}
me.callParent();me.tpl=me.getTpl('tpl');if(isDef(me.overCls)||isDef(me.overClass)){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.view.View: Using the deprecated overCls or overClass configuration. Use overItemCls instead.');}
me.overItemCls=me.overCls||me.overClass;delete me.overCls;delete me.overClass;}
if(isDef(me.selectedCls)||isDef(me.selectedClass)){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn('Ext.view.View: Using the deprecated selectedCls or selectedClass configuration. Use selectedItemCls instead.');}
me.selectedItemCls=me.selectedCls||me.selectedClass;delete me.selectedCls;delete me.selectedClass;}
if(me.overItemCls){me.trackOver=true;}
me.addEvents('beforerefresh','refresh','viewready','itemupdate','itemadd','itemremove');me.addCmpEvents();me.store=Ext.data.StoreManager.lookup(me.store||'ext-empty-store');me.bindStore(me.store,true);me.all=new Ext.CompositeElementLite();me.scrollState={top:0,left:0};me.on({scroll:me.onViewScroll,element:'el',scope:me});},onRender:function(){var me=this,mask=me.loadMask,cfg={msg:me.loadingText,msgCls:me.loadingCls,useMsg:me.loadingUseMsg,store:me.getMaskStore()};me.callParent(arguments);if(mask){if(Ext.isObject(mask)){cfg=Ext.apply(cfg,mask);}
me.loadMask=new Ext.LoadMask(me,cfg);me.loadMask.on({scope:me,beforeshow:me.onMaskBeforeShow,hide:me.onMaskHide});}},finishRender:function(){var me=this;me.callParent(arguments);if(!me.up('[collapsed],[hidden]')){me.doFirstRefresh(me.store);}},onBoxReady:function(){var me=this;me.callParent(arguments);if(!me.firstRefreshDone){me.doFirstRefresh(me.store);}},getMaskStore:function(){return this.store;},onMaskBeforeShow:function(){var me=this,loadingHeight=me.loadingHeight;me.all.clear();if(loadingHeight&&loadingHeight>me.getHeight()){me.hasLoadingHeight=true;me.oldMinHeight=me.minHeight;me.minHeight=loadingHeight;me.updateLayout();}},onMaskHide:function(){var me=this;if(!me.destroying&&me.hasLoadingHeight){me.minHeight=me.oldMinHeight;me.updateLayout();delete me.hasLoadingHeight;}},beforeRender:function(){this.callParent(arguments);this.getSelectionModel().beforeViewRender(this);},afterRender:function(){this.callParent(arguments);this.getSelectionModel().bindComponent(this);},getSelectionModel:function(){var me=this,mode='SINGLE';if(me.simpleSelect){mode='SIMPLE';}else if(me.multiSelect){mode='MULTI';}
if(!me.selModel||!me.selModel.events){me.selModel=new Ext.selection.DataViewModel(Ext.apply({allowDeselect:me.allowDeselect,mode:mode},me.selModel));}
if(!me.selModel.hasRelaySetup){me.relayEvents(me.selModel,['selectionchange','beforeselect','beforedeselect','select','deselect','focuschange']);me.selModel.hasRelaySetup=true;}
if(me.disableSelection){me.selModel.locked=true;}
return me.selModel;},refresh:function(){var me=this,targetEl,targetParent,oldDisplay,nextSibling,dom,records;if(!me.rendered||me.isDestroyed){return;}
if(!me.hasListeners.beforerefresh||me.fireEvent('beforerefresh',me)!==false){targetEl=me.getTargetEl();records=me.store.getRange();dom=targetEl.dom;if(!me.preserveScrollOnRefresh){targetParent=dom.parentNode;oldDisplay=dom.style.display;dom.style.display='none';nextSibling=dom.nextSibling;targetParent.removeChild(dom);}
if(me.refreshCounter){me.clearViewEl();}else{me.fixedNodes=targetEl.dom.childNodes.length;me.refreshCounter=1;}
me.tpl.append(targetEl,me.collectData(records,0));if(records.length<1){if(!me.deferEmptyText||me.hasSkippedEmptyText){Ext.core.DomHelper.insertHtml('beforeEnd',targetEl.dom,me.emptyText);}
me.all.clear();}else{me.all.fill(Ext.query(me.getItemSelector(),targetEl.dom));me.updateIndexes(0);}
me.selModel.refresh();me.hasSkippedEmptyText=true;if(!me.preserveScrollOnRefresh){targetParent.insertBefore(dom,nextSibling);dom.style.display=oldDisplay;}
this.refreshSize();me.fireEvent('refresh',me);if(!me.viewReady){me.viewReady=true;me.fireEvent('viewready',me);}}},refreshSize:function(){var sizeModel=this.getSizeModel();if(sizeModel.height.shrinkWrap||sizeModel.width.shrinkWrap){this.updateLayout();}},clearViewEl:function(){var me=this,el=me.getTargetEl();if(me.fixedNodes){while(el.dom.childNodes[me.fixedNodes]){el.dom.removeChild(el.dom.childNodes[me.fixedNodes]);}}else{el.update('');}
me.refreshCounter++;},onViewScroll:Ext.emptyFn,saveScrollState:function(){if(this.rendered){var dom=this.el.dom,state=this.scrollState;state.left=dom.scrollLeft;state.top=dom.scrollTop;}},restoreScrollState:function(){if(this.rendered){var dom=this.el.dom,state=this.scrollState;dom.scrollLeft=state.left;dom.scrollTop=state.top;}},prepareData:function(data,index,record){var associatedData,attr,hasCopied;if(record){associatedData=record.getAssociatedData();for(attr in associatedData){if(associatedData.hasOwnProperty(attr)){if(!hasCopied){data=Ext.apply({},data);hasCopied=true;}
data[attr]=associatedData[attr];}}}
return data;},collectData:function(records,startIndex){var data=[],i=0,len=records.length,record;for(;i<len;i++){record=records[i];data[i]=this.prepareData(record.data,startIndex+i,record);}
return data;},bufferRender:function(records,index){var me=this,div=me.renderBuffer||(me.renderBuffer=document.createElement('div'));me.tpl.overwrite(div,me.collectData(records,index));return Ext.query(me.getItemSelector(),div);},onUpdate:function(ds,record){var me=this,index,node;if(me.viewReady){index=me.store.indexOf(record);if(index>-1){node=me.bufferRender([record],index)[0];if(me.getNode(record)){me.all.replaceElement(index,node,true);me.updateIndexes(index,index);me.selModel.onUpdate(record);if(me.hasListeners.itemupdate){me.fireEvent('itemupdate',record,index,node);}
return node;}}}},onAdd:function(ds,records,index){var me=this,nodes;if(me.rendered){if(me.all.getCount()===0){me.refresh();nodes=me.all.elements.slice();}else{nodes=me.bufferRender(records,index);me.doAdd(nodes,records,index);me.selModel.refresh();me.updateIndexes(index);me.refreshSize();}
if(me.hasListeners.itemadd){me.fireEvent('itemadd',records,index,nodes);}}},doAdd:function(nodes,records,index){var all=this.all,count=all.getCount();if(count===0){this.clearViewEl();this.getTargetEl().appendChild(nodes);}else if(index<count){if(index===0){all.item(index).insertSibling(nodes,'before',true);}else{all.item(index-1).insertSibling(nodes,'after',true);}}else{all.last().insertSibling(nodes,'after',true);}
Ext.Array.insert(all.elements,index,nodes);},onRemove:function(ds,records,indexes){var me=this,fireItemRemove=me.hasListeners.itemremove,i,record,index;if(me.all.getCount()){if(me.store.getCount()===0){if(fireItemRemove){for(i=indexes.length-1;i>=0;--i){me.fireEvent('itemremove',records[i],indexes[i]);}}
me.refresh();}else{for(i=indexes.length-1;i>=0;--i){record=records[i];index=indexes[i];me.doRemove(record,index);if(fireItemRemove){me.fireEvent('itemremove',record,index);}}
if(me.selModel.refreshOnRemove){me.selModel.refresh();}
me.updateIndexes(indexes[0]);}
this.refreshSize();}},doRemove:function(record,index){this.all.removeElement(index,true);},refreshNode:function(index){this.onUpdate(this.store,this.store.getAt(index));},updateIndexes:function(startIndex,endIndex){var ns=this.all.elements,records=this.store.getRange(),i;startIndex=startIndex||0;endIndex=endIndex||((endIndex===0)?0:(ns.length-1));for(i=startIndex;i<=endIndex;i++){ns[i].viewIndex=i;ns[i].viewRecordId=records[i].internalId;if(!ns[i].boundView){ns[i].boundView=this.id;}}},getStore:function(){return this.store;},bindStore:function(store,initial){var me=this;me.mixins.bindable.bindStore.apply(me,arguments);if(!initial){me.getSelectionModel().bindStore(me.store);}
if(me.componentLayoutCounter){me.doFirstRefresh(store);}},doFirstRefresh:function(store){var me=this;me.firstRefreshDone=true;if(store&&!store.loading){if(me.deferInitialRefresh){me.applyFirstRefresh();}else{me.refresh();}}},applyFirstRefresh:function(){var me=this;if(me.isDestroyed){return;}
if(me.up('[isCollapsingOrExpanding]')){Ext.Function.defer(me.applyFirstRefresh,100,me);}else{Ext.Function.defer(function(){if(!me.isDestroyed){me.refresh();}},1);}},onUnbindStore:function(store){this.setMaskBind(null);},onBindStore:function(store){this.setMaskBind(store);},setMaskBind:function(store){var mask=this.loadMask;if(mask&&mask.bindStore){mask.bindStore(store);}},getStoreListeners:function(){var me=this;return{refresh:me.onDataRefresh,add:me.onAdd,bulkremove:me.onRemove,update:me.onUpdate,clear:me.refresh};},onDataRefresh:function(){var me=this,blockedByAncestor=!me.firstRefreshDone&&(!me.rendered||me.up('[collapsed],[isCollapsingOrExpanding],[hidden]'));if(blockedByAncestor){me.deferInitialRefresh=false;}else if(me.blockRefresh!==true){me.firstRefreshDone=true;me.refresh.apply(me,arguments);}},findItemByChild:function(node){return Ext.fly(node).findParent(this.getItemSelector(),this.getTargetEl());},findTargetByEvent:function(e){return e.getTarget(this.getItemSelector(),this.getTargetEl());},getSelectedNodes:function(){var nodes=[],records=this.selModel.getSelection(),ln=records.length,i=0;for(;i<ln;i++){nodes.push(this.getNode(records[i]));}
return nodes;},getRecords:function(nodes){var records=[],i=0,len=nodes.length,data=this.store.data;for(;i<len;i++){records[records.length]=data.getByKey(nodes[i].viewRecordId);}
return records;},getRecord:function(node){return this.store.data.getByKey(Ext.getDom(node).viewRecordId);},isSelected:function(node){var r=this.getRecord(node);return this.selModel.isSelected(r);},select:function(records,keepExisting,suppressEvent){this.selModel.select(records,keepExisting,suppressEvent);},deselect:function(records,suppressEvent){this.selModel.deselect(records,suppressEvent);},getNode:function(nodeInfo){if((!nodeInfo&&nodeInfo!==0)||!this.rendered){return null;}
if(Ext.isString(nodeInfo)){return document.getElementById(nodeInfo);}
if(Ext.isNumber(nodeInfo)){return this.all.elements[nodeInfo];}
if(nodeInfo.isModel){return this.getNodeByRecord(nodeInfo);}
return nodeInfo;},getNodeByRecord:function(record){var ns=this.all.elements,ln=ns.length,i=0;for(;i<ln;i++){if(ns[i].viewRecordId===record.internalId){return ns[i];}}
return null;},getNodes:function(start,end){var ns=this.all.elements;if(end===undefined){end=ns.length;}else{end++;}
return this.all.elements.slice(start||0,end);},indexOf:function(node){node=this.getNode(node);if(!node&&node!==0){return-1;}
if(Ext.isNumber(node.viewIndex)){return node.viewIndex;}
return this.all.indexOf(node);},onDestroy:function(){var me=this;me.all.clear();me.callParent();me.bindStore(null);me.selModel.destroy();},onItemSelect:function(record){var node=this.getNode(record);if(node){Ext.fly(node).addCls(this.selectedItemCls);}},onItemDeselect:function(record){var node=this.getNode(record);if(node){Ext.fly(node).removeCls(this.selectedItemCls);}},getItemSelector:function(){return this.itemSelector;}},function(){Ext.deprecate('extjs','4.0',function(){Ext.view.AbstractView.override({getSelectionCount:function(){if(Ext.global.console){Ext.global.console.warn("DataView: getSelectionCount will be removed, please interact with the Ext.selection.DataViewModel");}
return this.selModel.getSelection().length;},getSelectedRecords:function(){if(Ext.global.console){Ext.global.console.warn("DataView: getSelectedRecords will be removed, please interact with the Ext.selection.DataViewModel");}
return this.selModel.getSelection();},select:function(records,keepExisting,supressEvents){if(Ext.global.console){Ext.global.console.warn("DataView: select will be removed, please access select through a DataView's SelectionModel, ie: view.getSelectionModel().select()");}
var sm=this.getSelectionModel();return sm.select.apply(sm,arguments);},clearSelections:function(){if(Ext.global.console){Ext.global.console.warn("DataView: clearSelections will be removed, please access deselectAll through DataView's SelectionModel, ie: view.getSelectionModel().deselectAll()");}
var sm=this.getSelectionModel();return sm.deselectAll();}});});});Ext.define('Ext.view.View',{extend:'Ext.view.AbstractView',alternateClassName:'Ext.DataView',alias:'widget.dataview',deferHighlight:(Ext.isIE6||Ext.isIE7)?100:0,inputTagRe:/^textarea$|^input$/i,inheritableStatics:{EventMap:{mousedown:'MouseDown',mouseup:'MouseUp',click:'Click',dblclick:'DblClick',contextmenu:'ContextMenu',mouseover:'MouseOver',mouseout:'MouseOut',mouseenter:'MouseEnter',mouseleave:'MouseLeave',keydown:'KeyDown',focus:'Focus'}},initComponent:function(){var me=this;me.callParent();if(me.deferHighlight){me.setHighlightedItem=Ext.Function.createBuffered(me.setHighlightedItem,me.deferHighlight,me);}},addCmpEvents:function(){this.addEvents('beforeitemmousedown','beforeitemmouseup','beforeitemmouseenter','beforeitemmouseleave','beforeitemclick','beforeitemdblclick','beforeitemcontextmenu','beforeitemkeydown','itemmousedown','itemmouseup','itemmouseenter','itemmouseleave','itemclick','itemdblclick','itemcontextmenu','itemkeydown','beforecontainermousedown','beforecontainermouseup','beforecontainermouseover','beforecontainermouseout','beforecontainerclick','beforecontainerdblclick','beforecontainercontextmenu','beforecontainerkeydown','containermouseup','containermouseover','containermouseout','containerclick','containerdblclick','containercontextmenu','containerkeydown','selectionchange','beforeselect','beforedeselect','select','deselect','focuschange','highlightitem','unhighlightitem');},getFocusEl:function(){return this.getTargetEl();},afterRender:function(){var me=this;me.callParent();me.mon(me.getTargetEl(),{scope:me,freezeEvent:true,click:me.handleEvent,mousedown:me.handleEvent,mouseup:me.handleEvent,dblclick:me.handleEvent,contextmenu:me.handleEvent,mouseover:me.handleEvent,mouseout:me.handleEvent,keydown:me.handleEvent});},handleEvent:function(e){var me=this,key=e.type=='keydown'&&e.getKey();if(me.processUIEvent(e)!==false){me.processSpecialEvent(e);}
if(key===e.SPACE){if(!me.inputTagRe.test(e.getTarget().tagName)){e.stopEvent();}}},processItemEvent:Ext.emptyFn,processContainerEvent:Ext.emptyFn,processSpecialEvent:Ext.emptyFn,stillOverItem:function(event,overItem){var nowOver;if(overItem&&typeof(overItem.offsetParent)==="object"){nowOver=(event.type=='mouseout')?event.getRelatedTarget():event.getTarget();return Ext.fly(overItem).contains(nowOver);}
return false;},processUIEvent:function(e){var me=this,item=e.getTarget(me.getItemSelector(),me.getTargetEl()),map=this.statics().EventMap,index,record,type=e.type,overItem=me.mouseOverItem,newType;if(!item){if(type=='mouseover'&&me.stillOverItem(e,overItem)){item=overItem;}
if(type=='keydown'){record=me.getSelectionModel().getLastSelected();if(record){item=me.getNode(record);}}}
if(item){index=me.indexOf(item);if(!record){record=me.getRecord(item);}
if(!record||me.processItemEvent(record,item,index,e)===false){return false;}
newType=me.isNewItemEvent(item,e);if(newType===false){return false;}
if((me['onBeforeItem'+map[newType]](record,item,index,e)===false)||(me.fireEvent('beforeitem'+newType,me,record,item,index,e)===false)||(me['onItem'+map[newType]](record,item,index,e)===false)){return false;}
me.fireEvent('item'+newType,me,record,item,index,e);}
else{if((me.processContainerEvent(e)===false)||(me['onBeforeContainer'+map[type]](e)===false)||(me.fireEvent('beforecontainer'+type,me,e)===false)||(me['onContainer'+map[type]](e)===false)){return false;}
me.fireEvent('container'+type,me,e);}
return true;},isNewItemEvent:function(item,e){var me=this,overItem=me.mouseOverItem,type=e.type;switch(type){case'mouseover':if(item===overItem){return false;}
me.mouseOverItem=item;return'mouseenter';case'mouseout':if(me.stillOverItem(e,overItem)){return false;}
me.mouseOverItem=null;return'mouseleave';}
return type;},onItemMouseEnter:function(record,item,index,e){if(this.trackOver){this.highlightItem(item);}},onItemMouseLeave:function(record,item,index,e){if(this.trackOver){this.clearHighlight();}},onItemMouseDown:Ext.emptyFn,onItemMouseUp:Ext.emptyFn,onItemFocus:Ext.emptyFn,onItemClick:Ext.emptyFn,onItemDblClick:Ext.emptyFn,onItemContextMenu:Ext.emptyFn,onItemKeyDown:Ext.emptyFn,onBeforeItemMouseDown:Ext.emptyFn,onBeforeItemMouseUp:Ext.emptyFn,onBeforeItemFocus:Ext.emptyFn,onBeforeItemMouseEnter:Ext.emptyFn,onBeforeItemMouseLeave:Ext.emptyFn,onBeforeItemClick:Ext.emptyFn,onBeforeItemDblClick:Ext.emptyFn,onBeforeItemContextMenu:Ext.emptyFn,onBeforeItemKeyDown:Ext.emptyFn,onContainerMouseDown:Ext.emptyFn,onContainerMouseUp:Ext.emptyFn,onContainerMouseOver:Ext.emptyFn,onContainerMouseOut:Ext.emptyFn,onContainerClick:Ext.emptyFn,onContainerDblClick:Ext.emptyFn,onContainerContextMenu:Ext.emptyFn,onContainerKeyDown:Ext.emptyFn,onBeforeContainerMouseDown:Ext.emptyFn,onBeforeContainerMouseUp:Ext.emptyFn,onBeforeContainerMouseOver:Ext.emptyFn,onBeforeContainerMouseOut:Ext.emptyFn,onBeforeContainerClick:Ext.emptyFn,onBeforeContainerDblClick:Ext.emptyFn,onBeforeContainerContextMenu:Ext.emptyFn,onBeforeContainerKeyDown:Ext.emptyFn,setHighlightedItem:function(item){var me=this,highlighted=me.highlightedItem;if(highlighted!=item){if(highlighted){Ext.fly(highlighted).removeCls(me.overItemCls);me.fireEvent('unhighlightitem',me,highlighted);}
me.highlightedItem=item;if(item){Ext.fly(item).addCls(me.overItemCls);me.fireEvent('highlightitem',me,item);}}},highlightItem:function(item){this.setHighlightedItem(item);},clearHighlight:function(){this.setHighlightedItem(undefined);},onUpdate:function(store,record){var me=this,node,newNode,highlighted;if(me.viewReady){node=me.getNode(record);newNode=me.callParent(arguments);highlighted=me.highlightedItem;if(highlighted&&highlighted===node){delete me.highlightedItem;if(newNode){me.highlightItem(newNode);}}}},refresh:function(){this.clearHighlight();this.callParent(arguments);},focusNode:function(rec){var me=this,node=me.getNode(rec),el=me.el,adjustmentY=0,adjustmentX=0,elRegion=el.getRegion(),nodeRegion;elRegion.bottom=elRegion.top+el.dom.clientHeight;elRegion.right=elRegion.left+el.dom.clientWidth;if(node){nodeRegion=Ext.fly(node).getRegion();if(nodeRegion.top<elRegion.top){adjustmentY=nodeRegion.top-elRegion.top;}else if(nodeRegion.bottom>elRegion.bottom){adjustmentY=nodeRegion.bottom-elRegion.bottom;}
if(nodeRegion.left<elRegion.left){adjustmentX=nodeRegion.left-elRegion.left;}else if(nodeRegion.right>elRegion.right){adjustmentX=nodeRegion.right-elRegion.right;}
if(adjustmentX||adjustmentY){me.scrollBy(adjustmentX,adjustmentY,false);}
el.focus();}}});Ext.define('Ext.view.Table',{extend:'Ext.view.View',alias:'widget.tableview',uses:['Ext.view.TableLayout','Ext.view.TableChunker','Ext.util.DelayedTask','Ext.util.MixedCollection'],componentLayout:'tableview',baseCls:Ext.baseCSSPrefix+'grid-view',itemSelector:'tr.'+Ext.baseCSSPrefix+'grid-row',cellSelector:'td.'+Ext.baseCSSPrefix+'grid-cell',rowSelector:'tr.'+Ext.baseCSSPrefix+'grid-row',firstCls:Ext.baseCSSPrefix+'grid-cell-first',lastCls:Ext.baseCSSPrefix+'grid-cell-last',headerRowSelector:'tr.'+Ext.baseCSSPrefix+'grid-header-row',selectedItemCls:Ext.baseCSSPrefix+'grid-row-selected',selectedCellCls:Ext.baseCSSPrefix+'grid-cell-selected',focusedItemCls:Ext.baseCSSPrefix+'grid-row-focused',overItemCls:Ext.baseCSSPrefix+'grid-row-over',altRowCls:Ext.baseCSSPrefix+'grid-row-alt',rowClsRe:new RegExp('(?:^|\\s*)'+Ext.baseCSSPrefix+'grid-row-(first|last|alt)(?:\\s+|$)','g'),cellRe:new RegExp(Ext.baseCSSPrefix+'grid-cell-([^\\s]+) ',''),trackOver:true,getRowClass:null,stripeRows:true,markDirty:true,initialTpl:'<div></div>',initComponent:function(){var me=this,scroll=me.scroll;me.table=new Ext.dom.Element.Fly();me.table.id=me.id+'gridTable';me.autoScroll=undefined;if(scroll===true||scroll==='both'){me.autoScroll=true;}else if(scroll==='horizontal'){me.overflowX='auto';}else if(scroll==='vertical'){me.overflowY='auto';}
me.selModel.view=me;me.headerCt.view=me;me.headerCt.markDirty=me.markDirty;me.initFeatures(me.grid);delete me.grid;me.tpl=me.getTpl('initialTpl');me.callParent();},moveColumn:function(fromIdx,toIdx,colsToMove){var me=this,fragment=(colsToMove>1)?document.createDocumentFragment():undefined,destinationCellIdx=toIdx,colCount=me.getGridColumns().length,lastIdx=colCount-1,doFirstLastClasses=(me.firstCls||me.lastCls)&&(toIdx===0||toIdx==colCount||fromIdx===0||fromIdx==lastIdx),i,j,rows,len,tr,headerRows;if(me.rendered){headerRows=me.el.query(me.headerRowSelector);rows=me.el.query(me.rowSelector);if(toIdx>fromIdx&&fragment){destinationCellIdx-=colsToMove;}
for(i=0,len=headerRows.length;i<len;++i){tr=headerRows[i];if(fragment){for(j=0;j<colsToMove;j++){fragment.appendChild(tr.cells[fromIdx]);}
tr.insertBefore(fragment,tr.cells[destinationCellIdx]||null);}else{tr.insertBefore(tr.cells[fromIdx],tr.cells[destinationCellIdx]||null);}}
for(i=0,len=rows.length;i<len;i++){tr=rows[i];if(doFirstLastClasses){if(fromIdx===0){Ext.fly(tr.cells[0]).removeCls(me.firstCls);Ext.fly(tr.cells[1]).addCls(me.firstCls);}else if(fromIdx===lastIdx){Ext.fly(tr.cells[lastIdx]).removeCls(me.lastCls);Ext.fly(tr.cells[lastIdx-1]).addCls(me.lastCls);}
if(toIdx===0){Ext.fly(tr.cells[0]).removeCls(me.firstCls);Ext.fly(tr.cells[fromIdx]).addCls(me.firstCls);}else if(toIdx===colCount){Ext.fly(tr.cells[lastIdx]).removeCls(me.lastCls);Ext.fly(tr.cells[fromIdx]).addCls(me.lastCls);}}
if(fragment){for(j=0;j<colsToMove;j++){fragment.appendChild(tr.cells[fromIdx]);}
tr.insertBefore(fragment,tr.cells[destinationCellIdx]||null);}else{tr.insertBefore(tr.cells[fromIdx],tr.cells[destinationCellIdx]||null);}}
me.setNewTemplate();}},scrollToTop:Ext.emptyFn,addElListener:function(eventName,fn,scope){this.mon(this,eventName,fn,scope,{element:'el'});},getGridColumns:function(){return this.headerCt.getGridColumns();},getHeaderAtIndex:function(index){return this.headerCt.getHeaderAtIndex(index);},getCell:function(record,column){var row=this.getNode(record);return Ext.fly(row).down(column.getCellSelector());},getFeature:function(id){var features=this.featuresMC;if(features){return features.get(id);}},initFeatures:function(grid){var me=this,i,features,feature,len;me.featuresMC=new Ext.util.MixedCollection();features=me.features=me.constructFeatures();len=features?features.length:0;for(i=0;i<len;i++){feature=features[i];feature.view=me;feature.grid=grid;me.featuresMC.add(feature);feature.init();}},constructFeatures:function(){var me=this,features=me.features,feature,result,i=0,len;if(features){result=[];len=features.length;for(;i<len;i++){feature=features[i];if(!feature.isFeature){feature=Ext.create('feature.'+feature.ftype,feature);}
result[i]=feature;}}
return result;},attachEventsForFeatures:function(){var features=this.features,ln=features.length,i=0;for(;i<ln;i++){if(features[i].isFeature){features[i].attachEvents();}}},afterRender:function(){var me=this;me.callParent();if(!me.enableTextSelection){me.el.unselectable();}
me.attachEventsForFeatures();},onViewScroll:function(e,t){this.callParent(arguments);this.fireEvent('bodyscroll',e,t);},prepareData:function(data,idx,record){var me=this,result=me.headerCt.prepareData(data,idx,record,me,me.ownerCt),features=me.features,ln=features.length,i=0,feature;for(;i<ln;i++){feature=features[i];if(feature.isFeature){Ext.apply(result,feature.getAdditionalData(data,idx,record,result,me));}}
return result;},collectData:function(records,startIndex){var me=this,preppedRecords=me.callParent(arguments),headerCt=me.headerCt,fullWidth=headerCt.getFullWidth(),features=me.features,ln=features.length,o={rows:preppedRecords,fullWidth:fullWidth},i=0,feature,j=0,jln,rowParams,rec,cls;jln=preppedRecords.length;if(me.getRowClass){for(;j<jln;j++){rowParams={};rec=preppedRecords[j];cls=rec.rowCls||'';rec.rowCls=me.getRowClass(records[j],j,rowParams,me.store)+' '+cls;if(rowParams.alt){Ext.Error.raise("The getRowClass alt property is no longer supported.");}
if(rowParams.tstyle){Ext.Error.raise("The getRowClass tstyle property is no longer supported.");}
if(rowParams.cells){Ext.Error.raise("The getRowClass cells property is no longer supported.");}
if(rowParams.body){Ext.Error.raise("The getRowClass body property is no longer supported. Use the getAdditionalData method of the rowbody feature.");}
if(rowParams.bodyStyle){Ext.Error.raise("The getRowClass bodyStyle property is no longer supported.");}
if(rowParams.cols){Ext.Error.raise("The getRowClass cols property is no longer supported.");}}}
for(;i<ln;i++){feature=features[i];if(feature.isFeature&&feature.collectData&&!feature.disabled){o=feature.collectData(records,preppedRecords,startIndex,fullWidth,o);break;}}
return o;},refreshSize:function(){var me=this,cmp;me.table.attach(me.el.child('table',true));if(!me.hasLoadingHeight){cmp=me.up('tablepanel');Ext.suspendLayouts();me.callParent();if(cmp&&Ext.getScrollbarSize().width&&(me.autoScroll||me.overflowY)){cmp.updateLayout();}
Ext.resumeLayouts(true);}},setNewTemplate:function(){var me=this,columns=me.headerCt.getColumnsForTpl(true);me.tpl=me.getTableChunker().getTableTpl({rowCount:me.store.getCount(),columns:columns,features:me.features,enableTextSelection:me.enableTextSelection});},getTableChunker:function(){return this.chunker||Ext.view.TableChunker;},addRowCls:function(rowInfo,cls){var row=this.getNode(rowInfo);if(row){Ext.fly(row).addCls(cls);}},removeRowCls:function(rowInfo,cls){var row=this.getNode(rowInfo);if(row){Ext.fly(row).removeCls(cls);}},onRowSelect:function(rowIdx){this.addRowCls(rowIdx,this.selectedItemCls);},onRowDeselect:function(rowIdx){var me=this;me.removeRowCls(rowIdx,me.selectedItemCls);me.removeRowCls(rowIdx,me.focusedItemCls);},onCellSelect:function(position){var cell=this.getCellByPosition(position,true);if(cell){Ext.fly(cell).addCls(this.selectedCellCls);}},onCellDeselect:function(position){var cell=this.getCellByPosition(position,true);if(cell){Ext.fly(cell).removeCls(this.selectedCellCls);}},onCellFocus:function(position){this.focusCell(position);},getCellByPosition:function(position,returnDom){if(position){var node=this.getNode(position.row),header=this.headerCt.getHeaderAtIndex(position.column);if(header&&node){return Ext.fly(node).down(header.getCellSelector(),returnDom);}}
return false;},onRowFocus:function(rowIdx,highlight,supressFocus){var me=this;if(highlight){me.addRowCls(rowIdx,me.focusedItemCls);if(!supressFocus){me.focusRow(rowIdx);}}else{me.removeRowCls(rowIdx,me.focusedItemCls);}},focusRow:function(rowIdx){var me=this,row=me.getNode(rowIdx),el=me.el,adjustment=0,panel=me.ownerCt,rowRegion,elTop,elBottom,record;if(row&&el){elTop=el.getY();elBottom=elTop+el.dom.clientHeight;rowRegion=Ext.fly(row).getRegion();if(rowRegion.top<elTop){adjustment=rowRegion.top-elTop;}else if(rowRegion.bottom>elBottom){adjustment=rowRegion.bottom-elBottom;}
record=me.getRecord(row);rowIdx=me.store.indexOf(record);if(adjustment){panel.scrollByDeltaY(adjustment);}
el.focus();me.fireEvent('rowfocus',record,row,rowIdx);}},focusCell:function(position){var me=this,cell=me.getCellByPosition(position),el=me.el,adjustmentY=0,adjustmentX=0,elRegion=el.getRegion(),panel=me.ownerCt,cellRegion,record;elRegion.bottom=elRegion.top+el.dom.clientHeight;elRegion.right=elRegion.left+el.dom.clientWidth;if(cell){cellRegion=cell.getRegion();if(cellRegion.top<elRegion.top){adjustmentY=cellRegion.top-elRegion.top;}else if(cellRegion.bottom>elRegion.bottom){adjustmentY=cellRegion.bottom-elRegion.bottom;}
if(cellRegion.left<elRegion.left){adjustmentX=cellRegion.left-elRegion.left;}else if(cellRegion.right>elRegion.right){adjustmentX=cellRegion.right-elRegion.right;}
if(adjustmentY){panel.scrollByDeltaY(adjustmentY);}
if(adjustmentX){panel.scrollByDeltaX(adjustmentX);}
el.focus();me.fireEvent('cellfocus',record,cell,position);}},scrollByDelta:function(delta,dir){dir=dir||'scrollTop';var elDom=this.el.dom;elDom[dir]=(elDom[dir]+=delta);},onUpdate:function(store,record,operation,changedFieldNames){var me=this,index,newRow,newAttrs,attLen,attName,oldRow,oldRowDom,oldCells,newCells,len,i,columns,overItemCls,isAlt,altCls,isHovered,row,isEditing=me.editingPlugin&&me.editingPlugin.editing;if(me.viewReady){index=me.store.indexOf(record);columns=me.headerCt.getGridColumns();overItemCls=me.overItemCls;altCls=me.altRowCls;if(columns.length&&index>-1){newRow=me.bufferRender([record],index)[0];oldRow=me.all.item(index);if(oldRow){oldRowDom=oldRow.dom;isHovered=oldRow.hasCls(overItemCls);isAlt=oldRow.hasCls(altCls);if(oldRowDom.mergeAttributes){oldRowDom.mergeAttributes(newRow,true);}else{newAttrs=newRow.attributes;attLen=newAttrs.length;for(i=0;i<attLen;i++){attName=newAttrs[i].name;if(attName!=='id'){oldRowDom.setAttribute(attName,newAttrs[i].value);}}}
if(isHovered){oldRow.addCls(overItemCls);}
if(isAlt){oldRow.addCls(altCls);}
oldCells=oldRow.query(me.cellSelector);newCells=Ext.fly(newRow).query(me.cellSelector);len=newCells.length;row=oldCells[0].parentNode;for(i=0;i<len;i++){if(me.shouldUpdateCell(columns[i],changedFieldNames)){if(isEditing){Ext.fly(oldCells[i]).syncContent(newCells[i]);}
else{row.insertBefore(newCells[i],oldCells[i]);row.removeChild(oldCells[i]);}}}
me.selModel.onUpdate(record);}
me.fireEvent('itemupdate',record,index,oldRow);}}},shouldUpdateCell:function(column,changedFieldNames){if(column.hasCustomRenderer){return true;}
return!changedFieldNames||Ext.Array.contains(changedFieldNames,column.dataIndex);},refresh:function(){var me=this;me.setNewTemplate();me.callParent(arguments);me.doStripeRows(0);me.headerCt.setSortState();},clearViewEl:function(){this.callParent();delete this.table.dom;},processItemEvent:function(record,row,rowIndex,e){var me=this,cell=e.getTarget(me.cellSelector,row),cellIndex=cell?cell.cellIndex:-1,map=me.statics().EventMap,selModel=me.getSelectionModel(),type=e.type,result;if(type=='keydown'&&!cell&&selModel.getCurrentPosition){cell=me.getCellByPosition(selModel.getCurrentPosition());if(cell){cell=cell.dom;cellIndex=cell.cellIndex;}}
result=me.fireEvent('uievent',type,me,cell,rowIndex,cellIndex,e,record,row);if(result===false||me.callParent(arguments)===false){return false;}
if(type=='mouseover'||type=='mouseout'){return true;}
if(!cell){return true;}
return!((me['onBeforeCell'+map[type]](cell,cellIndex,record,row,rowIndex,e)===false)||(me.fireEvent('beforecell'+type,me,cell,cellIndex,record,row,rowIndex,e)===false)||(me['onCell'+map[type]](cell,cellIndex,record,row,rowIndex,e)===false)||(me.fireEvent('cell'+type,me,cell,cellIndex,record,row,rowIndex,e)===false));},processSpecialEvent:function(e){var me=this,features=me.features,ln=features.length,type=e.type,i,feature,prefix,featureTarget,beforeArgs,args,panel=me.ownerCt;me.callParent(arguments);if(type=='mouseover'||type=='mouseout'){return;}
for(i=0;i<ln;i++){feature=features[i];if(feature.hasFeatureEvent){featureTarget=e.getTarget(feature.eventSelector,me.getTargetEl());if(featureTarget){prefix=feature.eventPrefix;beforeArgs=feature.getFireEventArgs('before'+prefix+type,me,featureTarget,e);args=feature.getFireEventArgs(prefix+type,me,featureTarget,e);if((me.fireEvent.apply(me,beforeArgs)===false)||(panel.fireEvent.apply(panel,beforeArgs)===false)||(me.fireEvent.apply(me,args)===false)||(panel.fireEvent.apply(panel,args)===false)){return false;}}}}
return true;},onCellMouseDown:Ext.emptyFn,onCellMouseUp:Ext.emptyFn,onCellClick:Ext.emptyFn,onCellDblClick:Ext.emptyFn,onCellContextMenu:Ext.emptyFn,onCellKeyDown:Ext.emptyFn,onBeforeCellMouseDown:Ext.emptyFn,onBeforeCellMouseUp:Ext.emptyFn,onBeforeCellClick:Ext.emptyFn,onBeforeCellDblClick:Ext.emptyFn,onBeforeCellContextMenu:Ext.emptyFn,onBeforeCellKeyDown:Ext.emptyFn,expandToFit:function(header){if(header){var maxWidth=this.getMaxContentWidth(header);delete header.flex;header.setWidth(maxWidth);}},getMaxContentWidth:function(header){var cellSelector=header.getCellInnerSelector(),cells=this.el.query(cellSelector),i=0,ln=cells.length,maxWidth=header.el.dom.scrollWidth,scrollWidth;for(;i<ln;i++){scrollWidth=cells[i].scrollWidth;if(scrollWidth>maxWidth){maxWidth=scrollWidth;}}
return maxWidth;},getPositionByEvent:function(e){var me=this,cellNode=e.getTarget(me.cellSelector),rowNode=e.getTarget(me.itemSelector),record=me.getRecord(rowNode),header=me.getHeaderByCell(cellNode);return me.getPosition(record,header);},getHeaderByCell:function(cell){if(cell){var m=cell.className.match(this.cellRe);if(m&&m[1]){return Ext.getCmp(m[1]);}}
return false;},walkCells:function(pos,direction,e,preventWrap,verifierFn,scope){if(!pos){return;}
var me=this,row=pos.row,column=pos.column,rowCount=me.store.getCount(),firstCol=me.getFirstVisibleColumnIndex(),lastCol=me.getLastVisibleColumnIndex(),newPos={row:row,column:column},activeHeader=me.headerCt.getHeaderAtIndex(column);if(!activeHeader||activeHeader.hidden){return false;}
e=e||{};direction=direction.toLowerCase();switch(direction){case'right':if(column===lastCol){if(preventWrap||row===rowCount-1){return false;}
if(!e.ctrlKey){newPos.row=row+1;newPos.column=firstCol;}}else{if(!e.ctrlKey){newPos.column=column+me.getRightGap(activeHeader);}else{newPos.column=lastCol;}}
break;case'left':if(column===firstCol){if(preventWrap||row===0){return false;}
if(!e.ctrlKey){newPos.row=row-1;newPos.column=lastCol;}}else{if(!e.ctrlKey){newPos.column=column+me.getLeftGap(activeHeader);}else{newPos.column=firstCol;}}
break;case'up':if(row===0){return false;}else{if(!e.ctrlKey){newPos.row=row-1;}else{newPos.row=0;}}
break;case'down':if(row===rowCount-1){return false;}else{if(!e.ctrlKey){newPos.row=row+1;}else{newPos.row=rowCount-1;}}
break;}
if(verifierFn&&verifierFn.call(scope||window,newPos)!==true){return false;}else{return newPos;}},getFirstVisibleColumnIndex:function(){var firstVisibleHeader=this.getHeaderCt().getVisibleGridColumns()[0];return firstVisibleHeader?firstVisibleHeader.getIndex():-1;},getLastVisibleColumnIndex:function(){var visHeaders=this.getHeaderCt().getVisibleGridColumns(),lastHeader=visHeaders[visHeaders.length-1];return lastHeader.getIndex();},getHeaderCt:function(){return this.headerCt;},getPosition:function(record,header){var me=this,store=me.store,gridCols=me.headerCt.getGridColumns();return{row:store.indexOf(record),column:Ext.Array.indexOf(gridCols,header)};},getRightGap:function(activeHeader){var headerCt=this.getHeaderCt(),headers=headerCt.getGridColumns(),activeHeaderIdx=Ext.Array.indexOf(headers,activeHeader),i=activeHeaderIdx+1,nextIdx;for(;i<=headers.length;i++){if(!headers[i].hidden){nextIdx=i;break;}}
return nextIdx-activeHeaderIdx;},beforeDestroy:function(){if(this.rendered){this.el.removeAllListeners();}
this.callParent(arguments);},getLeftGap:function(activeHeader){var headerCt=this.getHeaderCt(),headers=headerCt.getGridColumns(),activeHeaderIdx=Ext.Array.indexOf(headers,activeHeader),i=activeHeaderIdx-1,prevIdx;for(;i>=0;i--){if(!headers[i].hidden){prevIdx=i;break;}}
return prevIdx-activeHeaderIdx;},onAdd:function(ds,records,index){this.callParent(arguments);this.doStripeRows(index);},onRemove:function(ds,records,indexes){this.callParent(arguments);this.doStripeRows(indexes[0]);},doStripeRows:function(startRow,endRow){var me=this,rows,rowsLn,i,row;if(me.rendered&&me.stripeRows){rows=me.getNodes(startRow,endRow);for(i=0,rowsLn=rows.length;i<rowsLn;i++){row=rows[i];row.className=row.className.replace(me.rowClsRe,' ');startRow++;if(startRow%2===0){row.className+=(' '+me.altRowCls);}}}}});Ext.define('Puma.patch.view.Table',{override:'Ext.view.Table',refreshSize:function(){if(!this.dontRefreshSize){this.callParent();}}})
Ext.define('Ext.grid.Lockable',{requires:['Ext.grid.LockingView','Ext.view.Table'],syncRowHeight:true,headerCounter:0,scrollDelta:40,lockedGridCls:Ext.baseCSSPrefix+'grid-inner-locked',unlockText:'Unlock',lockText:'Lock',determineXTypeToCreate:function(){var me=this,typeToCreate,xtypes,xtypesLn,xtype,superxtype;if(me.subGridXType){typeToCreate=me.subGridXType;}else{xtypes=this.getXTypes().split('/');xtypesLn=xtypes.length;xtype=xtypes[xtypesLn-1];superxtype=xtypes[xtypesLn-2];if(superxtype!=='tablepanel'){typeToCreate=superxtype;}else{typeToCreate=xtype;}}
return typeToCreate;},injectLockable:function(){this.lockable=true;this.hasView=true;var me=this,scrollbarHeight=Ext.getScrollbarSize().width,store=me.store=Ext.StoreManager.lookup(me.store),xtype=me.determineXTypeToCreate(),selModel=me.getSelectionModel(),allFeatures,allPlugins,lockedGrid,normalGrid,i,columns,lockedHeaderCt,normalHeaderCt,lockedView,normalView,listeners;allFeatures=me.constructLockableFeatures();delete me.features;allPlugins=me.constructLockablePlugins();me.plugins=allPlugins.topPlugins;lockedGrid=Ext.apply({ownerLockable:me,xtype:xtype,store:store,scrollerOwner:false,enableAnimations:false,scroll:scrollbarHeight?false:'vertical',selModel:selModel,border:false,cls:me.lockedGridCls,isLayoutRoot:function(){return false;},features:allFeatures.lockedFeatures,plugins:allPlugins.lockedPlugins},me.lockedGridConfig);normalGrid=Ext.apply({ownerLockable:me,xtype:xtype,store:store,scrollerOwner:false,enableAnimations:false,selModel:selModel,border:false,isLayoutRoot:function(){return false;},features:allFeatures.normalFeatures,plugins:allPlugins.normalPlugins},me.normalGridConfig);me.addCls(Ext.baseCSSPrefix+'grid-locked');Ext.copyTo(normalGrid,me,me.bothCfgCopy);Ext.copyTo(lockedGrid,me,me.bothCfgCopy);Ext.copyTo(normalGrid,me,me.normalCfgCopy);Ext.copyTo(lockedGrid,me,me.lockedCfgCopy);for(i=0;i<me.normalCfgCopy.length;i++){delete me[me.normalCfgCopy[i]];}
for(i=0;i<me.lockedCfgCopy.length;i++){delete me[me.lockedCfgCopy[i]];}
me.addEvents('processcolumns','lockcolumn','unlockcolumn');me.addStateEvents(['lockcolumn','unlockcolumn']);me.lockedHeights=[];me.normalHeights=[];columns=me.processColumns(me.columns);lockedGrid.width=columns.lockedWidth+Ext.num(selModel.headerWidth,0)+(columns.locked.length?1:0);lockedGrid.columns=columns.locked;normalGrid.columns=columns.normal;normalGrid.flex=1;lockedGrid.viewConfig=me.lockedViewConfig||{};lockedGrid.viewConfig.loadingUseMsg=false;if(scrollbarHeight){lockedGrid.viewConfig.style='border-bottom:'+scrollbarHeight+'px solid #f6f6f6;'+(lockedGrid.viewConfig.style||'');}
normalGrid.viewConfig=me.normalViewConfig||{};if(me.viewConfig&&me.viewConfig.id){Ext.log.warn('id specified on viewConfig, it will be shared between both views: "'+me.viewConfig.id+'"');}
Ext.applyIf(lockedGrid.viewConfig,me.viewConfig);Ext.applyIf(normalGrid.viewConfig,me.viewConfig);me.lockedGrid=Ext.ComponentManager.create(lockedGrid);if(scrollbarHeight){me.lockedGrid.on({afterlayout:me.afterLockedViewLayout,scope:me});}
lockedView=me.lockedGrid.getView();normalGrid.viewConfig.lockingPartner=lockedView;me.normalGrid=Ext.ComponentManager.create(normalGrid);normalView=me.normalGrid.getView();me.view=Ext.create(me.getLockingViewConfig());listeners={scroll:{fn:me.onLockedViewScroll,element:'el',scope:me}};if(scrollbarHeight){listeners.mousewheel={fn:me.onLockedViewMouseWheel,element:'el',scope:me};}
if(me.syncRowHeight){listeners.refresh=me.onLockedViewRefresh;listeners.itemupdate=me.onLockedViewItemUpdate;listeners.scope=me;}
lockedView.on(listeners);listeners={scroll:{fn:me.onNormalViewScroll,element:'el',scope:me},scope:me};if(me.syncRowHeight){listeners.refresh=me.onNormalViewRefresh;}
normalView.on(listeners);lockedHeaderCt=me.lockedGrid.headerCt;normalHeaderCt=me.normalGrid.headerCt;lockedHeaderCt.lockedCt=true;lockedHeaderCt.lockableInjected=true;normalHeaderCt.lockableInjected=true;lockedHeaderCt.on({add:{buffer:1,scope:me,fn:me.onLockedHeaderAdd},columnshow:me.onLockedHeaderShow,columnhide:me.onLockedHeaderHide,columnmove:me.onLockedHeaderMove,sortchange:me.onLockedHeaderSortChange,columnresize:me.onLockedHeaderResize,scope:me});normalHeaderCt.on({columnmove:me.onNormalHeaderMove,sortchange:me.onNormalHeaderSortChange,scope:me});me.modifyHeaderCt();me.items=[me.lockedGrid,me.normalGrid];me.relayHeaderCtEvents(lockedHeaderCt);me.relayHeaderCtEvents(normalHeaderCt);me.layout={type:'hbox',align:'stretch'};},getLockingViewConfig:function(){return{xclass:'Ext.grid.LockingView',locked:this.lockedGrid,normal:this.normalGrid,panel:this};},processColumns:function(columns){var i=0,len=columns.length,lockedWidth=0,lockedHeaders=[],normalHeaders=[],column,result;for(;i<len;++i){column=columns[i];if(!column.isComponent){column=Ext.ComponentManager.create(columns[i],'gridcolumn');}
column.processed=true;if(column.locked||column.autoLock){if(column.flex){Ext.Error.raise("Columns which are locked do NOT support a flex width. You must set a width on the "+columns[i].text+"column.");}
if(!column.hidden){lockedWidth+=column.width||Ext.grid.header.Container.prototype.defaultWidth;}
lockedHeaders.push(column);}else{normalHeaders.push(column);}
if(!column.headerId){column.headerId=(column.initialConfig||column).id||('L'+(++this.headerCounter));}}
result={lockedWidth:lockedWidth,locked:{items:lockedHeaders,itemId:'lockedHeaderCt',stretchMaxPartner:'^^>>#normalHeaderCt'},normal:{items:normalHeaders,itemId:'normalHeaderCt',stretchMaxPartner:'^^>>#lockedHeaderCt'}};this.fireEvent('processcolumns',this,result.lockedHeaders,result.normalHeaders);return result;},afterLockedViewLayout:function(){var me=this,lockedView=me.lockedGrid.getView(),normalGrid=me.normalGrid,normalViewEl=normalGrid.getView().el.dom,spacerHeight=(this.normalGrid.headerCt.getVisibleGridColumns().length&&normalViewEl.scrollWidth>normalViewEl.clientWidth?Ext.getScrollbarSize().height:0);lockedView.el.dom.style.borderBottomWidth=spacerHeight+'px';},onLockedViewMouseWheel:function(e){var me=this,scrollDelta=-me.scrollDelta,deltaY=scrollDelta*e.getWheelDeltas().y,vertScrollerEl=me.lockedGrid.getView().el.dom,verticalCanScrollDown,verticalCanScrollUp;if(!me.ignoreMousewheel){if(vertScrollerEl){verticalCanScrollDown=vertScrollerEl.scrollTop!==vertScrollerEl.scrollHeight-vertScrollerEl.clientHeight;verticalCanScrollUp=vertScrollerEl.scrollTop!==0;}
if((deltaY<0&&verticalCanScrollUp)||(deltaY>0&&verticalCanScrollDown)){e.stopEvent();vertScrollerEl.scrollTop+=deltaY;me.normalGrid.getView().el.dom.scrollTop=vertScrollerEl.scrollTop;me.onNormalViewScroll();}}},onLockedViewScroll:function(){var me=this,lockedView=me.lockedGrid.getView(),normalView=me.normalGrid.getView(),normalDom=normalView.el.dom,lockedDom=lockedView.el.dom,normalTable,lockedTable;if(normalDom.scrollTop!==lockedDom.scrollTop){normalDom.scrollTop=lockedDom.scrollTop;if(me.store.buffered){lockedTable=lockedView.el.child('table',true);normalTable=normalView.el.child('table',true);normalTable.style.position='absolute';normalTable.style.top=lockedTable.style.top;}}},onNormalViewScroll:function(){var me=this,lockedView=me.lockedGrid.getView(),normalView=me.normalGrid.getView(),normalDom=normalView.el.dom,lockedDom=lockedView.el.dom,normalTable,lockedTable;if(normalDom.scrollTop!==lockedDom.scrollTop){lockedDom.scrollTop=normalDom.scrollTop;if(me.store.buffered){lockedTable=lockedView.el.child('table',true);normalTable=normalView.el.child('table',true);lockedTable.style.position='absolute';lockedTable.style.top=normalTable.style.top;}}},onLockedHeaderMove:function(){if(this.syncRowHeight){this.onNormalViewRefresh();}},onNormalHeaderMove:function(){if(this.syncRowHeight){this.onLockedViewRefresh();}},onLockedViewRefresh:function(){if(this.normalGrid.headerCt.getGridColumns().length){var me=this,view=me.lockedGrid.getView(),el=view.el,rowEls=el.query(view.getItemSelector()),ln=rowEls.length,i=0;me.lockedHeights=[];for(;i<ln;i++){me.lockedHeights[i]=rowEls[i].offsetHeight;}
me.syncRowHeights();}},onNormalViewRefresh:function(){if(this.lockedGrid.headerCt.getGridColumns().length){var me=this,view=me.normalGrid.getView(),el=view.el,rowEls=el.query(view.getItemSelector()),ln=rowEls.length,i=0;me.normalHeights=[];for(;i<ln;i++){me.normalHeights[i]=rowEls[i].offsetHeight;}
me.syncRowHeights();}},onLockedViewItemUpdate:function(record,index,node){if(this.normalGrid.headerCt.getGridColumns().length){this.lockedHeights[index]=node.offsetHeight;this.syncRowHeights();}},onNormalViewItemUpdate:function(record,index,node){if(this.lockedGrid.headerCt.getGridColumns().length){this.normalHeights[index]=node.offsetHeight;this.syncRowHeights();}},syncRowHeights:function(){var me=this,lockedHeights=me.lockedHeights,normalHeights=me.normalHeights,ln=lockedHeights.length,i=0,lockedView,normalView,lockedRowEls,normalRowEls,scrollTop;if(lockedHeights.length&&normalHeights.length){lockedView=me.lockedGrid.getView();normalView=me.normalGrid.getView();lockedRowEls=lockedView.el.query(lockedView.getItemSelector());normalRowEls=normalView.el.query(normalView.getItemSelector());for(;i<ln;i++){if(!isNaN(lockedHeights[i])&&!isNaN(normalHeights[i])){if(lockedHeights[i]>normalHeights[i]){Ext.fly(normalRowEls[i]).setHeight(lockedHeights[i]);}else if(lockedHeights[i]<normalHeights[i]){Ext.fly(lockedRowEls[i]).setHeight(normalHeights[i]);}}}
scrollTop=normalView.el.dom.scrollTop;normalView.el.dom.scrollTop=scrollTop;lockedView.el.dom.scrollTop=scrollTop;me.lockedHeights=[];me.normalHeights=[];}},modifyHeaderCt:function(){var me=this;me.lockedGrid.headerCt.getMenuItems=me.getMenuItems(me.lockedGrid.headerCt.getMenuItems,true);me.normalGrid.headerCt.getMenuItems=me.getMenuItems(me.normalGrid.headerCt.getMenuItems,false);me.lockedGrid.headerCt.showMenuBy=Ext.Function.createInterceptor(me.lockedGrid.headerCt.showMenuBy,me.showMenuBy);me.normalGrid.headerCt.showMenuBy=Ext.Function.createInterceptor(me.normalGrid.headerCt.showMenuBy,me.showMenuBy);},onUnlockMenuClick:function(){this.unlock();},onLockMenuClick:function(){this.lock();},showMenuBy:function(t,header){var menu=this.getMenu(),unlockItem=menu.down('#unlockItem'),lockItem=menu.down('#lockItem'),sep=unlockItem.prev();if(header.lockable===false){sep.hide();unlockItem.hide();lockItem.hide();}else{sep.show();unlockItem.show();lockItem.show();if(!unlockItem.initialConfig.disabled){unlockItem.setDisabled(header.lockable===false);}
if(!lockItem.initialConfig.disabled){lockItem.setDisabled(!header.isLockable());}}},getMenuItems:function(getMenuItems,locked){var me=this,unlockText=me.unlockText,lockText=me.lockText,unlockCls=Ext.baseCSSPrefix+'hmenu-unlock',lockCls=Ext.baseCSSPrefix+'hmenu-lock',unlockHandler=Ext.Function.bind(me.onUnlockMenuClick,me),lockHandler=Ext.Function.bind(me.onLockMenuClick,me);return function(){var o=getMenuItems.call(this);o.push('-',{itemId:'unlockItem',cls:unlockCls,text:unlockText,handler:unlockHandler,disabled:!locked});o.push({itemId:'lockItem',cls:lockCls,text:lockText,handler:lockHandler,disabled:locked});return o;};},syncLockedWidth:function(){var me=this,locked=me.lockedGrid,lockedView=locked.view,lockedViewEl=lockedView.el.dom,normal=me.normalGrid,lockedColCount=locked.headerCt.getVisibleGridColumns().length,normalColCount=normal.headerCt.getVisibleGridColumns().length
Ext.suspendLayouts();if(normalColCount){normal.show();if(lockedColCount){delete locked.flex;locked.setWidth(locked.headerCt.getFullWidth(true));locked.addCls(me.lockedGridCls);locked.show();}else{locked.hide();}
lockedViewEl.style.overflow='hidden';lockedView.autoScroll=false;me.ignoreMousewheel=false;}
else{normal.hide();lockedViewEl.style.borderBottomWidth='0';locked.flex=1;delete locked.width;locked.removeCls(me.lockedGridCls);locked.show();lockedViewEl.style.overflow='auto';lockedView.autoScroll=true;me.ignoreMousewheel=true;}
Ext.resumeLayouts(true);return[lockedColCount,normalColCount];},onLockedHeaderAdd:function(){if(!this.ignoreAddLockedColumn){this.syncLockedWidth();}},onLockedHeaderResize:function(){this.syncLockedWidth();},onLockedHeaderHide:function(){this.syncLockedWidth();},onLockedHeaderShow:function(){this.syncLockedWidth();},onLockedHeaderSortChange:function(headerCt,header,sortState){if(sortState){this.normalGrid.headerCt.clearOtherSortStates(null,true);}},onNormalHeaderSortChange:function(headerCt,header,sortState){if(sortState){this.lockedGrid.headerCt.clearOtherSortStates(null,true);}},lock:function(activeHd,toIdx){var me=this,normalGrid=me.normalGrid,lockedGrid=me.lockedGrid,normalHCt=normalGrid.headerCt,lockedHCt=lockedGrid.headerCt,refreshFlags,ownerCt;activeHd=activeHd||normalHCt.getMenu().activeHeader;ownerCt=activeHd.ownerCt;if(activeHd.flex){activeHd.width=activeHd.getWidth();delete activeHd.flex;}
Ext.suspendLayouts();ownerCt.remove(activeHd,false);if(ownerCt.isGroupHeader&&!ownerCt.items.getCount()){ownerCt.ownerCt.remove(ownerCt);}
activeHd.locked=true;me.ignoreAddLockedColumn=true;if(Ext.isDefined(toIdx)){lockedHCt.insert(toIdx,activeHd);}else{lockedHCt.add(activeHd);}
me.ignoreAddLockedColumn=false;refreshFlags=me.syncLockedWidth();if(refreshFlags[0]){lockedGrid.getView().refresh();}
if(refreshFlags[1]){normalGrid.getView().refresh();}
Ext.resumeLayouts(true);me.fireEvent('lockcolumn',me,activeHd);},unlock:function(activeHd,toIdx){var me=this,normalGrid=me.normalGrid,lockedGrid=me.lockedGrid,normalHCt=normalGrid.headerCt,lockedHCt=lockedGrid.headerCt,refreshFlags;if(!Ext.isDefined(toIdx)){toIdx=0;}
activeHd=activeHd||lockedHCt.getMenu().activeHeader;Ext.suspendLayouts();activeHd.ownerCt.remove(activeHd,false);activeHd.locked=false;normalHCt.insert(toIdx,activeHd);refreshFlags=me.syncLockedWidth();if(refreshFlags[0]){lockedGrid.getView().refresh();}
if(refreshFlags[1]){normalGrid.getView().refresh();}
Ext.resumeLayouts(true);me.fireEvent('unlockcolumn',me,activeHd);},applyColumnsState:function(columns){var me=this,lockedGrid=me.lockedGrid,lockedHeaderCt=lockedGrid.headerCt,normalHeaderCt=me.normalGrid.headerCt,lockedCols=Ext.Array.toMap(lockedHeaderCt.items,'headerId'),normalCols=Ext.Array.toMap(normalHeaderCt.items,'headerId'),locked=[],normal=[],lockedWidth=1,length=columns.length,i,existing,lockedDefault,col;for(i=0;i<length;i++){col=columns[i];lockedDefault=lockedCols[col.id];existing=lockedDefault||normalCols[col.id];if(existing){if(existing.applyColumnState){existing.applyColumnState(col);}
if(existing.locked===undefined){existing.locked=!!lockedDefault;}
if(existing.locked){locked.push(existing);if(!existing.hidden&&typeof existing.width=='number'){lockedWidth+=existing.width;}}else{normal.push(existing);}}}
if(locked.length+normal.length==lockedHeaderCt.items.getCount()+normalHeaderCt.items.getCount()){lockedHeaderCt.removeAll(false);normalHeaderCt.removeAll(false);lockedHeaderCt.add(locked);normalHeaderCt.add(normal);lockedGrid.setWidth(lockedWidth);}},getColumnsState:function(){var me=this,locked=me.lockedGrid.headerCt.getColumnsState(),normal=me.normalGrid.headerCt.getColumnsState();return locked.concat(normal);},reconfigureLockable:function(store,columns){var me=this,lockedGrid=me.lockedGrid,normalGrid=me.normalGrid;Ext.suspendLayouts();if(columns){lockedGrid.headerCt.removeAll();normalGrid.headerCt.removeAll();columns=me.processColumns(columns);me.ignoreAddLockedColumn=true;lockedGrid.headerCt.add(columns.locked.items);me.ignoreAddLockedColumn=false;normalGrid.headerCt.add(columns.normal.items);me.syncLockedWidth();}
if(store){store=Ext.data.StoreManager.lookup(store);me.store=store;lockedGrid.bindStore(store);normalGrid.bindStore(store);}else{lockedGrid.getView().refresh();normalGrid.getView().refresh();}
Ext.resumeLayouts(true);},constructLockableFeatures:function(){var features=this.features,feature,featureClone,lockedFeatures,normalFeatures,i=0,len;if(features){lockedFeatures=[];normalFeatures=[];len=features.length;for(;i<len;i++){feature=features[i];if(!feature.isFeature){feature=Ext.create('feature.'+feature.ftype,feature);}
switch(feature.lockableScope){case'locked':lockedFeatures.push(feature);break;case'normal':normalFeatures.push(feature);break;default:lockedFeatures.push(feature);normalFeatures.push(featureClone=feature.clone());featureClone.lockingPartner=feature;feature.lockingPartner=featureClone;}}}
return{normalFeatures:normalFeatures,lockedFeatures:lockedFeatures};},constructLockablePlugins:function(){var plugins=this.plugins,plugin,pluginClone,topPlugins,lockedPlugins,normalPlugins,i=0,len;if(plugins){topPlugins=[];lockedPlugins=[];normalPlugins=[];len=plugins.length;for(;i<len;i++){plugin=this.constructPlugin(plugins[i]);switch(plugin.lockableScope){case'both':lockedPlugins.push(plugin);normalPlugins.push(pluginClone=plugin.clone());plugin.lockingPartner=pluginClone;pluginClone.lockingPartner=plugin;break;case'locked':lockedPlugins.push(plugin);break;case'normal':normalPlugins.push(plugin);break;default:topPlugins.push(plugin);}}}
return{topPlugins:topPlugins,normalPlugins:normalPlugins,lockedPlugins:lockedPlugins};}},function(){this.borrow(Ext.AbstractComponent,['constructPlugin']);});Ext.define('Ext.tree.View',{extend:'Ext.view.Table',alias:'widget.treeview',requires:['Ext.data.NodeStore'],loadingCls:Ext.baseCSSPrefix+'grid-tree-loading',expandedCls:Ext.baseCSSPrefix+'grid-tree-node-expanded',leafCls:Ext.baseCSSPrefix+'grid-tree-node-leaf',expanderSelector:'.'+Ext.baseCSSPrefix+'tree-expander',checkboxSelector:'.'+Ext.baseCSSPrefix+'tree-checkbox',expanderIconOverCls:Ext.baseCSSPrefix+'tree-expander-over',nodeAnimWrapCls:Ext.baseCSSPrefix+'tree-animator-wrap',blockRefresh:true,loadMask:false,rootVisible:true,deferInitialRefresh:false,expandDuration:250,collapseDuration:250,toggleOnDblClick:true,stripeRows:false,uiFields:['expanded','loaded','checked','expandable','leaf','icon','iconCls','loading','qtip','qtitle'],initComponent:function(){var me=this,treeStore=me.panel.getStore(),store=me.store;if(me.initialConfig.animate===undefined){me.animate=Ext.enableFx;}
if(!store||store===treeStore){me.store=store=new Ext.data.NodeStore({treeStore:treeStore,recursive:true,rootVisible:me.rootVisible});}
store.on({beforeexpand:me.onBeforeExpand,expand:me.onExpand,beforecollapse:me.onBeforeCollapse,collapse:me.onCollapse,write:me.onStoreWrite,datachanged:me.onStoreDataChanged,collapsestart:me.beginBulkUpdate,collapsecomplete:me.endBulkUpdate,scope:me});treeStore.on({scope:me,beforefill:me.onBeforeFill,fillcomplete:me.onFillComplete,beforebulkremove:me.beginBulkUpdate,bulkremovecomplete:me.endBulkUpdate});if(!treeStore.remoteSort){treeStore.on({scope:me,beforesort:me.onBeforeSort,sort:me.onSort});}
if(me.node){me.setRootNode(me.node);}
me.animQueue={};me.animWraps={};me.addEvents('afteritemexpand','afteritemcollapse','nodedragover');me.callParent(arguments);me.on({element:'el',scope:me,delegate:me.expanderSelector,mouseover:me.onExpanderMouseOver,mouseout:me.onExpanderMouseOut});me.on({element:'el',scope:me,delegate:me.checkboxSelector,click:me.onCheckboxChange});},onBeforeFill:function(treeStore,fillRoot){var store=this.store,index=store.indexOf(fillRoot);this.fillRootIndex=index;this.fillSibling=store.getAt(index+1);store.suspendEvents();},onFillComplete:function(treeStore,fillRoot,newNodes){var me=this,store=me.store,start=me.fillRootIndex+1,sibling=me.fillSibling,end,records;store.resumeEvents();delete me.fillSibling;delete me.fillRootIndex;fillRoot.triggerUIUpdate();if(!newNodes.length||store.indexOf(newNodes[0])===-1){return;}
if(sibling){end=store.indexOf(sibling)-1;}
records=store.getRange(start,end);me.onAdd(store,records,start);},onBeforeSort:function(){this.store.suspendEvents();},onSort:function(o){if(o.isStore){this.store.resumeEvents();this.refresh();}},getStoreListeners:function(){var me=this;return{refresh:me.onDataRefresh,add:me.onAdd,remove:me.onRemove,update:me.onUpdate,clear:me.refresh};},getMaskStore:function(){return this.panel.getStore();},afterComponentLayout:function(){this.callParent(arguments);var stretcher=this.stretcher;if(stretcher){stretcher.setWidth((this.getWidth()-Ext.getScrollbarSize().width));}},processUIEvent:function(e){if(e.getTarget('.'+this.nodeAnimWrapCls,this.el)){return false;}
return this.callParent(arguments);},onClear:function(){this.store.removeAll();},setRootNode:function(node){var me=this;me.store.setNode(node);me.node=node;},onCheckboxChange:function(e,t){var me=this,item=e.getTarget(me.getItemSelector(),me.getTargetEl());if(item){me.onCheckChange(me.getRecord(item));}},onCheckChange:function(record){var checked=record.get('checked');if(Ext.isBoolean(checked)){checked=!checked;record.set('checked',checked);this.fireEvent('checkchange',record,checked);}},getChecked:function(){var checked=[];this.node.cascadeBy(function(rec){if(rec.get('checked')){checked.push(rec);}});return checked;},isItemChecked:function(rec){return rec.get('checked');},createAnimWrap:function(record,index){var thHtml='',headerCt=this.panel.headerCt,headers=headerCt.getGridColumns(),i=0,len=headers.length,item,node=this.getNode(record),tmpEl,nodeEl;for(;i<len;i++){item=headers[i];thHtml+='<th style="width: '+(item.hidden?0:item.getDesiredWidth())+'px; height: 0px;"></th>';}
nodeEl=Ext.get(node);tmpEl=nodeEl.insertSibling({tag:'tr',html:['<td colspan="'+headerCt.getColumnCount()+'">','<div class="'+this.nodeAnimWrapCls+'">','<table class="'+Ext.baseCSSPrefix+'grid-table" style="width: '+headerCt.getFullWidth()+'px;"><tbody>',thHtml,'</tbody></table>','</div>','</td>'].join('')},'after');return{record:record,node:node,el:tmpEl,expanding:false,collapsing:false,animating:false,animateEl:tmpEl.down('div'),targetEl:tmpEl.down('tbody')};},getAnimWrap:function(parent,bubble){if(!this.animate){return null;}
var wraps=this.animWraps,wrap=wraps[parent.internalId];if(bubble!==false){while(!wrap&&parent){parent=parent.parentNode;if(parent){wrap=wraps[parent.internalId];}}}
return wrap;},doAdd:function(nodes,records,index){var me=this,record=records[0],parent=record.parentNode,a=me.all.elements,relativeIndex=0,animWrap=me.getAnimWrap(parent),targetEl,children,len;if(!animWrap||!animWrap.expanding){return me.callParent(arguments);}
parent=animWrap.record;targetEl=animWrap.targetEl;children=targetEl.dom.childNodes;len=children.length-1;relativeIndex=index-me.indexOf(parent)-1;if(!len||relativeIndex>=len){targetEl.appendChild(nodes);}
else{Ext.fly(children[relativeIndex+1]).insertSibling(nodes,'before',true);}
Ext.Array.insert(a,index,nodes);if(animWrap.isAnimating){me.onExpand(parent);}},beginBulkUpdate:function(){this.bulkUpdate=true;},endBulkUpdate:function(){var me=this;this.bulkUpdate=false;if(me.rendered){me.refreshSize();me.updateIndexes();}},onRemove:function(ds,record,index){var me=this,bulk=me.bulkUpdate,empty;if(me.viewReady){me.doRemove(record,index);if(!bulk){me.updateIndexes(index);}
empty=me.store.getCount()===0;if(empty){me.refresh();}
me.fireEvent('itemremove',record,index);if(!bulk&&!empty){me.refreshSize();}}},doRemove:function(record,index){var me=this,all=me.all,animWrap=me.getAnimWrap(record),item=all.item(index),node=item?item.dom:null;if(!node||!animWrap||!animWrap.collapsing){return me.callParent(arguments);}
animWrap.targetEl.appendChild(node);all.removeElement(index);},onBeforeExpand:function(parent,records,index){var me=this,animWrap;if(!me.rendered||!me.animate){return;}
if(me.getNode(parent)){animWrap=me.getAnimWrap(parent,false);if(!animWrap){animWrap=me.animWraps[parent.internalId]=me.createAnimWrap(parent);animWrap.animateEl.setHeight(0);}
else if(animWrap.collapsing){animWrap.targetEl.select(me.itemSelector).remove();}
animWrap.expanding=true;animWrap.collapsing=false;}},onExpand:function(parent){var me=this,queue=me.animQueue,id=parent.getId(),node=me.getNode(parent),index=node?me.indexOf(node):-1,animWrap,animateEl,targetEl;if(me.singleExpand){me.ensureSingleExpand(parent);}
if(index===-1){return;}
animWrap=me.getAnimWrap(parent,false);if(!animWrap){parent.isExpandingOrCollapsing=false;me.fireEvent('afteritemexpand',parent,index,node);me.refreshSize();return;}
animateEl=animWrap.animateEl;targetEl=animWrap.targetEl;animateEl.stopAnimation();queue[id]=true;animateEl.slideIn('t',{duration:me.expandDuration,listeners:{scope:me,lastframe:function(){animWrap.el.insertSibling(targetEl.query(me.itemSelector),'before',true);animWrap.el.remove();me.refreshSize();delete me.animWraps[animWrap.record.internalId];delete queue[id];}},callback:function(){parent.isExpandingOrCollapsing=false;me.fireEvent('afteritemexpand',parent,index,node);}});animWrap.isAnimating=true;},onBeforeCollapse:function(parent,records,index){var me=this,animWrap;if(!me.rendered||!me.animate){return;}
if(me.getNode(parent)){animWrap=me.getAnimWrap(parent);if(!animWrap){animWrap=me.animWraps[parent.internalId]=me.createAnimWrap(parent,index);}
else if(animWrap.expanding){animWrap.targetEl.select(this.itemSelector).remove();}
animWrap.expanding=false;animWrap.collapsing=true;}},onCollapse:function(parent){var me=this,queue=me.animQueue,id=parent.getId(),node=me.getNode(parent),index=node?me.indexOf(node):-1,animWrap=me.getAnimWrap(parent),animateEl;if(index===-1){return;}
if(!animWrap){parent.isExpandingOrCollapsing=false;me.fireEvent('afteritemcollapse',parent,index,node);me.refreshSize();return;}
animateEl=animWrap.animateEl;queue[id]=true;animateEl.stopAnimation();animateEl.slideOut('t',{duration:me.collapseDuration,listeners:{scope:me,lastframe:function(){animWrap.el.remove();me.refreshSize();delete me.animWraps[animWrap.record.internalId];delete queue[id];}},callback:function(){parent.isExpandingOrCollapsing=false;me.fireEvent('afteritemcollapse',parent,index,node);}});animWrap.isAnimating=true;},isAnimating:function(node){return!!this.animQueue[node.getId()];},collectData:function(records){var data=this.callParent(arguments),rows=data.rows,len=rows.length,i=0,Format=Ext.util.Format,row,record;for(;i<len;i++){row=rows[i];record=records[i];if(record.get('qtip')){row.rowAttr='data-qtip="'+Format.htmlEncode(record.get('qtip'))+'"';if(record.get('qtitle')){row.rowAttr+=' '+'data-qtitle="'+Format.htmlEncode(record.get('qtitle'))+'"';}}
if(record.isExpanded()){row.rowCls=(row.rowCls||'')+' '+this.expandedCls;}
if(record.isLeaf()){row.rowCls=(row.rowCls||'')+' '+this.leafCls;}
if(record.isLoading()){row.rowCls=(row.rowCls||'')+' '+this.loadingCls;}}
return data;},expand:function(record,deep,callback,scope){var me=this,doAnimate=!!me.animate;if(!doAnimate||!record.isExpandingOrCollapsing){if(!record.isLeaf()){record.isExpandingOrCollapsing=doAnimate;}
return record.expand(deep,callback,scope);}},collapse:function(record,deep,callback,scope){var me=this,doAnimate=!!me.animate;if(!doAnimate||!record.isExpandingOrCollapsing){if(!record.isLeaf()){record.isExpandingOrCollapsing=doAnimate;}
return record.collapse(deep,callback,scope);}},toggle:function(record,deep,callback,scope){if(record.isExpanded()){this.collapse(record,deep,callback,scope);}else{this.expand(record,deep,callback,scope);}},onItemDblClick:function(record,item,index){var me=this,editingPlugin=me.editingPlugin;me.callParent(arguments);if(me.toggleOnDblClick&&record.isExpandable()&&!(editingPlugin&&editingPlugin.clicksToEdit===2)){me.toggle(record);}},onBeforeItemMouseDown:function(record,item,index,e){if(e.getTarget(this.expanderSelector,item)){return false;}
return this.callParent(arguments);},onItemClick:function(record,item,index,e){if(e.getTarget(this.expanderSelector,item)&&record.isExpandable()){this.toggle(record,e.ctrlKey);return false;}
return this.callParent(arguments);},onExpanderMouseOver:function(e,t){e.getTarget(this.cellSelector,10,true).addCls(this.expanderIconOverCls);},onExpanderMouseOut:function(e,t){e.getTarget(this.cellSelector,10,true).removeCls(this.expanderIconOverCls);},getTreeStore:function(){return this.panel.store;},ensureSingleExpand:function(node){var parent=node.parentNode;if(parent){parent.eachChild(function(child){if(child!==node&&child.isExpanded()){child.collapse();}});}},shouldUpdateCell:function(column,changedFieldNames){if(changedFieldNames){var i=0,len=changedFieldNames.length;for(;i<len;++i){if(Ext.Array.contains(this.uiFields,changedFieldNames[i])){return true;}}}
return this.callParent(arguments);},onStoreWrite:function(store,operation){var treeStore=this.panel.store;treeStore.fireEvent('write',treeStore,operation);},onStoreDataChanged:function(store,operation){var treeStore=this.panel.store;treeStore.fireEvent('datachanged',treeStore);}});Ext.define('Puma.patch.tree.View',{override:'Ext.tree.View',onCheckboxChange:function(e,t){this.lastE=e;this.callParent(arguments);}})
Ext.define('Ext.grid.View',{extend:'Ext.view.Table',alias:'widget.gridview',stripeRows:true,autoScroll:true});Ext.define('Ext.toolbar.Item',{extend:'Ext.Component',alias:'widget.tbitem',alternateClassName:'Ext.Toolbar.Item',enable:Ext.emptyFn,disable:Ext.emptyFn,focus:Ext.emptyFn});Ext.define('Ext.toolbar.Separator',{extend:'Ext.toolbar.Item',alias:'widget.tbseparator',alternateClassName:'Ext.Toolbar.Separator',baseCls:Ext.baseCSSPrefix+'toolbar-separator',focusable:false,border:true});Ext.define('Ext.layout.container.boxOverflow.Menu',{extend:'Ext.layout.container.boxOverflow.None',requires:['Ext.toolbar.Separator','Ext.button.Button'],alternateClassName:'Ext.layout.boxOverflow.Menu',noItemsMenuText:'<div class="'+Ext.baseCSSPrefix+'toolbar-no-items">(None)</div>',constructor:function(layout){var me=this;me.callParent(arguments);me.triggerButtonCls=me.triggerButtonCls||Ext.baseCSSPrefix+'box-menu-'+layout.getNames().right;me.menuItems=[];},beginLayout:function(ownerContext){this.callParent(arguments);this.clearOverflow(ownerContext);},beginLayoutCycle:function(ownerContext,firstCycle){this.callParent(arguments);if(!firstCycle){this.clearOverflow(ownerContext);this.layout.cacheChildItems(ownerContext);}},onRemove:function(comp){Ext.Array.remove(this.menuItems,comp);},getSuffixConfig:function(){var me=this,layout=me.layout,oid=layout.owner.id;me.menu=new Ext.menu.Menu({listeners:{scope:me,beforeshow:me.beforeMenuShow}});me.menuTrigger=new Ext.button.Button({id:oid+'-menu-trigger',cls:Ext.layout.container.Box.prototype.innerCls+' '+me.triggerButtonCls,hidden:true,ownerCt:layout.owner,ownerLayout:layout,iconCls:Ext.baseCSSPrefix+me.getOwnerType(layout.owner)+'-more-icon',ui:layout.owner instanceof Ext.toolbar.Toolbar?'default-toolbar':'default',menu:me.menu,showEmptyMenu:true,getSplitCls:function(){return'';}});return me.menuTrigger.getRenderTree();},getOverflowCls:function(){return Ext.baseCSSPrefix+this.layout.direction+'-box-overflow-body';},handleOverflow:function(ownerContext){var me=this,layout=me.layout,names=layout.getNames(),plan=ownerContext.state.boxPlan,posArgs=[null,null];me.showTrigger(ownerContext);posArgs[names.heightIndex]=(plan.maxSize-me.menuTrigger[names.getHeight]())/2;me.menuTrigger.setPosition.apply(me.menuTrigger,posArgs);return{reservedSpace:me.menuTrigger[names.getWidth]()};},captureChildElements:function(){var menuTrigger=this.menuTrigger;if(menuTrigger.rendering){menuTrigger.finishRender();}},_asLayoutRoot:{isRoot:true},clearOverflow:function(ownerContext){var me=this,items=me.menuItems,item,i=0,length=items.length,owner=me.layout.owner,asLayoutRoot=me._asLayoutRoot;owner.suspendLayouts();me.captureChildElements();me.hideTrigger();owner.resumeLayouts();for(;i<length;i++){item=items[i];item.suspendLayouts();item.show();item.resumeLayouts(asLayoutRoot);}
items.length=0;},showTrigger:function(ownerContext){var me=this,layout=me.layout,owner=layout.owner,names=layout.getNames(),startProp=names.x,sizeProp=names.width,plan=ownerContext.state.boxPlan,available=plan.targetSize[sizeProp],childItems=ownerContext.childItems,len=childItems.length,menuTrigger=me.menuTrigger,childContext,comp,i,props;menuTrigger.suspendLayouts();menuTrigger.show();menuTrigger.resumeLayouts(me._asLayoutRoot);available-=me.menuTrigger.getWidth();owner.suspendLayouts();me.menuItems.length=0;for(i=0;i<len;i++){childContext=childItems[i];props=childContext.props;if(props[startProp]+props[sizeProp]>available){comp=childContext.target;me.menuItems.push(comp);comp.hide();}}
owner.resumeLayouts();},hideTrigger:function(){var menuTrigger=this.menuTrigger;if(menuTrigger){menuTrigger.hide();}},beforeMenuShow:function(menu){var me=this,items=me.menuItems,i=0,len=items.length,item,prev,needsSep=function(group,prev){return group.isXType('buttongroup')&&!(prev instanceof Ext.toolbar.Separator);};menu.suspendLayouts();me.clearMenu();menu.removeAll();for(;i<len;i++){item=items[i];if(!i&&(item instanceof Ext.toolbar.Separator)){continue;}
if(prev&&(needsSep(item,prev)||needsSep(prev,item))){menu.add('-');}
me.addComponentToMenu(menu,item);prev=item;}
if(menu.items.length<1){menu.add(me.noItemsMenuText);}
menu.resumeLayouts();},createMenuConfig:function(component,hideOnClick){var config=Ext.apply({},component.initialConfig),group=component.toggleGroup,clone;Ext.copyTo(config,component,['iconCls','icon','itemId','disabled','handler','scope','menu']);Ext.apply(config,{text:component.overflowText||component.text,hideOnClick:hideOnClick,destroyMenu:false,listeners:{}});if(component.isFormField){config.value=component.getValue();config.listeners.change=function(c,newVal,oldVal){component.setValue(newVal);}}
else if(group||component.enableToggle){Ext.apply(config,{hideOnClick:false,group:group,checked:component.pressed,listeners:{checkchange:function(item,checked){component.toggle(checked);}}});}
if(component.isButton&&!component.changeListenersAdded){component.on({textchange:this.onButtonAttrChange,iconchange:this.onButtonAttrChange});component.changeListenersAdded=true;}
delete config.ownerCt;delete config.xtype;delete config.id;return config;},onButtonAttrChange:function(btn){var clone=btn.overflowClone;clone.suspendLayouts();clone.setText(btn.text);clone.setIcon(btn.icon);clone.setIconCls(btn.iconCls);clone.resumeLayouts(true);},addComponentToMenu:function(menu,component){var me=this,i,items,iLen;if(component instanceof Ext.toolbar.Separator){menu.add('-');}else if(component.isComponent){if(component.isXType('splitbutton')){component.overflowClone=menu.add(me.createMenuConfig(component,true));}else if(component.isXType('button')){component.overflowClone=menu.add(me.createMenuConfig(component,!component.menu));}else if(component.isXType('buttongroup')){items=component.items.items;iLen=items.length;for(i=0;i<iLen;i++){me.addComponentToMenu(menu,items[i]);}}else{component.overflowClone=menu.add(Ext.create(Ext.getClassName(component),me.createMenuConfig(component)));}}},clearMenu:function(){var menu=this.menu,items,i,iLen,item;if(menu&&menu.items){items=menu.items.items;iLen=items.length;for(i=0;i<iLen;i++){item=items[i];if(item.setMenu){item.setMenu(null);}}}},destroy:function(){var trigger=this.menuTrigger;if(trigger&&!this.layout.owner.items.contains(trigger)){delete trigger.ownerCt;}
Ext.destroy(this.menu,trigger);}});Ext.define('Ext.layout.container.Box',{alias:['layout.box'],extend:'Ext.layout.container.Container',alternateClassName:'Ext.layout.BoxLayout',requires:['Ext.layout.container.boxOverflow.None','Ext.layout.container.boxOverflow.Menu','Ext.layout.container.boxOverflow.Scroller','Ext.util.Format','Ext.dd.DragDropManager'],defaultMargins:{top:0,right:0,bottom:0,left:0},padding:0,pack:'start',flex:undefined,stretchMaxPartner:undefined,type:'box',scrollOffset:0,itemCls:Ext.baseCSSPrefix+'box-item',targetCls:Ext.baseCSSPrefix+'box-layout-ct',innerCls:Ext.baseCSSPrefix+'box-inner',availableSpaceOffset:0,reserveOffset:true,manageMargins:true,createsInnerCt:true,childEls:['innerCt','targetEl'],renderTpl:['{%var oc,l=values.$comp.layout,oh=l.overflowHandler;','if (oh.getPrefixConfig!==Ext.emptyFn) {','if(oc=oh.getPrefixConfig())dh.generateMarkup(oc, out)','}%}','<div id="{ownerId}-innerCt" class="{[l.innerCls]} {[oh.getOverflowCls()]}" role="presentation">','<div id="{ownerId}-targetEl" style="position:absolute;','width:20000px;','left:0px;top:0px;','height:1px">','{%this.renderBody(out, values)%}','</div>','</div>','{%if (oh.getSuffixConfig!==Ext.emptyFn) {','if(oc=oh.getSuffixConfig())dh.generateMarkup(oc, out)','}%}',{disableFormats:true,definitions:'var dh=Ext.DomHelper;'}],constructor:function(config){var me=this,type;me.callParent(arguments);me.flexSortFn=Ext.Function.bind(me.flexSort,me);me.initOverflowHandler();type=typeof me.padding;if(type=='string'||type=='number'){me.padding=Ext.util.Format.parseBox(me.padding);me.padding.height=me.padding.top+me.padding.bottom;me.padding.width=me.padding.left+me.padding.right;}},getNames:function(){return this.names;},_percentageRe:/^\s*(\d+(?:\.\d*)?)\s*[%]\s*$/,getItemSizePolicy:function(item,ownerSizeModel){var me=this,policy=me.sizePolicy,align=me.align,flex=item.flex,key=align,names=me.names,width=item[names.width],height=item[names.height],percentageRe=me._percentageRe,percentageWidth=percentageRe.test(width),isStretch=(align=='stretch'),isStretchMax=(align=='stretchmax'),constrain=me.constrainAlign;if(!ownerSizeModel&&(isStretch||flex||percentageWidth||(constrain&&!isStretchMax))){ownerSizeModel=me.owner.getSizeModel();}
if(isStretch){if(!percentageRe.test(height)&&ownerSizeModel[names.height].shrinkWrap){key='stretchmax';}}else if(!isStretchMax){if(percentageRe.test(height)){key='stretch';}else if(constrain&&!ownerSizeModel[names.height].shrinkWrap){key='stretchmax';}else{key='';}}
if(flex||percentageWidth){if(!ownerSizeModel[names.width].shrinkWrap){policy=policy.flex;}}
return policy[key];},flexSort:function(a,b){var maxWidthName=this.getNames().maxWidth,minWidthName=this.getNames().minWidth,infiniteValue=Infinity,aTarget=a.target,bTarget=b.target,result=0,aMin,bMin,aMax,bMax,hasMin,hasMax;aMax=aTarget[maxWidthName]||infiniteValue;bMax=bTarget[maxWidthName]||infiniteValue;aMin=aTarget[minWidthName]||0;bMin=bTarget[minWidthName]||0;hasMin=isFinite(aMin)||isFinite(bMin);hasMax=isFinite(aMax)||isFinite(bMax);if(hasMin||hasMax){if(hasMax){result=aMax-bMax;}
if(result===0&&hasMin){result=bMin-aMin;}}
return result;},isItemBoxParent:function(itemContext){return true;},isItemShrinkWrap:function(item){return true;},roundFlex:function(width){return Math.ceil(width);},beginCollapse:function(child){var me=this;if(me.direction==='vertical'&&child.collapsedVertical()){child.collapseMemento.capture(['flex']);delete child.flex;}else if(me.direction==='horizontal'&&child.collapsedHorizontal()){child.collapseMemento.capture(['flex']);delete child.flex;}},beginExpand:function(child){child.collapseMemento.restore(['flex']);},beginLayout:function(ownerContext){var me=this,smp=me.owner.stretchMaxPartner,style=me.innerCt.dom.style,names=me.getNames();ownerContext.boxNames=names;me.overflowHandler.beginLayout(ownerContext);if(typeof smp==='string'){smp=Ext.getCmp(smp)||me.owner.query(smp)[0];}
ownerContext.stretchMaxPartner=smp&&ownerContext.context.getCmp(smp);me.callParent(arguments);ownerContext.innerCtContext=ownerContext.getEl('innerCt',me);me.scrollParallel=!!(me.owner.autoScroll||me.owner[names.overflowX]);me.scrollPerpendicular=!!(me.owner.autoScroll||me.owner[names.overflowY]);if(me.scrollParallel){me.scrollPos=me.owner.getTargetEl().dom[names.scrollLeft];}
style.width='';style.height='';},beginLayoutCycle:function(ownerContext,firstCycle){var me=this,align=me.align,names=ownerContext.boxNames,pack=me.pack,heightModelName=names.heightModel;me.overflowHandler.beginLayoutCycle(ownerContext,firstCycle);me.callParent(arguments);ownerContext.parallelSizeModel=ownerContext[names.widthModel];ownerContext.perpendicularSizeModel=ownerContext[heightModelName];ownerContext.boxOptions={align:align={stretch:align=='stretch',stretchmax:align=='stretchmax',center:align==names.center,bottom:align==names.bottom},pack:pack={center:pack=='center',end:pack=='end'}};if(align.stretch&&ownerContext.perpendicularSizeModel.shrinkWrap){align.stretchmax=true;align.stretch=false;}
align.nostretch=!(align.stretch||align.stretchmax);if(ownerContext.parallelSizeModel.shrinkWrap){pack.center=pack.end=false;}
me.cacheFlexes(ownerContext);if(Ext.isWebKit||Ext.isIE){me.targetEl.setWidth(20000);}},cacheFlexes:function(ownerContext){var me=this,names=ownerContext.boxNames,widthModelName=names.widthModel,heightModelName=names.heightModel,nostretch=ownerContext.boxOptions.align.nostretch,totalFlex=0,childItems=ownerContext.childItems,i=childItems.length,flexedItems=[],minWidth=0,minWidthName=names.minWidth,percentageRe=me._percentageRe,percentageWidths=0,percentageHeights=0,child,childContext,flex,match;while(i--){childContext=childItems[i];child=childContext.target;if(childContext[widthModelName].calculated){childContext.flex=flex=child.flex;if(flex){totalFlex+=flex;flexedItems.push(childContext);minWidth+=child[minWidthName]||0;}else{match=percentageRe.exec(child[names.width]);childContext.percentageParallel=parseFloat(match[1])/100;++percentageWidths;}}
if(nostretch&&childContext[heightModelName].calculated){match=percentageRe.exec(child[names.height]);childContext.percentagePerpendicular=parseFloat(match[1])/100;++percentageHeights;}}
ownerContext.flexedItems=flexedItems;ownerContext.flexedMinSize=minWidth;ownerContext.totalFlex=totalFlex;ownerContext.percentageWidths=percentageWidths;ownerContext.percentageHeights=percentageHeights;Ext.Array.sort(flexedItems,me.flexSortFn);},calculate:function(ownerContext){var me=this,targetSize=me.getContainerSize(ownerContext),names=ownerContext.boxNames,state=ownerContext.state,plan=state.boxPlan||(state.boxPlan={});plan.targetSize=targetSize;if(!ownerContext.parallelSizeModel.shrinkWrap&&!targetSize[names.gotWidth]){me.done=false;return;}
if(!state.parallelDone){state.parallelDone=me.calculateParallel(ownerContext,names,plan);}
if(!state.perpendicularDone){state.perpendicularDone=me.calculatePerpendicular(ownerContext,names,plan);}
if(state.parallelDone&&state.perpendicularDone){if(me.owner.dock&&(Ext.isIE6||Ext.isIE7||Ext.isIEQuirks)&&!me.owner.width&&!me.horizontal){plan.isIEVerticalDock=true;plan.calculatedWidth=plan.maxSize+ownerContext.getPaddingInfo().width+ownerContext.getFrameInfo().width;}
me.publishInnerCtSize(ownerContext,me.reserveOffset?me.availableSpaceOffset:0);if(me.done&&ownerContext.childItems.length>1&&ownerContext.boxOptions.align.stretchmax&&!state.stretchMaxDone){me.calculateStretchMax(ownerContext,names,plan);state.stretchMaxDone=true;}
me.overflowHandler.calculate(ownerContext);}else{me.done=false;}},calculateParallel:function(ownerContext,names,plan){var me=this,widthName=names.width,childItems=ownerContext.childItems,leftName=names.left,rightName=names.right,setWidthName=names.setWidth,childItemsLength=childItems.length,flexedItems=ownerContext.flexedItems,flexedItemsLength=flexedItems.length,pack=ownerContext.boxOptions.pack,padding=me.padding,containerWidth=plan.targetSize[widthName],totalMargin=0,left=padding[leftName],nonFlexWidth=left+padding[rightName]+me.scrollOffset+
(me.reserveOffset?me.availableSpaceOffset:0),scrollbarWidth=Ext.getScrollbarSize()[names.width],i,childMargins,remainingWidth,remainingFlex,childContext,flex,flexedWidth,contentWidth,mayNeedScrollbarAdjust,childWidth,percentageSpace;if(scrollbarWidth&&me.scrollPerpendicular&&ownerContext.parallelSizeModel.shrinkWrap&&!ownerContext.boxOptions.align.stretch&&!ownerContext.perpendicularSizeModel.shrinkWrap){if(!ownerContext.state.perpendicularDone){return false;}
mayNeedScrollbarAdjust=true;}
for(i=0;i<childItemsLength;++i){childContext=childItems[i];childMargins=childContext.marginInfo||childContext.getMarginInfo();totalMargin+=childMargins[widthName];if(!childContext[names.widthModel].calculated){childWidth=childContext.getProp(widthName);nonFlexWidth+=childWidth;if(isNaN(nonFlexWidth)){return false;}}}
nonFlexWidth+=totalMargin;if(ownerContext.percentageWidths){percentageSpace=containerWidth-totalMargin;if(isNaN(percentageSpace)){return false;}
for(i=0;i<childItemsLength;++i){childContext=childItems[i];if(childContext.percentageParallel){childWidth=Math.ceil(percentageSpace*childContext.percentageParallel);childWidth=childContext.setWidth(childWidth);nonFlexWidth+=childWidth;}}}
if(ownerContext.parallelSizeModel.shrinkWrap){plan.availableSpace=0;plan.tooNarrow=false;}else{plan.availableSpace=containerWidth-nonFlexWidth;plan.tooNarrow=plan.availableSpace<ownerContext.flexedMinSize;if(plan.tooNarrow&&Ext.getScrollbarSize()[names.height]&&me.scrollParallel&&ownerContext.state.perpendicularDone){ownerContext.state.perpendicularDone=false;for(i=0;i<childItemsLength;++i){childItems[i].invalidate();}}}
contentWidth=nonFlexWidth;remainingWidth=plan.availableSpace;remainingFlex=ownerContext.totalFlex;for(i=0;i<flexedItemsLength;i++){childContext=flexedItems[i];flex=childContext.flex;flexedWidth=me.roundFlex((flex/remainingFlex)*remainingWidth);flexedWidth=childContext[setWidthName](flexedWidth);contentWidth+=flexedWidth;remainingWidth=Math.max(0,remainingWidth-flexedWidth);remainingFlex-=flex;}
if(pack.center){left+=remainingWidth/2;if(left<0){left=0;}}else if(pack.end){left+=remainingWidth;}
for(i=0;i<childItemsLength;++i){childContext=childItems[i];childMargins=childContext.marginInfo;left+=childMargins[leftName];childContext.setProp(names.x,left);left+=childMargins[rightName]+childContext.props[widthName];}
contentWidth+=ownerContext.targetContext.getPaddingInfo()[widthName];ownerContext.state.contentWidth=contentWidth;if(mayNeedScrollbarAdjust&&(ownerContext.peek(names.contentHeight)>plan.targetSize[names.height])){contentWidth+=scrollbarWidth;ownerContext[names.hasOverflowY]=true;ownerContext.target.componentLayout[names.setWidthInDom]=true;ownerContext[names.invalidateScrollY]=(Ext.isStrict&&Ext.isIE8);}
ownerContext[names.setContentWidth](contentWidth);return true;},calculatePerpendicular:function(ownerContext,names,plan){var me=this,heightShrinkWrap=ownerContext.perpendicularSizeModel.shrinkWrap,targetSize=plan.targetSize,childItems=ownerContext.childItems,childItemsLength=childItems.length,mmax=Math.max,heightName=names.height,setHeightName=names.setHeight,topName=names.top,topPositionName=names.y,padding=me.padding,top=padding[topName],availHeight=targetSize[heightName]-top-padding[names.bottom],align=ownerContext.boxOptions.align,isStretch=align.stretch,isStretchMax=align.stretchmax,isCenter=align.center,isBottom=align.bottom,constrain=me.constrainAlign,maxHeight=0,hasPercentageSizes=0,onBeforeInvalidateChild=me.onBeforeConstrainInvalidateChild,onAfterInvalidateChild=me.onAfterConstrainInvalidateChild,scrollbarHeight=Ext.getScrollbarSize().height,childTop,i,childHeight,childMargins,diff,height,childContext,stretchMaxPartner,stretchMaxChildren,shrinkWrapParallelOverflow,percentagePerpendicular;if(isStretch||((isCenter||isBottom)&&!heightShrinkWrap)){if(isNaN(availHeight)){return false;}}
if(me.scrollParallel&&plan.tooNarrow){if(heightShrinkWrap){shrinkWrapParallelOverflow=true;}else{availHeight-=scrollbarHeight;plan.targetSize[heightName]-=scrollbarHeight;}}
if(isStretch){height=availHeight;}else{for(i=0;i<childItemsLength;i++){childContext=childItems[i];childMargins=(childContext.marginInfo||childContext.getMarginInfo())[heightName];if(!(percentagePerpendicular=childContext.percentagePerpendicular)){childHeight=childContext.getProp(heightName);}else{++hasPercentageSizes;if(heightShrinkWrap){continue;}else{childHeight=percentagePerpendicular*availHeight-childMargins;childHeight=childContext[names.setHeight](childHeight);}}
if(!heightShrinkWrap&&constrain&&childContext[names.heightModel].shrinkWrap&&childHeight>availHeight){childContext.invalidate({before:onBeforeInvalidateChild,after:onAfterInvalidateChild,layout:me,childHeight:availHeight,names:names});ownerContext.state.parallelDone=false;}
if(isNaN(maxHeight=mmax(maxHeight,childHeight+childMargins,childContext.target[names.minHeight]||0))){return false;}}
if(shrinkWrapParallelOverflow){maxHeight+=scrollbarHeight;ownerContext[names.hasOverflowX]=true;ownerContext.target.componentLayout[names.setHeightInDom]=true;ownerContext[names.invalidateScrollX]=(Ext.isStrict&&Ext.isIE8);}
stretchMaxPartner=ownerContext.stretchMaxPartner;if(stretchMaxPartner){ownerContext.setProp('maxChildHeight',maxHeight);stretchMaxChildren=stretchMaxPartner.childItems;if(stretchMaxChildren&&stretchMaxChildren.length){maxHeight=mmax(maxHeight,stretchMaxPartner.getProp('maxChildHeight'));if(isNaN(maxHeight)){return false;}}}
ownerContext[names.setContentHeight](maxHeight+me.padding[heightName]+
ownerContext.targetContext.getPaddingInfo()[heightName]);if(shrinkWrapParallelOverflow){maxHeight-=scrollbarHeight;}
plan.maxSize=maxHeight;if(isStretchMax){height=maxHeight;}else if(isCenter||isBottom||hasPercentageSizes){if(constrain){height=heightShrinkWrap?maxHeight:availHeight;}else{height=heightShrinkWrap?maxHeight:mmax(availHeight,maxHeight);}
height-=ownerContext.innerCtContext.getBorderInfo()[heightName];}}
for(i=0;i<childItemsLength;i++){childContext=childItems[i];childMargins=childContext.marginInfo||childContext.getMarginInfo();childTop=top+childMargins[topName];if(isStretch){childContext[setHeightName](height-childMargins[heightName]);}else{percentagePerpendicular=childContext.percentagePerpendicular;if(heightShrinkWrap&&percentagePerpendicular){childMargins=childContext.marginInfo||childContext.getMarginInfo();childHeight=percentagePerpendicular*height-childMargins[heightName];childHeight=childContext.setHeight(childHeight);}
if(isCenter){diff=height-childContext.props[heightName];if(diff>0){childTop=top+Math.round(diff/2);}}else if(isBottom){childTop=mmax(0,height-childTop-childContext.props[heightName]);}}
childContext.setProp(topPositionName,childTop);}
return true;},onBeforeConstrainInvalidateChild:function(childContext,options){var heightModelName=options.names.heightModel;if(!childContext[heightModelName].constrainedMin){childContext[heightModelName]=Ext.layout.SizeModel.calculated;}},onAfterConstrainInvalidateChild:function(childContext,options){var names=options.names;childContext.setProp(names.top,0);if(childContext[names.heightModel].calculated){childContext[names.setHeight](options.childHeight);}},calculateStretchMax:function(ownerContext,names,plan){var me=this,heightName=names.height,widthName=names.width,childItems=ownerContext.childItems,length=childItems.length,height=plan.maxSize,onBeforeStretchMaxInvalidateChild=me.onBeforeStretchMaxInvalidateChild,onAfterStretchMaxInvalidateChild=me.onAfterStretchMaxInvalidateChild,childContext,props,i,childHeight;for(i=0;i<length;++i){childContext=childItems[i];props=childContext.props;childHeight=height-childContext.getMarginInfo()[heightName];if(childHeight!=props[heightName]||childContext[names.heightModel].constrained){childContext.invalidate({before:onBeforeStretchMaxInvalidateChild,after:onAfterStretchMaxInvalidateChild,layout:me,childWidth:props[widthName],childHeight:childHeight,childX:props.x,childY:props.y,names:names});}}},onBeforeStretchMaxInvalidateChild:function(childContext,options){var heightModelName=options.names.heightModel;if(!childContext[heightModelName].constrainedMax){childContext[heightModelName]=Ext.layout.SizeModel.calculated;}},onAfterStretchMaxInvalidateChild:function(childContext,options){var names=options.names,childHeight=options.childHeight,childWidth=options.childWidth;childContext.setProp('x',options.childX);childContext.setProp('y',options.childY);if(childContext[names.heightModel].calculated){childContext[names.setHeight](childHeight);}
if(childContext[names.widthModel].calculated){childContext[names.setWidth](childWidth);}},completeLayout:function(ownerContext){var me=this,names=ownerContext.boxNames,invalidateScrollX=ownerContext.invalidateScrollX,invalidateScrollY=ownerContext.invalidateScrollY,dom,el,overflowX,overflowY,styles;me.overflowHandler.completeLayout(ownerContext);if(invalidateScrollX||invalidateScrollY){el=me.getTarget();dom=el.dom;styles=dom.style;if(invalidateScrollX){overflowX=el.getStyle('overflowX');if(overflowX=='auto'){overflowX=styles.overflowX;styles.overflowX='scroll';}else{invalidateScrollX=false;}}
if(invalidateScrollY){overflowY=el.getStyle('overflowY');if(overflowY=='auto'){overflowY=styles.overflowY;styles.overflowY='scroll';}else{invalidateScrollY=false;}}
if(invalidateScrollX||invalidateScrollY){dom.scrollWidth;if(invalidateScrollX){styles.overflowX=overflowX;}
if(invalidateScrollY){styles.overflowY=overflowY;}}}
if(me.scrollParallel){me.owner.getTargetEl().dom[names.scrollLeft]=me.scrollPos;}},finishedLayout:function(ownerContext){this.overflowHandler.finishedLayout(ownerContext);this.callParent(arguments);if(Ext.isWebKit||Ext.isIE){this.targetEl.setWidth(ownerContext.innerCtContext.props.width);}},publishInnerCtSize:function(ownerContext,reservedSpace){var me=this,names=ownerContext.boxNames,heightName=names.height,widthName=names.width,align=ownerContext.boxOptions.align,dock=me.owner.dock,padding=me.padding,plan=ownerContext.state.boxPlan,targetSize=plan.targetSize,height=targetSize[heightName],innerCtContext=ownerContext.innerCtContext,innerCtWidth=(ownerContext.parallelSizeModel.shrinkWrap||(plan.tooNarrow&&me.scrollParallel)?ownerContext.state.contentWidth:targetSize[widthName])-(reservedSpace||0),innerCtHeight;if(align.stretch){innerCtHeight=height;}else{innerCtHeight=plan.maxSize+padding[names.top]+padding[names.bottom]+innerCtContext.getBorderInfo()[heightName];if(!ownerContext.perpendicularSizeModel.shrinkWrap&&(align.center||align.bottom)){innerCtHeight=Math.max(height,innerCtHeight);}}
innerCtContext[names.setWidth](innerCtWidth);innerCtContext[names.setHeight](innerCtHeight);if(isNaN(innerCtWidth+innerCtHeight)){me.done=false;}
if(plan.calculatedWidth&&(dock=='left'||dock=='right')){ownerContext.setWidth(plan.calculatedWidth,true,true);}},onRemove:function(comp){var me=this;me.callParent(arguments);if(me.overflowHandler){me.overflowHandler.onRemove(comp);}
if(comp.layoutMarginCap==me.id){delete comp.layoutMarginCap;}},initOverflowHandler:function(){var me=this,handler=me.overflowHandler,handlerType,constructor;if(typeof handler=='string'){handler={type:handler};}
handlerType='None';if(handler&&handler.type!==undefined){handlerType=handler.type;}
constructor=Ext.layout.container.boxOverflow[handlerType];if(constructor[me.type]){constructor=constructor[me.type];}
me.overflowHandler=Ext.create('Ext.layout.container.boxOverflow.'+handlerType,me,handler);},getRenderTarget:function(){return this.targetEl;},getElementTarget:function(){return this.innerCt;},calculateChildBox:Ext.deprecated(),calculateChildBoxes:Ext.deprecated(),updateChildBoxes:Ext.deprecated(),destroy:function(){Ext.destroy(this.innerCt,this.overflowHandler);this.callParent(arguments);}});Ext.define('Ext.layout.container.VBox',{alias:['layout.vbox'],extend:'Ext.layout.container.Box',alternateClassName:'Ext.layout.VBoxLayout',align:'left',constrainAlign:false,type:'vbox',direction:'vertical',horizontal:false,names:{lr:'tb',left:'top',leftCap:'Top',right:'bottom',position:'top',width:'height',contentWidth:'contentHeight',minWidth:'minHeight',maxWidth:'maxHeight',widthCap:'Height',widthModel:'heightModel',widthIndex:1,x:'y',scrollLeft:'scrollTop',overflowX:'overflowY',hasOverflowX:'hasOverflowY',invalidateScrollX:'invalidateScrollY',center:'center',top:'left',topPosition:'left',bottom:'right',height:'width',contentHeight:'contentWidth',minHeight:'minWidth',maxHeight:'maxWidth',heightCap:'Width',heightModel:'widthModel',heightIndex:0,y:'x',scrollTop:'scrollLeft',overflowY:'overflowX',hasOverflowY:'hasOverflowX',invalidateScrollY:'invalidateScrollX',getWidth:'getHeight',getHeight:'getWidth',setWidth:'setHeight',setHeight:'setWidth',gotWidth:'gotHeight',gotHeight:'gotWidth',setContentWidth:'setContentHeight',setContentHeight:'setContentWidth',setWidthInDom:'setHeightInDom',setHeightInDom:'setWidthInDom'},sizePolicy:{flex:{'':{readsWidth:0,readsHeight:0,setsWidth:0,setsHeight:1},stretch:{readsWidth:0,readsHeight:0,setsWidth:1,setsHeight:1},stretchmax:{readsWidth:1,readsHeight:0,setsWidth:1,setsHeight:1}},'':{readsWidth:0,readsHeight:0,setsWidth:0,setsHeight:0},stretch:{readsWidth:0,readsHeight:0,setsWidth:1,setsHeight:0},stretchmax:{readsWidth:1,readsHeight:0,setsWidth:1,setsHeight:0}}});Ext.define('Ext.layout.container.Accordion',{extend:'Ext.layout.container.VBox',alias:['layout.accordion'],alternateClassName:'Ext.layout.AccordionLayout',itemCls:[Ext.baseCSSPrefix+'box-item',Ext.baseCSSPrefix+'accordion-item'],align:'stretch',fill:true,titleCollapse:true,hideCollapseTool:false,collapseFirst:undefined,animate:true,activeOnTop:false,multi:false,defaultAnimatePolicy:{y:true,height:true},constructor:function(){var me=this;me.callParent(arguments);if(me.animate){me.animatePolicy=Ext.apply({},me.defaultAnimatePolicy);}else{me.animatePolicy=null;}},beforeRenderItems:function(items){var me=this,ln=items.length,i=0,owner=me.owner,collapseFirst=me.collapseFirst,hasCollapseFirst=Ext.isDefined(collapseFirst),expandedItem,comp;for(;i<ln;i++){comp=items[i];if(!comp.rendered){if(hasCollapseFirst){comp.collapseFirst=collapseFirst;}
if(me.hideCollapseTool){comp.hideCollapseTool=me.hideCollapseTool;comp.titleCollapse=true;}
else if(me.titleCollapse){comp.titleCollapse=me.titleCollapse;}
delete comp.hideHeader;delete comp.width;comp.collapsible=true;comp.title=comp.title||'&#160;';comp.addBodyCls(Ext.baseCSSPrefix+'accordion-body');if(!me.multi&&!me.hasExpanded){if(me.expandedItem!==undefined){comp.collapsed=true;}
else if(comp.hasOwnProperty('collapsed')&&comp.collapsed===false){me.expandedItem=i;}else{comp.collapsed=true;}
owner.mon(comp,{show:me.onComponentShow,beforeexpand:me.onComponentExpand,scope:me});}
if(me.fill){owner.mon(comp,{beforecollapse:me.onComponentCollapse,scope:me});}}}
expandedItem=me.expandedItem;if(!me.hasExpanded){if(expandedItem===undefined){if(ln){items[0].collapsed=false;}}else if(me.activeOnTop){expandedItem=items[expandedItem];expandedItem.collapsed=false;me.configureItem(expandedItem);owner.insert(0,expandedItem);}
me.hasExpanded=true;}},getItemsRenderTree:function(items){this.beforeRenderItems(items);return this.callParent(arguments);},renderItems:function(items,target){this.beforeRenderItems(items);this.callParent(arguments);},configureItem:function(item){this.callParent(arguments);item.animCollapse=item.border=false;if(this.fill){item.flex=1;}},onChildPanelRender:function(panel){panel.header.addCls(Ext.baseCSSPrefix+'accordion-hd');},beginLayout:function(ownerContext){this.callParent(arguments);this.updatePanelClasses(ownerContext);},updatePanelClasses:function(ownerContext){var children=ownerContext.visibleItems,ln=children.length,siblingCollapsed=true,i,child,header;for(i=0;i<ln;i++){child=children[i];header=child.header;header.addCls(Ext.baseCSSPrefix+'accordion-hd');if(siblingCollapsed){header.removeCls(Ext.baseCSSPrefix+'accordion-hd-sibling-expanded');}else{header.addCls(Ext.baseCSSPrefix+'accordion-hd-sibling-expanded');}
if(i+1==ln&&child.collapsed){header.addCls(Ext.baseCSSPrefix+'accordion-hd-last-collapsed');}else{header.removeCls(Ext.baseCSSPrefix+'accordion-hd-last-collapsed');}
siblingCollapsed=child.collapsed;}},onComponentExpand:function(toExpand){var me=this,owner=me.owner,multi=me.multi,animate=me.animate,moveToTop=!multi&&!me.animate&&me.activeOnTop,expanded,expandedCount,i,previousValue;if(!me.processing){me.processing=true;previousValue=owner.deferLayouts;owner.deferLayouts=true;expanded=multi?[]:owner.query('>panel:not([collapsed])');expandedCount=expanded.length;for(i=0;i<expandedCount;i++){expanded[i].collapse();}
if(moveToTop){Ext.suspendLayouts();owner.insert(0,toExpand);Ext.resumeLayouts();}
owner.deferLayouts=previousValue;me.processing=false;}},onComponentCollapse:function(comp){var me=this,owner=me.owner,toExpand,expanded,previousValue;if(me.owner.items.getCount()===1){return false;}
if(!me.processing){me.processing=true;previousValue=owner.deferLayouts;owner.deferLayouts=true;toExpand=comp.next()||comp.prev();if(me.multi){expanded=me.owner.query('>panel:not([collapsed])');if(expanded.length===1){toExpand.expand();}}else if(toExpand){toExpand.expand();}
owner.deferLayouts=previousValue;me.processing=false;}},onComponentShow:function(comp){this.onComponentExpand(comp);}});Ext.define('Ext.layout.container.HBox',{alias:['layout.hbox'],extend:'Ext.layout.container.Box',alternateClassName:'Ext.layout.HBoxLayout',align:'top',constrainAlign:false,type:'hbox',direction:'horizontal',horizontal:true,names:{lr:'lr',left:'left',leftCap:'Left',right:'right',position:'left',width:'width',contentWidth:'contentWidth',minWidth:'minWidth',maxWidth:'maxWidth',widthCap:'Width',widthModel:'widthModel',widthIndex:0,x:'x',scrollLeft:'scrollLeft',overflowX:'overflowX',hasOverflowX:'hasOverflowX',invalidateScrollX:'invalidateScrollX',center:'middle',top:'top',topPosition:'top',bottom:'bottom',height:'height',contentHeight:'contentHeight',minHeight:'minHeight',maxHeight:'maxHeight',heightCap:'Height',heightModel:'heightModel',heightIndex:1,y:'y',scrollTop:'scrollTop',overflowY:'overflowY',hasOverflowY:'hasOverflowY',invalidateScrollY:'invalidateScrollY',getWidth:'getWidth',getHeight:'getHeight',setWidth:'setWidth',setHeight:'setHeight',gotWidth:'gotWidth',gotHeight:'gotHeight',setContentWidth:'setContentWidth',setContentHeight:'setContentHeight',setWidthInDom:'setWidthInDom',setHeightInDom:'setHeightInDom'},sizePolicy:{flex:{'':{readsWidth:0,readsHeight:0,setsWidth:1,setsHeight:0},stretch:{readsWidth:0,readsHeight:0,setsWidth:1,setsHeight:1},stretchmax:{readsWidth:0,readsHeight:1,setsWidth:1,setsHeight:1}},'':{readsWidth:0,readsHeight:0,setsWidth:0,setsHeight:0},stretch:{readsWidth:0,readsHeight:0,setsWidth:0,setsHeight:1},stretchmax:{readsWidth:0,readsHeight:1,setsWidth:0,setsHeight:1}}});Ext.define('Ext.grid.ColumnLayout',{extend:'Ext.layout.container.HBox',alias:'layout.gridcolumn',type:'gridcolumn',reserveOffset:false,firstHeaderCls:Ext.baseCSSPrefix+'column-header-first',lastHeaderCls:Ext.baseCSSPrefix+'column-header-last',initLayout:function(){this.grid=this.owner.up('[scrollerOwner]');this.callParent();},beginLayout:function(ownerContext){var me=this,grid=me.grid,view=grid.view,i=0,items=me.getVisibleItems(),len=items.length,item;ownerContext.gridContext=ownerContext.context.getCmp(me.grid);if(grid.lockable){if(me.owner.up('tablepanel')===view.normalGrid){view=view.normalGrid.getView();}else{view=null;}}
me.callParent(arguments);for(;i<len;i++){item=items[i];item.removeCls([me.firstHeaderCls,me.lastHeaderCls]);item.el.setStyle({height:'auto'});item.titleEl.setStyle({height:'auto',paddingTop:''});}
if(len>0){items[0].addCls(me.firstHeaderCls);items[len-1].addCls(me.lastHeaderCls);}
if(!me.owner.isHeader&&Ext.getScrollbarSize().width&&!grid.collapsed&&view&&view.table.dom&&(view.autoScroll||view.overflowY)){ownerContext.viewContext=ownerContext.context.getCmp(view);}},roundFlex:function(width){return Math.floor(width);},calculate:function(ownerContext){var me=this,viewContext=ownerContext.viewContext,tableHeight,viewHeight;me.callParent(arguments);if(ownerContext.state.parallelDone){ownerContext.setProp('columnWidthsDone',true);}
if(viewContext&&!ownerContext.state.overflowAdjust.width&&!ownerContext.gridContext.heightModel.shrinkWrap){tableHeight=viewContext.tableContext.getProp('height');viewHeight=viewContext.getProp('height');if(isNaN(tableHeight+viewHeight)){me.done=false;}
else if(tableHeight>=viewHeight){ownerContext.gridContext.invalidate({after:function(){ownerContext.state.overflowAdjust={width:Ext.getScrollbarSize().width,height:0};}});}}},completeLayout:function(ownerContext){var me=this,owner=me.owner,state=ownerContext.state,needsInvalidate=false,calculated=me.sizeModels.calculated,childItems,len,i,childContext,item;me.callParent(arguments);if(!ownerContext.flexedItems.length&&!state.flexesCalculated&&owner.forceFit&&!owner.isHeader){childItems=ownerContext.childItems;len=childItems.length;for(i=0;i<len;i++){childContext=childItems[i];item=childContext.target;if(item.width){item.flex=ownerContext.childItems[i].flex=item.width;delete item.width;childContext.widthModel=calculated;needsInvalidate=true;}}
if(needsInvalidate){me.cacheFlexes(ownerContext);ownerContext.invalidate({state:{flexesCalculated:true}});}}},finalizeLayout:function(){var me=this,i=0,items,len,itemsHeight,owner=me.owner,titleEl=owner.titleEl;items=me.getVisibleItems();len=items.length;itemsHeight=owner.el.getViewSize().height;if(titleEl){itemsHeight-=titleEl.getHeight();}
for(;i<len;i++){items[i].setPadding(itemsHeight);}},publishInnerCtSize:function(ownerContext){var me=this,size=ownerContext.state.boxPlan.targetSize,cw=ownerContext.peek('contentWidth'),view;if((cw!=null)&&!me.owner.isHeader){size.width=cw;view=me.owner.ownerCt.view;if(view.autoScroll||view.overflowY){size.width+=Ext.getScrollbarSize().width;}}
return me.callParent(arguments);}});Ext.define('Ext.toolbar.Toolbar',{extend:'Ext.container.Container',requires:['Ext.toolbar.Fill','Ext.layout.container.HBox','Ext.layout.container.VBox'],uses:['Ext.toolbar.Separator'],alias:'widget.toolbar',alternateClassName:'Ext.Toolbar',isToolbar:true,baseCls:Ext.baseCSSPrefix+'toolbar',ariaRole:'toolbar',defaultType:'button',vertical:false,enableOverflow:false,menuTriggerCls:Ext.baseCSSPrefix+'toolbar-more-icon',trackMenus:true,itemCls:Ext.baseCSSPrefix+'toolbar-item',statics:{shortcuts:{'-':'tbseparator',' ':'tbspacer'},shortcutsHV:{0:{'->':{xtype:'tbfill',height:0}},1:{'->':{xtype:'tbfill',width:0}}}},initComponent:function(){var me=this;if(!me.layout&&me.enableOverflow){me.layout={overflowHandler:'Menu'};}
if(me.dock==='right'||me.dock==='left'){me.vertical=true;}
me.layout=Ext.applyIf(Ext.isString(me.layout)?{type:me.layout}:me.layout||{},{type:me.vertical?'vbox':'hbox',align:me.vertical?'stretchmax':'middle'});if(me.vertical){me.addClsWithUI('vertical');}
if(me.ui==='footer'){me.ignoreBorderManagement=true;}
me.callParent();me.addEvents('overflowchange');},getRefItems:function(deep){var me=this,items=me.callParent(arguments),layout=me.layout,handler;if(deep&&me.enableOverflow){handler=layout.overflowHandler;if(handler&&handler.menu){items=items.concat(handler.menu.getRefItems(deep));}}
return items;},lookupComponent:function(c){if(typeof c=='string'){var T=Ext.toolbar.Toolbar,shortcut=T.shortcutsHV[this.vertical?1:0][c]||T.shortcuts[c];if(typeof shortcut=='string'){c={xtype:shortcut};}else if(shortcut){c=Ext.apply({},shortcut);}else{c={xtype:'tbtext',text:c};}
this.applyDefaults(c);}
return this.callParent(arguments);},applyDefaults:function(c){if(!Ext.isString(c)){c=this.callParent(arguments);}
return c;},trackMenu:function(item,remove){if(this.trackMenus&&item.menu){var method=remove?'mun':'mon',me=this;me[method](item,'mouseover',me.onButtonOver,me);me[method](item,'menushow',me.onButtonMenuShow,me);me[method](item,'menuhide',me.onButtonMenuHide,me);}},constructButton:function(item){return item.events?item:Ext.widget(item.split?'splitbutton':this.defaultType,item);},onBeforeAdd:function(component){if(component.is('field')||(component.is('button')&&this.ui!='footer')){component.ui=component.ui+'-toolbar';}
if(component instanceof Ext.toolbar.Separator){component.setUI((this.vertical)?'vertical':'horizontal');}
this.callParent(arguments);},onAdd:function(component){this.callParent(arguments);this.trackMenu(component);},onRemove:function(c){this.callParent(arguments);this.trackMenu(c,true);},getChildItemsToDisable:function(){return this.items.getRange();},onButtonOver:function(btn){if(this.activeMenuBtn&&this.activeMenuBtn!=btn){this.activeMenuBtn.hideMenu();btn.showMenu();this.activeMenuBtn=btn;}},onButtonMenuShow:function(btn){this.activeMenuBtn=btn;},onButtonMenuHide:function(btn){delete this.activeMenuBtn;}});Ext.define('Ext.panel.AbstractPanel',{extend:'Ext.container.Container',mixins:{docking:'Ext.container.DockingContainer'},requires:['Ext.util.MixedCollection','Ext.Element','Ext.toolbar.Toolbar'],baseCls:Ext.baseCSSPrefix+'panel',isPanel:true,componentLayout:'dock',childEls:['body'],renderTpl:['{% this.renderDockedItems(out,values,0); %}',(Ext.isIE6||Ext.isIE7||Ext.isIEQuirks)?'<div></div>':'','<div id="{id}-body" class="{baseCls}-body<tpl if="bodyCls"> {bodyCls}</tpl>',' {baseCls}-body-{ui}<tpl if="uiCls">','<tpl for="uiCls"> {parent.baseCls}-body-{parent.ui}-{.}</tpl>','</tpl>"<tpl if="bodyStyle"> style="{bodyStyle}"</tpl>>','{%this.renderContainer(out,values);%}','</div>','{% this.renderDockedItems(out,values,1); %}'],bodyPosProps:{x:'x',y:'y'},border:true,emptyArray:[],initComponent:function(){var me=this;if(me.frame&&me.border&&me.bodyBorder===undefined){me.bodyBorder=false;}
if(me.frame&&me.border&&(me.bodyBorder===false||me.bodyBorder===0)){me.manageBodyBorders=true;}
me.callParent();},beforeDestroy:function(){this.destroyDockedItems();this.callParent();},initItems:function(){this.callParent();this.initDockingItems();},initRenderData:function(){var me=this,data=me.callParent();me.initBodyStyles();me.protoBody.writeTo(data);delete me.protoBody;return data;},getComponent:function(comp){var component=this.callParent(arguments);if(component===undefined&&!Ext.isNumber(comp)){component=this.getDockedComponent(comp);}
return component;},getProtoBody:function(){var me=this,body=me.protoBody;if(!body){me.protoBody=body=new Ext.util.ProtoElement({cls:me.bodyCls,style:me.bodyStyle,clsProp:'bodyCls',styleProp:'bodyStyle',styleIsText:true});}
return body;},initBodyStyles:function(){var me=this,body=me.getProtoBody(),Element=Ext.Element;if(me.bodyPadding!==undefined){body.setStyle('padding',Element.unitizeBox((me.bodyPadding===true)?5:me.bodyPadding));}
if(me.frame&&me.bodyBorder){if(!Ext.isNumber(me.bodyBorder)){me.bodyBorder=1;}
body.setStyle('border-width',Element.unitizeBox(me.bodyBorder));}},getCollapsedDockedItems:function(){var me=this;return me.header===false||me.collapseMode=='placeholder'?me.emptyArray:[me.getReExpander()];},setBodyStyle:function(style,value){var me=this,body=me.rendered?me.body:me.getProtoBody();if(Ext.isFunction(style)){style=style();}
if(arguments.length==1){if(Ext.isString(style)){style=Ext.Element.parseStyles(style);}
body.setStyle(style);}else{body.setStyle(style,value);}
return me;},addBodyCls:function(cls){var me=this,body=me.rendered?me.body:me.getProtoBody();body.addCls(cls);return me;},removeBodyCls:function(cls){var me=this,body=me.rendered?me.body:me.getProtoBody();body.removeCls(cls);return me;},addUIClsToElement:function(cls){var me=this,result=me.callParent(arguments);me.addBodyCls([Ext.baseCSSPrefix+cls,me.baseCls+'-body-'+cls,me.baseCls+'-body-'+me.ui+'-'+cls]);return result;},removeUIClsFromElement:function(cls){var me=this,result=me.callParent(arguments);me.removeBodyCls([Ext.baseCSSPrefix+cls,me.baseCls+'-body-'+cls,me.baseCls+'-body-'+me.ui+'-'+cls]);return result;},addUIToElement:function(){var me=this;me.callParent(arguments);me.addBodyCls(me.baseCls+'-body-'+me.ui);},removeUIFromElement:function(){var me=this;me.callParent(arguments);me.removeBodyCls(me.baseCls+'-body-'+me.ui);},getTargetEl:function(){return this.body;},getRefItems:function(deep){var items=this.callParent(arguments);return this.getDockingRefItems(deep,items);},setupRenderTpl:function(renderTpl){this.callParent(arguments);this.setupDockingRenderTpl(renderTpl);}});Ext.define('Ext.dd.ScrollManager',{singleton:true,requires:['Ext.dd.DragDropManager'],constructor:function(){var ddm=Ext.dd.DragDropManager;ddm.fireEvents=Ext.Function.createSequence(ddm.fireEvents,this.onFire,this);ddm.stopDrag=Ext.Function.createSequence(ddm.stopDrag,this.onStop,this);this.doScroll=Ext.Function.bind(this.doScroll,this);this.ddmInstance=ddm;this.els={};this.dragEl=null;this.proc={};},onStop:function(e){var sm=Ext.dd.ScrollManager;sm.dragEl=null;sm.clearProc();},triggerRefresh:function(){if(this.ddmInstance.dragCurrent){this.ddmInstance.refreshCache(this.ddmInstance.dragCurrent.groups);}},doScroll:function(){if(this.ddmInstance.dragCurrent){var proc=this.proc,procEl=proc.el,ddScrollConfig=proc.el.ddScrollConfig,inc=ddScrollConfig?ddScrollConfig.increment:this.increment;if(!this.animate){if(procEl.scroll(proc.dir,inc)){this.triggerRefresh();}}else{procEl.scroll(proc.dir,inc,true,this.animDuration,this.triggerRefresh);}}},clearProc:function(){var proc=this.proc;if(proc.id){clearInterval(proc.id);}
proc.id=0;proc.el=null;proc.dir="";},startProc:function(el,dir){this.clearProc();this.proc.el=el;this.proc.dir=dir;var group=el.ddScrollConfig?el.ddScrollConfig.ddGroup:undefined,freq=(el.ddScrollConfig&&el.ddScrollConfig.frequency)?el.ddScrollConfig.frequency:this.frequency;if(group===undefined||this.ddmInstance.dragCurrent.ddGroup==group){this.proc.id=setInterval(this.doScroll,freq);}},onFire:function(e,isDrop){if(isDrop||!this.ddmInstance.dragCurrent){return;}
if(!this.dragEl||this.dragEl!=this.ddmInstance.dragCurrent){this.dragEl=this.ddmInstance.dragCurrent;this.refreshCache();}
var xy=e.getXY(),pt=e.getPoint(),proc=this.proc,els=this.els,id,el,r,c;for(id in els){el=els[id];r=el._region;c=el.ddScrollConfig?el.ddScrollConfig:this;if(r&&r.contains(pt)&&el.isScrollable()){if(r.bottom-pt.y<=c.vthresh){if(proc.el!=el){this.startProc(el,"down");}
return;}else if(r.right-pt.x<=c.hthresh){if(proc.el!=el){this.startProc(el,"left");}
return;}else if(pt.y-r.top<=c.vthresh){if(proc.el!=el){this.startProc(el,"up");}
return;}else if(pt.x-r.left<=c.hthresh){if(proc.el!=el){this.startProc(el,"right");}
return;}}}
this.clearProc();},register:function(el){if(Ext.isArray(el)){for(var i=0,len=el.length;i<len;i++){this.register(el[i]);}}else{el=Ext.get(el);this.els[el.id]=el;}},unregister:function(el){if(Ext.isArray(el)){for(var i=0,len=el.length;i<len;i++){this.unregister(el[i]);}}else{el=Ext.get(el);delete this.els[el.id];}},vthresh:25,hthresh:25,increment:100,frequency:500,animate:true,animDuration:0.4,ddGroup:undefined,refreshCache:function(){var els=this.els,id;for(id in els){if(typeof els[id]=='object'){els[id]._region=els[id].getRegion();}}}});Ext.define('Ext.layout.component.field.Text',{extend:'Ext.layout.component.field.Field',alias:'layout.textfield',requires:['Ext.util.TextMetrics'],type:'textfield',canGrowWidth:true,beginLayoutCycle:function(ownerContext){this.callParent(arguments);if(ownerContext.heightModel.shrinkWrap){ownerContext.inputContext.el.setStyle('height','');}},measureContentWidth:function(ownerContext){var me=this,owner=me.owner,width=me.callParent(arguments),inputContext=ownerContext.inputContext,inputEl,value,calcWidth,max,min;if(owner.grow&&me.canGrowWidth&&!ownerContext.state.growHandled){inputEl=owner.inputEl;value=Ext.util.Format.htmlEncode(inputEl.dom.value||(owner.hasFocus?'':owner.emptyText)||'');value+=owner.growAppend;calcWidth=inputEl.getTextWidth(value)+inputContext.getFrameInfo().width;max=owner.growMax;min=Math.min(max,width);max=Math.max(owner.growMin,max,min);calcWidth=Ext.Number.constrain(calcWidth,owner.growMin,max);inputContext.setWidth(calcWidth);ownerContext.state.growHandled=true;inputContext.domBlock(me,'width');width=NaN;}
return width;},publishInnerHeight:function(ownerContext,height){ownerContext.inputContext.setHeight(height-this.measureLabelErrorHeight(ownerContext));},beginLayoutFixed:function(ownerContext,width,suffix){var me=this,ieInputWidthAdjustment=me.ieInputWidthAdjustment;if(ieInputWidthAdjustment){me.owner.bodyEl.setStyle('padding-right',ieInputWidthAdjustment+'px');if(suffix==='px'){width-=ieInputWidthAdjustment;}}
me.callParent(arguments);}});Ext.define('Ext.form.field.Text',{extend:'Ext.form.field.Base',alias:'widget.textfield',requires:['Ext.form.field.VTypes','Ext.layout.component.field.Text'],alternateClassName:['Ext.form.TextField','Ext.form.Text'],size:20,growMin:30,growMax:800,growAppend:'W',allowBlank:true,allowOnlyWhitespace:true,minLength:0,maxLength:Number.MAX_VALUE,minLengthText:'The minimum length for this field is {0}',maxLengthText:'The maximum length for this field is {0}',blankText:'This field is required',regexText:'',emptyCls:Ext.baseCSSPrefix+'form-empty-field',requiredCls:Ext.baseCSSPrefix+'form-required-field',componentLayout:'textfield',valueContainsPlaceholder:false,initComponent:function(){var me=this;if(me.allowOnlyWhitespace===false){me.allowBlank=false;}
me.callParent();me.addEvents('autosize','keydown','keyup','keypress');me.addStateEvents('change');me.setGrowSizePolicy();},setGrowSizePolicy:function(){if(this.grow){this.shrinkWrap|=1;}},initEvents:function(){var me=this,el=me.inputEl;me.callParent();if(me.selectOnFocus||me.emptyText){me.mon(el,'mousedown',me.onMouseDown,me);}
if(me.maskRe||(me.vtype&&me.disableKeyFilter!==true&&(me.maskRe=Ext.form.field.VTypes[me.vtype+'Mask']))){me.mon(el,'keypress',me.filterKeys,me);}
if(me.enableKeyEvents){me.mon(el,{scope:me,keyup:me.onKeyUp,keydown:me.onKeyDown,keypress:me.onKeyPress});}},isEqual:function(value1,value2){return this.isEqualAsString(value1,value2);},onChange:function(){this.callParent();this.autoSize();},getSubTplData:function(){var me=this,value=me.getRawValue(),isEmpty=me.emptyText&&value.length<1,maxLength=me.maxLength,placeholder;if(me.enforceMaxLength){if(maxLength===Number.MAX_VALUE){maxLength=undefined;}}else{maxLength=undefined;}
if(isEmpty){if(Ext.supports.Placeholder){placeholder=me.emptyText;}else{value=me.emptyText;me.valueContainsPlaceholder=true;}}
return Ext.apply(me.callParent(),{maxLength:maxLength,readOnly:me.readOnly,placeholder:placeholder,value:value,fieldCls:me.fieldCls+((isEmpty&&(placeholder||value))?' '+me.emptyCls:'')+(me.allowBlank?'':' '+me.requiredCls)});},afterRender:function(){this.autoSize();this.callParent();},onMouseDown:function(e){var me=this;if(!me.hasFocus){me.mon(me.inputEl,'mouseup',Ext.emptyFn,me,{single:true,preventDefault:true});}},processRawValue:function(value){var me=this,stripRe=me.stripCharsRe,newValue;if(stripRe){newValue=value.replace(stripRe,'');if(newValue!==value){me.setRawValue(newValue);value=newValue;}}
return value;},onDisable:function(){this.callParent();if(Ext.isIE){this.inputEl.dom.unselectable='on';}},onEnable:function(){this.callParent();if(Ext.isIE){this.inputEl.dom.unselectable='';}},onKeyDown:function(e){this.fireEvent('keydown',this,e);},onKeyUp:function(e){this.fireEvent('keyup',this,e);},onKeyPress:function(e){this.fireEvent('keypress',this,e);},reset:function(){this.callParent();this.applyEmptyText();},applyEmptyText:function(){var me=this,emptyText=me.emptyText,isEmpty;if(me.rendered&&emptyText){isEmpty=me.getRawValue().length<1&&!me.hasFocus;if(Ext.supports.Placeholder){me.inputEl.dom.placeholder=emptyText;}else if(isEmpty){me.setRawValue(emptyText);me.valueContainsPlaceholder=true;}
if(isEmpty){me.inputEl.addCls(me.emptyCls);}
me.autoSize();}},afterFirstLayout:function(){this.callParent();if(Ext.isIE&&this.disabled){var el=this.inputEl;if(el){el.dom.unselectable='on';}}},beforeFocus:function(){var me=this,inputEl=me.inputEl,emptyText=me.emptyText,isEmpty;me.callParent(arguments);if((emptyText&&!Ext.supports.Placeholder)&&(inputEl.dom.value===me.emptyText&&me.valueContainsPlaceholder)){me.setRawValue('');isEmpty=true;inputEl.removeCls(me.emptyCls);me.valueContainsPlaceholder=false;}else if(Ext.supports.Placeholder){me.inputEl.removeCls(me.emptyCls);}
if(me.selectOnFocus||isEmpty){inputEl.dom.select();}},onFocus:function(){var me=this;me.callParent(arguments);if(me.emptyText){me.autoSize();}},postBlur:function(){this.callParent(arguments);this.applyEmptyText();},filterKeys:function(e){if(e.ctrlKey&&!e.altKey){return;}
var key=e.getKey(),charCode=String.fromCharCode(e.getCharCode());if((Ext.isGecko||Ext.isOpera)&&(e.isNavKeyPress()||key===e.BACKSPACE||(key===e.DELETE&&e.button===-1))){return;}
if((!Ext.isGecko&&!Ext.isOpera)&&e.isSpecialKey()&&!charCode){return;}
if(!this.maskRe.test(charCode)){e.stopEvent();}},getState:function(){return this.addPropertyToState(this.callParent(),'value');},applyState:function(state){this.callParent(arguments);if(state.hasOwnProperty('value')){this.setValue(state.value);}},getRawValue:function(){var me=this,v=me.callParent();if(v===me.emptyText&&me.valueContainsPlaceholder){v='';}
return v;},setValue:function(value){var me=this,inputEl=me.inputEl;if(inputEl&&me.emptyText&&!Ext.isEmpty(value)){inputEl.removeCls(me.emptyCls);me.valueContainsPlaceholder=false;}
me.callParent(arguments);me.applyEmptyText();return me;},getErrors:function(value){var me=this,errors=me.callParent(arguments),validator=me.validator,emptyText=me.emptyText,allowBlank=me.allowBlank,vtype=me.vtype,vtypes=Ext.form.field.VTypes,regex=me.regex,format=Ext.String.format,msg,trimmed;value=value||me.processRawValue(me.getRawValue());if(Ext.isFunction(validator)){msg=validator.call(me,value);if(msg!==true){errors.push(msg);}}
trimmed=me.allowOnlyWhitespace?value:Ext.String.trim(value);if(trimmed.length<1||(value===me.emptyText&&me.valueContainsPlaceholder)){if(!allowBlank){errors.push(me.blankText);}
return errors;}
if(value.length<me.minLength){errors.push(format(me.minLengthText,me.minLength));}
if(value.length>me.maxLength){errors.push(format(me.maxLengthText,me.maxLength));}
if(vtype){if(!vtypes[vtype](value,me)){errors.push(me.vtypeText||vtypes[vtype+'Text']);}}
if(regex&&!regex.test(value)){errors.push(me.regexText||me.invalidText);}
return errors;},selectText:function(start,end){var me=this,v=me.getRawValue(),doFocus=true,el=me.inputEl.dom,undef,range;if(v.length>0){start=start===undef?0:start;end=end===undef?v.length:end;if(el.setSelectionRange){el.setSelectionRange(start,end);}
else if(el.createTextRange){range=el.createTextRange();range.moveStart('character',start);range.moveEnd('character',end-v.length);range.select();}
doFocus=Ext.isGecko||Ext.isOpera;}
if(doFocus){me.focus();}},autoSize:function(){var me=this;if(me.grow&&me.rendered){me.autoSizing=true;me.updateLayout();}},afterComponentLayout:function(){var me=this,width;me.callParent(arguments);if(me.autoSizing){width=me.inputEl.getWidth();if(width!==me.lastInputWidth){me.fireEvent('autosize',me,width);me.lastInputWidth=width;delete me.autoSizing;}}}});Ext.define('Ext.form.field.Trigger',{extend:'Ext.form.field.Text',alias:['widget.triggerfield','widget.trigger'],requires:['Ext.dom.Helper','Ext.util.ClickRepeater','Ext.layout.component.field.Trigger'],alternateClassName:['Ext.form.TriggerField','Ext.form.TwinTriggerField','Ext.form.Trigger'],childEls:[{name:'triggerCell',select:'.'+Ext.baseCSSPrefix+'trigger-cell'},{name:'triggerEl',select:'.'+Ext.baseCSSPrefix+'form-trigger'},'triggerWrap','inputCell'],triggerBaseCls:Ext.baseCSSPrefix+'form-trigger',triggerWrapCls:Ext.baseCSSPrefix+'form-trigger-wrap',triggerNoEditCls:Ext.baseCSSPrefix+'trigger-noedit',hideTrigger:false,editable:true,readOnly:false,repeatTriggerClick:false,autoSize:Ext.emptyFn,monitorTab:true,mimicing:false,triggerIndexRe:/trigger-index-(\d+)/,componentLayout:'triggerfield',initComponent:function(){this.wrapFocusCls=this.triggerWrapCls+'-focus';this.callParent(arguments);},getSubTplMarkup:function(){var me=this,field=me.callParent(arguments);return'<table id="'+me.id+'-triggerWrap" class="'+Ext.baseCSSPrefix+'form-trigger-wrap" cellpadding="0" cellspacing="0"><tbody><tr>'+'<td id="'+me.id+'-inputCell" class="'+Ext.baseCSSPrefix+'form-trigger-input-cell">'+field+'</td>'+
me.getTriggerMarkup()+'</tr></tbody></table>';},getSubTplData:function(){var me=this,data=me.callParent(),readOnly=me.readOnly===true,editable=me.editable!==false;return Ext.apply(data,{editableCls:(readOnly||!editable)?' '+me.triggerNoEditCls:'',readOnly:!editable||readOnly});},getLabelableRenderData:function(){var me=this,triggerWrapCls=me.triggerWrapCls,result=me.callParent(arguments);return Ext.applyIf(result,{triggerWrapCls:triggerWrapCls,triggerMarkup:me.getTriggerMarkup()});},getTriggerMarkup:function(){var me=this,i=0,hideTrigger=(me.readOnly||me.hideTrigger),triggerCls,triggerBaseCls=me.triggerBaseCls,triggerConfigs=[];if(!me.trigger1Cls){me.trigger1Cls=me.triggerCls;}
for(i=0;(triggerCls=me['trigger'+(i+1)+'Cls'])||i<1;i++){triggerConfigs.push({tag:'td',valign:'top',cls:Ext.baseCSSPrefix+'trigger-cell',style:'width:'+me.triggerWidth+(hideTrigger?'px;display:none':'px'),cn:{cls:[Ext.baseCSSPrefix+'trigger-index-'+i,triggerBaseCls,triggerCls].join(' '),role:'button'}});}
triggerConfigs[i-1].cn.cls+=' '+triggerBaseCls+'-last';return Ext.DomHelper.markup(triggerConfigs);},disableCheck:function(){return!this.disabled;},beforeRender:function(){var me=this,triggerBaseCls=me.triggerBaseCls,tempEl;if(!me.triggerWidth){tempEl=Ext.resetElement.createChild({style:'position: absolute;',cls:Ext.baseCSSPrefix+'form-trigger'});Ext.form.field.Trigger.prototype.triggerWidth=tempEl.getWidth();tempEl.remove();}
me.callParent();if(triggerBaseCls!=Ext.baseCSSPrefix+'form-trigger'){me.addChildEls({name:'triggerEl',select:'.'+triggerBaseCls});}
me.lastTriggerStateFlags=me.getTriggerStateFlags();},onRender:function(){var me=this;me.callParent(arguments);me.doc=Ext.getDoc();me.initTrigger();me.triggerEl.unselectable();},getTriggerWidth:function(){var me=this,totalTriggerWidth=0;if(me.triggerWrap&&!me.hideTrigger&&!me.readOnly){totalTriggerWidth=me.triggerEl.getCount()*me.triggerWidth;}
return totalTriggerWidth;},setHideTrigger:function(hideTrigger){if(hideTrigger!=this.hideTrigger){this.hideTrigger=hideTrigger;this.updateLayout();}},setEditable:function(editable){if(editable!=this.editable){this.editable=editable;this.updateLayout();}},setReadOnly:function(readOnly){var me=this,old=me.readOnly;me.callParent(arguments);if(readOnly!=old){me.updateLayout();}},initTrigger:function(){var me=this,triggerWrap=me.triggerWrap,triggerEl=me.triggerEl,disableCheck=me.disableCheck,els,eLen,el,e,idx;if(me.repeatTriggerClick){me.triggerRepeater=new Ext.util.ClickRepeater(triggerWrap,{preventDefault:true,handler:me.onTriggerWrapClick,listeners:{mouseup:me.onTriggerWrapMouseup,scope:me},scope:me});}else{me.mon(triggerWrap,{click:me.onTriggerWrapClick,mouseup:me.onTriggerWrapMouseup,scope:me});}
triggerEl.setVisibilityMode(Ext.Element.DISPLAY);triggerEl.addClsOnOver(me.triggerBaseCls+'-over',disableCheck,me);els=triggerEl.elements;eLen=els.length;for(e=0;e<eLen;e++){el=els[e];idx=e+1;el.addClsOnOver(me['trigger'+(idx)+'Cls']+'-over',disableCheck,me);el.addClsOnClick(me['trigger'+(idx)+'Cls']+'-click',disableCheck,me);}
triggerEl.addClsOnClick(me.triggerBaseCls+'-click',disableCheck,me);},onDestroy:function(){var me=this;Ext.destroyMembers(me,'triggerRepeater','triggerWrap','triggerEl');delete me.doc;me.callParent();},onFocus:function(){var me=this;me.callParent(arguments);if(!me.mimicing){me.bodyEl.addCls(me.wrapFocusCls);me.mimicing=true;me.mon(me.doc,'mousedown',me.mimicBlur,me,{delay:10});if(me.monitorTab){me.on('specialkey',me.checkTab,me);}}},checkTab:function(me,e){if(!this.ignoreMonitorTab&&e.getKey()==e.TAB){this.triggerBlur();}},getTriggerStateFlags:function(){var me=this,state=0;if(me.readOnly){state+=1;}
if(me.editable){state+=2;}
if(me.hideTrigger){state+=4;}
return state;},onBlur:Ext.emptyFn,mimicBlur:function(e){if(!this.isDestroyed&&!this.bodyEl.contains(e.target)&&this.validateBlur(e)){this.triggerBlur(e);}},triggerBlur:function(e){var me=this;me.mimicing=false;me.mun(me.doc,'mousedown',me.mimicBlur,me);if(me.monitorTab&&me.inputEl){me.un('specialkey',me.checkTab,me);}
Ext.form.field.Trigger.superclass.onBlur.call(me,e);if(me.bodyEl){me.bodyEl.removeCls(me.wrapFocusCls);}},validateBlur:function(e){return true;},onTriggerWrapClick:function(){var me=this,targetEl,match,triggerClickMethod,event;event=arguments[me.triggerRepeater?1:0];if(event&&!me.readOnly&&!me.disabled){targetEl=event.getTarget('.'+me.triggerBaseCls,null);match=targetEl&&targetEl.className.match(me.triggerIndexRe);if(match){triggerClickMethod=me['onTrigger'+(parseInt(match[1],10)+1)+'Click']||me.onTriggerClick;if(triggerClickMethod){triggerClickMethod.call(me,event);}}}},onTriggerWrapMouseup:Ext.emptyFn,onTriggerClick:Ext.emptyFn});Ext.define('Ext.form.field.Picker',{extend:'Ext.form.field.Trigger',alias:'widget.pickerfield',alternateClassName:'Ext.form.Picker',requires:['Ext.util.KeyNav'],matchFieldWidth:true,pickerAlign:'tl-bl?',openCls:Ext.baseCSSPrefix+'pickerfield-open',editable:true,initComponent:function(){this.callParent();this.addEvents('expand','collapse','select');},initEvents:function(){var me=this;me.callParent();me.keyNav=new Ext.util.KeyNav(me.inputEl,{down:me.onDownArrow,esc:{handler:me.onEsc,scope:me,defaultEventAction:false},scope:me,forceKeyDown:true});if(!me.editable){me.mon(me.inputEl,'click',me.onTriggerClick,me);}
if(Ext.isGecko){me.inputEl.dom.setAttribute('autocomplete','off');}},onEsc:function(e){var me=this;if(me.isExpanded){me.collapse();e.stopEvent();}},onDownArrow:function(e){if(!this.isExpanded){this.onTriggerClick();}},expand:function(){var me=this,bodyEl,picker,collapseIf;if(me.rendered&&!me.isExpanded&&!me.isDestroyed){bodyEl=me.bodyEl;picker=me.getPicker();collapseIf=me.collapseIf;picker.show();me.isExpanded=true;me.alignPicker();bodyEl.addCls(me.openCls);me.mon(Ext.getDoc(),{mousewheel:collapseIf,mousedown:collapseIf,scope:me});Ext.EventManager.onWindowResize(me.alignPicker,me);me.fireEvent('expand',me);me.onExpand();}},onExpand:Ext.emptyFn,alignPicker:function(){var me=this,picker=me.getPicker();if(me.isExpanded){if(me.matchFieldWidth){picker.setWidth(me.bodyEl.getWidth());}
if(picker.isFloating()){me.doAlign();}}},doAlign:function(){var me=this,picker=me.picker,aboveSfx='-above',isAbove;me.picker.alignTo(me.inputEl,me.pickerAlign,me.pickerOffset);isAbove=picker.el.getY()<me.inputEl.getY();me.bodyEl[isAbove?'addCls':'removeCls'](me.openCls+aboveSfx);picker[isAbove?'addCls':'removeCls'](picker.baseCls+aboveSfx);},collapse:function(){if(this.isExpanded&&!this.isDestroyed){var me=this,openCls=me.openCls,picker=me.picker,doc=Ext.getDoc(),collapseIf=me.collapseIf,aboveSfx='-above';picker.hide();me.isExpanded=false;me.bodyEl.removeCls([openCls,openCls+aboveSfx]);picker.el.removeCls(picker.baseCls+aboveSfx);doc.un('mousewheel',collapseIf,me);doc.un('mousedown',collapseIf,me);Ext.EventManager.removeResizeListener(me.alignPicker,me);me.fireEvent('collapse',me);me.onCollapse();}},onCollapse:Ext.emptyFn,collapseIf:function(e){var me=this;if(!me.isDestroyed&&!e.within(me.bodyEl,false,true)&&!e.within(me.picker.el,false,true)&&!me.isEventWithinPickerLoadMask(e)){me.collapse();}},getPicker:function(){var me=this;return me.picker||(me.picker=me.createPicker());},createPicker:Ext.emptyFn,onTriggerClick:function(){var me=this;if(!me.readOnly&&!me.disabled){if(me.isExpanded){me.collapse();}else{me.expand();}
me.inputEl.focus();}},triggerBlur:function(){var picker=this.picker;this.callParent(arguments);if(picker&&picker.isVisible()){picker.hide();}},mimicBlur:function(e){var me=this,picker=me.picker;if(!picker||!e.within(picker.el,false,true)&&!me.isEventWithinPickerLoadMask(e)){me.callParent(arguments);}},onDestroy:function(){var me=this,picker=me.picker;Ext.EventManager.removeResizeListener(me.alignPicker,me);Ext.destroy(me.keyNav);if(picker){delete picker.pickerField;picker.destroy();}
me.callParent();},isEventWithinPickerLoadMask:function(e){var loadMask=this.picker.loadMask;return loadMask?e.within(loadMask.maskEl,false,true)||e.within(loadMask.el,false,true):false;}});Ext.define('Ext.layout.component.field.TextArea',{extend:'Ext.layout.component.field.Text',alias:'layout.textareafield',type:'textareafield',canGrowWidth:false,naturalSizingProp:'cols',beginLayout:function(ownerContext){this.callParent(arguments);ownerContext.target.inputEl.setStyle('height','');},measureContentHeight:function(ownerContext){var me=this,owner=me.owner,height=me.callParent(arguments),inputContext,inputEl,value,max,curWidth,calcHeight;if(owner.grow&&!ownerContext.state.growHandled){inputContext=ownerContext.inputContext;inputEl=owner.inputEl;curWidth=inputEl.getWidth(true);value=Ext.util.Format.htmlEncode(inputEl.dom.value)||'&#160;';value+=owner.growAppend;value=value.replace(/\n/g,'<br/>');calcHeight=Ext.util.TextMetrics.measure(inputEl,value,curWidth).height+
inputContext.getBorderInfo().height+inputContext.getPaddingInfo().height;calcHeight=Ext.Number.constrain(calcHeight,owner.growMin,owner.growMax);inputContext.setHeight(calcHeight);ownerContext.state.growHandled=true;inputContext.domBlock(me,'height');height=NaN;}
return height;}});Ext.define('Ext.form.field.TextArea',{extend:'Ext.form.field.Text',alias:['widget.textareafield','widget.textarea'],alternateClassName:'Ext.form.TextArea',requires:['Ext.XTemplate','Ext.layout.component.field.TextArea','Ext.util.DelayedTask'],fieldSubTpl:['<textarea id="{id}" {inputAttrTpl}','<tpl if="name"> name="{name}"</tpl>','<tpl if="rows"> rows="{rows}" </tpl>','<tpl if="cols"> cols="{cols}" </tpl>','<tpl if="placeholder"> placeholder="{placeholder}"</tpl>','<tpl if="size"> size="{size}"</tpl>','<tpl if="maxLength !== undefined"> maxlength="{maxLength}"</tpl>','<tpl if="readOnly"> readonly="readonly"</tpl>','<tpl if="disabled"> disabled="disabled"</tpl>','<tpl if="tabIdx"> tabIndex="{tabIdx}"</tpl>',' class="{fieldCls} {typeCls}" ','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',' autocomplete="off">\n','<tpl if="value">{[Ext.util.Format.htmlEncode(values.value)]}</tpl>','</textarea>',{disableFormats:true}],growMin:60,growMax:1000,growAppend:'\n-',cols:20,rows:4,enterIsSpecial:false,preventScrollbars:false,componentLayout:'textareafield',setGrowSizePolicy:Ext.emptyFn,returnRe:/\r/g,getSubTplData:function(){var me=this,fieldStyle=me.getFieldStyle(),ret=me.callParent();if(me.grow){if(me.preventScrollbars){ret.fieldStyle=(fieldStyle||'')+';overflow:hidden;height:'+me.growMin+'px';}}
Ext.applyIf(ret,{cols:me.cols,rows:me.rows});return ret;},afterRender:function(){var me=this;me.callParent(arguments);me.needsMaxCheck=me.enforceMaxLength&&me.maxLength!==Number.MAX_VALUE&&!Ext.supports.TextAreaMaxLength;if(me.needsMaxCheck){me.inputEl.on('paste',me.onPaste,me);}},transformRawValue:function(value){return this.stripReturns(value);},transformOriginalValue:function(value){return this.stripReturns(value);},getValue:function(){return this.stripReturns(this.callParent());},valueToRaw:function(value){value=this.stripReturns(value);return this.callParent([value]);},stripReturns:function(value){if(value){value=value.replace(this.returnRe,'');}
return value;},onPaste:function(e){var me=this;if(!me.pasteTask){me.pasteTask=new Ext.util.DelayedTask(me.pasteCheck,me);}
me.pasteTask.delay(1);},pasteCheck:function(){var me=this,value=me.getValue(),max=me.maxLength;if(value.length>max){value=value.substr(0,max);me.setValue(value);}},fireKey:function(e){var me=this,key=e.getKey(),value;if(e.isSpecialKey()&&(me.enterIsSpecial||(key!==e.ENTER||e.hasModifier()))){me.fireEvent('specialkey',me,e);}
if(me.needsMaxCheck&&key!==e.BACKSPACE&&key!==e.DELETE&&!e.isNavKeyPress()&&!me.isCutCopyPasteSelectAll(e,key)){value=me.getValue();if(value.length>=me.maxLength){e.stopEvent();}}},isCutCopyPasteSelectAll:function(e,key){if(e.CTRL){return key===e.A||key===e.C||key===e.V||key===e.X;}
return false;},autoSize:function(){var me=this,height;if(me.grow&&me.rendered){me.updateLayout();height=me.inputEl.getHeight();if(height!==me.lastInputHeight){me.fireEvent('autosize',me,height);me.lastInputHeight=height;}}},initAria:function(){this.callParent(arguments);this.getActionEl().dom.setAttribute('aria-multiline',true);},beforeDestroy:function(){var task=this.pasteTask;if(task){task.cancel();this.pasteTask=null;}
this.callParent();}});Ext.define('Ext.layout.component.ProgressBar',{alias:['layout.progressbar'],extend:'Ext.layout.component.Auto',type:'progressbar',beginLayout:function(ownerContext){var me=this,i,textEls;me.callParent(arguments);if(!ownerContext.textEls){textEls=me.owner.textEl;if(textEls.isComposite){ownerContext.textEls=[];textEls=textEls.elements;for(i=textEls.length;i--;){ownerContext.textEls[i]=ownerContext.getEl(Ext.get(textEls[i]));}}else{ownerContext.textEls=[ownerContext.getEl('textEl')];}}},calculate:function(ownerContext){var me=this,i,textEls,width;me.callParent(arguments);if(Ext.isNumber(width=ownerContext.getProp('width'))){width-=ownerContext.getBorderInfo().width;textEls=ownerContext.textEls;for(i=textEls.length;i--;){textEls[i].setWidth(width);}}else{me.done=false;}}});Ext.define('Ext.ProgressBar',{extend:'Ext.Component',alias:'widget.progressbar',requires:['Ext.Template','Ext.CompositeElement','Ext.TaskManager','Ext.layout.component.ProgressBar'],uses:['Ext.fx.Anim'],baseCls:Ext.baseCSSPrefix+'progress',animate:false,text:'',waitTimer:null,childEls:['bar'],renderTpl:['<tpl if="internalText">','<div class="{baseCls}-text {baseCls}-text-back">{text}</div>','</tpl>','<div id="{id}-bar" class="{baseCls}-bar" style="width:{percentage}%">','<tpl if="internalText">','<div class="{baseCls}-text">','<div>{text}</div>','</div>','</tpl>','</div>'],componentLayout:'progressbar',initComponent:function(){this.callParent();this.addEvents("update");},initRenderData:function(){var me=this;return Ext.apply(me.callParent(),{internalText:!me.hasOwnProperty('textEl'),text:me.text||'&#160;',percentage:me.value?me.value*100:0});},onRender:function(){var me=this;me.callParent(arguments);if(me.textEl){me.textEl=Ext.get(me.textEl);me.updateText(me.text);}
else{me.textEl=me.el.select('.'+me.baseCls+'-text');}},updateProgress:function(value,text,animate){var me=this,oldValue=me.value;me.value=value||0;if(text){me.updateText(text);}
if(me.rendered&&!me.isDestroyed){if(animate===true||(animate!==false&&me.animate)){me.bar.stopAnimation();me.bar.animate(Ext.apply({from:{width:(oldValue*100)+'%'},to:{width:(me.value*100)+'%'}},me.animate));}else{me.bar.setStyle('width',(me.value*100)+'%');}}
me.fireEvent('update',me,me.value,text);return me;},updateText:function(text){var me=this;me.text=text;if(me.rendered){me.textEl.update(me.text);}
return me;},applyText:function(text){this.updateText(text);},getText:function(){return this.text;},wait:function(o){var me=this,scope;if(!me.waitTimer){scope=me;o=o||{};me.updateText(o.text);me.waitTimer=Ext.TaskManager.start({run:function(i){var inc=o.increment||10;i-=1;me.updateProgress(((((i+inc)%inc)+1)*(100/inc))*0.01,null,o.animate);},interval:o.interval||1000,duration:o.duration,onStop:function(){if(o.fn){o.fn.apply(o.scope||me);}
me.reset();},scope:scope});}
return me;},isWaiting:function(){return this.waitTimer!==null;},reset:function(hide){var me=this;me.updateProgress(0);me.clearTimer();if(hide===true){me.hide();}
return me;},clearTimer:function(){var me=this;if(me.waitTimer){me.waitTimer.onStop=null;Ext.TaskManager.stop(me.waitTimer);me.waitTimer=null;}},onDestroy:function(){var me=this,bar=me.bar;me.clearTimer();if(me.rendered){if(me.textEl.isComposite){me.textEl.clear();}
Ext.destroyMembers(me,'textEl','progressBar');if(bar&&me.animate){bar.stopAnimation();}}
me.callParent();}});Ext.define('Ext.toolbar.TextItem',{extend:'Ext.toolbar.Item',requires:['Ext.XTemplate'],alias:'widget.tbtext',alternateClassName:'Ext.Toolbar.TextItem',text:'',renderTpl:'{text}',baseCls:Ext.baseCSSPrefix+'toolbar-text',beforeRender:function(){var me=this;me.callParent();Ext.apply(me.renderData,{text:me.text});},setText:function(text){var me=this;me.text=text;if(me.rendered){me.el.update(text);me.updateLayout();}}});Ext.define('Ext.dd.DragDrop',{requires:['Ext.dd.DragDropManager'],constructor:function(id,sGroup,config){if(id){this.init(id,sGroup,config);}},id:null,config:null,dragElId:null,handleElId:null,invalidHandleTypes:null,invalidHandleIds:null,invalidHandleClasses:null,startPageX:0,startPageY:0,groups:null,locked:false,lock:function(){this.locked=true;},moveOnly:false,unlock:function(){this.locked=false;},isTarget:true,padding:null,_domRef:null,__ygDragDrop:true,constrainX:false,constrainY:false,minX:0,maxX:0,minY:0,maxY:0,maintainOffset:false,xTicks:null,yTicks:null,primaryButtonOnly:true,available:false,hasOuterHandles:false,b4StartDrag:function(x,y){},startDrag:function(x,y){},b4Drag:function(e){},onDrag:function(e){},onDragEnter:function(e,id){},b4DragOver:function(e){},onDragOver:function(e,id){},b4DragOut:function(e){},onDragOut:function(e,id){},b4DragDrop:function(e){},onDragDrop:function(e,id){},onInvalidDrop:function(e){},b4EndDrag:function(e){},endDrag:function(e){},b4MouseDown:function(e){},onMouseDown:function(e){},onMouseUp:function(e){},onAvailable:function(){},defaultPadding:{left:0,right:0,top:0,bottom:0},constrainTo:function(constrainTo,pad,inContent){if(Ext.isNumber(pad)){pad={left:pad,right:pad,top:pad,bottom:pad};}
pad=pad||this.defaultPadding;var b=Ext.get(this.getEl()).getBox(),ce=Ext.get(constrainTo),s=ce.getScroll(),c,cd=ce.dom,xy,topSpace,leftSpace;if(cd==document.body){c={x:s.left,y:s.top,width:Ext.Element.getViewWidth(),height:Ext.Element.getViewHeight()};}else{xy=ce.getXY();c={x:xy[0],y:xy[1],width:cd.clientWidth,height:cd.clientHeight};}
topSpace=b.y-c.y;leftSpace=b.x-c.x;this.resetConstraints();this.setXConstraint(leftSpace-(pad.left||0),c.width-leftSpace-b.width-(pad.right||0),this.xTickSize);this.setYConstraint(topSpace-(pad.top||0),c.height-topSpace-b.height-(pad.bottom||0),this.yTickSize);},getEl:function(){if(!this._domRef){this._domRef=Ext.getDom(this.id);}
return this._domRef;},getDragEl:function(){return Ext.getDom(this.dragElId);},init:function(id,sGroup,config){this.initTarget(id,sGroup,config);Ext.EventManager.on(this.id,"mousedown",this.handleMouseDown,this);},initTarget:function(id,sGroup,config){this.config=config||{};this.DDMInstance=Ext.dd.DragDropManager;this.groups={};if(typeof id!=="string"){id=Ext.id(id);}
this.id=id;this.addToGroup((sGroup)?sGroup:"default");this.handleElId=id;this.setDragElId(id);this.invalidHandleTypes={A:"A"};this.invalidHandleIds={};this.invalidHandleClasses=[];this.applyConfig();this.handleOnAvailable();},applyConfig:function(){this.padding=this.config.padding||[0,0,0,0];this.isTarget=(this.config.isTarget!==false);this.maintainOffset=(this.config.maintainOffset);this.primaryButtonOnly=(this.config.primaryButtonOnly!==false);},handleOnAvailable:function(){this.available=true;this.resetConstraints();this.onAvailable();},setPadding:function(iTop,iRight,iBot,iLeft){if(!iRight&&0!==iRight){this.padding=[iTop,iTop,iTop,iTop];}else if(!iBot&&0!==iBot){this.padding=[iTop,iRight,iTop,iRight];}else{this.padding=[iTop,iRight,iBot,iLeft];}},setInitPosition:function(diffX,diffY){var el=this.getEl(),dx,dy,p;if(!this.DDMInstance.verifyEl(el)){return;}
dx=diffX||0;dy=diffY||0;p=Ext.Element.getXY(el);this.initPageX=p[0]-dx;this.initPageY=p[1]-dy;this.lastPageX=p[0];this.lastPageY=p[1];this.setStartPosition(p);},setStartPosition:function(pos){var p=pos||Ext.Element.getXY(this.getEl());this.deltaSetXY=null;this.startPageX=p[0];this.startPageY=p[1];},addToGroup:function(sGroup){this.groups[sGroup]=true;this.DDMInstance.regDragDrop(this,sGroup);},removeFromGroup:function(sGroup){if(this.groups[sGroup]){delete this.groups[sGroup];}
this.DDMInstance.removeDDFromGroup(this,sGroup);},setDragElId:function(id){this.dragElId=id;},setHandleElId:function(id){if(typeof id!=="string"){id=Ext.id(id);}
this.handleElId=id;this.DDMInstance.regHandle(this.id,id);},setOuterHandleElId:function(id){if(typeof id!=="string"){id=Ext.id(id);}
Ext.EventManager.on(id,"mousedown",this.handleMouseDown,this);this.setHandleElId(id);this.hasOuterHandles=true;},unreg:function(){Ext.EventManager.un(this.id,"mousedown",this.handleMouseDown,this);this._domRef=null;this.DDMInstance._remove(this);},destroy:function(){this.unreg();},isLocked:function(){return(this.DDMInstance.isLocked()||this.locked);},handleMouseDown:function(e,oDD){if(this.primaryButtonOnly&&e.button!=0){return;}
if(this.isLocked()){return;}
this.DDMInstance.refreshCache(this.groups);if(this.hasOuterHandles||this.DDMInstance.isOverTarget(e.getPoint(),this)){if(this.clickValidator(e)){this.setStartPosition();this.b4MouseDown(e);this.onMouseDown(e);this.DDMInstance.handleMouseDown(e,this);this.DDMInstance.stopEvent(e);}}},clickValidator:function(e){var target=e.getTarget();return(this.isValidHandleChild(target)&&(this.id==this.handleElId||this.DDMInstance.handleWasClicked(target,this.id)));},addInvalidHandleType:function(tagName){var type=tagName.toUpperCase();this.invalidHandleTypes[type]=type;},addInvalidHandleId:function(id){if(typeof id!=="string"){id=Ext.id(id);}
this.invalidHandleIds[id]=id;},addInvalidHandleClass:function(cssClass){this.invalidHandleClasses.push(cssClass);},removeInvalidHandleType:function(tagName){var type=tagName.toUpperCase();delete this.invalidHandleTypes[type];},removeInvalidHandleId:function(id){if(typeof id!=="string"){id=Ext.id(id);}
delete this.invalidHandleIds[id];},removeInvalidHandleClass:function(cssClass){for(var i=0,len=this.invalidHandleClasses.length;i<len;++i){if(this.invalidHandleClasses[i]==cssClass){delete this.invalidHandleClasses[i];}}},isValidHandleChild:function(node){var valid=true,nodeName,i,len;try{nodeName=node.nodeName.toUpperCase();}catch(e){nodeName=node.nodeName;}
valid=valid&&!this.invalidHandleTypes[nodeName];valid=valid&&!this.invalidHandleIds[node.id];for(i=0,len=this.invalidHandleClasses.length;valid&&i<len;++i){valid=!Ext.fly(node).hasCls(this.invalidHandleClasses[i]);}
return valid;},setXTicks:function(iStartX,iTickSize){this.xTicks=[];this.xTickSize=iTickSize;var tickMap={},i;for(i=this.initPageX;i>=this.minX;i=i-iTickSize){if(!tickMap[i]){this.xTicks[this.xTicks.length]=i;tickMap[i]=true;}}
for(i=this.initPageX;i<=this.maxX;i=i+iTickSize){if(!tickMap[i]){this.xTicks[this.xTicks.length]=i;tickMap[i]=true;}}
Ext.Array.sort(this.xTicks,this.DDMInstance.numericSort);},setYTicks:function(iStartY,iTickSize){this.yTicks=[];this.yTickSize=iTickSize;var tickMap={},i;for(i=this.initPageY;i>=this.minY;i=i-iTickSize){if(!tickMap[i]){this.yTicks[this.yTicks.length]=i;tickMap[i]=true;}}
for(i=this.initPageY;i<=this.maxY;i=i+iTickSize){if(!tickMap[i]){this.yTicks[this.yTicks.length]=i;tickMap[i]=true;}}
Ext.Array.sort(this.yTicks,this.DDMInstance.numericSort);},setXConstraint:function(iLeft,iRight,iTickSize){this.leftConstraint=iLeft;this.rightConstraint=iRight;this.minX=this.initPageX-iLeft;this.maxX=this.initPageX+iRight;if(iTickSize){this.setXTicks(this.initPageX,iTickSize);}
this.constrainX=true;},clearConstraints:function(){this.constrainX=false;this.constrainY=false;this.clearTicks();},clearTicks:function(){this.xTicks=null;this.yTicks=null;this.xTickSize=0;this.yTickSize=0;},setYConstraint:function(iUp,iDown,iTickSize){this.topConstraint=iUp;this.bottomConstraint=iDown;this.minY=this.initPageY-iUp;this.maxY=this.initPageY+iDown;if(iTickSize){this.setYTicks(this.initPageY,iTickSize);}
this.constrainY=true;},resetConstraints:function(){if(this.initPageX||this.initPageX===0){var dx=(this.maintainOffset)?this.lastPageX-this.initPageX:0,dy=(this.maintainOffset)?this.lastPageY-this.initPageY:0;this.setInitPosition(dx,dy);}else{this.setInitPosition();}
if(this.constrainX){this.setXConstraint(this.leftConstraint,this.rightConstraint,this.xTickSize);}
if(this.constrainY){this.setYConstraint(this.topConstraint,this.bottomConstraint,this.yTickSize);}},getTick:function(val,tickArray){if(!tickArray){return val;}else if(tickArray[0]>=val){return tickArray[0];}else{var i,len,next,diff1,diff2;for(i=0,len=tickArray.length;i<len;++i){next=i+1;if(tickArray[next]&&tickArray[next]>=val){diff1=val-tickArray[i];diff2=tickArray[next]-val;return(diff2>diff1)?tickArray[i]:tickArray[next];}}
return tickArray[tickArray.length-1];}},toString:function(){return("DragDrop "+this.id);}});Ext.define('Ext.dd.DD',{extend:'Ext.dd.DragDrop',requires:['Ext.dd.DragDropManager'],constructor:function(id,sGroup,config){if(id){this.init(id,sGroup,config);}},scroll:true,autoOffset:function(iPageX,iPageY){var x=iPageX-this.startPageX,y=iPageY-this.startPageY;this.setDelta(x,y);},setDelta:function(iDeltaX,iDeltaY){this.deltaX=iDeltaX;this.deltaY=iDeltaY;},setDragElPos:function(iPageX,iPageY){var el=this.getDragEl();this.alignElWithMouse(el,iPageX,iPageY);},alignElWithMouse:function(el,iPageX,iPageY){var oCoord=this.getTargetCoord(iPageX,iPageY),fly=el.dom?el:Ext.fly(el,'_dd'),elSize=fly.getSize(),EL=Ext.Element,vpSize,aCoord,newLeft,newTop;if(!this.deltaSetXY){vpSize=this.cachedViewportSize={width:EL.getDocumentWidth(),height:EL.getDocumentHeight()};aCoord=[Math.max(0,Math.min(oCoord.x,vpSize.width-elSize.width)),Math.max(0,Math.min(oCoord.y,vpSize.height-elSize.height))];fly.setXY(aCoord);newLeft=fly.getLocalX();newTop=fly.getLocalY();this.deltaSetXY=[newLeft-oCoord.x,newTop-oCoord.y];}else{vpSize=this.cachedViewportSize;fly.setLeftTop(Math.max(0,Math.min(oCoord.x+this.deltaSetXY[0],vpSize.width-elSize.width)),Math.max(0,Math.min(oCoord.y+this.deltaSetXY[1],vpSize.height-elSize.height)));}
this.cachePosition(oCoord.x,oCoord.y);this.autoScroll(oCoord.x,oCoord.y,el.offsetHeight,el.offsetWidth);return oCoord;},cachePosition:function(iPageX,iPageY){if(iPageX){this.lastPageX=iPageX;this.lastPageY=iPageY;}else{var aCoord=Ext.Element.getXY(this.getEl());this.lastPageX=aCoord[0];this.lastPageY=aCoord[1];}},autoScroll:function(x,y,h,w){if(this.scroll){var clientH=Ext.Element.getViewHeight(),clientW=Ext.Element.getViewWidth(),st=this.DDMInstance.getScrollTop(),sl=this.DDMInstance.getScrollLeft(),bot=h+y,right=w+x,toBot=(clientH+st-y-this.deltaY),toRight=(clientW+sl-x-this.deltaX),thresh=40,scrAmt=(document.all)?80:30;if(bot>clientH&&toBot<thresh){window.scrollTo(sl,st+scrAmt);}
if(y<st&&st>0&&y-st<thresh){window.scrollTo(sl,st-scrAmt);}
if(right>clientW&&toRight<thresh){window.scrollTo(sl+scrAmt,st);}
if(x<sl&&sl>0&&x-sl<thresh){window.scrollTo(sl-scrAmt,st);}}},getTargetCoord:function(iPageX,iPageY){var x=iPageX-this.deltaX,y=iPageY-this.deltaY;if(this.constrainX){if(x<this.minX){x=this.minX;}
if(x>this.maxX){x=this.maxX;}}
if(this.constrainY){if(y<this.minY){y=this.minY;}
if(y>this.maxY){y=this.maxY;}}
x=this.getTick(x,this.xTicks);y=this.getTick(y,this.yTicks);return{x:x,y:y};},applyConfig:function(){this.callParent();this.scroll=(this.config.scroll!==false);},b4MouseDown:function(e){this.autoOffset(e.getPageX(),e.getPageY());},b4Drag:function(e){this.setDragElPos(e.getPageX(),e.getPageY());},toString:function(){return("DD "+this.id);}});Ext.define('Ext.dd.DDProxy',{extend:'Ext.dd.DD',statics:{dragElId:"ygddfdiv"},constructor:function(id,sGroup,config){if(id){this.init(id,sGroup,config);this.initFrame();}},resizeFrame:true,centerFrame:false,createFrame:function(){var self=this,body=document.body,div,s;if(!body||!body.firstChild){setTimeout(function(){self.createFrame();},50);return;}
div=this.getDragEl();if(!div){div=document.createElement("div");div.id=this.dragElId;s=div.style;s.position="absolute";s.visibility="hidden";s.cursor="move";s.border="2px solid #aaa";s.zIndex=999;body.insertBefore(div,body.firstChild);}},initFrame:function(){this.createFrame();},applyConfig:function(){this.callParent();this.resizeFrame=(this.config.resizeFrame!==false);this.centerFrame=(this.config.centerFrame);this.setDragElId(this.config.dragElId||Ext.dd.DDProxy.dragElId);},showFrame:function(iPageX,iPageY){var el=this.getEl(),dragEl=this.getDragEl(),s=dragEl.style;this._resizeProxy();if(this.centerFrame){this.setDelta(Math.round(parseInt(s.width,10)/2),Math.round(parseInt(s.height,10)/2));}
this.setDragElPos(iPageX,iPageY);Ext.fly(dragEl).show();},_resizeProxy:function(){if(this.resizeFrame){var el=this.getEl();Ext.fly(this.getDragEl()).setSize(el.offsetWidth,el.offsetHeight);}},b4MouseDown:function(e){var x=e.getPageX(),y=e.getPageY();this.autoOffset(x,y);this.setDragElPos(x,y);},b4StartDrag:function(x,y){this.showFrame(x,y);},b4EndDrag:function(e){Ext.fly(this.getDragEl()).hide();},endDrag:function(e){var lel=this.getEl(),del=this.getDragEl();del.style.visibility="";this.beforeMove();lel.style.visibility="hidden";Ext.dd.DDM.moveToEl(lel,del);del.style.visibility="hidden";lel.style.visibility="";this.afterDrag();},beforeMove:function(){},afterDrag:function(){},toString:function(){return("DDProxy "+this.id);}});Ext.define('Ext.dd.DragSource',{extend:'Ext.dd.DDProxy',requires:['Ext.dd.StatusProxy','Ext.dd.DragDropManager'],dropAllowed:Ext.baseCSSPrefix+'dd-drop-ok',dropNotAllowed:Ext.baseCSSPrefix+'dd-drop-nodrop',animRepair:true,repairHighlightColor:'c3daf9',constructor:function(el,config){this.el=Ext.get(el);if(!this.dragData){this.dragData={};}
Ext.apply(this,config);if(!this.proxy){this.proxy=new Ext.dd.StatusProxy({id:this.el.id+'-drag-status-proxy',animRepair:this.animRepair});}
this.callParent([this.el.dom,this.ddGroup||this.group,{dragElId:this.proxy.id,resizeFrame:false,isTarget:false,scroll:this.scroll===true}]);this.dragging=false;},getDragData:function(e){return this.dragData;},onDragEnter:function(e,id){var target=Ext.dd.DragDropManager.getDDById(id),status;this.cachedTarget=target;if(this.beforeDragEnter(target,e,id)!==false){if(target.isNotifyTarget){status=target.notifyEnter(this,e,this.dragData);this.proxy.setStatus(status);}else{this.proxy.setStatus(this.dropAllowed);}
if(this.afterDragEnter){this.afterDragEnter(target,e,id);}}},beforeDragEnter:function(target,e,id){return true;},onDragOver:function(e,id){var target=this.cachedTarget||Ext.dd.DragDropManager.getDDById(id),status;if(this.beforeDragOver(target,e,id)!==false){if(target.isNotifyTarget){status=target.notifyOver(this,e,this.dragData);this.proxy.setStatus(status);}
if(this.afterDragOver){this.afterDragOver(target,e,id);}}},beforeDragOver:function(target,e,id){return true;},onDragOut:function(e,id){var target=this.cachedTarget||Ext.dd.DragDropManager.getDDById(id);if(this.beforeDragOut(target,e,id)!==false){if(target.isNotifyTarget){target.notifyOut(this,e,this.dragData);}
this.proxy.reset();if(this.afterDragOut){this.afterDragOut(target,e,id);}}
this.cachedTarget=null;},beforeDragOut:function(target,e,id){return true;},onDragDrop:function(e,id){var target=this.cachedTarget||Ext.dd.DragDropManager.getDDById(id);if(this.beforeDragDrop(target,e,id)!==false){if(target.isNotifyTarget){if(target.notifyDrop(this,e,this.dragData)!==false){this.onValidDrop(target,e,id);}else{this.onInvalidDrop(target,e,id);}}else{this.onValidDrop(target,e,id);}
if(this.afterDragDrop){this.afterDragDrop(target,e,id);}}
delete this.cachedTarget;},beforeDragDrop:function(target,e,id){return true;},onValidDrop:function(target,e,id){this.hideProxy();if(this.afterValidDrop){this.afterValidDrop(target,e,id);}},getRepairXY:function(e,data){return this.el.getXY();},onInvalidDrop:function(target,e,id){if(!e){e=target;target=null;id=e.getTarget().id;}
this.beforeInvalidDrop(target,e,id);if(this.cachedTarget){if(this.cachedTarget.isNotifyTarget){this.cachedTarget.notifyOut(this,e,this.dragData);}
this.cacheTarget=null;}
this.proxy.repair(this.getRepairXY(e,this.dragData),this.afterRepair,this);if(this.afterInvalidDrop){this.afterInvalidDrop(e,id);}},afterRepair:function(){var me=this;if(Ext.enableFx){me.el.highlight(me.repairHighlightColor);}
me.dragging=false;},beforeInvalidDrop:function(target,e,id){return true;},handleMouseDown:function(e){if(this.dragging){return;}
var data=this.getDragData(e);if(data&&this.onBeforeDrag(data,e)!==false){this.dragData=data;this.proxy.stop();this.callParent(arguments);}},onBeforeDrag:function(data,e){return true;},onStartDrag:Ext.emptyFn,alignElWithMouse:function(){this.proxy.ensureAttachedToBody(true);return this.callParent(arguments);},startDrag:function(x,y){this.proxy.reset();this.proxy.hidden=false;this.dragging=true;this.proxy.update("");this.onInitDrag(x,y);this.proxy.show();},onInitDrag:function(x,y){var clone=this.el.dom.cloneNode(true);clone.id=Ext.id();this.proxy.update(clone);this.onStartDrag(x,y);return true;},getProxy:function(){return this.proxy;},hideProxy:function(){this.proxy.hide();this.proxy.reset(true);this.dragging=false;},triggerCacheRefresh:function(){Ext.dd.DDM.refreshCache(this.groups);},b4EndDrag:function(e){},endDrag:function(e){this.onEndDrag(this.dragData,e);},onEndDrag:function(data,e){},autoOffset:function(x,y){this.setDelta(-12,-20);},destroy:function(){this.callParent();Ext.destroy(this.proxy);}});Ext.define('Ext.panel.DD',{extend:'Ext.dd.DragSource',requires:['Ext.panel.Proxy'],constructor:function(panel,cfg){var me=this;me.panel=panel;me.dragData={panel:panel};me.panelProxy=new Ext.panel.Proxy(panel,cfg);me.proxy=me.panelProxy.proxy;me.callParent([panel.el,cfg]);me.setupEl(panel);},setupEl:function(panel){var me=this,header=panel.header,el=panel.body;if(header){me.setHandleElId(header.id);el=header.el;}
if(el){el.setStyle('cursor','move');me.scroll=false;}else{panel.on('boxready',me.setupEl,me,{single:true});}},showFrame:Ext.emptyFn,startDrag:Ext.emptyFn,b4StartDrag:function(x,y){this.panelProxy.show();},b4MouseDown:function(e){var x=e.getPageX(),y=e.getPageY();this.autoOffset(x,y);},onInitDrag:function(x,y){this.onStartDrag(x,y);return true;},createFrame:Ext.emptyFn,getDragEl:function(e){return this.panelProxy.ghost.el.dom;},endDrag:function(e){this.panelProxy.hide();this.panel.saveState();},autoOffset:function(x,y){x-=this.startPageX;y-=this.startPageY;this.setDelta(x,y);},onInvalidDrop:function(target,e,id){var me=this;me.beforeInvalidDrop(target,e,id);if(me.cachedTarget){if(me.cachedTarget.isNotifyTarget){me.cachedTarget.notifyOut(me,e,me.dragData);}
me.cacheTarget=null;}
if(me.afterInvalidDrop){me.afterInvalidDrop(e,id);}}});Ext.define('Ext.panel.Panel',{extend:'Ext.panel.AbstractPanel',requires:['Ext.panel.Header','Ext.fx.Anim','Ext.util.KeyMap','Ext.panel.DD','Ext.XTemplate','Ext.layout.component.Dock','Ext.util.Memento'],alias:'widget.panel',alternateClassName:'Ext.Panel',collapsedCls:'collapsed',animCollapse:Ext.enableFx,minButtonWidth:75,collapsed:false,collapseFirst:true,hideCollapseTool:false,titleCollapse:false,floatable:true,collapsible:false,closable:false,closeAction:'destroy',placeholderCollapseHideMode:Ext.Element.VISIBILITY,preventHeader:false,header:undefined,headerPosition:'top',frame:false,frameHeader:true,titleAlign:'left',manageHeight:true,initComponent:function(){var me=this;me.addEvents('beforeclose','close',"beforeexpand","beforecollapse","expand","collapse",'titlechange','iconchange','iconclschange','float','unfloat');if(me.collapsible){this.addStateEvents(['expand','collapse']);}
if(me.unstyled){me.setUI('plain');}
if(me.frame){me.setUI(me.ui+'-framed');}
me.bridgeToolbars();me.callParent();me.collapseDirection=me.collapseDirection||me.headerPosition||Ext.Component.DIRECTION_TOP;me.hiddenOnCollapse=new Ext.dom.CompositeElement();},beforeDestroy:function(){var me=this;Ext.destroy(me.placeholder,me.ghostPanel,me.dd);me.callParent();},initAria:function(){this.callParent();this.initHeaderAria();},getFocusEl:function(){return this.el;},initHeaderAria:function(){var me=this,el=me.el,header=me.header;if(el&&header){el.dom.setAttribute('aria-labelledby',header.titleCmp.id);}},getHeader:function(){return this.header;},setTitle:function(newTitle){var me=this,oldTitle=me.title,header=me.header,reExpander=me.reExpander,placeholder=me.placeholder;me.title=newTitle;if(header){if(header.isHeader){header.setTitle(newTitle);}else{header.title=newTitle;}}else{me.updateHeader();}
if(reExpander){reExpander.setTitle(newTitle);}
if(placeholder&&placeholder.setTitle){placeholder.setTitle(newTitle);}
me.fireEvent('titlechange',me,newTitle,oldTitle);},setIconCls:function(newIconCls){var me=this,oldIconCls=me.iconCls,header=me.header,placeholder=me.placeholder;me.iconCls=newIconCls;if(header){if(header.isHeader){header.setIconCls(newIconCls);}else{header.iconCls=newIconCls;}}else{me.updateHeader();}
if(placeholder&&placeholder.setIconCls){placeholder.setIconCls(newIconCls);}
me.fireEvent('iconclschange',me,newIconCls,oldIconCls);},setIcon:function(newIcon){var me=this,oldIcon=me.icon,header=me.header,placeholder=me.placeholder;me.icon=newIcon;if(header){if(header.isHeader){header.setIcon(newIcon);}else{header.icon=newIcon;}}else{me.updateHeader();}
if(placeholder&&placeholder.setIcon){placeholder.setIcon(newIcon);}
me.fireEvent('iconchange',me,newIcon,oldIcon);},bridgeToolbars:function(){var me=this,docked=[],fbar,fbarDefaults,minButtonWidth=me.minButtonWidth;function initToolbar(toolbar,pos,useButtonAlign){if(Ext.isArray(toolbar)){toolbar={xtype:'toolbar',items:toolbar};}
else if(!toolbar.xtype){toolbar.xtype='toolbar';}
toolbar.dock=pos;if(pos=='left'||pos=='right'){toolbar.vertical=true;}
if(useButtonAlign){toolbar.layout=Ext.applyIf(toolbar.layout||{},{pack:{left:'start',center:'center'}[me.buttonAlign]||'end'});}
return toolbar;}
if(me.tbar){docked.push(initToolbar(me.tbar,'top'));me.tbar=null;}
if(me.bbar){docked.push(initToolbar(me.bbar,'bottom'));me.bbar=null;}
if(me.buttons){me.fbar=me.buttons;me.buttons=null;}
if(me.fbar){fbar=initToolbar(me.fbar,'bottom',true);fbar.ui='footer';if(minButtonWidth){fbarDefaults=fbar.defaults;fbar.defaults=function(config){var defaults=fbarDefaults||{};if((!config.xtype||config.xtype==='button'||(config.isComponent&&config.isXType('button')))&&!('minWidth'in defaults)){defaults=Ext.apply({minWidth:minButtonWidth},defaults);}
return defaults;};}
docked.push(fbar);me.fbar=null;}
if(me.lbar){docked.push(initToolbar(me.lbar,'left'));me.lbar=null;}
if(me.rbar){docked.push(initToolbar(me.rbar,'right'));me.rbar=null;}
if(me.dockedItems){if(!Ext.isArray(me.dockedItems)){me.dockedItems=[me.dockedItems];}
me.dockedItems=me.dockedItems.concat(docked);}else{me.dockedItems=docked;}},isPlaceHolderCollapse:function(){return this.collapseMode=='placeholder';},onBoxReady:function(){this.callParent();if(this.collapsed){this.setHiddenDocked();}},beforeRender:function(){var me=this,wasCollapsed;me.callParent();me.initTools();if(!(me.preventHeader||(me.header===false))){me.updateHeader();}
if(me.collapsed){if(me.isPlaceHolderCollapse()){me.hidden=true;me.preventCollapseFire=true;me.placeholderCollapse();delete me.preventCollapseFire;wasCollapsed=me.collapsed;me.collapsed=false;}else{me.beginCollapse();me.addClsWithUI(me.collapsedCls);}}
if(wasCollapsed){me.collapsed=wasCollapsed;}},initTools:function(){var me=this;me.tools=me.tools?Ext.Array.clone(me.tools):[];if(me.collapsible&&!(me.hideCollapseTool||me.header===false||me.preventHeader)){me.collapseDirection=me.collapseDirection||me.headerPosition||'top';me.collapseTool=me.expandTool=Ext.widget({xtype:'tool',type:(me.collapsed&&!me.isPlaceHolderCollapse())?('expand-'+me.getOppositeDirection(me.collapseDirection)):('collapse-'+me.collapseDirection),handler:me.toggleCollapse,scope:me});if(me.collapseFirst){me.tools.unshift(me.collapseTool);}}
me.addTools();if(me.closable){me.addClsWithUI('closable');me.addTool(Ext.widget({xtype:'tool',type:'close',handler:Ext.Function.bind(me.close,me,[])}));}
if(me.collapseTool&&!me.collapseFirst){me.addTool(me.collapseTool);}},addTools:Ext.emptyFn,close:function(){if(this.fireEvent('beforeclose',this)!==false){this.doClose();}},doClose:function(){this.fireEvent('close',this);this[this.closeAction]();},updateHeader:function(force){var me=this,header=me.header,title=me.title,tools=me.tools,icon=me.icon||me.iconCls,vertical=me.headerPosition=='left'||me.headerPosition=='right';if(Ext.isObject(header)||(header!==false&&(force||(title||icon)||(tools&&tools.length)||(me.collapsible&&!me.titleCollapse)))){if(header&&header.isHeader){header.show();}else{header=me.header=Ext.widget(Ext.apply({xtype:'header',title:title,titleAlign:me.titleAlign,orientation:vertical?'vertical':'horizontal',dock:me.headerPosition||'top',textCls:me.headerTextCls,iconCls:me.iconCls,icon:me.icon,baseCls:me.baseCls+'-header',tools:tools,ui:me.ui,id:me.id+'_header',indicateDrag:me.draggable,frame:(me.frame||me.alwaysFramed)&&me.frameHeader,ignoreParentFrame:me.frame||me.overlapHeader,ignoreBorderManagement:me.frame||me.ignoreHeaderBorderManagement,listeners:me.collapsible&&me.titleCollapse?{click:me.toggleCollapse,scope:me}:null},me.header));me.addDocked(header,0);me.tools=header.tools;}
me.initHeaderAria();}else if(header){header.hide();}},setUI:function(ui){var me=this;me.callParent(arguments);if(me.header&&me.header.rendered){me.header.setUI(ui);}},getContentTarget:function(){return this.body;},getTargetEl:function(){var me=this;return me.body||me.protoBody||me.frameBody||me.el;},isVisible:function(deep){var me=this;if(me.collapsed&&me.placeholder){return me.placeholder.isVisible(deep);}
return me.callParent(arguments);},onHide:function(){var me=this;if(me.collapsed&&me.placeholder){me.placeholder.hide();}else{me.callParent(arguments);}},onShow:function(){var me=this;if(me.collapsed&&me.placeholder){me.hidden=true;me.placeholder.show();}else{me.callParent(arguments);}},onRemoved:function(destroying){var me=this;me.callParent(arguments);if(me.placeholder&&!destroying){me.ownerCt.remove(me.placeholder,false);}},addTool:function(tools){tools=[].concat(tools);var me=this,header=me.header,t,tLen=tools.length,tool;for(t=0;t<tLen;t++){tool=tools[t];if(header&&header.isHeader){header.addTool(tool);}else{me.tools.push(tool);}}
me.updateHeader();},getOppositeDirection:function(d){var c=Ext.Component;switch(d){case c.DIRECTION_TOP:return c.DIRECTION_BOTTOM;case c.DIRECTION_RIGHT:return c.DIRECTION_LEFT;case c.DIRECTION_BOTTOM:return c.DIRECTION_TOP;case c.DIRECTION_LEFT:return c.DIRECTION_RIGHT;}},getWidthAuthority:function(){if(this.collapsed&&this.collapsedHorizontal()){return 1;}
return this.callParent();},getHeightAuthority:function(){if(this.collapsed&&this.collapsedVertical()){return 1;}
return this.callParent();},collapsedHorizontal:function(){var dir=this.getCollapsed();return dir=='left'||dir=='right';},collapsedVertical:function(){var dir=this.getCollapsed();return dir=='top'||dir=='bottom';},restoreDimension:function(){var dir=this.collapseDirection;return(dir==='top'||dir==='bottom')?'height':'width';},getCollapsed:function(){var me=this;if(me.collapsed===true){return me.collapseDirection;}
return me.collapsed;},getState:function(){var me=this,state=me.callParent(),memento;state=me.addPropertyToState(state,'collapsed');if(me.collapsed){memento=me.collapseMemento;memento=memento&&memento.data;if(me.collapsedVertical()){if(state){delete state.height;}
if(memento){state=me.addPropertyToState(state,'height',memento.height);}}else{if(state){delete state.width;}
if(memento){state=me.addPropertyToState(state,'width',memento.width);}}}
return state;},findReExpander:function(direction){var me=this,c=Ext.Component,dockedItems=me.dockedItems.items,dockedItemCount=dockedItems.length,comp,i;if(me.collapseMode=='mini'){return;}
switch(direction){case c.DIRECTION_TOP:case c.DIRECTION_BOTTOM:for(i=0;i<dockedItemCount;i++){comp=dockedItems[i];if(!comp.hidden){if(comp.isHeader&&(!comp.dock||comp.dock=='top'||comp.dock=='bottom')){return comp;}}}
break;case c.DIRECTION_LEFT:case c.DIRECTION_RIGHT:for(i=0;i<dockedItemCount;i++){comp=dockedItems[i];if(!comp.hidden){if(comp.isHeader&&(comp.dock=='left'||comp.dock=='right')){return comp;}}}
break;default:throw('Panel#findReExpander must be passed a valid collapseDirection');}},getReExpander:function(direction){var me=this,collapseDir=direction||me.collapseDirection,reExpander=me.reExpander||me.findReExpander(collapseDir);me.expandDirection=me.getOppositeDirection(collapseDir);if(!reExpander){me.reExpander=reExpander=me.createReExpander(collapseDir,{dock:collapseDir,cls:Ext.baseCSSPrefix+'docked '+me.baseCls+'-'+me.ui+'-collapsed',ownerCt:me,ownerLayout:me.componentLayout});me.dockedItems.insert(0,reExpander);}
return reExpander;},createReExpander:function(direction,defaults){var me=this,isLeft=direction=='left',isRight=direction=='right',isVertical=isLeft||isRight,toolAtTop,result=Ext.apply({hideMode:'offsets',title:me.title,orientation:isVertical?'vertical':'horizontal',textCls:me.headerTextCls,icon:me.icon,iconCls:me.iconCls,baseCls:me.baseCls+'-header',ui:me.ui,frame:me.frame&&me.frameHeader,ignoreParentFrame:me.frame||me.overlapHeader,indicateDrag:me.draggable},defaults);if(me.collapseMode=='mini'){if(isVertical){result.width=1;}else{result.height=1;}}
if(!me.hideCollapseTool){toolAtTop=isLeft||(isRight&&me.isPlaceHolderCollapse());result[toolAtTop?'items':'tools']=[{xtype:'tool',type:'expand-'+me.getOppositeDirection(direction),uiCls:['top'],handler:me.toggleCollapse,scope:me}];}
result=new Ext.panel.Header(result);result.addClsWithUI(me.getHeaderCollapsedClasses(result));return result;},getHeaderCollapsedClasses:function(header){var me=this,collapsedCls=me.collapsedCls,collapsedClasses;collapsedClasses=[collapsedCls,collapsedCls+'-'+header.dock];if(me.border&&(!me.frame||(me.frame&&Ext.supports.CSS3BorderRadius))){collapsedClasses.push(collapsedCls+'-border-'+header.dock);}
return collapsedClasses;},beginCollapse:function(){var me=this,lastBox=me.lastBox,rendered=me.rendered,collapseMemento=me.collapseMemento||(me.collapseMemento=new Ext.util.Memento(me)),sizeModel=me.getSizeModel(),hasHeader=me.header!==false,reExpander;collapseMemento.capture(['height','minHeight','width','minWidth']);if(lastBox){collapseMemento.capture(me.restoreDimension(),lastBox,'last.');}
if(me.collapsedVertical()){if(sizeModel.width.shrinkWrap){me.width=rendered?me.getWidth():me.width||me.minWidth||100;}
delete me.height;me.minHeight=0;}else if(me.collapsedHorizontal()){if(sizeModel.height.shrinkWrap){me.height=rendered?me.getHeight():me.height||me.minHeight||100;}
delete me.width;me.minWidth=0;}
if(me.ownerCt){me.ownerCt.getLayout().beginCollapse(me);}
if(!me.isPlaceHolderCollapse()){if(hasHeader){if(me.header===(reExpander=me.getReExpander())){me.header.addClsWithUI(me.getHeaderCollapsedClasses(me.header));if(me.header.rendered){me.header.updateFrame();}}else if(reExpander.el){reExpander.el.show();reExpander.hidden=false;}}}
if(me.resizer){me.resizer.disable();}},beginExpand:function(){var me=this,lastBox=me.lastBox,collapseMemento=me.collapseMemento,restoreDimension=this.restoreDimension(),hasHeader=me.header!==false,reExpander;collapseMemento.restore(['minHeight','minWidth',restoreDimension]);if(lastBox){collapseMemento.restore(restoreDimension,true,lastBox,'last.');}
if(me.ownerCt){me.ownerCt.getLayout().beginExpand(me);}
if(!me.isPlaceHolderCollapse()){if(hasHeader){if(me.header===(reExpander=me.getReExpander())){me.header.removeClsWithUI(me.getHeaderCollapsedClasses(me.header));if(me.header.rendered){me.header.updateFrame();}}else{reExpander.hidden=true;reExpander.el.hide();}}}
if(me.resizer){me.resizer.enable();}},collapse:function(direction,animate){var me=this,collapseDir=direction||me.collapseDirection,ownerCt=me.ownerCt;if(me.isCollapsingOrExpanding){return me;}
if(arguments.length<2){animate=me.animCollapse;}
if(me.collapsed||me.fireEvent('beforecollapse',me,direction,animate)===false){return me;}
if(ownerCt&&me.isPlaceHolderCollapse()){return me.placeholderCollapse(direction,animate);}
me.collapsed=collapseDir;me.beginCollapse();me.fireHierarchyEvent('collapse');return me.doCollapseExpand(1,animate);},doCollapseExpand:function(flags,animate){var me=this,originalAnimCollapse=me.animCollapse,ownerLayout=me.ownerLayout;me.animCollapse=animate;me.isCollapsingOrExpanding=flags;if(ownerLayout&&!animate){ownerLayout.onContentChange(me);}else{me.updateLayout({isRoot:true});}
me.animCollapse=originalAnimCollapse;return me;},afterCollapse:function(animated){var me=this,ownerLayout=me.ownerLayout;me.isCollapsingOrExpanding=0;if(me.collapseTool){me.collapseTool.setType('expand-'+me.getOppositeDirection(me.collapseDirection));}
if(ownerLayout&&animated){ownerLayout.onContentChange(me);}
me.setHiddenDocked();me.fireEvent('collapse',me);},setHiddenDocked:function(){var me=this,toHide=me.hiddenOnCollapse,items=me.getDockedItems(),len=items.length,i=0,item,reExpander;if(me.header!==false){reExpander=me.getReExpander();}
toHide.add(me.body);for(;i<len;i++){item=items[i];if(item&&item!==reExpander&&item.el){toHide.add(item.el);}}
toHide.setStyle('visibility','hidden');},restoreHiddenDocked:function(){var toShow=this.hiddenOnCollapse;toShow.setStyle('visibility','');toShow.clear();},getPlaceholder:function(direction){var me=this,collapseDir=direction||me.collapseDirection,listeners=null,placeholder=me.placeholder,floatable=me.floatable,titleCollapse=me.titleCollapse;if(!placeholder){if(floatable||(me.collapsible&&titleCollapse)){listeners={click:{fn:(!titleCollapse&&floatable)?me.floatCollapsedPanel:me.toggleCollapse,element:'el',scope:me}};}
me.placeholder=placeholder=Ext.widget(me.createReExpander(collapseDir,{id:me.id+'-placeholder',listeners:listeners}));}
if(!placeholder.placeholderFor){if(!placeholder.isComponent){me.placeholder=placeholder=me.lookupComponent(placeholder);}
Ext.applyIf(placeholder,{margins:me.margins,placeholderFor:me});placeholder.addCls([Ext.baseCSSPrefix+'region-collapsed-placeholder',Ext.baseCSSPrefix+'region-collapsed-'+collapseDir+'-placeholder',me.collapsedCls]);}
return placeholder;},placeholderCollapse:function(direction,animate){var me=this,ownerCt=me.ownerCt,collapseDir=direction||me.collapseDirection,floatCls=Ext.baseCSSPrefix+'border-region-slide-in',placeholder=me.getPlaceholder(direction);me.isCollapsingOrExpanding=1;me.hidden=true;me.collapsed=collapseDir;if(placeholder.rendered){if(placeholder.el.dom.parentNode!==me.el.dom.parentNode){me.el.dom.parentNode.insertBefore(placeholder.el.dom,me.el.dom);}
placeholder.hidden=false;placeholder.el.show();ownerCt.updateLayout();}else{ownerCt.insert(ownerCt.items.indexOf(me),placeholder);}
if(me.rendered){me.el.setVisibilityMode(me.placeholderCollapseHideMode);if(animate){me.el.addCls(floatCls);placeholder.el.hide();me.el.slideOut(collapseDir.substr(0,1),{preserveScroll:true,duration:Ext.Number.from(animate,Ext.fx.Anim.prototype.duration),listeners:{afteranimate:function(){me.el.removeCls(floatCls);placeholder.el.show().setStyle('display','none').slideIn(collapseDir.substr(0,1),{easing:'linear',duration:100,listeners:{afteranimate:function(){placeholder.focus();me.isCollapsingOrExpanding=0;me.fireEvent('collapse',me);}}});}}});}else{me.el.hide();me.isCollapsingOrExpanding=0;me.fireEvent('collapse',me);}}else{me.isCollapsingOrExpanding=0;if(!me.preventCollapseFire){me.fireEvent('collapse',me);}}
return me;},floatCollapsedPanel:function(){var me=this,placeholder=me.placeholder,ps=placeholder.getSize(),myBox,floatCls=Ext.baseCSSPrefix+'border-region-slide-in',collapsed=me.collapsed,layoutOwner=me.ownerCt||me,slideDirection;if(me.isSliding){return;}
if(me.el.hasCls(floatCls)){me.slideOutFloatedPanel();return;}
me.isSliding=true;placeholder.el.hide();placeholder.hidden=true;me.el.show();me.hidden=false;me.collapsed=false;layoutOwner.updateLayout();myBox=me.getBox(true);placeholder.el.show();placeholder.hidden=false;me.el.hide();me.hidden=true;me.collapsed=collapsed;layoutOwner.updateLayout();me.slideOutTask=me.slideOutTask||new Ext.util.DelayedTask(me.slideOutFloatedPanel,me);placeholder.el.on('mouseleave',me.onMouseLeaveFloated,me);me.el.on('mouseleave',me.onMouseLeaveFloated,me);placeholder.el.on('mouseenter',me.onMouseEnterFloated,me);me.el.on('mouseenter',me.onMouseEnterFloated,me);me.el.addCls(floatCls);me.floated=true;if(me.collapseTool){me.collapseTool.el.hide();}
switch(me.collapsed){case'top':me.el.setLeftTop(myBox.x,myBox.y+ps.height-1);slideDirection='t';break;case'right':me.el.setLeftTop(myBox.x-ps.width+1,myBox.y);slideDirection='r';break;case'bottom':me.el.setLeftTop(myBox.x,myBox.y-ps.height+1);slideDirection='b';break;case'left':me.el.setLeftTop(myBox.x+ps.width-1,myBox.y);slideDirection='l';break;}
me.floatedFromCollapse=me.collapsed;me.collapsed=me.hidden=false;me.el.slideIn(slideDirection,{preserveScroll:true,duration:Ext.Number.from(me.animCollapse,Ext.fx.Anim.prototype.duration),listeners:{afteranimate:function(){me.isSliding=false;me.fireEvent('float',me);}}});},onMouseLeaveFloated:function(e){this.slideOutTask.delay(500);},onMouseEnterFloated:function(e){this.slideOutTask.cancel();},isLayoutRoot:function(){if(this.floatedFromCollapse){return true;}
return this.callParent();},slideOutFloatedPanel:function(){var me=this,compEl=this.el,collapseDirection;if(me.isSliding||me.isDestroyed){return;}
me.isSliding=true;me.floated=false;me.slideOutFloatedPanelBegin();if(typeof me.collapsed=='string'){collapseDirection=me.collapsed.charAt(0);}
compEl.slideOut(collapseDirection,{preserveScroll:true,duration:Ext.Number.from(me.animCollapse,Ext.fx.Anim.prototype.duration),listeners:{afteranimate:function(){me.slideOutFloatedPanelEnd();me.el.removeCls(Ext.baseCSSPrefix+'border-region-slide-in');}}});},slideOutFloatedPanelBegin:function(){var me=this,placeholderEl=me.placeholder.el,el=me.el;me.collapsed=me.floatedFromCollapse;me.hidden=true;me.floatedFromCollapse=null;placeholderEl.un('mouseleave',me.onMouseLeaveFloated,me);el.un('mouseleave',me.onMouseLeaveFloated,me);placeholderEl.un('mouseenter',me.onMouseEnterFloated,me);el.un('mouseenter',me.onMouseEnterFloated,me);},slideOutFloatedPanelEnd:function(){var me=this;if(me.collapseTool){me.collapseTool.el.show();}
me.isSliding=false;me.fireEvent('unfloat',me);},expand:function(animate){var me=this;if(me.isCollapsingOrExpanding){return me;}
if(!arguments.length){animate=me.animCollapse;}
if(!me.collapsed&&!me.floatedFromCollapse){return me;}
if(me.fireEvent('beforeexpand',me,animate)===false){return me;}
if(me.isPlaceHolderCollapse()){return me.placeholderExpand(animate);}
me.restoreHiddenDocked();me.beginExpand();me.collapsed=false;me.fireHierarchyEvent('expand');return me.doCollapseExpand(2,animate);},placeholderExpand:function(animate){var me=this,collapseDir=me.collapsed,floatCls=Ext.baseCSSPrefix+'border-region-slide-in',finalPos,floatedPos,slideInDirection;if(me.floatedFromCollapse){floatedPos=me.getPosition(true);me.slideOutFloatedPanelBegin();me.slideOutFloatedPanelEnd();}
me.isCollapsingOrExpanding=2;me.placeholder.hidden=true;me.placeholder.el.hide();me.collapsed=false;me.show();if(animate){if(floatedPos){finalPos=me.el.getXY();me.el.setLeftTop(floatedPos[0],floatedPos[1]);me.el.moveTo(finalPos[0],finalPos[1],{duration:Ext.Number.from(animate,Ext.fx.Anim.prototype.duration),listeners:{afteranimate:function(){me.el.removeCls(floatCls);me.isCollapsingOrExpanding=0;me.floated=false;me.fireEvent('expand',me);}}});}
else{me.hidden=true;me.el.addCls(floatCls);me.el.hide();me.placeholder.show();slideInDirection=collapseDir.substr(0,1);me.hidden=false;me.el.slideIn(slideInDirection,{preserveScroll:true,duration:Ext.Number.from(animate,Ext.fx.Anim.prototype.duration),listeners:{afteranimate:function(){me.collapsed=false;me.el.removeCls(floatCls);me.placeholder.hide();me.isCollapsingOrExpanding=0;me.fireEvent('expand',me);}}});}}else{me.isCollapsingOrExpanding=0;me.fireEvent('expand',me);}
return me;},afterExpand:function(animated){var me=this,ownerLayout=me.ownerLayout;me.isCollapsingOrExpanding=0;if(me.collapseTool){me.collapseTool.setType('collapse-'+me.collapseDirection);}
if(ownerLayout&&animated){ownerLayout.onContentChange(me);}
me.fireEvent('expand',me);},setBorder:function(border,targetEl){if(targetEl){return;}
var me=this,header=me.header;if(!border){border=0;}else{border=Ext.Element.unitizeBox((border===true)?1:border);}
if(header){if(header.isHeader){header.setBorder(border);}else{header.border=border;}}
if(me.rendered&&me.bodyBorder!==false){me.body.setStyle('border-width',border);}
me.updateLayout();me.border=border;},toggleCollapse:function(){return(this.collapsed||this.floatedFromCollapse)?this.expand():this.collapse();},getKeyMap:function(){return this.keyMap||(this.keyMap=new Ext.util.KeyMap(Ext.apply({target:this.el},this.keys)));},initDraggable:function(){this.dd=new Ext.panel.DD(this,Ext.isBoolean(this.draggable)?null:this.draggable);},ghostTools:function(){var tools=[],header=this.header,headerTools=header?header.query('tool[hidden=false]'):[],t,tLen,tool;if(headerTools.length){t=0;tLen=headerTools.length;for(;t<tLen;t++){tool=headerTools[t];tools.push({type:tool.type});}}else{tools=[{type:'placeholder'}];}
return tools;},ghost:function(cls){var me=this,ghostPanel=me.ghostPanel,box=me.getBox(),header;if(!ghostPanel){ghostPanel=new Ext.panel.Panel({renderTo:document.body,floating:{shadow:false},frame:me.frame&&!me.alwaysFramed,alwaysFramed:me.alwaysFramed,overlapHeader:me.overlapHeader,headerPosition:me.headerPosition,baseCls:me.baseCls,cls:me.baseCls+'-ghost '+(cls||'')});me.ghostPanel=ghostPanel;}else{ghostPanel.el.show();}
ghostPanel.floatParent=me.floatParent;if(me.floating){ghostPanel.setZIndex(Ext.Number.from(me.el.getStyle('zIndex'),0));}else{ghostPanel.toFront();}
if(!(me.preventHeader||(me.header===false))){header=ghostPanel.header;if(header){header.suspendLayouts();Ext.Array.forEach(header.query('tool'),header.remove,header);header.resumeLayouts();}
ghostPanel.addTool(me.ghostTools());ghostPanel.setTitle(me.title);ghostPanel.setIconCls(me.iconCls);}
ghostPanel.setPagePosition(box.x,box.y);ghostPanel.setSize(box.width,box.height);me.el.hide();return ghostPanel;},unghost:function(show,matchPosition){var me=this;if(!me.ghostPanel){return;}
if(show!==false){me.el.show();if(matchPosition!==false){me.setPagePosition(me.ghostPanel.el.getXY());if(me.hideMode=='offsets'){delete me.el.hideModeStyles;}}
Ext.defer(me.focus,10,me);}
me.ghostPanel.el.hide();},beginDrag:function(){if(this.floatingDescendants){this.floatingDescendants.hide();}},endDrag:function(){if(this.floatingDescendants){this.floatingDescendants.show();}},initResizable:function(){this.callParent(arguments);if(this.collapsed){this.resizer.disable();}}},function(){this.prototype.animCollapse=Ext.enableFx;});Ext.define('Puma.patch.panel.Panel',{override:'Ext.panel.Panel',initComponent:function(){this.header=this.header!==false&&(this.title||this.xtype=='window')?{height:31,collapseLeft:this.collapseLeft,collapseRight:this.collapseRight,leftMargin:this.leftMargin,topMargin:this.topMargin,leftSpace:this.leftSpace}:false;this.callParent();}})
Ext.define('Ext.window.Window',{extend:'Ext.panel.Panel',alternateClassName:'Ext.Window',requires:['Ext.util.ComponentDragger','Ext.util.Region','Ext.EventManager'],alias:'widget.window',baseCls:Ext.baseCSSPrefix+'window',resizable:true,draggable:true,constrain:false,constrainHeader:false,plain:false,minimizable:false,maximizable:false,minHeight:50,minWidth:50,expandOnShow:true,collapsible:false,closable:true,hidden:true,autoRender:true,hideMode:'offsets',floating:true,ariaRole:'alertdialog',itemCls:Ext.baseCSSPrefix+'window-item',initialAlphaNum:/^[a-z0-9]/,overlapHeader:true,ignoreHeaderBorderManagement:true,alwaysFramed:true,isWindow:true,initComponent:function(){var me=this;me.frame=false;me.callParent();me.addEvents('resize','maximize','minimize','restore');if(me.plain){me.addClsWithUI('plain');}
if(me.modal){me.ariaRole='dialog';}
if(me.floating){me.on({element:'el',mousedown:me.onMouseDown,scope:me});}
me.addStateEvents(['maximize','restore','resize','dragend']);},getElConfig:function(){var me=this,elConfig;elConfig=me.callParent();elConfig.tabIndex=-1;return elConfig;},getState:function(){var me=this,state=me.callParent()||{},maximized=!!me.maximized,ghostBox=me.ghostBox,pos;state.maximized=maximized;if(maximized){pos=me.restorePos;}else if(ghostBox){pos=[ghostBox.x,ghostBox.y];}else{pos=me.getPosition();}
Ext.apply(state,{size:maximized?me.restoreSize:me.getSize(),pos:pos});return state;},applyState:function(state){var me=this;if(state){me.maximized=state.maximized;if(me.maximized){me.hasSavedRestore=true;me.restoreSize=state.size;me.restorePos=state.pos;}else{Ext.apply(me,{width:state.size.width,height:state.size.height,x:state.pos[0],y:state.pos[1]});}}},onMouseDown:function(e){var preventFocus;if(this.floating){if(Ext.fly(e.getTarget()).focusable()){preventFocus=true;}
this.toFront(preventFocus);}},onRender:function(ct,position){var me=this;me.callParent(arguments);me.focusEl=me.el;if(me.maximizable){me.header.on({scope:me,dblclick:me.toggleMaximize});}},afterRender:function(){var me=this,header=me.header,keyMap;me.callParent();if(me.maximized){me.maximized=false;me.maximize();if(header){header.removeCls(header.indicateDragCls)}}
if(me.closable){keyMap=me.getKeyMap();keyMap.on(27,me.onEsc,me);}else{keyMap=me.keyMap;}
if(keyMap&&me.hidden){keyMap.disable();}},initDraggable:function(){var me=this,ddConfig,dd;if(!me.header){me.updateHeader(true);}
if(me.header){ddConfig=Ext.applyIf({el:me.el,delegate:'#'+Ext.escapeId(me.header.id)},me.draggable);if(me.constrain||me.constrainHeader){ddConfig.constrain=me.constrain;ddConfig.constrainDelegate=me.constrainHeader;ddConfig.constrainTo=me.constrainTo||me.container;}
dd=me.dd=new Ext.util.ComponentDragger(this,ddConfig);me.relayEvents(dd,['dragstart','drag','dragend']);if(me.maximized){dd.disable();}}},initResizable:function(){this.callParent(arguments);if(this.maximized){this.resizer.disable();}},onEsc:function(k,e){if(!Ext.FocusManager||!Ext.FocusManager.enabled||Ext.FocusManager.focusedCmp===this){e.stopEvent();this.close();}},beforeDestroy:function(){var me=this;if(me.rendered){delete this.animateTarget;me.hide();Ext.destroy(me.keyMap);}
me.callParent();},addTools:function(){var me=this;me.callParent();if(me.minimizable){me.addTool({type:'minimize',handler:Ext.Function.bind(me.minimize,me,[])});}
if(me.maximizable){me.addTool({type:'maximize',handler:Ext.Function.bind(me.maximize,me,[])});me.addTool({type:'restore',handler:Ext.Function.bind(me.restore,me,[]),hidden:true});}},getFocusEl:function(){return this.getDefaultFocus();},getDefaultFocus:function(){var me=this,result,defaultComp=me.defaultButton||me.defaultFocus,selector;if(defaultComp!==undefined){if(Ext.isNumber(defaultComp)){result=me.query('button')[defaultComp];}
else if(Ext.isString(defaultComp)){selector=defaultComp;if(selector.match(me.initialAlphaNum)){result=me.down('#'+selector);}
if(!result){result=me.down(selector);}}
else if(defaultComp.focus){result=defaultComp;}}
return result||me.el;},onFocus:function(){var me=this,focusDescendant;if((Ext.FocusManager&&Ext.FocusManager.enabled)||((focusDescendant=me.getDefaultFocus())===me)){me.callParent(arguments);}else{focusDescendant.focus();}},beforeLayout:function(){var shadow=this.el.shadow;this.callParent();if(shadow){shadow.hide();}},onShow:function(){var me=this;me.callParent(arguments);if(me.expandOnShow){me.expand(false);}
me.syncMonitorWindowResize();if(me.keyMap){me.keyMap.enable();}},doClose:function(){var me=this;if(me.hidden){me.fireEvent('close',me);if(me.closeAction=='destroy'){this.destroy();}}else{me.hide(me.animateTarget,me.doClose,me);}},afterHide:function(){var me=this;me.syncMonitorWindowResize();if(me.keyMap){me.keyMap.disable();}
me.callParent(arguments);},onWindowResize:function(){var me=this,sizeModel;if(me.maximized){me.fitContainer();}else{sizeModel=me.getSizeModel();if(sizeModel.width.natural||sizeModel.height.natural){me.updateLayout();}
me.doConstrain();}},minimize:function(){this.fireEvent('minimize',this);return this;},afterCollapse:function(){var me=this;if(me.maximizable){me.tools.maximize.hide();me.tools.restore.hide();}
if(me.resizer){me.resizer.disable();}
me.callParent(arguments);},afterExpand:function(){var me=this;if(me.maximized){me.tools.restore.show();}else if(me.maximizable){me.tools.maximize.show();}
if(me.resizer){me.resizer.enable();}
me.callParent(arguments);},maximize:function(){var me=this,header=me.header;if(!me.maximized){me.expand(false);if(!me.hasSavedRestore){me.restoreSize=me.getSize();me.restorePos=me.getPosition(true);}
if(me.maximizable){me.tools.maximize.hide();me.tools.restore.show();}
me.maximized=true;me.el.disableShadow();if(me.dd){me.dd.disable();if(header){header.removeCls(header.indicateDragCls)}}
if(me.resizer){me.resizer.disable();}
if(me.collapseTool){me.collapseTool.hide();}
me.el.addCls(Ext.baseCSSPrefix+'window-maximized');me.container.addCls(Ext.baseCSSPrefix+'window-maximized-ct');me.syncMonitorWindowResize();me.fitContainer();me.fireEvent('maximize',me);}
return me;},restore:function(){var me=this,tools=me.tools,header=me.header;if(me.maximized){delete me.hasSavedRestore;me.removeCls(Ext.baseCSSPrefix+'window-maximized');if(tools.restore){tools.restore.hide();}
if(tools.maximize){tools.maximize.show();}
if(me.collapseTool){me.collapseTool.show();}
me.maximized=false;me.setPosition(me.restorePos);me.setSize(me.restoreSize);delete me.restorePos;delete me.restoreSize;me.el.enableShadow(true);if(me.dd){me.dd.enable();if(header){header.addCls(header.indicateDragCls)}}
if(me.resizer){me.resizer.enable();}
me.container.removeCls(Ext.baseCSSPrefix+'window-maximized-ct');me.syncMonitorWindowResize();me.doConstrain();me.fireEvent('restore',me);}
return me;},syncMonitorWindowResize:function(){var me=this,currentlyMonitoring=me._monitoringResize,yes=me.monitorResize||me.constrain||me.constrainHeader||me.maximized,veto=me.hidden||me.destroying||me.isDestroyed;if(yes&&!veto){if(!currentlyMonitoring){Ext.EventManager.onWindowResize(me.onWindowResize,me,{delay:1});me._monitoringResize=true;}}else if(currentlyMonitoring){Ext.EventManager.removeResizeListener(me.onWindowResize,me);me._monitoringResize=false;}},toggleMaximize:function(){return this[this.maximized?'restore':'maximize']();}});Ext.define('Ext.menu.Menu',{extend:'Ext.panel.Panel',alias:'widget.menu',requires:['Ext.layout.container.Fit','Ext.layout.container.VBox','Ext.menu.CheckItem','Ext.menu.Item','Ext.menu.KeyNav','Ext.menu.Manager','Ext.menu.Separator'],enableKeyNav:true,allowOtherMenus:false,ariaRole:'menu',floating:true,constrain:true,hidden:true,hideMode:'visibility',ignoreParentClicks:false,isMenu:true,showSeparator:true,minWidth:undefined,defaultMinWidth:120,initComponent:function(){var me=this,prefix=Ext.baseCSSPrefix,cls=[prefix+'menu'],bodyCls=me.bodyCls?[me.bodyCls]:[],isFloating=me.floating!==false;me.addEvents('click','mouseenter','mouseleave','mouseover');Ext.menu.Manager.register(me);if(me.plain){cls.push(prefix+'menu-plain');}
me.cls=cls.join(' ');bodyCls.unshift(prefix+'menu-body');me.bodyCls=bodyCls.join(' ');if(!me.layout){me.layout={type:'vbox',align:'stretchmax',overflowHandler:'Scroller'};}
if(isFloating&&me.minWidth===undefined){me.minWidth=me.defaultMinWidth;}
if(!isFloating&&me.initialConfig.hidden!==true){me.hidden=false;}
me.callParent(arguments);},beforeRender:function(){this.callParent(arguments);if(!this.getSizeModel().width.shrinkWrap){this.layout.align='stretch';}},onBoxReady:function(){var me=this,separatorSpec;me.callParent(arguments);if(me.showSeparator){separatorSpec={cls:Ext.baseCSSPrefix+'menu-icon-separator',html:'&#160;'};if((!Ext.isStrict&&Ext.isIE)||Ext.isIE6){separatorSpec.style='height:'+me.el.getHeight()+'px';}
me.iconSepEl=me.layout.getElementTarget().insertFirst(separatorSpec);}
me.mon(me.el,{click:me.onClick,mouseover:me.onMouseOver,scope:me});me.mouseMonitor=me.el.monitorMouseLeave(100,me.onMouseLeave,me);if(me.enableKeyNav){me.keyNav=new Ext.menu.KeyNav(me);}},getBubbleTarget:function(){return this.parentMenu||this.ownerButton||this.callParent(arguments);},canActivateItem:function(item){return item&&!item.isDisabled()&&item.isVisible()&&(item.canActivate||item.getXTypes().indexOf('menuitem')<0);},deactivateActiveItem:function(andBlurFocusedItem){var me=this,activeItem=me.activeItem,focusedItem=me.focusedItem;if(activeItem){activeItem.deactivate();if(!activeItem.activated){delete me.activeItem;}}
if(focusedItem&&andBlurFocusedItem){focusedItem.blur();delete me.focusedItem;}},getFocusEl:function(){return this.focusedItem||this.el;},hide:function(){this.deactivateActiveItem(true);this.callParent(arguments);},getItemFromEvent:function(e){return this.getChildByElement(e.getTarget());},lookupComponent:function(cmp){var me=this;if(typeof cmp=='string'){cmp=me.lookupItemFromString(cmp);}else if(Ext.isObject(cmp)){cmp=me.lookupItemFromObject(cmp);}
cmp.minWidth=cmp.minWidth||me.minWidth;return cmp;},lookupItemFromObject:function(cmp){var me=this,prefix=Ext.baseCSSPrefix,cls;if(!cmp.isComponent){if(!cmp.xtype){cmp=Ext.create('Ext.menu.'+(Ext.isBoolean(cmp.checked)?'Check':'')+'Item',cmp);}else{cmp=Ext.ComponentManager.create(cmp,cmp.xtype);}}
if(cmp.isMenuItem){cmp.parentMenu=me;}
if(!cmp.isMenuItem&&!cmp.dock){cls=[prefix+'menu-item',prefix+'menu-item-cmp'];if(!me.plain&&(cmp.indent===true||cmp.iconCls==='no-icon')){cls.push(prefix+'menu-item-indent');}
if(cmp.rendered){cmp.el.addCls(cls);}else{cmp.cls=(cmp.cls?cmp.cls:'')+' '+cls.join(' ');}}
return cmp;},lookupItemFromString:function(cmp){return(cmp=='separator'||cmp=='-')?new Ext.menu.Separator():new Ext.menu.Item({canActivate:false,hideOnClick:false,plain:true,text:cmp});},onClick:function(e){var me=this,item;if(me.disabled){e.stopEvent();return;}
item=(e.type==='click')?me.getItemFromEvent(e):me.activeItem;if(item&&item.isMenuItem){if(!item.menu||!me.ignoreParentClicks){item.onClick(e);}else{e.stopEvent();}}
if(!item||item.disabled){item=undefined;}
me.fireEvent('click',me,item,e);},onDestroy:function(){var me=this;Ext.menu.Manager.unregister(me);delete me.parentMenu;delete me.ownerButton;if(me.rendered){me.el.un(me.mouseMonitor);Ext.destroy(me.keyNav);delete me.keyNav;}
me.callParent(arguments);},onMouseLeave:function(e){var me=this;me.deactivateActiveItem();if(me.disabled){return;}
me.fireEvent('mouseleave',me,e);},onMouseOver:function(e){var me=this,fromEl=e.getRelatedTarget(),mouseEnter=!me.el.contains(fromEl),item=me.getItemFromEvent(e),parentMenu=me.parentMenu,parentItem=me.parentItem;if(mouseEnter&&parentMenu){parentMenu.setActiveItem(parentItem);parentItem.cancelDeferHide();parentMenu.mouseMonitor.mouseenter();}
if(me.disabled){return;}
if(item&&!item.activated){me.setActiveItem(item);if(item.activated&&item.expandMenu){item.expandMenu();}}
if(mouseEnter){me.fireEvent('mouseenter',me,e);}
me.fireEvent('mouseover',me,item,e);},setActiveItem:function(item){var me=this;if(item&&(item!=me.activeItem)){me.deactivateActiveItem();if(me.canActivateItem(item)){if(item.activate){item.activate();if(item.activated){me.activeItem=item;me.focusedItem=item;me.focus();}}else{item.focus();me.focusedItem=item;}}
item.el.scrollIntoView(me.layout.getRenderTarget());}},showBy:function(cmp,pos,off){var me=this;me.callParent(arguments);if(!me.hidden){me.setVerticalPosition();}
return me;},show:function(){var me=this,parentEl,viewHeight,maxWas=me.maxHeight;if(!me.rendered){me.doAutoRender();}
if(me.floating){parentEl=Ext.fly(me.el.getScopeParent());viewHeight=parentEl.getViewSize().height;me.maxHeight=Math.min(maxWas||viewHeight,viewHeight);}
me.callParent(arguments);me.maxHeight=maxWas;return me;},afterComponentLayout:function(width,height,oldWidth,oldHeight){var me=this;me.callParent(arguments);if(me.showSeparator){me.iconSepEl.setHeight(me.componentLayout.lastComponentSize.contentHeight);}},setVerticalPosition:function(){var me=this,max,y=me.el.getY(),returnY=y,height=me.getHeight(),viewportHeight=Ext.Element.getViewportHeight().height,parentEl=Ext.fly(me.el.getScopeParent()),viewHeight=parentEl.getViewSize().height,normalY=y-parentEl.getScroll().top;parentEl=null;if(me.floating){max=me.maxHeight?me.maxHeight:viewHeight-normalY;if(height>viewHeight){returnY=y-normalY;}else if(max<height){returnY=y-(height-max);}else if((y+height)>viewportHeight){returnY=viewportHeight-height;}}
me.el.setY(returnY);}});Ext.define('PumaMain.view.ChartPanel',{extend:'Ext.panel.Panel',alias:'widget.chartpanel',layout:'fit',frame:false,border:0,collapseLeft:true,padding:0,initComponent:function(){this.toolMap={gear:{type:'gear',helpId:'Modifyingcharts',tooltip:'Settings'},close:{type:'close',helpId:'Removingcharts',tooltip:'Remove',cls:'tool-chart-close'},help:{type:'help',helpId:'Displayingchartlegend',tooltip:'Legend'},collapse:{type:'collapse',helpId:'Exportingchartsastables',tooltip:'Export CSV'},search:{type:'search',tooltip:'Switch zooming',width:22,height:22},print:{type:'print',helpId:'Exportingchartsasgraphics',tooltip:'Export PNG'},save:{type:'save',helpId:'Snapshots',tooltip:'Snapshot'}}
this.tools=[];var toolNames=['gear','help','collapse','print','save','search','close'];for(var i=0;i<toolNames.length;i++){this.tools.push(this.toolMap[toolNames[i]]);}
var items=[{xtype:'pumacombo',store:Ext.StoreMgr.lookup('attribute4set'),multiSelect:this.cfgType=='columnchart',attributeCombo:1,cfgType:this.cfgType,listConfig:{selModel:{mode:'MULTI'}},height:30,flex:1},{xtype:'pumacombo',store:Ext.StoreMgr.lookup('attribute4set'),multiSelect:this.cfgType=='columnchart',attributeCombo:1,cfgType:this.cfgType,alternative:this.cfgType=='scatterchart',listConfig:{selModel:{mode:'MULTI'}},height:30,flex:1}]
if(this.cfgType!='scatterchart'){items=items.slice(1);}
if(this.cfgType!='grid'){this.tbar=items}
this.callParent();this.updateToolVisibility();},updateToolVisibility:function(){var toolNames=[];switch(this.cfgType){case'grid':toolNames=['collapse','print','save'];break;case'piechart':toolNames=['help','collapse','print','save'];break;case'columnchart':toolNames=['help','collapse','print','save'];break;case'boxplotchart':toolNames=['help','collapse','print','save'];break;case'scatterchart':toolNames=['help','collapse','print','save','search'];break;case'extentoutline':toolNames=['gear','print','save','close'];break;case'filter':toolNames=['close'];break;}
for(var i=0;i<this.tools.length;i++){var tool=this.tools[i];if(tool.type=='collapse-top'||tool.type=='expand-bottom'){continue;}
var vis=Ext.Array.contains(toolNames,tool.type);if(tool.rendered){tool.setVisible(vis);}
else if(!vis){tool.hidden=true;}}}})
Ext.define('Ext.ux.grid.menu.ListMenu',{extend:'Ext.menu.Menu',idField:'id',labelField:'text',loadingText:'Loading...',loadOnShow:true,single:false,constructor:function(cfg){var me=this,options,i,len,value;me.selected=[];me.addEvents('checkchange');me.callParent([cfg=cfg||{}]);if(!cfg.store&&cfg.options){options=[];for(i=0,len=cfg.options.length;i<len;i++){value=cfg.options[i];switch(Ext.type(value)){case'array':options.push(value);break;case'object':options.push([value[me.idField],value[me.labelField]]);break;case'string':options.push([value,value]);break;}}
me.store=Ext.create('Ext.data.ArrayStore',{fields:[me.idField,me.labelField],data:options,listeners:{load:me.onLoad,scope:me}});me.loaded=true;me.autoStore=true;}else{me.add({text:me.loadingText,iconCls:'loading-indicator'});me.store.on('load',me.onLoad,me);}},destroy:function(){var me=this,store=me.store;if(store){if(me.autoStore){store.destroyStore();}else{store.un('unload',me.onLoad,me);}}
me.callParent();},show:function(){if(this.loadOnShow&&!this.loaded&&!this.store.loading){this.store.load();}
this.callParent();},onLoad:function(store,records){var me=this,gid,itemValue,i,len,listeners={checkchange:me.checkChange,scope:me};Ext.suspendLayouts();me.removeAll(true);gid=me.single?Ext.id():null;for(i=0,len=records.length;i<len;i++){itemValue=records[i].get(me.idField);me.add(Ext.create('Ext.menu.CheckItem',{text:records[i].get(me.labelField),group:gid,checked:Ext.Array.contains(me.selected,itemValue),hideOnClick:false,value:itemValue,listeners:listeners}));}
me.loaded=true;Ext.resumeLayouts(true);me.fireEvent('load',me,records);},getSelected:function(){return this.selected;},setSelected:function(value){value=this.selected=[].concat(value);if(this.loaded){this.items.each(function(item){item.setChecked(false,true);for(var i=0,len=value.length;i<len;i++){if(item.value==value[i]){item.setChecked(true,true);}}},this);}},checkChange:function(item,checked){var value=[];this.items.each(function(item){if(item.checked){value.push(item.value);}},this);this.selected=value;this.fireEvent('checkchange',item,checked);}});Ext.define('Ext.ux.grid.menu.RangeMenu',{extend:'Ext.menu.Menu',fieldCls:'Ext.form.field.Number',itemIconCls:{gt:'ux-rangemenu-gt',lt:'ux-rangemenu-lt',eq:'ux-rangemenu-eq'},fieldLabels:{gt:'Greater Than',lt:'Less Than',eq:'Equal To'},menuItemCfgs:{emptyText:'Enter Number...',selectOnFocus:false,width:155},menuItems:['lt','gt','-','eq'],constructor:function(config){var me=this,fields,fieldCfg,i,len,item,cfg,Cls;me.callParent(arguments);fields=me.fields=me.fields||{};fieldCfg=me.fieldCfg=me.fieldCfg||{};me.addEvents('update');me.updateTask=Ext.create('Ext.util.DelayedTask',me.fireUpdate,me);for(i=0,len=me.menuItems.length;i<len;i++){item=me.menuItems[i];if(item!=='-'){cfg={itemId:'range-'+item,enableKeyEvents:true,hideEmptyLabel:false,labelCls:'ux-rangemenu-icon '+me.itemIconCls[item],labelSeparator:'',labelWidth:29,listeners:{scope:me,change:me.onInputChange,keyup:me.onInputKeyUp,el:{click:function(e){e.stopPropagation();}}},activate:Ext.emptyFn,deactivate:Ext.emptyFn};Ext.apply(cfg,Ext.applyIf(fields[item]||{},fieldCfg[item]),me.menuItemCfgs);Cls=cfg.fieldCls||me.fieldCls;item=fields[item]=Ext.create(Cls,cfg);}
me.add(item);}},fireUpdate:function(){this.fireEvent('update',this);},getValue:function(){var result={},key,field;for(key in this.fields){field=this.fields[key];if(field.isValid()&&field.getValue()!==null){result[key]=field.getValue();}}
return result;},setValue:function(data){var me=this,key,field;for(key in me.fields){field=me.fields[key];field.suspendEvents();field.setValue(key in data?data[key]:'');field.resumeEvents();}
me.fireEvent('update',me);},onInputKeyUp:function(field,e){if(e.getKey()===e.RETURN&&field.isValid()){e.stopEvent();this.hide();}},onInputChange:function(field){var me=this,fields=me.fields,eq=fields.eq,gt=fields.gt,lt=fields.lt;if(field==eq){if(gt){gt.setValue(null);}
if(lt){lt.setValue(null);}}
else{eq.setValue(null);}
this.updateTask.delay(this.updateBuffer);}});Ext.define('Ext.panel.Table',{extend:'Ext.panel.Panel',alias:'widget.tablepanel',uses:['Ext.selection.RowModel','Ext.selection.CellModel','Ext.selection.CheckboxModel','Ext.grid.PagingScroller','Ext.grid.header.Container','Ext.grid.Lockable'],extraBaseCls:Ext.baseCSSPrefix+'grid',extraBodyCls:Ext.baseCSSPrefix+'grid-body',layout:'fit',hasView:false,viewType:null,selType:'rowmodel',scroll:true,deferRowRender:true,sortableColumns:true,enableLocking:false,scrollerOwner:true,enableColumnMove:true,sealedColumns:false,enableColumnResize:true,enableColumnHide:true,rowLines:true,colLinesCls:Ext.baseCSSPrefix+'grid-with-col-lines',rowLinesCls:Ext.baseCSSPrefix+'grid-with-row-lines',hiddenHeaderCtCls:Ext.baseCSSPrefix+'grid-header-ct-hidden',hiddenHeaderCls:Ext.baseCSSPrefix+'grid-header-hidden',resizeMarkerCls:Ext.baseCSSPrefix+'grid-resize-marker',emptyCls:Ext.baseCSSPrefix+'grid-empty',initComponent:function(){if(!this.viewType){Ext.Error.raise("You must specify a viewType config.");}
if(this.headers){Ext.Error.raise("The headers config is not supported. Please specify columns instead.");}
var me=this,scroll=me.scroll,headerCtCfg=me.columns||me.colModel,view,border=me.border,i,len,store=me.store=Ext.data.StoreManager.lookup(me.store||'ext-empty-store');if(me.columnLines){me.addCls(me.colLinesCls);}
if(me.rowLines){me.addCls(me.rowLinesCls);}
if(!headerCtCfg){Ext.Error.raise("A column configuration must be specified");}
if(headerCtCfg instanceof Ext.grid.header.Container){me.headerCt=headerCtCfg;me.headerCt.border=border;me.columns=me.headerCt.items.items;}else{if(Ext.isArray(headerCtCfg)){headerCtCfg={items:headerCtCfg,border:border};}
Ext.apply(headerCtCfg,{forceFit:me.forceFit,sortable:me.sortableColumns,enableColumnMove:me.enableColumnMove,enableColumnResize:me.enableColumnResize,enableColumnHide:me.enableColumnHide,border:border,sealed:me.sealedColumns});me.columns=headerCtCfg.items;if(me.enableLocking||me.hasLockedColumns(me.columns)){me.self.mixin('lockable',Ext.grid.Lockable);me.injectLockable();}}
me.scrollTask=new Ext.util.DelayedTask(me.syncHorizontalScroll,me);me.addEvents('reconfigure','viewready');me.bodyCls=me.bodyCls||'';me.bodyCls+=(' '+me.extraBodyCls);me.cls=me.cls||'';me.cls+=(' '+me.extraBaseCls);delete me.autoScroll;if(!me.hasView){if(!me.headerCt){me.headerCt=new Ext.grid.header.Container(headerCtCfg);}
me.columns=me.headerCt.items.items;if(store.buffered&&!store.remoteSort){for(i=0,len=me.columns.length;i<len;i++){me.columns[i].sortable=false;}}
if(me.hideHeaders){me.headerCt.height=0;me.headerCt.hiddenHeaders=true;me.headerCt.addCls(me.hiddenHeaderCtCls);me.addCls(me.hiddenHeaderCls);if(Ext.isIEQuirks){me.headerCt.style={display:'none'};}}
if(scroll===true||scroll==='both'||scroll==='vertical'){me.verticalScroll=true;}
me.relayHeaderCtEvents(me.headerCt);me.features=me.features||[];if(!Ext.isArray(me.features)){me.features=[me.features];}
me.dockedItems=[].concat(me.dockedItems||[]);me.dockedItems.unshift(me.headerCt);me.viewConfig=me.viewConfig||{};view=me.getView();me.items=[view];me.hasView=true;if(!me.hideHeaders){view.on({scroll:{fn:me.onHorizontalScroll,element:'el',scope:me}});}
me.bindStore(store);me.mon(view,{viewready:me.onViewReady,refresh:me.onRestoreHorzScroll,scope:me});}
this.relayEvents(me.view,['beforeitemmousedown','beforeitemmouseup','beforeitemmouseenter','beforeitemmouseleave','beforeitemclick','beforeitemdblclick','beforeitemcontextmenu','itemmousedown','itemmouseup','itemmouseenter','itemmouseleave','itemclick','itemdblclick','itemcontextmenu','beforecontainermousedown','beforecontainermouseup','beforecontainermouseover','beforecontainermouseout','beforecontainerclick','beforecontainerdblclick','beforecontainercontextmenu','containermouseup','containermouseover','containermouseout','containerclick','containerdblclick','containercontextmenu','selectionchange','beforeselect','select','beforedeselect','deselect']);me.callParent(arguments);me.addStateEvents(['columnresize','columnmove','columnhide','columnshow','sortchange']);if(me.headerCt){me.headerCt.on('afterlayout',me.onRestoreHorzScroll,me);}},hasLockedColumns:function(columns){var i,len=columns.length,column;for(i=0;i<len;i++){column=columns[i];if(!column.processed&&column.locked){return true;}}},relayHeaderCtEvents:function(headerCt){this.relayEvents(headerCt,['columnresize','columnmove','columnhide','columnshow','sortchange']);},getState:function(){var me=this,state=me.callParent(),sorter=me.store.sorters.first();state=me.addPropertyToState(state,'columns',(me.headerCt||me).getColumnsState());if(sorter){state=me.addPropertyToState(state,'sort',{property:sorter.property,direction:sorter.direction,root:sorter.root});}
return state;},applyState:function(state){var me=this,sorter=state.sort,store=me.store,columns=state.columns;delete state.columns;me.callParent(arguments);if(columns){(me.headerCt||me).applyColumnsState(columns);}
if(sorter){if(store.remoteSort){store.sort({property:sorter.property,direction:sorter.direction,root:sorter.root},null,false);}else{store.sort(sorter.property,sorter.direction);}}},getStore:function(){return this.store;},getView:function(){var me=this,sm;if(!me.view){sm=me.getSelectionModel();me.view=Ext.widget(Ext.apply({},me.viewConfig,{grid:me,deferInitialRefresh:me.deferRowRender!==false,scroll:me.scroll,xtype:me.viewType,store:me.store,headerCt:me.headerCt,selModel:sm,features:me.features,panel:me,emptyText:me.emptyText?'<div class="'+me.emptyCls+'">'+me.emptyText+'</div>':''}));me.view.getComponentLayout().headerCt=me.headerCt;me.mon(me.view,{uievent:me.processEvent,scope:me});sm.view=me.view;me.headerCt.view=me.view;me.relayEvents(me.view,['cellclick','celldblclick']);}
return me.view;},setAutoScroll:Ext.emptyFn,processEvent:function(type,view,cell,recordIndex,cellIndex,e){var me=this,header;if(cellIndex!==-1){header=me.headerCt.getGridColumns()[cellIndex];return header.processEvent.apply(header,arguments);}},determineScrollbars:function(){Ext.log.warn('Obsolete');},invalidateScroller:function(){Ext.log.warn('Obsolete');},scrollByDeltaY:function(yDelta,animate){this.getView().scrollBy(0,yDelta,animate);},scrollByDeltaX:function(xDelta,animate){this.getView().scrollBy(xDelta,0,animate);},afterCollapse:function(){var me=this;me.saveScrollPos();me.saveScrollPos();me.callParent(arguments);},afterExpand:function(){var me=this;me.callParent(arguments);me.restoreScrollPos();me.restoreScrollPos();},saveScrollPos:Ext.emptyFn,restoreScrollPos:Ext.emptyFn,onHeaderResize:function(){this.delayScroll();},onHeaderMove:function(headerCt,header,colsToMove,fromIdx,toIdx){var me=this;if(me.optimizedColumnMove===false){me.view.refresh();}
else{me.view.moveColumn(fromIdx,toIdx,colsToMove);}
me.delayScroll();},onHeaderHide:function(headerCt,header){this.delayScroll();},onHeaderShow:function(headerCt,header){this.delayScroll();},delayScroll:function(){var target=this.getScrollTarget().el;if(target){this.scrollTask.delay(10,null,null,[target.dom.scrollLeft]);}},onViewReady:function(){this.fireEvent('viewready',this);},onRestoreHorzScroll:function(){var left=this.scrollLeftPos;if(left){this.syncHorizontalScroll(left,true);}},getScrollerOwner:function(){var rootCmp=this;if(!this.scrollerOwner){rootCmp=this.up('[scrollerOwner]');}
return rootCmp;},getLhsMarker:function(){var me=this;return me.lhsMarker||(me.lhsMarker=Ext.DomHelper.append(me.el,{cls:me.resizeMarkerCls},true));},getRhsMarker:function(){var me=this;return me.rhsMarker||(me.rhsMarker=Ext.DomHelper.append(me.el,{cls:me.resizeMarkerCls},true));},getSelectionModel:function(){if(!this.selModel){this.selModel={};}
var mode='SINGLE',type;if(this.simpleSelect){mode='SIMPLE';}else if(this.multiSelect){mode='MULTI';}
Ext.applyIf(this.selModel,{allowDeselect:this.allowDeselect,mode:mode});if(!this.selModel.events){type=this.selModel.selType||this.selType;this.selModel=Ext.create('selection.'+type,this.selModel);}
if(!this.selModel.hasRelaySetup){this.relayEvents(this.selModel,['selectionchange','beforeselect','beforedeselect','select','deselect']);this.selModel.hasRelaySetup=true;}
if(this.disableSelection){this.selModel.locked=true;}
return this.selModel;},getScrollTarget:function(){var owner=this.getScrollerOwner(),items=owner.query('tableview');return items[1]||items[0];},onHorizontalScroll:function(event,target){this.syncHorizontalScroll(target.scrollLeft);},syncHorizontalScroll:function(left,setBody){var me=this,scrollTarget;setBody=setBody===true;if(me.rendered&&(setBody||left!==me.scrollLeftPos)){if(setBody){scrollTarget=me.getScrollTarget();scrollTarget.el.dom.scrollLeft=left;}
me.headerCt.el.dom.scrollLeft=left;me.scrollLeftPos=left;}},onStoreLoad:Ext.emptyFn,getEditorParent:function(){return this.body;},bindStore:function(store){var me=this,view=me.getView(),bufferedStore=store&&store.buffered;me.store=store;if(view.store!==store){view.bindStore(store);}
me.mon(store,{load:me.onStoreLoad,scope:me});if(bufferedStore&&me.verticalScroll){me.verticalScroller=new Ext.grid.PagingScroller(Ext.apply({panel:me,store:store,view:me.view},me.initialConfig.verticalScroller));}
if(bufferedStore){view.preserveScrollOnRefresh=true;}else if(me.invalidateScrollerOnRefresh!==undefined){view.preserveScrollOnRefresh=!me.invalidateScrollerOnRefresh;}},unbindStore:function(){var me=this,store=me.store;if(store){delete me.store;me.mun(store,{load:me.onStoreLoad,scope:me});Ext.destroy(me.verticalScroller);}},beforeDestroy:function(){Ext.destroy(this.verticalScroller);this.callParent();},reconfigure:function(store,columns){var me=this,view=me.getView(),originalDeferinitialRefresh,oldStore=me.store,headerCt=me.headerCt,oldColumns=headerCt?headerCt.items.getRange():me.columns;if(columns){columns=Ext.Array.slice(columns);}
me.fireEvent('beforereconfigure',me,store,columns,oldStore,oldColumns);if(me.lockable){me.reconfigureLockable(store,columns);}else{Ext.suspendLayouts();if(columns){delete me.scrollLeftPos;headerCt.removeAll();headerCt.add(columns);}
if(store){if(me.store){me.unbindStore();}
store=Ext.StoreManager.lookup(store);originalDeferinitialRefresh=view.deferInitialRefresh;view.deferInitialRefresh=false;me.bindStore(store);view.deferInitialRefresh=originalDeferinitialRefresh;}else{me.getView().refresh();}
headerCt.setSortState();Ext.resumeLayouts(true);}
me.fireEvent('reconfigure',me,store,columns,oldStore,oldColumns);}});Ext.define('Ext.grid.Panel',{extend:'Ext.panel.Table',requires:['Ext.grid.View'],alias:['widget.gridpanel','widget.grid'],alternateClassName:['Ext.list.ListView','Ext.ListView','Ext.grid.GridPanel'],viewType:'gridview',lockable:false,bothCfgCopy:['invalidateScrollerOnRefresh','hideHeaders','enableColumnHide','enableColumnMove','enableColumnResize','sortableColumns','columnLines','rowLines'],normalCfgCopy:['verticalScroller','verticalScrollDock','verticalScrollerType','scroll'],lockedCfgCopy:[],rowLines:true});Ext.define('Puma.view.CommonGrid',{extend:'Ext.grid.Panel',alias:'widget.commongrid',requires:['Ext.ux.grid.FiltersFeature'],padding:10,frame:true,initComponent:function(){var filtersCfg={ftype:'filters',local:true,filters:[{type:'string',dataIndex:'name'}]};if(!this.disableFilter){this.features=[filtersCfg];}
this.columns=this.columns||[{dataIndex:'_id',width:50,header:'ID'},{dataIndex:'name',header:'Name',flex:1}]
this.buttons=this.buttons||[];this.buttons=Ext.Array.merge(this.buttons,[{text:'Delete',itemId:'deletebtn',disabled:true,},{text:'Create copy',disabled:true,itemId:'copybtn'},{text:'Create blank',itemId:'createbtn'}])
this.selModel={allowDeselect:true}
this.callParent();}});Ext.define('Ext.dd.DragZone',{extend:'Ext.dd.DragSource',constructor:function(el,config){var me=this,scroll=me.containerScroll;me.callParent([el,config]);if(scroll){el=me.scrollEl||el;el=Ext.get(el);if(Ext.isObject(scroll)){el.ddScrollConfig=scroll;}
Ext.dd.ScrollManager.register(el);}},getDragData:function(e){return Ext.dd.Registry.getHandleFromEvent(e);},onInitDrag:function(x,y){this.proxy.update(this.dragData.ddel.cloneNode(true));this.onStartDrag(x,y);return true;},getRepairXY:function(e){return Ext.fly(this.dragData.ddel).getXY();},destroy:function(){this.callParent();if(this.containerScroll){Ext.dd.ScrollManager.unregister(this.el);}}});Ext.define('Ext.grid.header.DragZone',{extend:'Ext.dd.DragZone',colHeaderCls:Ext.baseCSSPrefix+'column-header',maxProxyWidth:120,constructor:function(headerCt){this.headerCt=headerCt;this.ddGroup=this.getDDGroup();this.callParent([headerCt.el]);this.proxy.el.addCls(Ext.baseCSSPrefix+'grid-col-dd');},getDDGroup:function(){return'header-dd-zone-'+this.headerCt.up('[scrollerOwner]').id;},getDragData:function(e){var header=e.getTarget('.'+this.colHeaderCls),headerCmp,ddel;if(header){headerCmp=Ext.getCmp(header.id);if(!this.headerCt.dragging&&headerCmp.draggable&&!(headerCmp.isOnLeftEdge(e)||headerCmp.isOnRightEdge(e))){ddel=document.createElement('div');ddel.innerHTML=Ext.getCmp(header.id).text;return{ddel:ddel,header:headerCmp};}}
return false;},onBeforeDrag:function(){return!(this.headerCt.dragging||this.disabled);},onInitDrag:function(){this.headerCt.dragging=true;this.callParent(arguments);},onDragDrop:function(){this.headerCt.dragging=false;this.callParent(arguments);},afterRepair:function(){this.callParent();this.headerCt.dragging=false;},getRepairXY:function(){return this.dragData.header.el.getXY();},disable:function(){this.disabled=true;},enable:function(){this.disabled=false;}});Ext.define('Ext.window.MessageBox',{extend:'Ext.window.Window',requires:['Ext.toolbar.Toolbar','Ext.form.field.Text','Ext.form.field.TextArea','Ext.form.field.Display','Ext.button.Button','Ext.layout.container.Anchor','Ext.layout.container.HBox','Ext.ProgressBar'],alias:'widget.messagebox',OK:1,YES:2,NO:4,CANCEL:8,OKCANCEL:9,YESNO:6,YESNOCANCEL:14,INFO:Ext.baseCSSPrefix+'message-box-info',WARNING:Ext.baseCSSPrefix+'message-box-warning',QUESTION:Ext.baseCSSPrefix+'message-box-question',ERROR:Ext.baseCSSPrefix+'message-box-error',hideMode:'offsets',closeAction:'hide',resizable:false,title:'&#160;',width:600,height:500,defaultMinWidth:250,defaultMaxWidth:600,defaultMinHeight:110,defaultMaxHeight:500,constrain:true,cls:[Ext.baseCSSPrefix+'message-box',Ext.baseCSSPrefix+'hide-offsets'],layout:{type:'vbox',align:'stretch'},defaultTextHeight:75,minProgressWidth:250,minPromptWidth:250,buttonText:{ok:'OK',yes:'Yes',no:'No',cancel:'Cancel'},buttonIds:['ok','yes','no','cancel'],titleText:{confirm:'Confirm',prompt:'Prompt',wait:'Loading...',alert:'Attention'},iconHeight:35,makeButton:function(btnIdx){var btnId=this.buttonIds[btnIdx];return new Ext.button.Button({handler:this.btnCallback,itemId:btnId,scope:this,text:this.buttonText[btnId],minWidth:75});},btnCallback:function(btn){var me=this,value,field;if(me.cfg.prompt||me.cfg.multiline){if(me.cfg.multiline){field=me.textArea;}else{field=me.textField;}
value=field.getValue();field.reset();}
btn.blur();me.hide();me.userCallback(btn.itemId,value,me.cfg);},hide:function(){var me=this;me.dd.endDrag();me.progressBar.reset();me.removeCls(me.cfg.cls);me.callParent(arguments);},initComponent:function(){var me=this,baseId=me.id,i,button,tbLayout;me.title='&#160;';me.minWidth=me.defaultMinWidth;me.maxWidth=me.defaultMaxWidth;me.minHeight=me.defaultMinHeight;me.maxHeight=me.defaultMaxHeight;me.topContainer=new Ext.container.Container({layout:'hbox',style:{padding:'10px',overflow:'hidden'},items:[me.iconComponent=new Ext.Component({cls:me.baseCls+'-icon',width:50,height:me.iconHeight}),me.promptContainer=new Ext.container.Container({flex:1,layout:{type:'anchor'},items:[me.msg=new Ext.form.field.Display({id:baseId+'-displayfield',cls:me.baseCls+'-text'}),me.textField=new Ext.form.field.Text({id:baseId+'-textfield',anchor:'100%',enableKeyEvents:true,listeners:{keydown:me.onPromptKey,scope:me}}),me.textArea=new Ext.form.field.TextArea({id:baseId+'-textarea',anchor:'100%',height:75})]})]});me.progressBar=new Ext.ProgressBar({id:baseId+'-progressbar',margins:'0 10 0 10'});me.items=[me.topContainer,me.progressBar];me.msgButtons=[];for(i=0;i<4;i++){button=me.makeButton(i);me.msgButtons[button.itemId]=button;me.msgButtons.push(button);}
me.bottomTb=new Ext.toolbar.Toolbar({id:baseId+'-toolbar',ui:'footer',dock:'bottom',layout:{pack:'center'},items:[me.msgButtons[0],me.msgButtons[1],me.msgButtons[2],me.msgButtons[3]]});me.dockedItems=[me.bottomTb];tbLayout=me.bottomTb.getLayout();tbLayout.finishedLayout=Ext.Function.createInterceptor(tbLayout.finishedLayout,function(ownerContext){me.tbWidth=ownerContext.getProp('contentWidth');});me.on('close',me.onClose,me);me.callParent();},onClose:function(){var btn=this.header.child('[type=close]');btn.itemId='cancel';this.btnCallback(btn);delete btn.itemId;},onPromptKey:function(textField,e){var me=this,blur;if(e.keyCode===Ext.EventObject.RETURN||e.keyCode===10){if(me.msgButtons.ok.isVisible()){blur=true;me.msgButtons.ok.handler.call(me,me.msgButtons.ok);}else if(me.msgButtons.yes.isVisible()){me.msgButtons.yes.handler.call(me,me.msgButtons.yes);blur=true;}
if(blur){me.textField.blur();}}},reconfigure:function(cfg){var me=this,buttons=0,hideToolbar=true,initialWidth=me.maxWidth,oldButtonText=me.buttonText,i;me.updateButtonText();cfg=cfg||{};me.cfg=cfg;if(cfg.width){initialWidth=cfg.width;}
me.minWidth=cfg.minWidth||me.defaultMinWidth;me.maxWidth=cfg.maxWidth||me.defaultMaxWidth;me.minHeight=cfg.minHeight||me.defaultMinHeight;me.maxHeight=cfg.maxHeight||me.defaultMaxHeight;delete me.defaultFocus;me.animateTarget=cfg.animateTarget||undefined;me.modal=cfg.modal!==false;me.setTitle(cfg.title||'');me.setIconCls(cfg.iconCls||'');if(Ext.isObject(cfg.buttons)){me.buttonText=cfg.buttons;buttons=0;}else{me.buttonText=cfg.buttonText||me.buttonText;buttons=Ext.isNumber(cfg.buttons)?cfg.buttons:0;}
buttons=buttons|me.updateButtonText();me.buttonText=oldButtonText;Ext.suspendLayouts();me.hidden=false;if(!me.rendered){me.width=initialWidth;me.hideMode='display';me.render(Ext.getBody());delete me.hideMode;me.el.setVisibilityMode(Ext.Element.OFFSETS)}else{me.setSize(initialWidth,me.maxHeight);}
me.closable=cfg.closable!==false&&!cfg.wait;me.header.child('[type=close]').setVisible(me.closable);if(!cfg.title&&!me.closable&&!cfg.iconCls){me.header.hide();}else{me.header.show();}
me.liveDrag=!cfg.proxyDrag;me.userCallback=Ext.Function.bind(cfg.callback||cfg.fn||Ext.emptyFn,cfg.scope||Ext.global);me.setIcon(cfg.icon);if(cfg.msg){me.msg.setValue(cfg.msg);me.msg.show();}else{me.msg.hide();}
Ext.resumeLayouts(true);Ext.suspendLayouts();if(cfg.prompt||cfg.multiline){me.multiline=cfg.multiline;if(cfg.multiline){me.textArea.setValue(cfg.value);me.textArea.setHeight(cfg.defaultTextHeight||me.defaultTextHeight);me.textArea.show();me.textField.hide();me.defaultFocus=me.textArea;}else{me.textField.setValue(cfg.value);me.textArea.hide();me.textField.show();me.defaultFocus=me.textField;}}else{me.textArea.hide();me.textField.hide();}
if(cfg.progress||cfg.wait){me.progressBar.show();me.updateProgress(0,cfg.progressText);if(cfg.wait===true){me.progressBar.wait(cfg.waitConfig);}}else{me.progressBar.hide();}
for(i=0;i<4;i++){if(buttons&Math.pow(2,i)){if(!me.defaultFocus){me.defaultFocus=me.msgButtons[i];}
me.msgButtons[i].show();hideToolbar=false;}else{me.msgButtons[i].hide();}}
if(hideToolbar){me.bottomTb.hide();}else{me.bottomTb.show();}
Ext.resumeLayouts(true);},updateButtonText:function(){var me=this,buttonText=me.buttonText,buttons=0,btnId,btn;for(btnId in buttonText){if(buttonText.hasOwnProperty(btnId)){btn=me.msgButtons[btnId];if(btn){if(me.cfg&&me.cfg.buttonText){buttons=buttons|Math.pow(2,Ext.Array.indexOf(me.buttonIds,btnId));}
if(btn.text!=buttonText[btnId]){btn.setText(buttonText[btnId]);}}}}
return buttons;},show:function(cfg){var me=this,visibleFocusables;me.reconfigure(cfg);me.addCls(cfg.cls);me.doAutoSize();visibleFocusables=me.query('textfield:not([hidden]),textarea:not([hidden]),button:not([hidden])');me.preventFocusOnActivate=!visibleFocusables.length;me.hidden=true;me.callParent();return me;},onShow:function(){this.callParent(arguments);this.center();},doAutoSize:function(){var me=this,headerVisible=me.header.rendered&&me.header.isVisible(),footerVisible=me.bottomTb.rendered&&me.bottomTb.isVisible(),width,height;if(!Ext.isDefined(me.frameWidth)){me.frameWidth=me.el.getWidth()-me.body.getWidth();}
me.minWidth=me.cfg.minWidth||Ext.getClass(this).prototype.minWidth;width=Math.max(headerVisible?me.header.getMinWidth():0,me.cfg.width||me.msg.getWidth()+me.iconComponent.getWidth()+25,(footerVisible?me.tbWidth:0));height=(headerVisible?me.header.getHeight():0)+
me.topContainer.getHeight()+
me.progressBar.getHeight()+
(footerVisible?me.bottomTb.getHeight()+me.bottomTb.el.getMargin('tb'):0);me.setSize(width+me.frameWidth,height+me.frameWidth);return me;},updateText:function(text){this.msg.setValue(text);return this.doAutoSize(true);},setIcon:function(icon){var me=this;me.iconComponent.removeCls(me.messageIconCls);if(icon){me.iconComponent.show();me.iconComponent.addCls(Ext.baseCSSPrefix+'dlg-icon');me.iconComponent.addCls(me.messageIconCls=icon);}else{me.iconComponent.removeCls(Ext.baseCSSPrefix+'dlg-icon');me.iconComponent.hide();}
return me;},updateProgress:function(value,progressText,msg){this.progressBar.updateProgress(value,progressText);if(msg){this.updateText(msg);}
return this;},onEsc:function(){if(this.closable!==false){this.callParent(arguments);}},confirm:function(cfg,msg,fn,scope){if(Ext.isString(cfg)){cfg={title:cfg,icon:this.QUESTION,msg:msg,buttons:this.YESNO,callback:fn,scope:scope};}
return this.show(cfg);},prompt:function(cfg,msg,fn,scope,multiline,value){if(Ext.isString(cfg)){cfg={prompt:true,title:cfg,minWidth:this.minPromptWidth,msg:msg,buttons:this.OKCANCEL,callback:fn,scope:scope,multiline:multiline,value:value};}
return this.show(cfg);},wait:function(cfg,title,config){if(Ext.isString(cfg)){cfg={title:title,msg:cfg,closable:false,wait:true,modal:true,minWidth:this.minProgressWidth,waitConfig:config};}
return this.show(cfg);},alert:function(cfg,msg,fn,scope){if(Ext.isString(cfg)){cfg={title:cfg,msg:msg,buttons:this.OK,fn:fn,scope:scope,minWidth:this.minWidth};}
return this.show(cfg);},progress:function(cfg,msg,progressText){if(Ext.isString(cfg)){cfg={title:cfg,msg:msg,progress:true,progressText:progressText};}
return this.show(cfg);}},function(){Ext.MessageBox=Ext.Msg=new this();});Ext.define('Ext.form.Basic',{extend:'Ext.util.Observable',alternateClassName:'Ext.form.BasicForm',requires:['Ext.util.MixedCollection','Ext.form.action.Load','Ext.form.action.Submit','Ext.window.MessageBox','Ext.data.Errors','Ext.util.DelayedTask'],constructor:function(owner,config){var me=this,onItemAddOrRemove=me.onItemAddOrRemove,reader,api,fn;me.owner=owner;me.mon(owner,{add:onItemAddOrRemove,remove:onItemAddOrRemove,scope:me});Ext.apply(me,config);if(Ext.isString(me.paramOrder)){me.paramOrder=me.paramOrder.split(/[\s,|]/);}
if(me.api){api=me.api=Ext.apply({},me.api);for(fn in api){if(api.hasOwnProperty(fn)){api[fn]=Ext.direct.Manager.parseMethod(api[fn]);}}}
me.checkValidityTask=new Ext.util.DelayedTask(me.checkValidity,me);reader=me.reader;if(reader&&!reader.isReader){if(typeof reader==='string'){reader={type:reader};}
me.reader=Ext.createByAlias('reader.'+reader.type,reader);}
reader=me.errorReader;if(reader&&!reader.isReader){if(typeof reader==='string'){reader={type:reader};}
me.errorReader=Ext.createByAlias('reader.'+reader.type,reader);}
me.addEvents('beforeaction','actionfailed','actioncomplete','validitychange','dirtychange');me.callParent();},initialize:function(){var me=this;me.initialized=true;me.onValidityChange(!me.hasInvalidField());},timeout:30,paramsAsHash:false,waitTitle:'Please Wait...',trackResetOnLoad:false,wasDirty:false,destroy:function(){this.clearListeners();this.checkValidityTask.cancel();},onItemAddOrRemove:function(parent,child){var me=this,isAdding=!!child.ownerCt,isContainer=child.isContainer;function handleField(field){me[isAdding?'mon':'mun'](field,{validitychange:me.checkValidity,dirtychange:me.checkDirty,scope:me,buffer:100});delete me._fields;}
if(child.isFormField){handleField(child);}else if(isContainer){if(child.isDestroyed||child.destroying){delete me._fields;}else{Ext.Array.forEach(child.query('[isFormField]'),handleField);}}
delete this._boundItems;if(me.initialized){me.checkValidityTask.delay(10);}},getFields:function(){var fields=this._fields;if(!fields){fields=this._fields=new Ext.util.MixedCollection();fields.addAll(this.owner.query('[isFormField]'));}
return fields;},getBoundItems:function(){var boundItems=this._boundItems;if(!boundItems||boundItems.getCount()===0){boundItems=this._boundItems=new Ext.util.MixedCollection();boundItems.addAll(this.owner.query('[formBind]'));}
return boundItems;},hasInvalidField:function(){return!!this.getFields().findBy(function(field){var preventMark=field.preventMark,isValid;field.preventMark=true;isValid=field.isValid();field.preventMark=preventMark;return!isValid;});},isValid:function(){var me=this,invalid;Ext.suspendLayouts();invalid=me.getFields().filterBy(function(field){return!field.validate();});Ext.resumeLayouts(true);return invalid.length<1;},checkValidity:function(){var me=this,valid=!me.hasInvalidField();if(valid!==me.wasValid){me.onValidityChange(valid);me.fireEvent('validitychange',me,valid);me.wasValid=valid;}},onValidityChange:function(valid){var boundItems=this.getBoundItems(),items,i,iLen,cmp;if(boundItems){items=boundItems.items;iLen=items.length;for(i=0;i<iLen;i++){cmp=items[i];if(cmp.disabled===valid){cmp.setDisabled(!valid);}}}},isDirty:function(){return!!this.getFields().findBy(function(f){return f.isDirty();});},checkDirty:function(){var dirty=this.isDirty();if(dirty!==this.wasDirty){this.fireEvent('dirtychange',this,dirty);this.wasDirty=dirty;}},hasUpload:function(){return!!this.getFields().findBy(function(f){return f.isFileUpload();});},doAction:function(action,options){if(Ext.isString(action)){action=Ext.ClassManager.instantiateByAlias('formaction.'+action,Ext.apply({},options,{form:this}));}
if(this.fireEvent('beforeaction',this,action)!==false){this.beforeAction(action);Ext.defer(action.run,100,action);}
return this;},submit:function(options){options=options||{};var me=this,action;if(options.standardSubmit||me.standardSubmit){action='standardsubmit';}else{action=me.api?'directsubmit':'submit';}
return me.doAction(action,options);},load:function(options){return this.doAction(this.api?'directload':'load',options);},updateRecord:function(record){record=record||this._record;if(!record){Ext.Error.raise("A record is required.");return this;}
var fields=record.fields.items,values=this.getFieldValues(),obj={},i=0,len=fields.length,name;for(;i<len;++i){name=fields[i].name;if(values.hasOwnProperty(name)){obj[name]=values[name];}}
record.beginEdit();record.set(obj);record.endEdit();return this;},loadRecord:function(record){this._record=record;return this.setValues(record.data);},getRecord:function(){return this._record;},beforeAction:function(action){var me=this,waitMsg=action.waitMsg,maskCls=Ext.baseCSSPrefix+'mask-loading',fields=me.getFields().items,f,fLen=fields.length,field,waitMsgTarget;for(f=0;f<fLen;f++){field=fields[f];if(field.isFormField&&field.syncValue){field.syncValue();}}
if(waitMsg){waitMsgTarget=me.waitMsgTarget;if(waitMsgTarget===true){me.owner.el.mask(waitMsg,maskCls);}else if(waitMsgTarget){waitMsgTarget=me.waitMsgTarget=Ext.get(waitMsgTarget);waitMsgTarget.mask(waitMsg,maskCls);}else{me.floatingAncestor=me.owner.up('[floating]');if(me.floatingAncestor){me.savePreventFocusOnActivate=me.floatingAncestor.preventFocusOnActivate;me.floatingAncestor.preventFocusOnActivate=true;}
Ext.MessageBox.wait(waitMsg,action.waitTitle||me.waitTitle);}}},afterAction:function(action,success){var me=this;if(action.waitMsg){var messageBox=Ext.MessageBox,waitMsgTarget=me.waitMsgTarget;if(waitMsgTarget===true){me.owner.el.unmask();}else if(waitMsgTarget){waitMsgTarget.unmask();}else{messageBox.hide();}}
if(me.floatingAncestor){me.floatingAncestor.preventFocusOnActivate=me.savePreventFocusOnActivate;}
if(success){if(action.reset){me.reset();}
Ext.callback(action.success,action.scope||action,[me,action]);me.fireEvent('actioncomplete',me,action);}else{Ext.callback(action.failure,action.scope||action,[me,action]);me.fireEvent('actionfailed',me,action);}},findField:function(id){return this.getFields().findBy(function(f){return f.id===id||f.getName()===id;});},markInvalid:function(errors){var me=this,e,eLen,error,value,key;function mark(fieldId,msg){var field=me.findField(fieldId);if(field){field.markInvalid(msg);}}
if(Ext.isArray(errors)){eLen=errors.length;for(e=0;e<eLen;e++){error=errors[e];mark(error.id,error.msg);}}else if(errors instanceof Ext.data.Errors){eLen=errors.items.length;for(e=0;e<eLen;e++){error=errors.items[e];mark(error.field,error.message);}}else{for(key in errors){if(errors.hasOwnProperty(key)){value=errors[key];mark(key,value,errors);}}}
return this;},setValues:function(values){var me=this,v,vLen,val,field;function setVal(fieldId,val){var field=me.findField(fieldId);if(field){field.setValue(val);if(me.trackResetOnLoad){field.resetOriginalValue();}}}
if(Ext.isArray(values)){vLen=values.length;for(v=0;v<vLen;v++){val=values[v];setVal(val.id,val.value);}}else{Ext.iterate(values,setVal);}
return this;},getValues:function(asString,dirtyOnly,includeEmptyText,useDataValues){var values={},fields=this.getFields().items,f,fLen=fields.length,isArray=Ext.isArray,field,data,val,bucket,name;for(f=0;f<fLen;f++){field=fields[f];if(!dirtyOnly||field.isDirty()){data=field[useDataValues?'getModelData':'getSubmitData'](includeEmptyText);if(Ext.isObject(data)){for(name in data){if(data.hasOwnProperty(name)){val=data[name];if(includeEmptyText&&val===''){val=field.emptyText||'';}
if(values.hasOwnProperty(name)){bucket=values[name];if(!isArray(bucket)){bucket=values[name]=[bucket];}
if(isArray(val)){values[name]=values[name]=bucket.concat(val);}else{bucket.push(val);}}else{values[name]=val;}}}}}}
if(asString){values=Ext.Object.toQueryString(values);}
return values;},getFieldValues:function(dirtyOnly){return this.getValues(false,dirtyOnly,false,true);},clearInvalid:function(){Ext.suspendLayouts();var me=this,fields=me.getFields().items,f,fLen=fields.length;for(f=0;f<fLen;f++){fields[f].clearInvalid();}
Ext.resumeLayouts(true);return me;},reset:function(resetRecord){Ext.suspendLayouts();var me=this,fields=me.getFields().items,f,fLen=fields.length;for(f=0;f<fLen;f++){fields[f].reset();}
Ext.resumeLayouts(true);if(resetRecord===true){delete me._record;}
return me;},applyToFields:function(obj){var fields=this.getFields().items,f,fLen=fields.length;for(f=0;f<fLen;f++){Ext.apply(fields[f],obj);}
return this;},applyIfToFields:function(obj){var fields=this.getFields().items,f,fLen=fields.length;for(f=0;f<fLen;f++){Ext.applyIf(fields[f],obj);}
return this;}});Ext.define('Ext.form.Panel',{extend:'Ext.panel.Panel',mixins:{fieldAncestor:'Ext.form.FieldAncestor'},alias:'widget.form',alternateClassName:['Ext.FormPanel','Ext.form.FormPanel'],requires:['Ext.form.Basic','Ext.util.TaskRunner'],layout:'anchor',ariaRole:'form',basicFormConfigs:['api','baseParams','errorReader','method','paramOrder','paramsAsHash','reader','standardSubmit','timeout','trackResetOnLoad','url','waitMsgTarget','waitTitle'],initComponent:function(){var me=this;if(me.frame){me.border=false;}
me.initFieldAncestor();me.callParent();me.relayEvents(me.form,['beforeaction','actionfailed','actioncomplete','validitychange','dirtychange']);if(me.pollForChanges){me.startPolling(me.pollInterval||500);}},initItems:function(){var me=this;me.form=me.createForm();me.callParent();},afterFirstLayout:function(){this.callParent();this.form.initialize();},createForm:function(){var cfg={},props=this.basicFormConfigs,len=props.length,i=0,prop;for(;i<len;++i){prop=props[i];cfg[prop]=this[prop];}
return new Ext.form.Basic(this,cfg);},getForm:function(){return this.form;},loadRecord:function(record){return this.getForm().loadRecord(record);},getRecord:function(){return this.getForm().getRecord();},getValues:function(asString,dirtyOnly,includeEmptyText,useDataValues){return this.getForm().getValues(asString,dirtyOnly,includeEmptyText,useDataValues);},isDirty:function(){return this.form.isDirty();},isValid:function(){return this.form.isValid();},hasInvalidField:function(){return this.form.hasInvalidField();},beforeDestroy:function(){this.stopPolling();this.form.destroy();this.callParent();},load:function(options){this.form.load(options);},submit:function(options){this.form.submit(options);},startPolling:function(interval){this.stopPolling();var task=new Ext.util.TaskRunner(interval);task.start({interval:0,run:this.checkChange,scope:this});this.pollTask=task;},stopPolling:function(){var task=this.pollTask;if(task){task.stopAll();delete this.pollTask;}},checkChange:function(){var fields=this.form.getFields().items,f,fLen=fields.length,field;for(f=0;f<fLen;f++){fields[f].checkChange();}}});Ext.define('Puma.view.CommonForm',{extend:'Ext.form.Panel',alias:'widget.commonform',requires:[],padding:10,frame:true,initComponent:function(){this.buttons=[{itemId:'resetbtn',text:'Reset'},{itemId:'reloadbtn',text:'Reload'},{itemId:'savebtn',formBind:true,disabled:true,text:'Save'}]
this.fieldDefaults={labelAlign:'left',labelWidth:90,anchor:'100%'};this.callParent();this.addEvents({loadrecord:true,beforesave:true,aftersave:true})
var me=this;var form=this.getForm();form.loadRecord=function(record){this._record=record;var values=this.setValues(record.data);this.getFields().each(function(field){if(field.disableUpdate){field.disable();}})
me.fireEvent('loadrecord',me,record);return values;}
form.unbindRecord=function(){this._record=null;this.getFields().each(function(field){if(field.disableUpdate){field.enable();}})
if(!this.copying&&!this.unselecting){this.getFields().each(function(field){field.fireEvent('change',field,field.getValue(),field.getValue())})}}
this.on('enable',function(){var me=this;window.setTimeout(function(){me.getForm().checkValidity();},1)})}});Ext.define('Ext.tip.Tip',{extend:'Ext.panel.Panel',alternateClassName:'Ext.Tip',minWidth:40,maxWidth:300,shadow:"sides",defaultAlign:"tl-bl?",constrainPosition:true,autoRender:true,hidden:true,baseCls:Ext.baseCSSPrefix+'tip',floating:{shadow:true,shim:true,constrain:true},focusOnToFront:false,closeAction:'hide',ariaRole:'tooltip',alwaysFramed:true,frameHeader:false,initComponent:function(){var me=this;me.floating=Ext.apply({},{shadow:me.shadow},me.self.prototype.floating);me.callParent(arguments);me.constrain=me.constrain||me.constrainPosition;},showAt:function(xy){var me=this;this.callParent(arguments);if(me.isVisible()){me.setPagePosition(xy[0],xy[1]);if(me.constrainPosition||me.constrain){me.doConstrain();}
me.toFront(true);}},showBy:function(el,pos){this.showAt(this.el.getAlignToXY(el,pos||this.defaultAlign));},initDraggable:function(){var me=this;me.draggable={el:me.getDragEl(),delegate:me.header.el,constrain:me,constrainTo:me.el.getScopeParent()};Ext.Component.prototype.initDraggable.call(me);},ghost:undefined,unghost:undefined});Ext.define('Ext.tip.ToolTip',{extend:'Ext.tip.Tip',alias:'widget.tooltip',alternateClassName:'Ext.ToolTip',autoHide:true,showDelay:500,hideDelay:200,dismissDelay:5000,trackMouse:false,anchorToTarget:true,anchorOffset:0,targetCounter:0,quickShowInterval:250,initComponent:function(){var me=this;me.callParent(arguments);me.lastActive=new Date();me.setTarget(me.target);me.origAnchor=me.anchor;},onRender:function(ct,position){var me=this;me.callParent(arguments);me.anchorCls=Ext.baseCSSPrefix+'tip-anchor-'+me.getAnchorPosition();me.anchorEl=me.el.createChild({cls:Ext.baseCSSPrefix+'tip-anchor '+me.anchorCls});},setTarget:function(target){var me=this,t=Ext.get(target),tg;if(me.target){tg=Ext.get(me.target);me.mun(tg,'mouseover',me.onTargetOver,me);me.mun(tg,'mouseout',me.onTargetOut,me);me.mun(tg,'mousemove',me.onMouseMove,me);}
me.target=t;if(t){me.mon(t,{freezeEvent:true,mouseover:me.onTargetOver,mouseout:me.onTargetOut,mousemove:me.onMouseMove,scope:me});}
if(me.anchor){me.anchorTarget=me.target;}},onMouseMove:function(e){var me=this,t=me.delegate?e.getTarget(me.delegate):me.triggerElement=true,xy;if(t){me.targetXY=e.getXY();if(t===me.triggerElement){if(!me.hidden&&me.trackMouse){xy=me.getTargetXY();if(me.constrainPosition){xy=me.el.adjustForConstraints(xy,me.el.getScopeParent());}
me.setPagePosition(xy);}}else{me.hide();me.lastActive=new Date(0);me.onTargetOver(e);}}else if((!me.closable&&me.isVisible())&&me.autoHide!==false){me.hide();}},getTargetXY:function(){var me=this,mouseOffset,offsets,xy,dw,dh,de,bd,scrollX,scrollY,axy,sz,constrainPosition;if(me.delegate){me.anchorTarget=me.triggerElement;}
if(me.anchor){me.targetCounter++;offsets=me.getOffsets();xy=(me.anchorToTarget&&!me.trackMouse)?me.el.getAlignToXY(me.anchorTarget,me.getAnchorAlign()):me.targetXY;dw=Ext.Element.getViewWidth()-5;dh=Ext.Element.getViewHeight()-5;de=document.documentElement;bd=document.body;scrollX=(de.scrollLeft||bd.scrollLeft||0)+5;scrollY=(de.scrollTop||bd.scrollTop||0)+5;axy=[xy[0]+offsets[0],xy[1]+offsets[1]];sz=me.getSize();constrainPosition=me.constrainPosition;me.anchorEl.removeCls(me.anchorCls);if(me.targetCounter<2&&constrainPosition){if(axy[0]<scrollX){if(me.anchorToTarget){me.defaultAlign='l-r';if(me.mouseOffset){me.mouseOffset[0]*=-1;}}
me.anchor='left';return me.getTargetXY();}
if(axy[0]+sz.width>dw){if(me.anchorToTarget){me.defaultAlign='r-l';if(me.mouseOffset){me.mouseOffset[0]*=-1;}}
me.anchor='right';return me.getTargetXY();}
if(axy[1]<scrollY){if(me.anchorToTarget){me.defaultAlign='t-b';if(me.mouseOffset){me.mouseOffset[1]*=-1;}}
me.anchor='top';return me.getTargetXY();}
if(axy[1]+sz.height>dh){if(me.anchorToTarget){me.defaultAlign='b-t';if(me.mouseOffset){me.mouseOffset[1]*=-1;}}
me.anchor='bottom';return me.getTargetXY();}}
me.anchorCls=Ext.baseCSSPrefix+'tip-anchor-'+me.getAnchorPosition();me.anchorEl.addCls(me.anchorCls);me.targetCounter=0;return axy;}else{mouseOffset=me.getMouseOffset();return(me.targetXY)?[me.targetXY[0]+mouseOffset[0],me.targetXY[1]+mouseOffset[1]]:mouseOffset;}},getMouseOffset:function(){var me=this,offset=me.anchor?[0,0]:[15,18];if(me.mouseOffset){offset[0]+=me.mouseOffset[0];offset[1]+=me.mouseOffset[1];}
return offset;},getAnchorPosition:function(){var me=this,m;if(me.anchor){me.tipAnchor=me.anchor.charAt(0);}else{m=me.defaultAlign.match(/^([a-z]+)-([a-z]+)(\?)?$/);if(!m){Ext.Error.raise('The AnchorTip.defaultAlign value "'+me.defaultAlign+'" is invalid.');}
me.tipAnchor=m[1].charAt(0);}
switch(me.tipAnchor){case't':return'top';case'b':return'bottom';case'r':return'right';}
return'left';},getAnchorAlign:function(){switch(this.anchor){case'top':return'tl-bl';case'left':return'tl-tr';case'right':return'tr-tl';default:return'bl-tl';}},getOffsets:function(){var me=this,mouseOffset,offsets,ap=me.getAnchorPosition().charAt(0);if(me.anchorToTarget&&!me.trackMouse){switch(ap){case't':offsets=[0,9];break;case'b':offsets=[0,-13];break;case'r':offsets=[-13,0];break;default:offsets=[9,0];break;}}else{switch(ap){case't':offsets=[-15-me.anchorOffset,30];break;case'b':offsets=[-19-me.anchorOffset,-13-me.el.dom.offsetHeight];break;case'r':offsets=[-15-me.el.dom.offsetWidth,-13-me.anchorOffset];break;default:offsets=[25,-13-me.anchorOffset];break;}}
mouseOffset=me.getMouseOffset();offsets[0]+=mouseOffset[0];offsets[1]+=mouseOffset[1];return offsets;},onTargetOver:function(e){var me=this,t;if(me.disabled||e.within(me.target.dom,true)){return;}
t=e.getTarget(me.delegate);if(t){me.triggerElement=t;me.clearTimer('hide');me.targetXY=e.getXY();me.delayShow();}},delayShow:function(){var me=this;if(me.hidden&&!me.showTimer){if(Ext.Date.getElapsed(me.lastActive)<me.quickShowInterval){me.show();}else{me.showTimer=Ext.defer(me.showFromDelay,me.showDelay,me);}}
else if(!me.hidden&&me.autoHide!==false){me.show();}},showFromDelay:function(){this.fromDelayShow=true;this.show();delete this.fromDelayShow;},onShowVeto:function(){this.callParent();delete this.triggerElement;this.clearTimer('show');},onTargetOut:function(e){var me=this;if(me.disabled||e.within(me.target.dom,true)){return;}
me.clearTimer('show');if(me.autoHide!==false){me.delayHide();}},delayHide:function(){var me=this;if(!me.hidden&&!me.hideTimer){me.hideTimer=Ext.defer(me.hide,me.hideDelay,me);}},hide:function(){var me=this;me.clearTimer('dismiss');me.lastActive=new Date();if(me.anchorEl){me.anchorEl.hide();}
me.callParent(arguments);delete me.triggerElement;},show:function(){var me=this;this.callParent();if(this.hidden===false){me.setPagePosition(-10000,-10000);if(me.anchor){me.anchor=me.origAnchor;}
if(!me.calledFromShowAt){me.showAt(me.getTargetXY());}
if(me.anchor){me.syncAnchor();me.anchorEl.show();}else{me.anchorEl.hide();}}},showAt:function(xy){var me=this;me.lastActive=new Date();me.clearTimers();me.calledFromShowAt=true;if(!me.isVisible()){this.callParent(arguments);}
if(me.isVisible()){me.setPagePosition(xy[0],xy[1]);if(me.constrainPosition||me.constrain){me.doConstrain();}
me.toFront(true);me.el.sync(true);if(me.dismissDelay&&me.autoHide!==false){me.dismissTimer=Ext.defer(me.hide,me.dismissDelay,me);}
if(me.anchor){me.syncAnchor();if(!me.anchorEl.isVisible()){me.anchorEl.show();}}else{me.anchorEl.hide();}}
delete me.calledFromShowAt;},syncAnchor:function(){var me=this,anchorPos,targetPos,offset;switch(me.tipAnchor.charAt(0)){case't':anchorPos='b';targetPos='tl';offset=[20+me.anchorOffset,1];break;case'r':anchorPos='l';targetPos='tr';offset=[-1,12+me.anchorOffset];break;case'b':anchorPos='t';targetPos='bl';offset=[20+me.anchorOffset,-1];break;default:anchorPos='r';targetPos='tl';offset=[1,12+me.anchorOffset];break;}
me.anchorEl.alignTo(me.el,anchorPos+'-'+targetPos,offset);me.anchorEl.setStyle('z-index',parseInt(me.el.getZIndex(),10)||0+1).setVisibilityMode(Ext.Element.DISPLAY);},setPagePosition:function(x,y){var me=this;me.callParent(arguments);if(me.anchor){me.syncAnchor();}},clearTimer:function(name){name=name+'Timer';clearTimeout(this[name]);delete this[name];},clearTimers:function(){var me=this;me.clearTimer('show');me.clearTimer('dismiss');me.clearTimer('hide');},onShow:function(){var me=this;me.callParent();me.mon(Ext.getDoc(),'mousedown',me.onDocMouseDown,me);},onHide:function(){var me=this;me.callParent();me.mun(Ext.getDoc(),'mousedown',me.onDocMouseDown,me);},onDocMouseDown:function(e){var me=this;if(!me.closable&&!e.within(me.el.dom)){me.disable();Ext.defer(me.doEnable,100,me);}},doEnable:function(){if(!this.isDestroyed){this.enable();}},onDisable:function(){this.callParent();this.clearTimers();this.hide();},beforeDestroy:function(){var me=this;me.clearTimers();Ext.destroy(me.anchorEl);delete me.anchorEl;delete me.target;delete me.anchorTarget;delete me.triggerElement;me.callParent();},onDestroy:function(){Ext.getDoc().un('mousedown',this.onDocMouseDown,this);this.callParent();}});Ext.define('Ext.tip.QuickTip',{extend:'Ext.tip.ToolTip',alias:'widget.quicktip',alternateClassName:'Ext.QuickTip',interceptTitles:false,title:'&#160;',tagConfig:{namespace:"data-",attribute:"qtip",width:"qwidth",target:"target",title:"qtitle",hide:"hide",cls:"qclass",align:"qalign",anchor:"anchor"},initComponent:function(){var me=this;me.target=me.target||Ext.getDoc();me.targets=me.targets||{};me.callParent();},register:function(config){var configs=Ext.isArray(config)?config:arguments,i=0,len=configs.length,target,j,targetLen;for(;i<len;i++){config=configs[i];target=config.target;if(target){if(Ext.isArray(target)){for(j=0,targetLen=target.length;j<targetLen;j++){this.targets[Ext.id(target[j])]=config;}}else{this.targets[Ext.id(target)]=config;}}}},unregister:function(el){delete this.targets[Ext.id(el)];},cancelShow:function(el){var me=this,activeTarget=me.activeTarget;el=Ext.get(el).dom;if(me.isVisible()){if(activeTarget&&activeTarget.el==el){me.hide();}}else if(activeTarget&&activeTarget.el==el){me.clearTimer('show');}},getTipCfg:function(e){var t=e.getTarget(),titleText=t.title,cfg;if(this.interceptTitles&&titleText&&Ext.isString(titleText)){t.qtip=titleText;t.removeAttribute("title");e.preventDefault();return{text:titleText};}
else{cfg=this.tagConfig;t=e.getTarget('['+cfg.namespace+cfg.attribute+']');if(t){return{target:t,text:t.getAttribute(cfg.namespace+cfg.attribute)};}}},onTargetOver:function(e){var me=this,target=e.getTarget(me.delegate),hasShowDelay,delay,elTarget,cfg,ns,tipConfig,autoHide,targets,targetEl,value,key;if(me.disabled){return;}
me.targetXY=e.getXY();if(!target||target.nodeType!==1||target==document.documentElement||target==document.body){return;}
if(me.activeTarget&&((target==me.activeTarget.el)||Ext.fly(me.activeTarget.el).contains(target))){if(me.targetTextEmpty()){me.onShowVeto();delete me.activeTarget;}else{me.clearTimer('hide');me.show();}
return;}
if(target){targets=me.targets;for(key in targets){if(targets.hasOwnProperty(key)){value=targets[key];targetEl=Ext.fly(value.target);if(targetEl&&(targetEl.dom===target||targetEl.contains(target))){elTarget=targetEl.dom;break;}}}
if(elTarget){me.activeTarget=me.targets[elTarget.id];me.activeTarget.el=target;me.anchor=me.activeTarget.anchor;if(me.anchor){me.anchorTarget=target;}
hasShowDelay=Ext.isDefined(me.activeTarget.showDelay);if(hasShowDelay){delay=me.showDelay;me.showDelay=me.activeTarget.showDelay;}
me.delayShow();if(hasShowDelay){me.showDelay=delay;}
return;}}
elTarget=Ext.fly(target,'_quicktip-target');cfg=me.tagConfig;ns=cfg.namespace;tipConfig=me.getTipCfg(e);if(tipConfig){if(tipConfig.target){target=tipConfig.target;elTarget=Ext.fly(target,'_quicktip-target');}
autoHide=elTarget.getAttribute(ns+cfg.hide);me.activeTarget={el:target,text:tipConfig.text,width:+elTarget.getAttribute(ns+cfg.width)||null,autoHide:autoHide!="user"&&autoHide!=='false',title:elTarget.getAttribute(ns+cfg.title),cls:elTarget.getAttribute(ns+cfg.cls),align:elTarget.getAttribute(ns+cfg.align)};me.anchor=elTarget.getAttribute(ns+cfg.anchor);if(me.anchor){me.anchorTarget=target;}
hasShowDelay=Ext.isDefined(me.activeTarget.showDelay);if(hasShowDelay){delay=me.showDelay;me.showDelay=me.activeTarget.showDelay;}
me.delayShow();if(hasShowDelay){me.showDelay=delay;}}},onTargetOut:function(e){var me=this,active=me.activeTarget,hasHideDelay,delay;if(active&&e.within(me.activeTarget.el)&&!me.getTipCfg(e)){return;}
me.clearTimer('show');delete me.activeTarget;if(me.autoHide!==false){hasHideDelay=active&&Ext.isDefined(active.hideDelay);if(hasHideDelay){delay=me.hideDelay;me.hideDelay=active.hideDelay;}
me.delayHide();if(hasHideDelay){me.hideDelay=delay;}}},targetTextEmpty:function(){var me=this,target=me.activeTarget,cfg=me.tagConfig,el,text;if(target){el=target.el;if(el){text=el.getAttribute(cfg.namespace+cfg.attribute);if(!text&&!me.targets[target.target]){return true;}}}
return false;},show:function(){var me=this,fromDelay=me.fromDelayShow;if(fromDelay&&me.targetTextEmpty()){me.onShowVeto();delete me.activeTarget;return;}
me.callParent(arguments);},showAt:function(xy){var me=this,target=me.activeTarget,cls;if(target){if(!me.rendered){me.render(Ext.getBody());me.activeTarget=target;}
me.suspendLayouts();if(target.title){me.setTitle(target.title);me.header.show();}else{me.header.hide();}
me.update(target.text);me.autoHide=target.autoHide;me.dismissDelay=target.dismissDelay||me.dismissDelay;if(target.mouseOffset){xy[0]+=target.mouseOffset[0];xy[1]+=target.mouseOffset[1];}
cls=me.lastCls;if(cls){me.removeCls(cls);delete me.lastCls;}
cls=target.cls;if(cls){me.addCls(cls);me.lastCls=cls;}
me.setWidth(target.width);if(me.anchor){me.constrainPosition=false;}else if(target.align){xy=me.el.getAlignToXY(target.el,target.align);me.constrainPosition=false;}else{me.constrainPosition=true;}
me.resumeLayouts(true);}
me.callParent([xy]);},hide:function(){delete this.activeTarget;this.callParent();}});Ext.define('Ext.tip.QuickTipManager',(function(){var tip,disabled=false;return{requires:['Ext.tip.QuickTip'],singleton:true,alternateClassName:'Ext.QuickTips',init:function(autoRender,config){if(!tip){if(!Ext.isReady){Ext.onReady(function(){Ext.tip.QuickTipManager.init(autoRender,config);});return;}
var tipConfig=Ext.apply({disabled:disabled,id:'ext-quicktips-tip'},config),className=tipConfig.className,xtype=tipConfig.xtype;if(className){delete tipConfig.className;}else if(xtype){className='widget.'+xtype;delete tipConfig.xtype;}
if(autoRender!==false){tipConfig.renderTo=document.body;if(tipConfig.renderTo.tagName.toUpperCase()!='BODY'){Ext.Error.raise({sourceClass:'Ext.tip.QuickTipManager',sourceMethod:'init',msg:'Cannot init QuickTipManager: no document body'});}}
tip=Ext.create(className||'Ext.tip.QuickTip',tipConfig);Ext.quickTipsActive=true;}},destroy:function(){if(tip){var undef;tip.destroy();tip=undef;}},ddDisable:function(){if(tip&&!disabled){tip.disable();}},ddEnable:function(){if(tip&&!disabled){tip.enable();}},enable:function(){if(tip){tip.enable();}
disabled=false;},disable:function(){if(tip){tip.disable();}
disabled=true;},isEnabled:function(){return tip!==undefined&&!tip.disabled;},getQuickTip:function(){return tip;},register:function(){tip.register.apply(tip,arguments);},unregister:function(){tip.unregister.apply(tip,arguments);},tips:function(){tip.register.apply(tip,arguments);}};}()));Ext.define('Ext.app.Application',{extend:'Ext.app.Controller',requires:['Ext.ModelManager','Ext.data.Model','Ext.data.StoreManager','Ext.tip.QuickTipManager','Ext.ComponentManager','Ext.app.EventBus'],scope:undefined,enableQuickTips:true,appFolder:'app',appProperty:'app',autoCreateViewport:false,paths:null,onClassExtended:function(cls,data,hooks){var Controller=Ext.app.Controller,proto=cls.prototype,namespace=data.name,requires=[],onBeforeClassCreated;Controller.processDependencies(proto,requires,namespace,'controller',data.controllers);if(data.autoCreateViewport){Controller.processDependencies(proto,requires,namespace,'view',['Viewport']);}
if(requires.length){onBeforeClassCreated=hooks.onBeforeCreated;hooks.onBeforeCreated=function(cls,data){var args=Ext.Array.clone(arguments);Ext.require(requires,function(){return onBeforeClassCreated.apply(this,args);});};}},constructor:function(config){var me=this,appProperty=me.appProperty,controllers,ln,i,controller,ns;if(Ext.isEmpty(me.name)){Ext.Error.raise("[Ext.app.Application] Name property is required");}
me.callParent(arguments);me.eventbus=new Ext.app.EventBus();controllers=Ext.Array.from(me.controllers);me.controllers=new Ext.util.MixedCollection();ns=Ext.namespace(me.name);if(ns){ns.getApplication=function(){return me;};if(appProperty){if(!ns[appProperty]){ns[appProperty]=me;}
else if(ns[appProperty]!==me){Ext.log.warn('An existing reference is being overwritten for '+name+'.'+appProperty+'. See the appProperty config.');}}}
me.doInit(me);ln=controllers&&controllers.length;for(i=0;i<ln;i++){controller=me.getController(controllers[i]);controller.doInit(me);}
me.onBeforeLaunch();},control:function(selectors,listeners,controller){this.eventbus.control(selectors,listeners,controller);},launch:Ext.emptyFn,onBeforeLaunch:function(){var me=this,controllers,c,cLen,controller;if(me.enableQuickTips){Ext.tip.QuickTipManager.init();}
if(me.autoCreateViewport){me.getView('Viewport').create();}
me.launch.call(this.scope||this);me.launched=true;me.fireEvent('launch',this);controllers=me.controllers.items;cLen=controllers.length;for(c=0;c<cLen;c++){controller=controllers[c];controller.onLaunch(this);}},getModuleClassName:function(name,kind){return Ext.app.Controller.getFullName(name,this.name+'.'+kind+'.').absoluteName;},getController:function(name){var me=this,controllers=me.controllers,controller=controllers.get(name);if(!controller){controller=Ext.create(me.getModuleClassName(name,'controller'),{application:me,id:name});controllers.add(controller);if(me._initialized){controller.doInit(me);}}
return controller;},getStore:function(name){var storeId=(name.indexOf("@")==-1)?name:name.split("@")[0],store=Ext.StoreManager.get(storeId);if(!store){store=Ext.create(this.getModuleClassName(name,'store'),{storeId:storeId});}
return store;},getModel:function(model){model=this.getModuleClassName(model,'model');return Ext.ModelManager.getModel(model);},getView:function(view){view=this.getModuleClassName(view,'view');return Ext.ClassManager.get(view);},getApplication:function(){return this;}});Ext.define('Ext.panel.Tool',{extend:'Ext.Component',requires:['Ext.tip.QuickTipManager'],alias:'widget.tool',baseCls:Ext.baseCSSPrefix+'tool',disabledCls:Ext.baseCSSPrefix+'tool-disabled',toolPressedCls:Ext.baseCSSPrefix+'tool-pressed',toolOverCls:Ext.baseCSSPrefix+'tool-over',ariaRole:'button',childEls:['toolEl'],renderTpl:['<img id="{id}-toolEl" src="{blank}" class="{baseCls}-{type}" role="presentation"/>'],tooltipType:'qtip',stopEvent:true,height:16,width:16,_toolTypes:{close:1,collapse:1,down:1,expand:1,gear:1,help:1,left:1,maximize:1,minimize:1,minus:1,next:1,pin:1,plus:1,prev:1,print:1,refresh:1,restore:1,right:1,save:1,search:1,toggle:1,unpin:1,up:1},initComponent:function(){var me=this;me.addEvents('click');if(me.id&&me._toolTypes[me.id]&&Ext.global.console){Ext.global.console.warn('When specifying a tool you should use the type option, the id can conflict now that tool is a Component');}
me.type=me.type||me.id;Ext.applyIf(me.renderData,{baseCls:me.baseCls,blank:Ext.BLANK_IMAGE_URL,type:me.type});me.tooltip=me.tooltip||me.qtip;me.callParent();me.on({element:'toolEl',click:me.onClick,mousedown:me.onMouseDown,mouseover:me.onMouseOver,mouseout:me.onMouseOut,scope:me});},afterRender:function(){var me=this,attr;me.callParent(arguments);if(me.tooltip){if(Ext.quickTipsActive&&Ext.isObject(me.tooltip)){Ext.tip.QuickTipManager.register(Ext.apply({target:me.id},me.tooltip));}
else{attr=me.tooltipType=='qtip'?'data-qtip':'title';me.toolEl.dom.setAttribute(attr,me.tooltip);}}},getFocusEl:function(){return this.el;},setType:function(type){var me=this;me.type=type;if(me.rendered){me.toolEl.dom.className=me.baseCls+'-'+type;}
return me;},bindTo:function(component){this.owner=component;},onClick:function(e,target){var me=this,owner;if(me.disabled){return false;}
owner=me.owner||me.ownerCt;me.el.removeCls(me.toolPressedCls);me.el.removeCls(me.toolOverCls);if(me.stopEvent!==false){e.stopEvent();}
Ext.callback(me.handler,me.scope||me,[e,target,owner,me]);me.fireEvent('click',me,e);return true;},onDestroy:function(){if(Ext.quickTipsActive&&Ext.isObject(this.tooltip)){Ext.tip.QuickTipManager.unregister(this.id);}
this.callParent();},onMouseDown:function(){if(this.disabled){return false;}
this.el.addCls(this.toolPressedCls);},onMouseOver:function(){if(this.disabled){return false;}
this.el.addCls(this.toolOverCls);},onMouseOut:function(){this.el.removeCls(this.toolOverCls);}});Ext.define('Puma.patch.panel.Tool',{override:'Ext.panel.Tool',initComponent:function(){this.height=22;this.width=22;this.margin='0 0 0 5';this.callParent();},})
Ext.define('Ext.dd.DDTarget',{extend:'Ext.dd.DragDrop',constructor:function(id,sGroup,config){if(id){this.initTarget(id,sGroup,config);}},getDragEl:Ext.emptyFn,isValidHandleChild:Ext.emptyFn,startDrag:Ext.emptyFn,endDrag:Ext.emptyFn,onDrag:Ext.emptyFn,onDragDrop:Ext.emptyFn,onDragEnter:Ext.emptyFn,onDragOut:Ext.emptyFn,onDragOver:Ext.emptyFn,onInvalidDrop:Ext.emptyFn,onMouseDown:Ext.emptyFn,onMouseUp:Ext.emptyFn,setXConstraint:Ext.emptyFn,setYConstraint:Ext.emptyFn,resetConstraints:Ext.emptyFn,clearConstraints:Ext.emptyFn,clearTicks:Ext.emptyFn,setInitPosition:Ext.emptyFn,setDragElId:Ext.emptyFn,setHandleElId:Ext.emptyFn,setOuterHandleElId:Ext.emptyFn,addInvalidHandleClass:Ext.emptyFn,addInvalidHandleId:Ext.emptyFn,addInvalidHandleType:Ext.emptyFn,removeInvalidHandleClass:Ext.emptyFn,removeInvalidHandleId:Ext.emptyFn,removeInvalidHandleType:Ext.emptyFn,toString:function(){return("DDTarget "+this.id);}});Ext.define('Ext.dd.DropTarget',{extend:'Ext.dd.DDTarget',requires:['Ext.dd.ScrollManager'],constructor:function(el,config){this.el=Ext.get(el);Ext.apply(this,config);if(this.containerScroll){Ext.dd.ScrollManager.register(this.el);}
this.callParent([this.el.dom,this.ddGroup||this.group,{isTarget:true}]);},dropAllowed:Ext.baseCSSPrefix+'dd-drop-ok',dropNotAllowed:Ext.baseCSSPrefix+'dd-drop-nodrop',isTarget:true,isNotifyTarget:true,notifyEnter:function(dd,e,data){if(this.overClass){this.el.addCls(this.overClass);}
return this.dropAllowed;},notifyOver:function(dd,e,data){return this.dropAllowed;},notifyOut:function(dd,e,data){if(this.overClass){this.el.removeCls(this.overClass);}},notifyDrop:function(dd,e,data){return false;},destroy:function(){this.callParent();if(this.containerScroll){Ext.dd.ScrollManager.unregister(this.el);}}});Ext.define('Ext.dd.DropZone',{extend:'Ext.dd.DropTarget',requires:['Ext.dd.Registry'],getTargetFromEvent:function(e){return Ext.dd.Registry.getTargetFromEvent(e);},onNodeEnter:function(n,dd,e,data){},onNodeOver:function(n,dd,e,data){return this.dropAllowed;},onNodeOut:function(n,dd,e,data){},onNodeDrop:function(n,dd,e,data){return false;},onContainerOver:function(dd,e,data){return this.dropNotAllowed;},onContainerDrop:function(dd,e,data){return false;},notifyEnter:function(dd,e,data){return this.dropNotAllowed;},notifyOver:function(dd,e,data){var n=this.getTargetFromEvent(e);if(!n){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,dd,e,data);this.lastOverNode=null;}
return this.onContainerOver(dd,e,data);}
if(this.lastOverNode!=n){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,dd,e,data);}
this.onNodeEnter(n,dd,e,data);this.lastOverNode=n;}
return this.onNodeOver(n,dd,e,data);},notifyOut:function(dd,e,data){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,dd,e,data);this.lastOverNode=null;}},notifyDrop:function(dd,e,data){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,dd,e,data);this.lastOverNode=null;}
var n=this.getTargetFromEvent(e);return n?this.onNodeDrop(n,dd,e,data):this.onContainerDrop(dd,e,data);},triggerCacheRefresh:function(){Ext.dd.DDM.refreshCache(this.groups);}});Ext.define('Puma.patch.dd.DropZone',{override:'Ext.dd.DropZone',notifyDrop:function(dd,e,data){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,dd,e,data);this.lastOverNode=null;}
var n=this.getTargetFromEvent(e);dd.view.store.dragging=true;var ret=n?this.onNodeDrop(n,dd,e,data):this.onContainerDrop(dd,e,data);dd.view.store.dragging=false;return ret;},})
Ext.define('Ext.grid.header.DropZone',{extend:'Ext.dd.DropZone',colHeaderCls:Ext.baseCSSPrefix+'column-header',proxyOffsets:[-4,-9],constructor:function(headerCt){this.headerCt=headerCt;this.ddGroup=this.getDDGroup();this.callParent([headerCt.el]);},getDDGroup:function(){return'header-dd-zone-'+this.headerCt.up('[scrollerOwner]').id;},getTargetFromEvent:function(e){return e.getTarget('.'+this.colHeaderCls);},getTopIndicator:function(){if(!this.topIndicator){this.topIndicator=Ext.DomHelper.append(Ext.getBody(),{cls:"col-move-top",html:"&#160;"},true);}
return this.topIndicator;},getBottomIndicator:function(){if(!this.bottomIndicator){this.bottomIndicator=Ext.DomHelper.append(Ext.getBody(),{cls:"col-move-bottom",html:"&#160;"},true);}
return this.bottomIndicator;},getLocation:function(e,t){var x=e.getXY()[0],region=Ext.fly(t).getRegion(),pos;if((region.right-x)<=(region.right-region.left)/2){pos="after";}else{pos="before";}
return{pos:pos,header:Ext.getCmp(t.id),node:t};},positionIndicator:function(data,node,e){var dragHeader=data.header,dropLocation=this.getLocation(e,node),targetHeader=dropLocation.header,pos=dropLocation.pos,fromHeader=dragHeader.up('headercontainer:not(gridcolumn)'),toHeader=targetHeader.up('headercontainer:not(gridcolumn)'),nextHd=dragHeader.nextSibling('gridcolumn:not([hidden])'),prevHd=dragHeader.previousSibling('gridcolumn:not([hidden])'),topIndicator,bottomIndicator,topAnchor,bottomAnchor,topXY,bottomXY,headerCtEl,minX,maxX,allDropZones,ln,i,dropZone;if(!targetHeader.draggable&&targetHeader.getIndex()===0){return false;}
data.isLock=data.isUnlock=false;if(fromHeader!==toHeader&&fromHeader.lockableInjected&&toHeader.lockableInjected&&toHeader.lockedCt){data.isLock=true;}else if(fromHeader!==toHeader&&fromHeader.lockableInjected&&toHeader.lockableInjected&&fromHeader.lockedCt){data.isUnlock=true;}
if((data.isUnlock&&dragHeader.lockable===false)||(data.isLock&&!dragHeader.isLockable())){return false;}
data.dropLocation=dropLocation;if((dragHeader!==targetHeader)&&((pos==="before"&&nextHd!==targetHeader)||(pos==="after"&&prevHd!==targetHeader))&&!targetHeader.isDescendantOf(dragHeader)){allDropZones=Ext.dd.DragDropManager.getRelated(this);ln=allDropZones.length;i=0;for(;i<ln;i++){dropZone=allDropZones[i];if(dropZone!==this&&dropZone.invalidateDrop){dropZone.invalidateDrop();}}
this.valid=true;topIndicator=this.getTopIndicator();bottomIndicator=this.getBottomIndicator();if(pos==='before'){topAnchor='tl';bottomAnchor='bl';}else{topAnchor='tr';bottomAnchor='br';}
topXY=targetHeader.el.getAnchorXY(topAnchor);bottomXY=targetHeader.el.getAnchorXY(bottomAnchor);headerCtEl=this.headerCt.el;minX=headerCtEl.getLeft();maxX=headerCtEl.getRight();topXY[0]=Ext.Number.constrain(topXY[0],minX,maxX);bottomXY[0]=Ext.Number.constrain(bottomXY[0],minX,maxX);topXY[0]-=4;topXY[1]-=9;bottomXY[0]-=4;topIndicator.setXY(topXY);bottomIndicator.setXY(bottomXY);topIndicator.show();bottomIndicator.show();}else{this.invalidateDrop();}},invalidateDrop:function(){this.valid=false;this.hideIndicators();},onNodeOver:function(node,dragZone,e,data){var me=this,doPosition=true,from=data.header,to;if(data.header.el.dom===node){doPosition=false;}else{to=me.getLocation(e,node).header;doPosition=(from.ownerCt===to.ownerCt)||(!from.ownerCt.sealed&&!to.ownerCt.sealed);}
if(doPosition){me.positionIndicator(data,node,e);}else{me.valid=false;}
return me.valid?me.dropAllowed:me.dropNotAllowed;},hideIndicators:function(){this.getTopIndicator().hide();this.getBottomIndicator().hide();},onNodeOut:function(){this.hideIndicators();},onNodeDrop:function(node,dragZone,e,data){if(this.valid){var dragHeader=data.header,dropLocation=data.dropLocation,targetHeader=dropLocation.header,fromCt=dragHeader.ownerCt,localFromIdx=fromCt.items.indexOf(dragHeader),toCt=targetHeader.ownerCt,localToIdx=toCt.items.indexOf(targetHeader),headerCt=this.headerCt,fromIdx=headerCt.getHeaderIndex(dragHeader),colsToMove=dragHeader.isGroupHeader?dragHeader.query(':not([isGroupHeader])').length:1,toIdx=headerCt.getHeaderIndex(targetHeader),groupCt,scrollerOwner;if(dropLocation.pos==='after'){localToIdx++;toIdx+=targetHeader.isGroupHeader?targetHeader.query(':not([isGroupHeader])').length:1;}
if(data.isLock){scrollerOwner=fromCt.up('[scrollerOwner]');scrollerOwner.lock(dragHeader,localToIdx);data.isLock=false;this.onNodeDrop(node,dragZone,e,data);}else if(data.isUnlock){scrollerOwner=fromCt.up('[scrollerOwner]');scrollerOwner.unlock(dragHeader,localToIdx);data.isUnlock=false;this.onNodeDrop(node,dragZone,e,data);}
else{this.invalidateDrop();if((fromCt===toCt)&&(localToIdx>localFromIdx)){if(localToIdx===localFromIdx){return;}
if(localToIdx>localFromIdx){localToIdx-=1;}}
Ext.suspendLayouts();if(fromCt!==toCt){fromCt.remove(dragHeader,false);if(fromCt.isGroupHeader){if(!fromCt.items.getCount()){groupCt=fromCt.ownerCt;groupCt.remove(fromCt,false);fromCt.el.dom.parentNode.removeChild(fromCt.el.dom);}}}
if(fromCt===toCt){toCt.move(localFromIdx,localToIdx);}else{toCt.insert(localToIdx,dragHeader);}
if(toCt.isGroupHeader){if(toCt!==fromCt){dragHeader.savedFlex=dragHeader.flex;delete dragHeader.flex;dragHeader.width=dragHeader.getWidth();}}else{if(dragHeader.savedFlex){dragHeader.flex=dragHeader.savedFlex;delete dragHeader.width;}}
headerCt.purgeCache();Ext.resumeLayouts(true);headerCt.onHeaderMoved(dragHeader,colsToMove,fromIdx,toIdx);if(!fromCt.items.getCount()){fromCt.destroy();}}}}});Ext.define('Ext.grid.plugin.HeaderReorderer',{extend:'Ext.AbstractPlugin',requires:['Ext.grid.header.DragZone','Ext.grid.header.DropZone'],alias:'plugin.gridheaderreorderer',init:function(headerCt){this.headerCt=headerCt;headerCt.on({render:this.onHeaderCtRender,single:true,scope:this});},destroy:function(){Ext.destroy(this.dragZone,this.dropZone);},onHeaderCtRender:function(){var me=this;me.dragZone=new Ext.grid.header.DragZone(me.headerCt);me.dropZone=new Ext.grid.header.DropZone(me.headerCt);if(me.disabled){me.dragZone.disable();}},enable:function(){this.disabled=false;if(this.dragZone){this.dragZone.enable();}},disable:function(){this.disabled=true;if(this.dragZone){this.dragZone.disable();}}});Ext.define('Ext.grid.header.Container',{extend:'Ext.container.Container',requires:['Ext.grid.ColumnLayout','Ext.grid.plugin.HeaderResizer','Ext.grid.plugin.HeaderReorderer'],uses:['Ext.grid.column.Column','Ext.menu.Menu','Ext.menu.CheckItem','Ext.menu.Separator'],border:true,alias:'widget.headercontainer',baseCls:Ext.baseCSSPrefix+'grid-header-ct',dock:'top',weight:100,defaultType:'gridcolumn',detachOnRemove:false,defaultWidth:100,sortAscText:'Sort Ascending',sortDescText:'Sort Descending',sortClearText:'Clear Sort',columnsText:'Columns',dirtyCls:Ext.baseCSSPrefix+'grid-dirty-cell',headerOpenCls:Ext.baseCSSPrefix+'column-header-open',menuSortAscCls:Ext.baseCSSPrefix+'hmenu-sort-asc',menuSortDescCls:Ext.baseCSSPrefix+'hmenu-sort-desc',menuColsIcon:Ext.baseCSSPrefix+'cols-icon',triStateSort:false,ddLock:false,dragging:false,sortable:true,initComponent:function(){var me=this;me.headerCounter=0;me.plugins=me.plugins||[];if(!me.isHeader){if(me.enableColumnResize){me.resizer=new Ext.grid.plugin.HeaderResizer();me.plugins.push(me.resizer);}
if(me.enableColumnMove){me.reorderer=new Ext.grid.plugin.HeaderReorderer();me.plugins.push(me.reorderer);}}
if(me.isHeader&&!me.items){me.layout=me.layout||'auto';}
else{me.layout=Ext.apply({type:'gridcolumn',align:'stretchmax'},me.initialConfig.layout);}
me.defaults=me.defaults||{};Ext.applyIf(me.defaults,{triStateSort:me.triStateSort,sortable:me.sortable});me.menuTask=new Ext.util.DelayedTask(me.updateMenuDisabledState,me);me.callParent();me.addEvents('columnresize','headerclick','headertriggerclick','columnmove','columnhide','columnshow','sortchange','menucreate');},isLayoutRoot:function(){if(this.hiddenHeaders){return false;}
return this.callParent();},onDestroy:function(){var me=this;me.menuTask.cancel();Ext.destroy(me.resizer,me.reorderer);me.callParent();},applyColumnsState:function(columns){if(!columns||!columns.length){return;}
var me=this,items=me.items.items,count=items.length,i=0,length=columns.length,c,col,columnState,index;for(c=0;c<length;c++){columnState=columns[c];for(index=count;index--;){col=items[index];if(col.getStateId&&col.getStateId()==columnState.id){if(i!==index){me.moveHeader(index,i);}
if(col.applyColumnState){col.applyColumnState(columnState);}
++i;break;}}}},getColumnsState:function(){var me=this,columns=[],state;me.items.each(function(col){state=col.getColumnState&&col.getColumnState();if(state){columns.push(state);}});return columns;},onAdd:function(c){var me=this,headerCt=me.isHeader?me.getOwnerHeaderCt():me;if(!c.headerId){c.headerId=c.initialConfig.id||Ext.id(null,'header-');}
if(!c.stateId){c.stateId=c.initialConfig.id||('h'+(++me.headerCounter));}
if(Ext.global.console&&Ext.global.console.warn){if(!me._usedIDs){me._usedIDs={};}
if(me._usedIDs[c.headerId]){Ext.global.console.warn(this.$className,'attempted to reuse an existing id',c.headerId);}
me._usedIDs[c.headerId]=true;}
me.callParent(arguments);me.bubble(function(c){if(c instanceof Ext.grid.header.Container){c.purgeCache();}else{return false;}});},onRemove:function(c){var me=this,headerCt=me.isHeader?me.getOwnerHeaderCt():me;me.callParent(arguments);if(!me._usedIDs){me._usedIDs={};}
delete me._usedIDs[c.headerId];me.bubble(function(c){if(c instanceof Ext.grid.header.Container){c.purgeCache();}else{return false;}});},applyDefaults:function(config){var ret;if(config&&!config.isComponent&&config.xtype=='rownumberer'){ret=config;}else{ret=this.callParent(arguments);if(!config.isGroupHeader&&!('width'in ret)&&!ret.flex){ret.width=this.defaultWidth;}}
return ret;},afterRender:function(){this.callParent();this.setSortState(undefined,true);},setSortState:function(){var store=this.up('[store]').store,first=store.getFirstSorter(),hd;if(first){hd=this.down('gridcolumn[dataIndex='+first.property+']');if(hd){hd.setSortState(first.direction,false,true);}}else{this.clearOtherSortStates(null);}},getHeaderMenu:function(){var menu=this.getMenu(),item;if(menu){item=menu.child('#columnItem');if(item){return item.menu;}}
return null;},onHeaderVisibilityChange:function(header,visible){var me=this,menu=me.getHeaderMenu(),item;if(menu){item=me.getMenuItemForHeader(menu,header);if(item){item.setChecked(visible,true);}
if(menu.isVisible()){me.menuTask.delay(50);}}},updateMenuDisabledState:function(menu){var me=this,columns=me.query(':not([hidden])'),i,len=columns.length,item,checkItem,method;if(!menu){menu=me.getMenu();}
for(i=0;i<len;++i){item=columns[i];checkItem=me.getMenuItemForHeader(menu,item);if(checkItem){method=item.isHideable()?'enable':'disable';if(checkItem.menu){method+='CheckChange';}
checkItem[method]();}}},getMenuItemForHeader:function(menu,header){return header?menu.down('menucheckitem[headerId='+header.id+']'):null;},onHeaderShow:function(header){var me=this,gridSection=me.ownerCt;me.onHeaderVisibilityChange(header,true);if(!header.isGroupHeader){if(gridSection){gridSection.onHeaderShow(me,header);}}
me.fireEvent('columnshow',me,header);},onHeaderHide:function(header){var me=this,gridSection=me.ownerCt;me.onHeaderVisibilityChange(header,false);if(!header.isGroupHeader){if(gridSection){gridSection.onHeaderHide(me,header);}}
me.fireEvent('columnhide',me,header);},tempLock:function(){this.ddLock=true;Ext.Function.defer(function(){this.ddLock=false;},200,this);},onHeaderResize:function(header,w,suppressFocus){var me=this,view=me.view,gridSection=me.ownerCt;if(view&&view.table.dom){me.tempLock();if(gridSection){gridSection.onHeaderResize(me,header,w);}}
me.fireEvent('columnresize',this,header,w);},onHeaderClick:function(header,e,t){header.fireEvent('headerclick',this,header,e,t);this.fireEvent("headerclick",this,header,e,t);},onHeaderTriggerClick:function(header,e,t){var me=this;if(header.fireEvent('headertriggerclick',me,header,e,t)!==false&&me.fireEvent("headertriggerclick",me,header,e,t)!==false){me.showMenuBy(t,header);}},showMenuBy:function(t,header){var menu=this.getMenu(),ascItem=menu.down('#ascItem'),descItem=menu.down('#descItem'),sortableMth;menu.activeHeader=menu.ownerCt=header;menu.setFloatParent(header);header.setMenuActive(true);sortableMth=header.sortable?'enable':'disable';if(ascItem){ascItem[sortableMth]();}
if(descItem){descItem[sortableMth]();}
menu.showBy(t);},onMenuDeactivate:function(menu){menu.activeHeader.setMenuActive(false);},moveHeader:function(fromIdx,toIdx){this.tempLock();this.onHeaderMoved(this.move(fromIdx,toIdx),1,fromIdx,toIdx);},purgeCache:function(){var me=this;delete me.gridDataColumns;delete me.hideableColumns;if(me.menu){me.menu.hide();me.menu.destroy();delete me.menu;}},onHeaderMoved:function(header,colsToMove,fromIdx,toIdx){var me=this,gridSection=me.ownerCt;if(gridSection&&gridSection.onHeaderMove){gridSection.onHeaderMove(me,header,colsToMove,fromIdx,toIdx);}
me.fireEvent("columnmove",me,header,fromIdx,toIdx);},getMenu:function(){var me=this;if(!me.menu){me.menu=new Ext.menu.Menu({hideOnParentHide:false,items:me.getMenuItems(),listeners:{deactivate:me.onMenuDeactivate,scope:me}});me.fireEvent('menucreate',me,me.menu);}
me.updateMenuDisabledState(me.menu);return me.menu;},getMenuItems:function(){var me=this,menuItems=[],hideableColumns=me.enableColumnHide?me.getColumnMenu(me):null;if(me.sortable){menuItems=[{itemId:'ascItem',text:me.sortAscText,cls:me.menuSortAscCls,handler:me.onSortAscClick,scope:me},{itemId:'descItem',text:me.sortDescText,cls:me.menuSortDescCls,handler:me.onSortDescClick,scope:me}];}
if(hideableColumns&&hideableColumns.length){menuItems.push('-',{itemId:'columnItem',text:me.columnsText,cls:me.menuColsIcon,menu:hideableColumns,hideOnClick:false});}
return menuItems;},onSortAscClick:function(){var menu=this.getMenu(),activeHeader=menu.activeHeader;activeHeader.setSortState('ASC');},onSortDescClick:function(){var menu=this.getMenu(),activeHeader=menu.activeHeader;activeHeader.setSortState('DESC');},getColumnMenu:function(headerContainer){var menuItems=[],i=0,item,items=headerContainer.query('>gridcolumn[hideable]'),itemsLn=items.length,menuItem;for(;i<itemsLn;i++){item=items[i];menuItem=new Ext.menu.CheckItem({text:item.menuText||item.text,checked:!item.hidden,hideOnClick:false,headerId:item.id,menu:item.isGroupHeader?this.getColumnMenu(item):undefined,checkHandler:this.onColumnCheckChange,scope:this});menuItems.push(menuItem);item.on({destroy:Ext.Function.bind(menuItem.destroy,menuItem)});}
return menuItems;},onColumnCheckChange:function(checkItem,checked){var header=Ext.getCmp(checkItem.headerId);header[checked?'show':'hide']();},getColumnsForTpl:function(flushCache){var cols=[],headers=this.getGridColumns(flushCache),headersLn=headers.length,i=0,header,width;for(;i<headersLn;i++){header=headers[i];if(header.hidden||header.hiddenAncestor){width=0;}else{width=header.getDesiredWidth();}
cols.push({dataIndex:header.dataIndex,align:header.align,width:width,id:header.id,cls:header.tdCls,columnId:header.getItemId()});}
return cols;},getColumnCount:function(){return this.getGridColumns().length;},getFullWidth:function(flushCache){var fullWidth=0,headers=this.getVisibleGridColumns(flushCache),headersLn=headers.length,i=0,header;for(;i<headersLn;i++){header=headers[i];if(header.getDesiredWidth){fullWidth+=header.getDesiredWidth()||0;}else{fullWidth+=header.getWidth();}}
return fullWidth;},clearOtherSortStates:function(activeHeader){var headers=this.getGridColumns(),headersLn=headers.length,i=0;for(;i<headersLn;i++){if(headers[i]!==activeHeader){headers[i].setSortState(null,true);}}},getVisibleGridColumns:function(refreshCache){return Ext.ComponentQuery.query(':not([hidden])',this.getGridColumns(refreshCache));},getGridColumns:function(refreshCache,root,inResult,hiddenAncestor){var me=this,result=refreshCache?null:inResult||me.gridDataColumns,items,i,len,item;if(inResult||!result){root=root||me;result=inResult||[];hiddenAncestor=hiddenAncestor||root.hidden;if(root.items){items=root.items.items;len=items.length;for(i=0;i<len;i++){item=items[i];if(item.isGroupHeader){me.getGridColumns(false,item,result,hiddenAncestor);}else{item.hiddenAncestor=hiddenAncestor;result.push(item);}}}
me.gridDataColumns=result;}
return result;},getHideableColumns:function(refreshCache){var me=this,result=refreshCache?null:me.hideableColumns;if(!result){result=me.hideableColumns=me.query('[hideable]');}
return result;},getHeaderIndex:function(header){if(header.isGroupHeader){header=header.down(':not([isGroupHeader])');}
return Ext.Array.indexOf(this.getGridColumns(),header);},getHeaderAtIndex:function(index){var columns=this.getGridColumns();return columns.length?columns[index]:null;},getVisibleHeaderClosestToIndex:function(index){var result=this.getHeaderAtIndex(index);if(result&&result.hidden){result=result.next(':not([hidden])')||result.prev(':not([hidden])');}
return result;},prepareData:function(data,rowIdx,record,view,panel){var me=this,obj={},headers=me.gridDataColumns||me.getGridColumns(),headersLn=headers.length,dirtyCls=me.dirtyCls,colIdx=0,header,headerId,renderer,value,metaData,store=panel.store;for(;colIdx<headersLn;colIdx++){metaData={tdCls:'',style:''};header=headers[colIdx];headerId=header.id;renderer=header.renderer;value=data[header.dataIndex];if(typeof renderer=="function"){value=renderer.call(header.scope||me.ownerCt,value,metaData,record,rowIdx,colIdx,store,view);}
if(metaData.css){obj.cssWarning=true;metaData.tdCls=metaData.css;delete metaData.css;}
if(me.markDirty){obj[headerId+'-modified']=record.isModified(header.dataIndex)?dirtyCls:'';}
obj[headerId+'-tdCls']=metaData.tdCls;obj[headerId+'-tdAttr']=metaData.tdAttr;obj[headerId+'-style']=metaData.style;if(typeof value==='undefined'||value===null||value===''){value=header.emptyCellText;}
obj[headerId]=value;}
return obj;},expandToFit:function(header){var view=this.view;if(view){view.expandToFit(header);}}});Ext.define('Ext.grid.column.Column',{extend:'Ext.grid.header.Container',alias:'widget.gridcolumn',requires:['Ext.util.KeyNav','Ext.grid.ColumnComponentLayout','Ext.grid.ColumnLayout'],alternateClassName:'Ext.grid.Column',baseCls:Ext.baseCSSPrefix+'column-header '+Ext.baseCSSPrefix+'unselectable',hoverCls:Ext.baseCSSPrefix+'column-header-over',handleWidth:5,sortState:null,possibleSortStates:['ASC','DESC'],childEls:['titleEl','triggerEl','textEl'],renderTpl:'<div id="{id}-titleEl" {tipMarkup}class="'+Ext.baseCSSPrefix+'column-header-inner">'+'<span id="{id}-textEl" class="'+Ext.baseCSSPrefix+'column-header-text">'+'{text}'+'</span>'+'<tpl if="!menuDisabled">'+'<div id="{id}-triggerEl" class="'+Ext.baseCSSPrefix+'column-header-trigger"></div>'+'</tpl>'+'</div>'+'{%this.renderContainer(out,values)%}',dataIndex:null,text:'&#160;',menuText:null,emptyCellText:'&#160;',sortable:true,resizable:true,hideable:true,menuDisabled:false,renderer:false,editRenderer:false,align:'left',draggable:true,tooltipType:'qtip',initDraggable:Ext.emptyFn,isHeader:true,ascSortCls:Ext.baseCSSPrefix+'column-header-sort-ASC',descSortCls:Ext.baseCSSPrefix+'column-header-sort-DESC',nullSortCls:Ext.baseCSSPrefix+'column-header-sort-null',componentLayout:'columncomponent',groupSubHeaderCls:Ext.baseCSSPrefix+'group-sub-header',groupHeaderCls:Ext.baseCSSPrefix+'group-header',detachOnRemove:true,initResizable:Ext.emptyFn,initComponent:function(){var me=this,renderer;if(Ext.isDefined(me.header)){me.text=me.header;delete me.header;}
if(!me.triStateSort){me.possibleSortStates.length=2;}
if(Ext.isDefined(me.columns)){me.isGroupHeader=true;if(me.dataIndex){Ext.Error.raise('Ext.grid.column.Column: Group header may not accept a dataIndex');}
if((me.width&&me.width!==Ext.grid.header.Container.prototype.defaultWidth)||me.flex){Ext.Error.raise('Ext.grid.column.Column: Group header does not support setting explicit widths or flexs. The group header width is calculated by the sum of its children.');}
me.items=me.columns;delete me.columns;delete me.flex;delete me.width;me.cls=(me.cls||'')+' '+me.groupHeaderCls;me.sortable=false;me.resizable=false;me.align='center';}else{me.isContainer=false;if(me.flex){me.minWidth=me.minWidth||Ext.grid.plugin.HeaderResizer.prototype.minColWidth;}}
me.addCls(Ext.baseCSSPrefix+'column-header-align-'+me.align);renderer=me.renderer;if(renderer){if(typeof renderer=='string'){me.renderer=Ext.util.Format[renderer];}
me.hasCustomRenderer=true;}else if(me.defaultRenderer){me.scope=me;me.renderer=me.defaultRenderer;}
me.callParent(arguments);me.on({element:'el',click:me.onElClick,dblclick:me.onElDblClick,scope:me});me.on({element:'titleEl',mouseenter:me.onTitleMouseOver,mouseleave:me.onTitleMouseOut,scope:me});},onAdd:function(childHeader){childHeader.isSubHeader=true;if(this.hidden){childHeader.hide();}
childHeader.addCls(this.groupSubHeaderCls);this.callParent(arguments);},onRemove:function(childHeader){childHeader.isSubHeader=false;childHeader.removeCls(this.groupSubHeaderCls);this.callParent(arguments);},initRenderData:function(){var me=this,tipMarkup='',tip=me.tooltip,attr=me.tooltipType=='qtip'?'data-qtip':'title';if(!Ext.isEmpty(tip)){tipMarkup=attr+'="'+tip+'" ';}
return Ext.applyIf(me.callParent(arguments),{text:me.text,menuDisabled:me.menuDisabled,tipMarkup:tipMarkup});},applyColumnState:function(state){var me=this,defined=Ext.isDefined;me.applyColumnsState(state.columns);if(defined(state.hidden)){me.hidden=state.hidden;}
if(defined(state.locked)){me.locked=state.locked;}
if(defined(state.sortable)){me.sortable=state.sortable;}
if(defined(state.width)){delete me.flex;me.width=state.width;}else if(defined(state.flex)){delete me.width;me.flex=state.flex;}},getColumnState:function(){var me=this,items=me.items.items,iLen=items?items.length:0,i,columns=[],state={id:me.getStateId()};me.savePropsToState(['hidden','sortable','locked','flex','width'],state);if(me.isGroupHeader){for(i=0;i<iLen;i++){columns.push(items[i].getColumnState());}
if(columns.length){state.columns=columns;}}else if(me.isSubHeader&&me.ownerCt.hidden){delete me.hidden;}
if('width'in state){delete state.flex;}
return state;},getStateId:function(){return this.stateId||this.headerId;},setText:function(text){this.text=text;if(this.rendered){this.textEl.update(text);}},getOwnerHeaderCt:function(){return this.up(':not([isHeader])');},getIndex:function(){return this.isGroupColumn?false:this.getOwnerHeaderCt().getHeaderIndex(this);},getVisibleIndex:function(){return this.isGroupColumn?false:Ext.Array.indexOf(this.getOwnerHeaderCt().getVisibleGridColumns(),this);},beforeRender:function(){var me=this,grid=me.up('tablepanel');me.callParent();if(grid&&(!me.sortable||grid.sortableColumns===false)&&!me.groupable&&!me.lockable&&(grid.enableColumnHide===false||!me.getOwnerHeaderCt().getHideableColumns().length)){me.menuDisabled=true;}},afterRender:function(){var me=this,el=me.el;me.callParent(arguments);if(me.overCls){el.addClsOnOver(me.overCls);}
if(!Ext.isIE8||!Ext.isStrict){me.mon(me.getFocusEl(),{focus:me.onTitleMouseOver,blur:me.onTitleMouseOut,scope:me});}
me.keyNav=new Ext.util.KeyNav(el,{enter:me.onEnterKey,down:me.onDownKey,scope:me});},afterComponentLayout:function(width,height,oldWidth,oldHeight){var me=this,ownerHeaderCt=me.getOwnerHeaderCt();me.callParent(arguments);if(ownerHeaderCt&&(oldWidth!=null||me.flex)&&width!==oldWidth){ownerHeaderCt.onHeaderResize(me,width,true);}},setPadding:function(headerHeight){var me=this,lineHeight=parseInt(me.textEl.getStyle('line-height'),10),textHeight=me.textEl.dom.offsetHeight,titleEl=me.titleEl,availableHeight=headerHeight-me.el.getBorderWidth('tb'),titleElHeight;if(!me.isGroupHeader){if(titleEl.getHeight()<availableHeight){titleEl.setHeight(availableHeight);me.ownerCt.layout.innerCt.setHeight(headerHeight);}}
titleElHeight=titleEl.getViewSize().height;if(textHeight){if(lineHeight){textHeight=Math.ceil(textHeight/lineHeight)*lineHeight;}
titleEl.setStyle({paddingTop:Math.floor(Math.max(((titleElHeight-textHeight)/2),0))+'px'});}
if(Ext.isIE&&me.triggerEl){me.triggerEl.setHeight(titleElHeight);}},onDestroy:function(){var me=this;Ext.destroy(me.textEl,me.keyNav,me.field);delete me.keyNav;me.callParent(arguments);},onTitleMouseOver:function(){this.titleEl.addCls(this.hoverCls);},onTitleMouseOut:function(){this.titleEl.removeCls(this.hoverCls);},onDownKey:function(e){if(this.triggerEl){this.onElClick(e,this.triggerEl.dom||this.el.dom);}},onEnterKey:function(e){this.onElClick(e,this.el.dom);},onElDblClick:function(e,t){var me=this,ownerCt=me.ownerCt;if(me.isOnLeftEdge(e)){if(Ext.Array.indexOf(ownerCt.items,me)!==0){ownerCt.expandToFit(me.previousSibling('gridcolumn'));}}
else if(me.isOnRightEdge(e)){ownerCt.expandToFit(me);}},onElClick:function(e,t){var me=this,ownerHeaderCt=me.getOwnerHeaderCt();if(ownerHeaderCt&&!ownerHeaderCt.ddLock){if(me.triggerEl&&(e.target===me.triggerEl.dom||t===me.triggerEl.dom||e.within(me.triggerEl))){ownerHeaderCt.onHeaderTriggerClick(me,e,t);}else if(e.getKey()||(!me.isOnLeftEdge(e)&&!me.isOnRightEdge(e))){me.toggleSortState();ownerHeaderCt.onHeaderClick(me,e,t);}}},processEvent:function(type,view,cell,recordIndex,cellIndex,e){return this.fireEvent.apply(this,arguments);},toggleSortState:function(){var me=this,idx,nextIdx;if(me.sortable){idx=Ext.Array.indexOf(me.possibleSortStates,me.sortState);nextIdx=(idx+1)%me.possibleSortStates.length;me.setSortState(me.possibleSortStates[nextIdx]);}},doSort:function(state){var ds=this.up('tablepanel').store;ds.sort({property:this.getSortParam(),direction:state});},getSortParam:function(){return this.dataIndex;},setSortState:function(state,skipClear,initial){var me=this,ascCls=me.ascSortCls,descCls=me.descSortCls,nullCls=me.nullSortCls,ownerHeaderCt=me.getOwnerHeaderCt(),oldSortState=me.sortState;state=state||null;if(!me.sorting&&oldSortState!==state&&me.getSortParam()){me.addCls(Ext.baseCSSPrefix+'column-header-sort-'+state);if(state&&!initial){me.sorting=true;me.doSort(state);me.sorting=false;}
switch(state){case'DESC':me.removeCls([ascCls,nullCls]);break;case'ASC':me.removeCls([descCls,nullCls]);break;case null:me.removeCls([ascCls,descCls]);break;}
if(ownerHeaderCt&&!me.triStateSort&&!skipClear){ownerHeaderCt.clearOtherSortStates(me);}
me.sortState=state;if(me.triStateSort||state!=null){ownerHeaderCt.fireEvent('sortchange',ownerHeaderCt,me,state);}}},isHideable:function(){var result={hideCandidate:this,result:this.hideable};if(result.result){this.ownerCt.bubble(this.hasOtherMenuEnabledChildren,null,[result]);}
return result.result;},hasOtherMenuEnabledChildren:function(result){var visibleChildren,count;if(!this.isXType('headercontainer')){result.result=false;return false;}
visibleChildren=this.query('>:not([hidden]):not([menuDisabled])');count=visibleChildren.length;if(Ext.Array.contains(visibleChildren,result.hideCandidate)){count--;}
if(count){return false;}},isLockable:function(){var result={result:this.lockable!==false};if(result.result){this.ownerCt.bubble(this.hasMultipleVisibleChildren,null,[result]);}
return result.result;},hasMultipleVisibleChildren:function(result){if(!this.isXType('headercontainer')){result.result=false;return false;}
if(this.query('>:not([hidden])').length>1){return false;}},hide:function(fromOwner){var me=this,ownerHeaderCt=me.getOwnerHeaderCt(),owner=me.ownerCt,ownerIsGroup,item,items,len,i;if(!ownerHeaderCt){me.callParent();return me;}
ownerIsGroup=owner.isGroupHeader;if(ownerIsGroup&&!fromOwner){items=owner.query('>:not([hidden])');if(items.length===1&&items[0]==me){me.ownerCt.hide();return;}}
Ext.suspendLayouts();if(me.isGroupHeader){items=me.items.items;for(i=0,len=items.length;i<len;i++){item=items[i];if(!item.hidden){item.hide(true);}}}
me.callParent();ownerHeaderCt.onHeaderHide(me);Ext.resumeLayouts(true);return me;},show:function(fromOwner,fromChild){var me=this,ownerCt=me.ownerCt,items,len,i,item;Ext.suspendLayouts();if(me.isSubHeader&&ownerCt.hidden){ownerCt.show(false,true);}
me.callParent(arguments);if(me.isGroupHeader&&fromChild!==true&&!me.query(':not([hidden])').length){items=me.items.items;for(i=0,len=items.length;i<len;i++){item=items[i];if(item.hidden){item.show(true);}}}
Ext.resumeLayouts(true);ownerCt=me.getOwnerHeaderCt();if(ownerCt){ownerCt.onHeaderShow(me);}},getDesiredWidth:function(){var me=this;if(me.rendered&&me.componentLayout&&me.componentLayout.lastComponentSize){return me.componentLayout.lastComponentSize.width;}
else if(me.flex){return me.width;}
else{return me.width;}},getCellSelector:function(){return'.'+Ext.baseCSSPrefix+'grid-cell-'+this.getItemId();},getCellInnerSelector:function(){return this.getCellSelector()+' .'+Ext.baseCSSPrefix+'grid-cell-inner';},isOnLeftEdge:function(e){return(e.getXY()[0]-this.el.getLeft()<=this.handleWidth);},isOnRightEdge:function(e){return(this.el.getRight()-e.getXY()[0]<=this.handleWidth);},setMenuActive:function(isMenuOpen){this.titleEl[isMenuOpen?'addCls':'removeCls'](this.headerOpenCls);}});Ext.define('Ext.grid.column.Number',{extend:'Ext.grid.column.Column',alias:['widget.numbercolumn'],requires:['Ext.util.Format'],alternateClassName:'Ext.grid.NumberColumn',format:'0,000.00',defaultRenderer:function(value){return Ext.util.Format.number(value,this.format);}});Ext.define('Ext.grid.column.Action',{extend:'Ext.grid.column.Column',alias:['widget.actioncolumn'],alternateClassName:'Ext.grid.ActionColumn',actionIdRe:new RegExp(Ext.baseCSSPrefix+'action-col-(\\d+)'),altText:'',menuText:'<i>Actions</i>',sortable:false,constructor:function(config){var me=this,cfg=Ext.apply({},config),items=cfg.items||[me],hasGetClass,i,len;me.origRenderer=cfg.renderer||me.renderer;me.origScope=cfg.scope||me.scope;delete me.renderer;delete me.scope;delete cfg.renderer;delete cfg.scope;delete cfg.items;me.callParent([cfg]);me.items=items;for(i=0,len=items.length;i<len;++i){if(items[i].getClass){hasGetClass=true;break;}}
if(me.origRenderer||hasGetClass){me.hasCustomRenderer=true;}},defaultRenderer:function(v,meta,record,rowIdx,colIdx,store,view){var me=this,prefix=Ext.baseCSSPrefix,scope=me.origScope||me,items=me.items,len=items.length,i=0,item,disabled,tooltip;v=Ext.isFunction(me.origRenderer)?me.origRenderer.apply(scope,arguments)||'':'';meta.tdCls+=' '+Ext.baseCSSPrefix+'action-col-cell';for(;i<len;i++){item=items[i];disabled=item.disabled||(item.isDisabled?item.isDisabled.call(item.scope||scope,view,rowIdx,colIdx,item,record):false);tooltip=disabled?null:(item.tooltip||(item.getTip?item.getTip.apply(item.scope||scope,arguments):null));if(!item.hasActionConfiguration){item.stopSelection=me.stopSelection;item.disable=Ext.Function.bind(me.disableAction,me,[i],0);item.enable=Ext.Function.bind(me.enableAction,me,[i],0);item.hasActionConfiguration=true;}
v+='<img alt="'+(item.altText||me.altText)+'" src="'+(item.icon||Ext.BLANK_IMAGE_URL)+'" class="'+prefix+'action-col-icon '+prefix+'action-col-'+String(i)+' '+(disabled?prefix+'item-disabled':' ')+' '+(Ext.isFunction(item.getClass)?item.getClass.apply(item.scope||scope,arguments):(item.iconCls||me.iconCls||''))+'"'+
(tooltip?' data-qtip="'+tooltip+'"':'')+' />';}
return v;},enableAction:function(index,silent){var me=this;if(!index){index=0;}else if(!Ext.isNumber(index)){index=Ext.Array.indexOf(me.items,index);}
me.items[index].disabled=false;me.up('tablepanel').el.select('.'+Ext.baseCSSPrefix+'action-col-'+index).removeCls(me.disabledCls);if(!silent){me.fireEvent('enable',me);}},disableAction:function(index,silent){var me=this;if(!index){index=0;}else if(!Ext.isNumber(index)){index=Ext.Array.indexOf(me.items,index);}
me.items[index].disabled=true;me.up('tablepanel').el.select('.'+Ext.baseCSSPrefix+'action-col-'+index).addCls(me.disabledCls);if(!silent){me.fireEvent('disable',me);}},destroy:function(){delete this.items;delete this.renderer;return this.callParent(arguments);},processEvent:function(type,view,cell,recordIndex,cellIndex,e,record,row){var me=this,target=e.getTarget(),match,item,fn,key=type=='keydown'&&e.getKey(),disabled;if(key&&!Ext.fly(target).findParent(view.cellSelector)){target=Ext.fly(cell).down('.'+Ext.baseCSSPrefix+'action-col-icon',true);}
if(target&&(match=target.className.match(me.actionIdRe))){item=me.items[parseInt(match[1],10)];disabled=item.disabled||(item.isDisabled?item.isDisabled.call(item.scope||me.origScope||me,view,recordIndex,cellIndex,item,record):false);if(item&&!disabled){if(type=='click'||(key==e.ENTER||key==e.SPACE)){fn=item.handler||me.handler;if(fn){fn.call(item.scope||me.origScope||me,view,recordIndex,cellIndex,item,e,record,row);}}else if(type=='mousedown'&&item.stopSelection!==false){return false;}}}
return me.callParent(arguments);},cascade:function(fn,scope){fn.call(scope||this,this);},getRefItems:function(){return[];}});Ext.define('Ext.tree.Column',{extend:'Ext.grid.column.Column',alias:'widget.treecolumn',tdCls:Ext.baseCSSPrefix+'grid-cell-treecolumn',treePrefix:Ext.baseCSSPrefix+'tree-',elbowPrefix:Ext.baseCSSPrefix+'tree-elbow-',expanderCls:Ext.baseCSSPrefix+'tree-expander',imgText:'<img src="{1}" class="{0}" />',checkboxText:'<input type="button" role="checkbox" class="{0}" {1} />',initComponent:function(){var me=this;me.origRenderer=me.renderer||me.defaultRenderer;me.origScope=me.scope||window;me.renderer=me.treeRenderer;me.scope=me;me.callParent();},treeRenderer:function(value,metaData,record,rowIdx,colIdx,store,view){var me=this,buf=[],format=Ext.String.format,depth=record.getDepth(),treePrefix=me.treePrefix,elbowPrefix=me.elbowPrefix,expanderCls=me.expanderCls,imgText=me.imgText,checkboxText=me.checkboxText,formattedValue=me.origRenderer.apply(me.origScope,arguments),blank=Ext.BLANK_IMAGE_URL,href=record.get('href'),target=record.get('hrefTarget'),cls=record.get('cls');while(record){if(!record.isRoot()||(record.isRoot()&&view.rootVisible)){if(record.getDepth()===depth){buf.unshift(format(imgText,treePrefix+'icon '+
treePrefix+'icon'+(record.get('icon')?'-inline ':(record.isLeaf()?'-leaf ':'-parent '))+
(record.get('iconCls')||''),record.get('icon')||blank));if(record.get('checked')!==null){buf.unshift(format(checkboxText,(treePrefix+'checkbox')+(record.get('checked')?' '+treePrefix+'checkbox-checked':''),record.get('checked')?'aria-checked="true"':''));if(record.get('checked')){metaData.tdCls+=(' '+treePrefix+'checked');}}
if(record.isLast()){if(record.isExpandable()){buf.unshift(format(imgText,(elbowPrefix+'end-plus '+expanderCls),blank));}else{buf.unshift(format(imgText,(elbowPrefix+'end'),blank));}}else{if(record.isExpandable()){buf.unshift(format(imgText,(elbowPrefix+'plus '+expanderCls),blank));}else{buf.unshift(format(imgText,(treePrefix+'elbow'),blank));}}}else{if(record.isLast()||record.getDepth()===0){buf.unshift(format(imgText,(elbowPrefix+'empty'),blank));}else if(record.getDepth()!==0){buf.unshift(format(imgText,(elbowPrefix+'line'),blank));}}}
record=record.parentNode;}
if(href){buf.push('<a href="',href,'" target="',target,'">',formattedValue,'</a>');}else{buf.push(formattedValue);}
if(cls){metaData.tdCls+=' '+cls;}
return buf.join('');},defaultRenderer:Ext.identityFn});Ext.define('Ext.tree.Panel',{extend:'Ext.panel.Table',alias:'widget.treepanel',alternateClassName:['Ext.tree.TreePanel','Ext.TreePanel'],requires:['Ext.tree.View','Ext.selection.TreeModel','Ext.tree.Column','Ext.data.TreeStore'],viewType:'treeview',selType:'treemodel',treeCls:Ext.baseCSSPrefix+'tree-panel',deferRowRender:false,rowLines:false,lines:true,useArrows:false,singleExpand:false,ddConfig:{enableDrag:true,enableDrop:true},rootVisible:true,displayField:'text',root:null,normalCfgCopy:['displayField','root','singleExpand','useArrows','lines','rootVisible','scroll'],lockedCfgCopy:['displayField','root','singleExpand','useArrows','lines','rootVisible'],isTree:true,arrowCls:Ext.baseCSSPrefix+'tree-arrows',linesCls:Ext.baseCSSPrefix+'tree-lines',noLinesCls:Ext.baseCSSPrefix+'tree-no-lines',autoWidthCls:Ext.baseCSSPrefix+'autowidth-table',constructor:function(config){config=config||{};if(config.animate===undefined){config.animate=Ext.isDefined(this.animate)?this.animate:Ext.enableFx;}
this.enableAnimations=config.animate;delete config.animate;this.callParent([config]);},initComponent:function(){var me=this,cls=[me.treeCls],store=me.store,view;if(me.useArrows){cls.push(me.arrowCls);me.lines=false;}
if(me.lines){cls.push(me.linesCls);}else if(!me.useArrows){cls.push(me.noLinesCls);}
if(Ext.isString(store)){store=me.store=Ext.StoreMgr.lookup(store);}else if(!store||Ext.isObject(store)&&!store.isStore){store=me.store=new Ext.data.TreeStore(Ext.apply({root:me.root,fields:me.fields,model:me.model,folderSort:me.folderSort},store));}else if(me.root){store=me.store=Ext.data.StoreManager.lookup(store);store.setRootNode(me.root);if(me.folderSort!==undefined){store.folderSort=me.folderSort;store.sort();}}
me.viewConfig=Ext.apply({rootVisible:me.rootVisible,animate:me.enableAnimations,singleExpand:me.singleExpand,node:store.getRootNode(),hideHeaders:me.hideHeaders},me.viewConfig);if(!me.columns){if(me.initialConfig.hideHeaders===undefined){me.hideHeaders=true;}
me.addCls(me.autoWidthCls);me.columns=[{xtype:'treecolumn',text:'Name',width:Ext.isIE6?null:10000,dataIndex:me.displayField}];}
if(me.cls){cls.push(me.cls);}
me.cls=cls.join(' ');me.callParent();view=me.getView();me.relayEvents(view,['checkchange','afteritemexpand','afteritemcollapse']);if(!view.rootVisible&&!me.getRootNode()){me.setRootNode({expanded:true});}},bindStore:function(store){var me=this;me.store=store;me.mon(store,{load:me.onStoreLoad,rootchange:me.onRootChange,clear:me.onClear,scope:me});me.relayEvents(store,['beforeload','load']);me.mon(store,{append:me.createRelayer('itemappend'),remove:me.createRelayer('itemremove'),move:me.createRelayer('itemmove',[0,4]),insert:me.createRelayer('iteminsert'),beforeappend:me.createRelayer('beforeitemappend'),beforeremove:me.createRelayer('beforeitemremove'),beforemove:me.createRelayer('beforeitemmove'),beforeinsert:me.createRelayer('beforeiteminsert'),expand:me.createRelayer('itemexpand',[0,1]),collapse:me.createRelayer('itemcollapse',[0,1]),beforeexpand:me.createRelayer('beforeitemexpand',[0,1]),beforecollapse:me.createRelayer('beforeitemcollapse',[0,1])});store.ownerTree=me;},unbindStore:function(){var me=this,store=me.store;if(store){me.mun(store,{load:me.onStoreLoad,rootchange:me.onRootChange,clear:me.onClear,scope:me});delete store.ownerTree;}},onClear:function(){this.view.onClear();},setRootNode:function(){return this.store.setRootNode.apply(this.store,arguments);},getRootNode:function(){return this.store.getRootNode();},onRootChange:function(root){this.view.setRootNode(root);},getChecked:function(){return this.getView().getChecked();},isItemChecked:function(rec){return rec.get('checked');},expandNode:function(record,deep,callback,scope){return this.getView().expand(record,deep,callback,scope||this);},collapseNode:function(record,deep,callback,scope){return this.getView().collapse(record,deep,callback,scope||this);},expandAll:function(callback,scope){var me=this,root=me.getRootNode(),animate=me.enableAnimations,view=me.getView();if(root){if(!animate){view.beginBulkUpdate();}
root.expand(true,callback,scope||me);if(!animate){view.endBulkUpdate();}}},collapseAll:function(callback,scope){var me=this,root=me.getRootNode(),animate=me.enableAnimations,view=me.getView();if(root){if(!animate){view.beginBulkUpdate();}
scope=scope||me;if(view.rootVisible){root.collapse(true,callback,scope);}else{root.collapseChildren(true,callback,scope);}
if(!animate){view.endBulkUpdate();}}},expandPath:function(path,field,separator,callback,scope){var me=this,current=me.getRootNode(),index=1,view=me.getView(),keys,expander;field=field||me.getRootNode().idProperty;separator=separator||'/';if(Ext.isEmpty(path)){Ext.callback(callback,scope||me,[false,null]);return;}
keys=path.split(separator);if(current.get(field)!=keys[1]){Ext.callback(callback,scope||me,[false,current]);return;}
expander=function(){if(++index===keys.length){Ext.callback(callback,scope||me,[true,current]);return;}
var node=current.findChild(field,keys[index]);if(!node){Ext.callback(callback,scope||me,[false,current]);return;}
current=node;current.expand(false,expander);};current.expand(false,expander);},selectPath:function(path,field,separator,callback,scope){var me=this,root,keys,last;field=field||me.getRootNode().idProperty;separator=separator||'/';keys=path.split(separator);last=keys.pop();if(keys.length>1){me.expandPath(keys.join(separator),field,separator,function(success,node){var lastNode=node;if(success&&node){node=node.findChild(field,last);if(node){me.getSelectionModel().select(node);Ext.callback(callback,scope||me,[true,node]);return;}}
Ext.callback(callback,scope||me,[false,lastNode]);},me);}else{root=me.getRootNode();if(root.getId()===last){me.getSelectionModel().select(root);Ext.callback(callback,scope||me,[true,root]);}else{Ext.callback(callback,scope||me,[false,null]);}}}});Ext.define('Ext.form.field.Spinner',{extend:'Ext.form.field.Trigger',alias:'widget.spinnerfield',alternateClassName:'Ext.form.Spinner',requires:['Ext.util.KeyNav'],trigger1Cls:Ext.baseCSSPrefix+'form-spinner-up',trigger2Cls:Ext.baseCSSPrefix+'form-spinner-down',spinUpEnabled:true,spinDownEnabled:true,keyNavEnabled:true,mouseWheelEnabled:true,repeatTriggerClick:true,onSpinUp:Ext.emptyFn,onSpinDown:Ext.emptyFn,triggerTpl:'<td style="{triggerStyle}">'+'<div class="'+Ext.baseCSSPrefix+'trigger-index-0 '+Ext.baseCSSPrefix+'form-trigger '+Ext.baseCSSPrefix+'form-spinner-up {spinnerUpCls}" role="button"></div>'+'<div class="'+Ext.baseCSSPrefix+'trigger-index-1 '+Ext.baseCSSPrefix+'form-trigger '+Ext.baseCSSPrefix+'form-spinner-down {spinnerDownCls}" role="button"></div>'+'</td>'+'</tr>',initComponent:function(){this.callParent();this.addEvents('spin','spinup','spindown');},onRender:function(){var me=this,triggers;me.callParent(arguments);triggers=me.triggerEl;me.spinUpEl=triggers.item(0);me.spinDownEl=triggers.item(1);me.triggerCell=me.spinUpEl.parent();if(me.keyNavEnabled){me.spinnerKeyNav=new Ext.util.KeyNav(me.inputEl,{scope:me,up:me.spinUp,down:me.spinDown});}
if(me.mouseWheelEnabled){me.mon(me.bodyEl,'mousewheel',me.onMouseWheel,me);}},getSubTplMarkup:function(){var me=this,field=Ext.form.field.Base.prototype.getSubTplMarkup.apply(me,arguments);return'<table id="'+me.id+'-triggerWrap" class="'+Ext.baseCSSPrefix+'form-trigger-wrap" cellpadding="0" cellspacing="0">'+'<tbody>'+'<tr><td id="'+me.id+'-inputCell" class="'+Ext.baseCSSPrefix+'form-trigger-input-cell">'+field+'</td>'+
me.getTriggerMarkup()+'</tbody></table>';},getTriggerMarkup:function(){var me=this,hideTrigger=(me.readOnly||me.hideTrigger);return me.getTpl('triggerTpl').apply({triggerStyle:'width:'+me.triggerWidth+(hideTrigger?'px;display:none':'px'),spinnerUpCls:!me.spinUpEnabled?me.trigger1Cls+'-disabled':'',spinnerDownCls:!me.spinDownEnabled?me.trigger2Cls+'-disabled':''});},getTriggerWidth:function(){var me=this,totalTriggerWidth=0;if(me.triggerWrap&&!me.hideTrigger&&!me.readOnly){totalTriggerWidth=me.triggerWidth;}
return totalTriggerWidth;},onTrigger1Click:function(){this.spinUp();},onTrigger2Click:function(){this.spinDown();},onTriggerWrapMouseup:function(){this.inputEl.focus();},spinUp:function(){var me=this;if(me.spinUpEnabled&&!me.disabled){me.fireEvent('spin',me,'up');me.fireEvent('spinup',me);me.onSpinUp();}},spinDown:function(){var me=this;if(me.spinDownEnabled&&!me.disabled){me.fireEvent('spin',me,'down');me.fireEvent('spindown',me);me.onSpinDown();}},setSpinUpEnabled:function(enabled){var me=this,wasEnabled=me.spinUpEnabled;me.spinUpEnabled=enabled;if(wasEnabled!==enabled&&me.rendered){me.spinUpEl[enabled?'removeCls':'addCls'](me.trigger1Cls+'-disabled');}},setSpinDownEnabled:function(enabled){var me=this,wasEnabled=me.spinDownEnabled;me.spinDownEnabled=enabled;if(wasEnabled!==enabled&&me.rendered){me.spinDownEl[enabled?'removeCls':'addCls'](me.trigger2Cls+'-disabled');}},onMouseWheel:function(e){var me=this,delta;if(me.hasFocus){delta=e.getWheelDelta();if(delta>0){me.spinUp();}else if(delta<0){me.spinDown();}
e.stopEvent();}},onDestroy:function(){Ext.destroyMembers(this,'spinnerKeyNav','spinUpEl','spinDownEl');this.callParent();}});Ext.define('Ext.form.field.Number',{extend:'Ext.form.field.Spinner',alias:'widget.numberfield',alternateClassName:['Ext.form.NumberField','Ext.form.Number'],allowDecimals:true,decimalSeparator:'.',submitLocaleSeparator:true,decimalPrecision:2,minValue:Number.NEGATIVE_INFINITY,maxValue:Number.MAX_VALUE,step:1,minText:'The minimum value for this field is {0}',maxText:'The maximum value for this field is {0}',nanText:'{0} is not a valid number',negativeText:'The value cannot be negative',baseChars:'0123456789',autoStripChars:false,initComponent:function(){var me=this;me.callParent();me.setMinValue(me.minValue);me.setMaxValue(me.maxValue);},getErrors:function(value){var me=this,errors=me.callParent(arguments),format=Ext.String.format,num;value=Ext.isDefined(value)?value:this.processRawValue(this.getRawValue());if(value.length<1){return errors;}
value=String(value).replace(me.decimalSeparator,'.');if(isNaN(value)){errors.push(format(me.nanText,value));}
num=me.parseValue(value);if(me.minValue===0&&num<0){errors.push(this.negativeText);}
else if(num<me.minValue){errors.push(format(me.minText,me.minValue));}
if(num>me.maxValue){errors.push(format(me.maxText,me.maxValue));}
return errors;},rawToValue:function(rawValue){var value=this.fixPrecision(this.parseValue(rawValue));if(value===null){value=rawValue||null;}
return value;},valueToRaw:function(value){var me=this,decimalSeparator=me.decimalSeparator;value=me.parseValue(value);value=me.fixPrecision(value);value=Ext.isNumber(value)?value:parseFloat(String(value).replace(decimalSeparator,'.'));value=isNaN(value)?'':String(value).replace('.',decimalSeparator);return value;},getSubmitValue:function(){var me=this,value=me.callParent();if(!me.submitLocaleSeparator){value=value.replace(me.decimalSeparator,'.');}
return value;},onChange:function(){this.toggleSpinners();this.callParent(arguments);},toggleSpinners:function(){var me=this,value=me.getValue(),valueIsNull=value===null,enabled;if(me.spinUpEnabled||me.spinUpDisabledByToggle){enabled=valueIsNull||value<me.maxValue;me.setSpinUpEnabled(enabled,true);}
if(me.spinDownEnabled||me.spinDownDisabledByToggle){enabled=valueIsNull||value>me.minValue;me.setSpinDownEnabled(enabled,true);}},setMinValue:function(value){var me=this,allowed;me.minValue=Ext.Number.from(value,Number.NEGATIVE_INFINITY);me.toggleSpinners();if(me.disableKeyFilter!==true){allowed=me.baseChars+'';if(me.allowDecimals){allowed+=me.decimalSeparator;}
if(me.minValue<0){allowed+='-';}
allowed=Ext.String.escapeRegex(allowed);me.maskRe=new RegExp('['+allowed+']');if(me.autoStripChars){me.stripCharsRe=new RegExp('[^'+allowed+']','gi');}}},setMaxValue:function(value){this.maxValue=Ext.Number.from(value,Number.MAX_VALUE);this.toggleSpinners();},parseValue:function(value){value=parseFloat(String(value).replace(this.decimalSeparator,'.'));return isNaN(value)?null:value;},fixPrecision:function(value){var me=this,nan=isNaN(value),precision=me.decimalPrecision;if(nan||!value){return nan?'':value;}else if(!me.allowDecimals||precision<=0){precision=0;}
return parseFloat(Ext.Number.toFixed(parseFloat(value),precision));},beforeBlur:function(){var me=this,v=me.parseValue(me.getRawValue());if(!Ext.isEmpty(v)){me.setValue(v);}},setSpinUpEnabled:function(enabled,internal){this.callParent(arguments);if(!internal){delete this.spinUpDisabledByToggle;}else{this.spinUpDisabledByToggle=!enabled;}},onSpinUp:function(){var me=this;if(!me.readOnly){me.setSpinValue(Ext.Number.constrain(me.getValue()+me.step,me.minValue,me.maxValue));}},setSpinDownEnabled:function(enabled,internal){this.callParent(arguments);if(!internal){delete this.spinDownDisabledByToggle;}else{this.spinDownDisabledByToggle=!enabled;}},onSpinDown:function(){var me=this;if(!me.readOnly){me.setSpinValue(Ext.Number.constrain(me.getValue()-me.step,me.minValue,me.maxValue));}},setSpinValue:function(value){var me=this,len;if(me.enforceMaxLength){if(me.fixPrecision(value).toString().length>me.maxLength){return;}}
me.setValue(value);}});Ext.define('Ext.toolbar.Paging',{extend:'Ext.toolbar.Toolbar',alias:'widget.pagingtoolbar',alternateClassName:'Ext.PagingToolbar',requires:['Ext.toolbar.TextItem','Ext.form.field.Number'],mixins:{bindable:'Ext.util.Bindable'},displayInfo:false,prependButtons:false,displayMsg:'Displaying {0} - {1} of {2}',emptyMsg:'No data to display',beforePageText:'Page',afterPageText:'of {0}',firstText:'First Page',prevText:'Previous Page',nextText:'Next Page',lastText:'Last Page',refreshText:'Refresh',inputItemWidth:30,getPagingItems:function(){var me=this;return[{itemId:'first',tooltip:me.firstText,overflowText:me.firstText,iconCls:Ext.baseCSSPrefix+'tbar-page-first',disabled:true,handler:me.moveFirst,scope:me},{itemId:'prev',tooltip:me.prevText,overflowText:me.prevText,iconCls:Ext.baseCSSPrefix+'tbar-page-prev',disabled:true,handler:me.movePrevious,scope:me},'-',me.beforePageText,{xtype:'numberfield',itemId:'inputItem',name:'inputItem',cls:Ext.baseCSSPrefix+'tbar-page-number',allowDecimals:false,minValue:1,hideTrigger:true,enableKeyEvents:true,keyNavEnabled:false,selectOnFocus:true,submitValue:false,isFormField:false,width:me.inputItemWidth,margins:'-1 2 3 2',listeners:{scope:me,keydown:me.onPagingKeyDown,blur:me.onPagingBlur}},{xtype:'tbtext',itemId:'afterTextItem',text:Ext.String.format(me.afterPageText,1)},'-',{itemId:'next',tooltip:me.nextText,overflowText:me.nextText,iconCls:Ext.baseCSSPrefix+'tbar-page-next',disabled:true,handler:me.moveNext,scope:me},{itemId:'last',tooltip:me.lastText,overflowText:me.lastText,iconCls:Ext.baseCSSPrefix+'tbar-page-last',disabled:true,handler:me.moveLast,scope:me},'-',{itemId:'refresh',tooltip:me.refreshText,overflowText:me.refreshText,iconCls:Ext.baseCSSPrefix+'tbar-loading',handler:me.doRefresh,scope:me}];},initComponent:function(){var me=this,pagingItems=me.getPagingItems(),userItems=me.items||me.buttons||[];if(me.prependButtons){me.items=userItems.concat(pagingItems);}else{me.items=pagingItems.concat(userItems);}
delete me.buttons;if(me.displayInfo){me.items.push('->');me.items.push({xtype:'tbtext',itemId:'displayItem'});}
me.callParent();me.addEvents('change','beforechange');me.on('beforerender',me.onLoad,me,{single:true});me.bindStore(me.store||'ext-empty-store',true);},updateInfo:function(){var me=this,displayItem=me.child('#displayItem'),store=me.store,pageData=me.getPageData(),count,msg;if(displayItem){count=store.getCount();if(count===0){msg=me.emptyMsg;}else{msg=Ext.String.format(me.displayMsg,pageData.fromRecord,pageData.toRecord,pageData.total);}
displayItem.setText(msg);}},onLoad:function(){var me=this,pageData,currPage,pageCount,afterText,count,isEmpty;count=me.store.getCount();isEmpty=count===0;if(!isEmpty){pageData=me.getPageData();currPage=pageData.currentPage;pageCount=pageData.pageCount;afterText=Ext.String.format(me.afterPageText,isNaN(pageCount)?1:pageCount);}else{currPage=0;pageCount=0;afterText=Ext.String.format(me.afterPageText,0);}
Ext.suspendLayouts();me.child('#afterTextItem').setText(afterText);me.child('#inputItem').setDisabled(isEmpty).setValue(currPage);me.child('#first').setDisabled(currPage===1||isEmpty);me.child('#prev').setDisabled(currPage===1||isEmpty);me.child('#next').setDisabled(currPage===pageCount||isEmpty);me.child('#last').setDisabled(currPage===pageCount||isEmpty);me.child('#refresh').enable();me.updateInfo();Ext.resumeLayouts(true);if(me.rendered){me.fireEvent('change',me,pageData);}},getPageData:function(){var store=this.store,totalCount=store.getTotalCount();return{total:totalCount,currentPage:store.currentPage,pageCount:Math.ceil(totalCount/store.pageSize),fromRecord:((store.currentPage-1)*store.pageSize)+1,toRecord:Math.min(store.currentPage*store.pageSize,totalCount)};},onLoadError:function(){if(!this.rendered){return;}
this.child('#refresh').enable();},readPageFromInput:function(pageData){var v=this.child('#inputItem').getValue(),pageNum=parseInt(v,10);if(!v||isNaN(pageNum)){this.child('#inputItem').setValue(pageData.currentPage);return false;}
return pageNum;},onPagingFocus:function(){this.child('#inputItem').select();},onPagingBlur:function(e){var curPage=this.getPageData().currentPage;this.child('#inputItem').setValue(curPage);},onPagingKeyDown:function(field,e){var me=this,k=e.getKey(),pageData=me.getPageData(),increment=e.shiftKey?10:1,pageNum;if(k==e.RETURN){e.stopEvent();pageNum=me.readPageFromInput(pageData);if(pageNum!==false){pageNum=Math.min(Math.max(1,pageNum),pageData.pageCount);if(me.fireEvent('beforechange',me,pageNum)!==false){me.store.loadPage(pageNum);}}}else if(k==e.HOME||k==e.END){e.stopEvent();pageNum=k==e.HOME?1:pageData.pageCount;field.setValue(pageNum);}else if(k==e.UP||k==e.PAGE_UP||k==e.DOWN||k==e.PAGE_DOWN){e.stopEvent();pageNum=me.readPageFromInput(pageData);if(pageNum){if(k==e.DOWN||k==e.PAGE_DOWN){increment*=-1;}
pageNum+=increment;if(pageNum>=1&&pageNum<=pageData.pageCount){field.setValue(pageNum);}}}},beforeLoad:function(){if(this.rendered&&this.refresh){this.refresh.disable();}},moveFirst:function(){if(this.fireEvent('beforechange',this,1)!==false){this.store.loadPage(1);}},movePrevious:function(){var me=this,prev=me.store.currentPage-1;if(prev>0){if(me.fireEvent('beforechange',me,prev)!==false){me.store.previousPage();}}},moveNext:function(){var me=this,total=me.getPageData().pageCount,next=me.store.currentPage+1;if(next<=total){if(me.fireEvent('beforechange',me,next)!==false){me.store.nextPage();}}},moveLast:function(){var me=this,last=me.getPageData().pageCount;if(me.fireEvent('beforechange',me,last)!==false){me.store.loadPage(last);}},doRefresh:function(){var me=this,current=me.store.currentPage;if(me.fireEvent('beforechange',me,current)!==false){me.store.loadPage(current);}},getStoreListeners:function(){return{beforeload:this.beforeLoad,load:this.onLoad,exception:this.onLoadError};},unbind:function(store){this.bindStore(null);},bind:function(store){this.bindStore(store);},onDestroy:function(){this.unbind();this.callParent();}});Ext.define('Ext.view.BoundList',{extend:'Ext.view.View',alias:'widget.boundlist',alternateClassName:'Ext.BoundList',requires:['Ext.layout.component.BoundList','Ext.toolbar.Paging'],pageSize:0,baseCls:Ext.baseCSSPrefix+'boundlist',itemCls:Ext.baseCSSPrefix+'boundlist-item',listItemCls:'',shadow:false,trackOver:true,refreshed:0,deferInitialRefresh:false,componentLayout:'boundlist',childEls:['listEl'],renderTpl:['<div id="{id}-listEl" class="{baseCls}-list-ct" style="overflow:auto"></div>','{%','var me=values.$comp, pagingToolbar=me.pagingToolbar;','if (pagingToolbar) {','pagingToolbar.ownerLayout = me.componentLayout;','Ext.DomHelper.generateMarkup(pagingToolbar.getRenderTree(), out);','}','%}',{disableFormats:true}],initComponent:function(){var me=this,baseCls=me.baseCls,itemCls=me.itemCls;me.selectedItemCls=baseCls+'-selected';me.overItemCls=baseCls+'-item-over';me.itemSelector="."+itemCls;if(me.floating){me.addCls(baseCls+'-floating');}
if(!me.tpl){me.tpl=new Ext.XTemplate('<ul><tpl for=".">','<li role="option" class="'+itemCls+'">'+me.getInnerTpl(me.displayField)+'</li>','</tpl></ul>');}else if(Ext.isString(me.tpl)){me.tpl=new Ext.XTemplate(me.tpl);}
if(me.pageSize){me.pagingToolbar=me.createPagingToolbar();}
me.callParent();},beforeRender:function(){var me=this;me.callParent(arguments);if(me.up('menu')){me.addCls(Ext.baseCSSPrefix+'menu');}},getBubbleTarget:function(){return this.pickerField;},getRefItems:function(){return this.pagingToolbar?[this.pagingToolbar]:[];},createPagingToolbar:function(){return Ext.widget('pagingtoolbar',{id:this.id+'-paging-toolbar',pageSize:this.pageSize,store:this.store,border:false,ownerCt:this,ownerLayout:this.getComponentLayout()});},finishRenderChildren:function(){var toolbar=this.pagingToolbar;this.callParent(arguments);if(toolbar){toolbar.finishRender();}},refresh:function(){var me=this,toolbar=me.pagingToolbar;me.callParent();if(me.rendered&&toolbar&&toolbar.rendered&&!me.preserveScrollOnRefresh){me.el.appendChild(toolbar.el);}},bindStore:function(store,initial){var toolbar=this.pagingToolbar;this.callParent(arguments);if(toolbar){toolbar.bindStore(this.store,initial);}},getTargetEl:function(){return this.listEl||this.el;},getInnerTpl:function(displayField){return'{'+displayField+'}';},onDestroy:function(){Ext.destroyMembers(this,'pagingToolbar','listEl');this.callParent();}});Ext.define('Ext.view.BoundListKeyNav',{extend:'Ext.util.KeyNav',requires:'Ext.view.BoundList',constructor:function(el,config){var me=this;me.boundList=config.boundList;me.callParent([el,Ext.apply({},config,me.defaultHandlers)]);},defaultHandlers:{up:function(){var me=this,boundList=me.boundList,allItems=boundList.all,oldItem=boundList.highlightedItem,oldItemIdx=oldItem?boundList.indexOf(oldItem):-1,newItemIdx=oldItemIdx>0?oldItemIdx-1:allItems.getCount()-1;me.highlightAt(newItemIdx);},down:function(){var me=this,boundList=me.boundList,allItems=boundList.all,oldItem=boundList.highlightedItem,oldItemIdx=oldItem?boundList.indexOf(oldItem):-1,newItemIdx=oldItemIdx<allItems.getCount()-1?oldItemIdx+1:0;me.highlightAt(newItemIdx);},pageup:function(){},pagedown:function(){},home:function(){this.highlightAt(0);},end:function(){var me=this;me.highlightAt(me.boundList.all.getCount()-1);},enter:function(e){this.selectHighlighted(e);}},highlightAt:function(index){var boundList=this.boundList,item=boundList.all.item(index);if(item){item=item.dom;boundList.highlightItem(item);boundList.getTargetEl().scrollChildIntoView(item,false);}},selectHighlighted:function(e){var me=this,boundList=me.boundList,highlighted=boundList.highlightedItem,selModel=boundList.getSelectionModel();if(highlighted){selModel.selectWithEvent(boundList.getRecord(highlighted),e);}}});Ext.define('Ext.form.field.ComboBox',{extend:'Ext.form.field.Picker',requires:['Ext.util.DelayedTask','Ext.EventObject','Ext.view.BoundList','Ext.view.BoundListKeyNav','Ext.data.StoreManager','Ext.layout.component.field.ComboBox'],alternateClassName:'Ext.form.ComboBox',alias:['widget.combobox','widget.combo'],mixins:{bindable:'Ext.util.Bindable'},componentLayout:'combobox',triggerCls:Ext.baseCSSPrefix+'form-arrow-trigger',hiddenName:'',hiddenDataCls:Ext.baseCSSPrefix+'hide-display '+Ext.baseCSSPrefix+'form-data-hidden',fieldSubTpl:['<div class="{hiddenDataCls}" role="presentation"></div>','<input id="{id}" type="{type}" {inputAttrTpl} class="{fieldCls} {typeCls} {editableCls}" autocomplete="off"','<tpl if="value"> value="{[Ext.util.Format.htmlEncode(values.value)]}"</tpl>','<tpl if="name"> name="{name}"</tpl>','<tpl if="placeholder"> placeholder="{placeholder}"</tpl>','<tpl if="size"> size="{size}"</tpl>','<tpl if="maxLength !== undefined"> maxlength="{maxLength}"</tpl>','<tpl if="readOnly"> readonly="readonly"</tpl>','<tpl if="disabled"> disabled="disabled"</tpl>','<tpl if="tabIdx"> tabIndex="{tabIdx}"</tpl>','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>','/>',{compiled:true,disableFormats:true}],getSubTplData:function(){var me=this;Ext.applyIf(me.subTplData,{hiddenDataCls:me.hiddenDataCls});return me.callParent(arguments);},afterRender:function(){var me=this;me.callParent(arguments);me.setHiddenValue(me.value);},multiSelect:false,delimiter:', ',displayField:'text',triggerAction:'all',allQuery:'',queryParam:'query',queryMode:'remote',queryCaching:true,pageSize:0,autoSelect:true,typeAhead:false,typeAheadDelay:250,selectOnTab:true,forceSelection:false,growToLongestValue:true,defaultListConfig:{loadingHeight:70,minWidth:70,maxHeight:300,shadow:'sides'},ignoreSelection:0,removingRecords:null,resizeComboToGrow:function(){var me=this;return me.grow&&me.growToLongestValue;},initComponent:function(){var me=this,isDefined=Ext.isDefined,store=me.store,transform=me.transform,transformSelect,isLocalMode;Ext.applyIf(me.renderSelectors,{hiddenDataEl:'.'+me.hiddenDataCls.split(' ').join('.')});if(me.typeAhead&&me.multiSelect){Ext.Error.raise('typeAhead and multiSelect are mutually exclusive options -- please remove one of them.');}
if(me.typeAhead&&!me.editable){Ext.Error.raise('If typeAhead is enabled the combo must be editable: true -- please change one of those settings.');}
if(me.selectOnFocus&&!me.editable){Ext.Error.raise('If selectOnFocus is enabled the combo must be editable: true -- please change one of those settings.');}
this.addEvents('beforequery','select','beforeselect','beforedeselect');if(transform){transformSelect=Ext.getDom(transform);if(transformSelect){if(!me.store){store=Ext.Array.map(Ext.Array.from(transformSelect.options),function(option){return[option.value,option.text];});}
if(!me.name){me.name=transformSelect.name;}
if(!('value'in me)){me.value=transformSelect.value;}}}
me.bindStore(store||'ext-empty-store',true);store=me.store;if(store.autoCreated){me.queryMode='local';me.valueField=me.displayField='field1';if(!store.expanded){me.displayField='field2';}}
if(!isDefined(me.valueField)){me.valueField=me.displayField;}
isLocalMode=me.queryMode==='local';if(!isDefined(me.queryDelay)){me.queryDelay=isLocalMode?10:500;}
if(!isDefined(me.minChars)){me.minChars=isLocalMode?0:4;}
if(!me.displayTpl){me.displayTpl=new Ext.XTemplate('<tpl for=".">'+'{[typeof values === "string" ? values : values["'+me.displayField+'"]]}'+'<tpl if="xindex < xcount">'+me.delimiter+'</tpl>'+'</tpl>');}else if(Ext.isString(me.displayTpl)){me.displayTpl=new Ext.XTemplate(me.displayTpl);}
me.callParent();me.doQueryTask=new Ext.util.DelayedTask(me.doRawQuery,me);if(me.store.getCount()>0){me.setValue(me.value);}
if(transformSelect){me.render(transformSelect.parentNode,transformSelect);Ext.removeNode(transformSelect);delete me.renderTo;}},getStore:function(){return this.store;},beforeBlur:function(){this.doQueryTask.cancel();this.assertValue();},assertValue:function(){var me=this,value=me.getRawValue(),rec,currentValue;if(me.forceSelection){if(me.multiSelect){if(value!==me.getDisplayValue()){me.setValue(me.lastSelection);}}else{rec=me.findRecordByDisplay(value);if(rec){currentValue=me.value;if(!me.findRecordByValue(currentValue)){me.select(rec,true);}}else{me.setValue(me.lastSelection);}}}
me.collapse();},onTypeAhead:function(){var me=this,displayField=me.displayField,record=me.store.findRecord(displayField,me.getRawValue()),boundList=me.getPicker(),newValue,len,selStart;if(record){newValue=record.get(displayField);len=newValue.length;selStart=me.getRawValue().length;boundList.highlightItem(boundList.getNode(record));if(selStart!==0&&selStart!==len){me.setRawValue(newValue);me.selectText(selStart,newValue.length);}}},resetToDefault:Ext.emptyFn,beforeReset:function(){this.callParent();this.clearFilter();},onUnbindStore:function(store){var picker=this.picker;if(!store&&picker){picker.bindStore(null);}
this.clearFilter();},onBindStore:function(store,initial){var picker=this.picker;if(!initial){this.resetToDefault();}
if(picker){picker.bindStore(store);}},getStoreListeners:function(){var me=this;return{beforeload:me.onBeforeLoad,clear:me.onClear,datachanged:me.onDataChanged,load:me.onLoad,exception:me.onException,remove:me.onRemove};},onBeforeLoad:function(){++this.ignoreSelection;},onDataChanged:function(){var me=this;if(me.resizeComboToGrow()){me.updateLayout();}},onClear:function(){var me=this;if(me.resizeComboToGrow()){me.removingRecords=true;me.onDataChanged();}},onRemove:function(){var me=this;if(me.resizeComboToGrow()){me.removingRecords=true;}},onException:function(){if(this.ignoreSelection>0){--this.ignoreSelection;}
this.collapse();},onLoad:function(){var me=this,value=me.value;if(me.ignoreSelection>0){--me.ignoreSelection;}
if(me.rawQuery){me.rawQuery=false;me.syncSelection();if(me.picker&&!me.picker.getSelectionModel().hasSelection()){me.doAutoSelect();}}
else{if(me.value||me.value===0){me.setValue(me.value);}else{if(me.store.getCount()){me.doAutoSelect();}else{me.setValue(me.value);}}}},doRawQuery:function(){this.doQuery(this.getRawValue(),false,true);},doQuery:function(queryString,forceAll,rawQuery){queryString=queryString||'';var me=this,qe={query:queryString,forceAll:forceAll,combo:me,cancel:false},store=me.store,isLocalMode=me.queryMode==='local',needsRefresh;if(me.fireEvent('beforequery',qe)===false||qe.cancel){return false;}
queryString=qe.query;forceAll=qe.forceAll;if(forceAll||(queryString.length>=me.minChars)){me.expand();if(!me.queryCaching||me.lastQuery!==queryString){me.lastQuery=queryString;if(isLocalMode){store.suspendEvents();needsRefresh=me.clearFilter();if(queryString||!forceAll){me.activeFilter=new Ext.util.Filter({root:'data',property:me.displayField,value:me.enableRegEx?new RegExp(queryString):queryString});store.filter(me.activeFilter);needsRefresh=true;}else{delete me.activeFilter;}
store.resumeEvents();if(me.rendered&&needsRefresh){me.getPicker().refresh();}}else{me.rawQuery=rawQuery;if(me.pageSize){me.loadPage(1);}else{store.load({params:me.getParams(queryString)});}}}
if(me.getRawValue()!==me.getDisplayValue()){me.ignoreSelection++;me.picker.getSelectionModel().deselectAll();me.ignoreSelection--;}
if(isLocalMode){me.doAutoSelect();}
if(me.typeAhead){me.doTypeAhead();}}
return true;},clearFilter:function(){var store=this.store,filter=this.activeFilter,filters=store.filters,remaining;if(filter){if(filters.getCount()>1){filters.remove(filter);remaining=filters.getRange();}
store.clearFilter(true);if(remaining){store.filter(remaining);}}
return!!filter;},loadPage:function(pageNum){this.store.loadPage(pageNum,{params:this.getParams(this.lastQuery)});},onPageChange:function(toolbar,newPage){this.loadPage(newPage);return false;},getParams:function(queryString){var params={},param=this.queryParam;if(param){params[param]=queryString;}
return params;},doAutoSelect:function(){var me=this,picker=me.picker,lastSelected,itemNode;if(picker&&me.autoSelect&&me.store.getCount()>0){lastSelected=picker.getSelectionModel().lastSelected;itemNode=picker.getNode(lastSelected||0);if(itemNode){picker.highlightItem(itemNode);picker.listEl.scrollChildIntoView(itemNode,false);}}},doTypeAhead:function(){if(!this.typeAheadTask){this.typeAheadTask=new Ext.util.DelayedTask(this.onTypeAhead,this);}
if(this.lastKey!=Ext.EventObject.BACKSPACE&&this.lastKey!=Ext.EventObject.DELETE){this.typeAheadTask.delay(this.typeAheadDelay);}},onTriggerClick:function(){var me=this;if(!me.readOnly&&!me.disabled){if(me.isExpanded){me.collapse();}else{me.onFocus({});if(me.triggerAction==='all'){me.doQuery(me.allQuery,true);}else{me.doQuery(me.getRawValue(),false,true);}}
me.inputEl.focus();}},onPaste:function(){var me=this;if(!me.readOnly&&!me.disabled&&me.editable){me.doQueryTask.delay(me.queryDelay);}},onKeyUp:function(e,t){var me=this,key=e.getKey();if(!me.readOnly&&!me.disabled&&me.editable){me.lastKey=key;if(!e.isSpecialKey()||key==e.BACKSPACE||key==e.DELETE){me.doQueryTask.delay(me.queryDelay);}}
if(me.enableKeyEvents){me.callParent(arguments);}},initEvents:function(){var me=this;me.callParent();if(!me.enableKeyEvents){me.mon(me.inputEl,'keyup',me.onKeyUp,me);}
me.mon(me.inputEl,'paste',me.onPaste,me);},onDestroy:function(){this.bindStore(null);this.callParent();},onAdded:function(){var me=this;me.callParent(arguments);if(me.picker){me.picker.ownerCt=me.up('[floating]');me.picker.registerWithOwnerCt();}},createPicker:function(){var me=this,picker,pickerCfg=Ext.apply({xtype:'boundlist',pickerField:me,selModel:{mode:me.multiSelect?'SIMPLE':'SINGLE'},floating:true,hidden:true,store:me.store,displayField:me.displayField,focusOnToFront:false,pageSize:me.pageSize,tpl:me.tpl},me.listConfig,me.defaultListConfig);picker=me.picker=Ext.widget(pickerCfg);if(me.pageSize){picker.pagingToolbar.on('beforechange',me.onPageChange,me);}
me.mon(picker,{itemclick:me.onItemClick,refresh:me.onListRefresh,scope:me});me.mon(picker.getSelectionModel(),{beforeselect:me.onBeforeSelect,beforedeselect:me.onBeforeDeselect,selectionchange:me.onListSelectionChange,scope:me});return picker;},alignPicker:function(){var me=this,picker=me.getPicker(),heightAbove=me.getPosition()[1]-Ext.getBody().getScroll().top,heightBelow=Ext.Element.getViewHeight()-heightAbove-me.getHeight(),space=Math.max(heightAbove,heightBelow);if(picker.height){delete picker.height;picker.updateLayout();}
if(picker.getHeight()>space-5){picker.setHeight(space-5);}
me.callParent();},onListRefresh:function(){this.alignPicker();this.syncSelection();},onItemClick:function(picker,record){var me=this,selection=me.picker.getSelectionModel().getSelection(),valueField=me.valueField;if(!me.multiSelect&&selection.length){if(record.get(valueField)===selection[0].get(valueField)){me.displayTplData=[record.data];me.setRawValue(me.getDisplayValue());me.collapse();}}},onBeforeSelect:function(list,record){return this.fireEvent('beforeselect',this,record,record.index);},onBeforeDeselect:function(list,record){return this.fireEvent('beforedeselect',this,record,record.index);},onListSelectionChange:function(list,selectedRecords){var me=this,isMulti=me.multiSelect,hasRecords=selectedRecords.length>0;if(!me.ignoreSelection&&me.isExpanded){if(!isMulti){Ext.defer(me.collapse,1,me);}
if(isMulti||hasRecords){me.setValue(selectedRecords,false);}
if(hasRecords){me.fireEvent('select',me,selectedRecords);}
me.inputEl.focus();}},onExpand:function(){var me=this,keyNav=me.listKeyNav,selectOnTab=me.selectOnTab,picker=me.getPicker();if(keyNav){keyNav.enable();}else{keyNav=me.listKeyNav=new Ext.view.BoundListKeyNav(this.inputEl,{boundList:picker,forceKeyDown:true,tab:function(e){if(selectOnTab){this.selectHighlighted(e);me.triggerBlur();}
return true;}});}
if(selectOnTab){me.ignoreMonitorTab=true;}
Ext.defer(keyNav.enable,1,keyNav);me.inputEl.focus();},onCollapse:function(){var me=this,keyNav=me.listKeyNav;if(keyNav){keyNav.disable();me.ignoreMonitorTab=false;}},select:function(r,assert){var me=this,picker=me.picker,doSelect=true;if(r&&r.isModel&&assert===true){if(picker){doSelect=!picker.getSelectionModel().isSelected(r);}
if(doSelect){me.fireEvent('select',me,r);}}
me.setValue(r,true);},findRecord:function(field,value){var ds=this.store,idx=ds.findExact(field,value);return idx!==-1?ds.getAt(idx):false;},findRecordByValue:function(value){return this.findRecord(this.valueField,value);},findRecordByDisplay:function(value){return this.findRecord(this.displayField,value);},setValue:function(value,doSelect){var me=this,valueNotFoundText=me.valueNotFoundText,inputEl=me.inputEl,i,len,record,dataObj,matchedRecords=[],displayTplData=[],processedValue=[];if(me.store.loading){me.value=value;me.setHiddenValue(me.value);return me;}
value=Ext.Array.from(value);for(i=0,len=value.length;i<len;i++){record=value[i];if(!record||!record.isModel){record=me.findRecordByValue(record);}
if(record){matchedRecords.push(record);displayTplData.push(record.data);processedValue.push(record.get(me.valueField));}
else{if(!me.forceSelection){processedValue.push(value[i]);dataObj={};dataObj[me.displayField]=value[i];displayTplData.push(dataObj);}
else if(Ext.isDefined(valueNotFoundText)){displayTplData.push(valueNotFoundText);}}}
me.setHiddenValue(processedValue);me.value=me.multiSelect?processedValue:processedValue[0];if(!Ext.isDefined(me.value)){me.value=null;}
me.displayTplData=displayTplData;me.lastSelection=me.valueModels=matchedRecords;if(inputEl&&me.emptyText&&!Ext.isEmpty(value)){inputEl.removeCls(me.emptyCls);}
me.setRawValue(me.getDisplayValue());me.checkChange();if(doSelect!==false){me.syncSelection();}
me.applyEmptyText();return me;},setHiddenValue:function(values){var me=this,name=me.hiddenName,i,dom,childNodes,input,valueCount,childrenCount;if(!me.hiddenDataEl||!name){return;}
values=Ext.Array.from(values);dom=me.hiddenDataEl.dom;childNodes=dom.childNodes;input=childNodes[0];valueCount=values.length;childrenCount=childNodes.length;if(!input&&valueCount>0){me.hiddenDataEl.update(Ext.DomHelper.markup({tag:'input',type:'hidden',name:name}));childrenCount=1;input=dom.firstChild;}
while(childrenCount>valueCount){dom.removeChild(childNodes[0]);--childrenCount;}
while(childrenCount<valueCount){dom.appendChild(input.cloneNode(true));++childrenCount;}
for(i=0;i<valueCount;i++){childNodes[i].value=values[i];}},getDisplayValue:function(){return this.displayTpl.apply(this.displayTplData);},getValue:function(){var me=this,picker=me.picker,rawValue=me.getRawValue(),value=me.value;if(me.getDisplayValue()!==rawValue){value=rawValue;me.value=me.displayTplData=me.valueModels=null;if(picker){me.ignoreSelection++;picker.getSelectionModel().deselectAll();me.ignoreSelection--;}}
return value;},getSubmitValue:function(){return this.getValue();},isEqual:function(v1,v2){var fromArray=Ext.Array.from,i,len;v1=fromArray(v1);v2=fromArray(v2);len=v1.length;if(len!==v2.length){return false;}
for(i=0;i<len;i++){if(v2[i]!==v1[i]){return false;}}
return true;},clearValue:function(){this.setValue([]);},syncSelection:function(){var me=this,picker=me.picker,selection,selModel,values=me.valueModels||[],vLen=values.length,v,value;if(picker){selection=[];for(v=0;v<vLen;v++){value=values[v];if(value&&value.isModel&&me.store.indexOf(value)>=0){selection.push(value);}}
me.ignoreSelection++;selModel=picker.getSelectionModel();selModel.deselectAll();if(selection.length){selModel.select(selection,undefined,true);}
me.ignoreSelection--;}},onEditorTab:function(e){var keyNav=this.listKeyNav;if(this.selectOnTab&&keyNav){keyNav.selectHighlighted(e);}}});Ext.define('Puma.patch.form.field.ComboBox',{override:'Ext.form.field.ComboBox',onDataChanged:function(){this.callParent();var index=this.store.find(this.valueField,this.value);if(index==-1){this.setValue(null);}}})
Ext.define('Puma.view.form.DefaultComboBox',{extend:'Ext.form.field.ComboBox',alias:'widget.pumacombo',queryMode:'local',valueField:'_id',displayField:'name',editable:false,initComponent:function(){var me=this;me.addEvents('beforeclear','clear');me.callParent(arguments);me.on('specialkey',this.onSpecialKeyDown,me);},onSpecialKeyDown:function(obj,e,opt){if(e.getKey()==e.ESC||e.getKey()==e.DELETE)
{this.clear();}},onShowClearTrigger:function(show){var me=this;if(show){me.triggerEl.each(function(el,c,i){if(i===1){el.setWidth(el.originWidth,false);el.setVisible(true);me.active=true;}});}else{me.triggerEl.each(function(el,c,i){if(i===1){el.originWidth=el.getWidth();el.setWidth(0,false);el.setVisible(false);me.active=false;}});}
if(Ext.lastRegisteredVersion.shortVersion>407){me.updateLayout();}else{me.updateEditState();}},onTrigger2Click:function(args){},clear:function(){var me=this;me.fireEvent('beforeclear',me);me.clearValue();me.onShowClearTrigger(false);me.fireEvent('clear',me);},getValue:function(){var value=this.callParent();if(this.multiSelect&&!Ext.isArray(value)){value=value.split(',');}
if(Ext.isArray(value)){value=value.length?value:null;}
return value;}})
Ext.define('PumaMain.view.VisualizationForm',{extend:'Puma.view.container.Common',alias:'widget.visualizationform',requires:['Puma.view.CommonForm','Puma.view.CommonGrid','Puma.view.form.DefaultComboBox','Gisatlib.form.HiddenStoreField','Puma.model.ColumnMap','Puma.model.Column'],padding:5,initComponent:function(){var grid=Ext.widget('commongrid',{width:450,itemId:'visualizationgrid',margin:'0 10 0 0',disableFilter:true,title:'Visualizations',columns:[{dataIndex:'name',flex:1,header:'Name'}],selModel:{allowDeselect:true},store:Ext.StoreMgr.lookup('visualization4window')})
var form=Ext.widget('commonform',{title:'Visualization',model:'Visualization',itemId:'layerrefform',width:300,items:[{xtype:'textfield',name:'name',allowBlank:false,fieldLabel:'Name'},{xtype:'hiddenfield',name:'theme',value:this.theme}]})
this.items=[grid,form];this.callParent();}});Ext.define('PumaMain.controller.Export',{extend:'Ext.app.Controller',views:[],requires:['Ext.Ajax'],init:function(){},initConf:function(){console.log('Init')
var id=window.location.search.split('?')[1].split('&')[0].split('=')[1];this.forDownload=window.location.search.search('fordownload')>-1;Ext.Ajax.request({url:Config.url+'/api/urlview/getChart',params:{_id:id},scope:this,method:'GET',success:this.onConfLoaded})},onConfLoaded:function(response){var cfg=JSON.parse(response.responseText).data;var opts={height:400,width:575};if(cfg.type=='extentoutline'){opts.layout='absolute'
var selAreas=JSON.parse(cfg.selectedAreas);var count=0;for(var loc in selAreas){for(var at in selAreas[loc]){count+=selAreas[loc][at].length}}}
if(cfg.type=='map'){var size=cfg.layers2?{h:cfg.size.h,w:cfg.size.w*2}:{h:cfg.size.h,w:cfg.size.w}
opts={height:this.forDownload?size.h:800,width:this.forDownload?size.w:1150,items:[{xtype:'component',flex:1,margin:'0 2 0 0',first:true,id:'app-map',cls:'map'}]}
if(cfg.layers2){opts.items.push({xtype:'component',flex:1,id:'app-map2',cls:'map'})
opts.layout={type:'hbox',align:'stretch'}}
this.mapWidth=opts.width}
if(cfg.type=='extentoutline'){opts={height:402,width:565}}
var chart=Ext.widget('chartcmp',opts);chart.render('rendering');chart.cfg=Ext.clone(cfg);chart.cfg.areas=chart.cfg.oldAreas;chart.queryCfg=cfg;if(cfg.type=='map'){this.loadMap(chart);return;}
var chartController=this.getController('Chart');var params=chartController.getParams(cfg);params['forExport']=true;Ext.Ajax.request({url:Config.url+'/api/chart/getChart',params:params,singlePage:true,scope:chartController,method:'POST',cmp:chart,success:chartController.onChartReceived,failure:chartController.onChartReceived})},loadMap:function(cmp){var counterObj={cnt:0,desired:0};var maps=[];var overallLayers=[];var me=this;cmp.items.each(function(item){var options={projection:new OpenLayers.Projection("EPSG:900913"),displayProjection:new OpenLayers.Projection("EPSG:4326"),units:"m",numZoomLevels:22,maxExtent:new OpenLayers.Bounds(-20037508,-20037508,20037508,20037508.34),featureEvents:true,allOverlays:true,div:item.el.dom};var map=new OpenLayers.Map(options);maps.push(map);var cfg=cmp.cfg;var layers=[];var gLayer=null;var legends=[];var cfgLayers=item.first?cfg.layers:cfg.layers2;for(var i=0;i<cfgLayers.length;i++){var layerCfg=cfgLayers[i];var layer=null;var disallowedTypes={selectedareas:1,selectedareasfilled:1,areaoutlines:1}
if(!layerCfg.sldId&&!layerCfg.layersParam&&!disallowedTypes[layerCfg.type]){layer=layerCfg.type=='osm'?new OpenLayers.Layer.OSM():new OpenLayers.Layer.Google('Google',{type:layerCfg.type,animationEnabled:true,initialized:true,visibility:true});gLayer=layer;counterObj.desired++;}
else if(layerCfg.sldId||layerCfg.layersParam){var layerParams={singleTile:true,visibility:true,opacity:layerCfg.opacity,ratio:1.02}
var params={transparent:true,format:'image/png'}
if(layerCfg.layersParam){params['layers']=layerCfg.layersParam;delete layerParams.singleTile;layerParams.tileSize=new OpenLayers.Size(256,256)
layerParams.removeBackBufferDelay=0;layerParams.transitionEffect=null;}
if(layerCfg.sldId){params['sld_id']=layerCfg.sldId}
if(layerCfg.stylesParam){params['styles']=layerCfg.stylesParam}
if(layerCfg.legendSrc){legends.push({src:layerCfg.legendSrc,name:layerCfg.name})}
layer=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',params,layerParams);counterObj.desired++;}
if(layer){layers.push(layer);}}
if(item.first&&legends.length&&me.forDownload){var html='';for(var i=0;i<legends.length;i++){var legend=legends[i];html+='<div class="legend-container"><div class="legend-text" >'+legend.name+'</div><img src="'+legend.src+'"/></div>'}
var legendEl=Ext.get('legend');legendEl.setStyle({maxWidth:this.mapWidth});legendEl.update(html);}
if(cfg.layers2){var blob=Ext.DomHelper.createDom({cls:"map-label",html:item.first?cfg.yearName:cfg.year2Name});var yearEl=new Ext.dom.Element(blob);item.el.appendChild(yearEl);}
layers.reverse();map.addLayers(layers);if(cfg.trafficLayer&&gLayer){var trafficLayer=new google.maps.TrafficLayer()
trafficLayer.setMap(gLayer.mapObject);}
overallLayers=Ext.Array.merge(overallLayers,layers);})
for(var i=0;i<overallLayers.length;i++){var layer=overallLayers[i];if(layer.mapObject){google.maps.event.addListener(layer.mapObject,'tilesloaded',function(){counterObj.cnt++;if(counterObj.cnt==counterObj.desired){window.setTimeout(function(){console.log('loadingdone');},100)}})}
else{layer.events.register('loadend',null,function(a,b){counterObj.cnt++;if(counterObj.cnt==counterObj.desired){window.setTimeout(function(){console.log('loadingdone');},100)}});}}
for(var i=0;i<maps.length;i++){maps[i].setCenter([cmp.cfg.center.lon,cmp.cfg.center.lat],cmp.cfg.zoom);}
Ext.ComponentQuery.query('chartcmp')[0].el.setStyle({backgroundColor:'#444'});}});Ext.define('PumaMain.controller.DomManipulation',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){if(Config.exportPage){return;}
$("#sidebar-reports-toggle").on("click",$.proxy(this._onReportsSidebarToggleClick,this));$("#sidebar-tools-toggle").on("click",$.proxy(this._onToolsSidebarToggleClick,this));$(window).on("resize",$.proxy(this._onWindowResize,this))
this.control({"toolspanel panel":{expand:this.onToolPanelExpand,collapse:this.onToolPanelCollapse},"toolspanel":{resize:this.onToolsResize,afterrender:this.onToolsResize}});this.resizeMap();this.resizeSidebars();},onToolsResize:function(toolPanel){this.resizeTools();},onToolPanelResize:function(panel){this.resizeTools();},onToolPanelExpand:function(panel){this.resizeTools();},onToolPanelCollapse:function(panel){this.resizeTools();},renderApp:function(){$("body").removeClass("intro").addClass("application");this.resizeMap();this.resizeSidebars();},renderIntro:function(){},resizeMap:function(){var availableSize=this.getContentAvailableSize();var w=availableSize.width;var h=availableSize.height;var sl=$("#sidebar-reports").position().left;if($("body").hasClass("application")&&sl>0){w=sl;}
$("#map-holder").css({width:w,height:h});var map=Ext.ComponentQuery.query('#map')[0];var map2=Ext.ComponentQuery.query('#map2')[0];if(map){this.getController('Map').onResize(map);}
if(map2){this.getController('Map').onResize(map2);}},resizeSidebars:function(){this.resizeTools();this.resizeReports();},resizeTools:function(){var availableSize=this.getContentAvailableSize();var accordeonMaxH=availableSize.height-$("#app-tools-actions").outerHeight(true)-$("#sidebar-tools-colors").outerHeight(true);var accordeon=Ext.ComponentQuery.query('toolspanel')[0];if(accordeon){accordeon.maxHeight=accordeonMaxH;accordeon.updateLayout();}
$("#sidebar-tools").css("max-height",availableSize.height);},resizeReports:function(){var availableSize=this.getContentAvailableSize();$("#sidebar-reports").height(availableSize.height);$("#app-reports-accordeon").height(availableSize.height-$("#app-reports-paging").outerHeight(true));},activateMapSplit:function(){$("#map-holder").addClass("split");this.resizeMap();},deactivateMapSplit:function(){$("#map-holder").removeClass("split");this.resizeMap();},getContentAvailableSize:function(){var w=$(window).width();var h=$(window).height()-$("#footer").outerHeight(true);if($("body").hasClass("application")){h-=$("#toolbar").outerHeight(true);}
return{width:w,height:h};},activateLoadingMask:function(){$("#loading-mask-shim, #loading-mask").show();},deactivateLoadingMask:function(){$("#loading-mask-shim, #loading-mask").hide();},_onReportsSidebarToggleClick:function(){$("#sidebar-reports").toggleClass("hidden");this.resizeMap();},_onToolsSidebarToggleClick:function(){$("#sidebar-tools").toggleClass("hidden");},_onWindowResize:function(){this.resizeMap();this.resizeSidebars();}});Ext.define('PumaMain.controller.Map',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){this.initialExtent=new OpenLayers.Bounds(-32,33,46,72).transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913"))
this.control({'#map':{afterrender:this.afterRender,resize:this.onResize,},'#map2':{afterrender:this.afterRender,resize:this.onResize},'component[type=distantregion]':{afterrender:this.afterRender,resize:this.onResize},'component[type=extentoutline]':{afterrender:this.afterExtentOutlineRender,resize:this.onResize},'#zoomselectedbtn':{click:this.onZoomSelected},'initialbar #featureinfobtn':{toggle:this.onFeatureInfoActivated},'#measurelinebtn':{toggle:this.onMeasureActivated},'#measurepolygonbtn':{toggle:this.onMeasureActivated},'#multiplemapsbtn':{click:this.onZoomToFull},'#savemapbtn':{click:this.onExportMapUrl},'maptools #snapshot':{click:this.onExportMapUrl}})
var me=this;},onOutlineClick:function(cmp){},onExportMapUrl:function(btn){var map1=Ext.ComponentQuery.query('#map')[0].map;var map2=Ext.ComponentQuery.query('#map2')[0].map;var layerStore=Ext.StoreMgr.lookup('selectedlayers');var years=Ext.ComponentQuery.query('#selyear')[0].getValue();var maps=years.length>1?[map1,map2]:[map1]
var mapCfg={};var layers1=[];var layers2=[];var me=this;Puma.util.Msg.msg('Snapshot creation started','','r');layerStore.each(function(rec){for(var i=0;i<maps.length;i++){var map=maps[i];var layer=rec.get(i==0?'layer1':'layer2');var layers=i==0?layers1:layers2;var sldId=layer.params?layer.params['SLD_ID']:null;var layersParam=layer.params?layer.params['LAYERS']:null;var stylesParam=layer.params?layer.params['STYLES']:null;var obj={type:rec.get('type'),opacity:layer.opacity||1,sldId:sldId,name:rec.get('name'),legendSrc:rec.get('src'),layersParam:layersParam,stylesParam:stylesParam}
layers.push(obj);}})
var store=Ext.StoreMgr.lookup('year');mapCfg={layers:layers1,layers2:years.length>1?layers2:null,type:'map',year:map1.year,yearName:store.getById(map1.year).get('name'),year2:years.length>1?map2.year:null,year2Name:years.length>1?store.getById(map2.year).get('name'):null,center:map1.center,size:map1.size,zoom:map1.zoom}
Ext.Ajax.request({url:Config.url+'/api/urlview/saveChart',params:{cfg:JSON.stringify(mapCfg)},scope:this,method:'POST',success:function(response){var id=JSON.parse(response.responseText).data;this.getController('Chart').onUrlCallback(id,btn.itemId=='savemapbtn')}})},onZoomToFull:function(){this.map1.zoomToExtent(this.initialExtent);},onMultipleYearsToggle:function(btn,pressed){var yearCnt=Ext.ComponentQuery.query('#selyear')[0]
var years=yearCnt.getValue();if(years.length<2&&pressed){var newYears=[years[0]];var yearsInStore=Ext.StoreMgr.lookup('year4sel').getRange();for(var i=yearsInStore.length-1;i>=0;i--){var year=yearsInStore[i].get('_id');if(Ext.Array.contains(years,year)){continue;}
if(newYears.length<2){Ext.Array.insert(newYears,i==yearsInStore.length-1?1:0,[year])}}
yearCnt.setValue(newYears)}
if(years.length>1&&!pressed){yearCnt.setValue([years[years.length-1]])}
var domController=this.getController('DomManipulation');if(pressed){domController.activateMapSplit();}
else{domController.deactivateMapSplit();}
this.multiMap=pressed;this.map1.multiMap=pressed;this.map2.multiMap=pressed;var method=pressed?'addCls':'removeCls';Ext.get(this.map1.div)[method]('noattrib');var controlZoom=Ext.select('#app-map .olControlZoom');controlZoom.setVisible(!pressed);this.switchMap(pressed);},switchMap:function(both,second){var map1=Ext.ComponentQuery.query('#map')[0];var map2=Ext.ComponentQuery.query('#map2')[0];if(both){map2.map.noSync=true;map1.show();map2.show();map2.map.noSync=false;this.onMapMove(map1.map);}
else{map2.hide();map1.show();}},onFeatureInfoActivated:function(btn,val){if(val){this.map1.featureInfoControl.activate();}
else{this.map1.featureInfoControl.deactivate();}},onMeasureActivated:function(btn,val){var control1=btn.itemId=='measurelinebtn'?this.map1.measureLineControl:this.map1.measurePolyControl;var control2=btn.itemId=='measurelinebtn'?this.map2.measureLineControl:this.map2.measurePolyControl;var window=Ext.WindowManager.get('measureWindow');if(val){var title='Measure '+(btn.itemId=='measurelinebtn'?'line':'polygon');var helpText=btn.itemId=='measurelinebtn'?'Click to define line shape, double-click to complete.':'Click to define polygon shape, double-click to complete.';var initialText=(btn.itemId=='measurelinebtn'?'Length':'Area')+":";if(!window){window=Ext.widget('window',{padding:5,minWidth:140,closable:false,maxWidth:260,bodyPadding:5,title:title,closeAction:'hide',items:[{xtype:'component',itemId:'help',margin:'0 0 10 0',html:helpText},{xtype:'component',itemId:'measure',html:initialText}],id:'measureWindow'})}
else{window.setTitle(title);window.down('#help').update(helpText);window.down('#measure').update(initialText);}
window.show();control1.activate();control2.activate();}
else{if(window){window.close();}
control1.deactivate();control2.deactivate();}},onZoomSelected:function(btn,areas){var map=Ext.ComponentQuery.query('#map')[0].map;if(Config.cfg){map.setCenter([Config.cfg.mapCfg.center.lon,Config.cfg.mapCfg.center.lat],Config.cfg.mapCfg.zoom);return;}
var selectController=this.getController('Select');var color=selectController.actualColor;var sel=color?selectController.selMap[color]:[];sel=areas.length?areas:sel;if(!sel.length)return;var areaController=this.getController('Area');var format=new OpenLayers.Format.WKT();var overallExtent=null;for(var i=0;i<sel.length;i++){var area=areas.length?areas[i]:areaController.getArea(sel[i]);var extent=format.read(area.get('extent')).geometry.getBounds();extent=extent.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913"))
if(!overallExtent){overallExtent=extent;}
else{overallExtent.extend(extent)}}
map.zoomToExtent(overallExtent);},createBaseNodes:function(){var baseNode=Ext.StoreMgr.lookup('layers').getRootNode().findChild('type','basegroup');var hybridNode=Ext.create('Puma.model.MapLayer',{name:'Google hybrid',checked:false,allowDrag:false,initialized:true,leaf:true,sortIndex:10000,type:'hybrid'});var streetNode=Ext.create('Puma.model.MapLayer',{name:'Google street',initialized:true,allowDrag:false,checked:false,leaf:true,sortIndex:10000,type:'roadmap'});var terrainNode=Ext.create('Puma.model.MapLayer',{name:'Google terrain',initialized:true,allowDrag:false,checked:true,leaf:true,sortIndex:10000,type:'terrain'});var osmNode=Ext.create('Puma.model.MapLayer',{name:'OpenStreetMap',initialized:true,allowDrag:false,checked:false,leaf:true,sortIndex:10000,type:'osm'});Ext.StoreMgr.lookup('selectedlayers').loadData([hybridNode,streetNode,terrainNode,osmNode],true);baseNode.appendChild([hybridNode,streetNode,terrainNode,osmNode]);},onMapMove:function(map){if(!map.multiMap||map.noSync){return;}
var mapMoved=map;var mapAlt=map==this.map1?this.map2:this.map1;if(!mapMoved||!mapAlt)return;if(mapMoved.artifZoom){mapMoved.artifZoom=false;return;}
mapAlt.artifZoom=true;mapAlt.setCenter(mapMoved.getCenter(),mapMoved.getZoom());mapAlt.artifZoom=false;},onMouseMove:function(e){if(!this.multiMap){this.cursor1.hide();this.cursor2.hide();return;}
var cursor=this.cursor1;var offsetX=this.map1.div.offsetLeft;if(e.object==this.map1){cursor=this.cursor2;offsetX=this.map2.div.offsetLeft;}
var x=e.x-e.element.offsetParent.offsetLeft+offsetX;var y=e.y-e.element.offsetParent.offsetTop;cursor.setStyle({top:y+'px',left:x+'px'});cursor.show();},onMouseOut:function(e){this.cursor1.hide();this.cursor2.hide();},afterExtentOutlineRender:function(cmp){var options=this.getOptions(cmp);options.controls=[];var map=new OpenLayers.Map(options);cmp.map=map;var hybridLayer=new OpenLayers.Layer.Google('Google',{type:'terrain',initialized:true,animationEnabled:true});var layerDefaults=this.getController('Layers').getWmsLayerDefaults();var layerDefaultsTiled=this.getController('Layers').getWmsLayerDefaults();layerDefaultsTiled.params.tiled=true;delete layerDefaultsTiled.layerParams.singleTile;layerDefaultsTiled.layerParams.tileSize=new OpenLayers.Size(256,256)
layerDefaultsTiled.layerParams.removeBackBufferDelay=0;layerDefaultsTiled.layerParams.transitionEffect=null;map.layer1=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.apply(layerDefaultsTiled.params),Ext.clone(layerDefaultsTiled.layerParams));map.layer2=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.clone(layerDefaults.params),Ext.clone(layerDefaults.layerParams));map.layer1.opacity=cmp.opacity;map.addLayers([hybridLayer,map.layer1,map.layer2]);var counterObj={cnt:0,desired:3}
var me=this;google.maps.event.addListener(hybridLayer.mapObject,'tilesloaded',function(){counterObj.cnt++;if(counterObj.cnt==counterObj.desired){me.onExtentOutlineComplete(cmp)}})
for(var i=0;i<2;i++){var layer=map['layer'+(i+1)];layer.events.register('loadend',null,function(a,b){counterObj.cnt++;if(counterObj.cnt==counterObj.desired){me.onExtentOutlineComplete(cmp)}});}
var layerRefs=cmp.layerRefs;var rows=cmp.rows;var format=new OpenLayers.Format.WKT();var filters=[];var overallExtent=null;for(var j=0;j<rows.length;j++){var row=rows[j];var filter=new OpenLayers.Filter.Comparison({type:'==',property:'gid',value:row.gid});filters.push(filter);var extent=format.read(row.extent).geometry.getBounds();extent=extent.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913"))
if(!overallExtent){overallExtent=extent;}
else{overallExtent.extend(extent)}}
var filter=filters.length<2?filters[0]:new OpenLayers.Filter.Logical({type:'||',filters:filters});var style=new OpenLayers.Style();var layerName='puma:layer_'+layerRefs.areaRef._id;var rule=new OpenLayers.Rule({symbolizer:{"Polygon":new OpenLayers.Symbolizer.Polygon({fillOpacity:0,strokeOpacity:1,strokeColor:'#'+cmp.color})},filter:filter});style.addRules([rule]);var namedLayers=[{name:layerName,userStyles:[style]}];var sldObject={name:'style',title:'Style',namedLayers:namedLayers}
var format=new OpenLayers.Format.SLD.Geoserver23();var sldNode=format.write(sldObject);var xmlFormat=new OpenLayers.Format.XML();var sldText=xmlFormat.write(sldNode);var parent=cmp.up('chartcmp');var symbologyId=null;var atWithSymbology=parent.cfg.featureLayer||parent.cfg.outlineLayerTemplate;var splitted=atWithSymbology.split('_');if(splitted.length>1){symbologyId=splitted.slice(1).join('_');symbologyId=symbologyId=='#blank#'?null:symbologyId}
var layers=Ext.Array.map(layerRefs.layerRef?[layerRefs.layerRef]:layerRefs.layerRefs,function(item){return item.layer;})
var layer1Conf={layers:layers.join(',')}
var numLayers=layers.length;if(symbologyId){layer1Conf.styles='';for(var i=0;i<numLayers;i++){layer1Conf.styles+=layer1Conf.styles?',':'';layer1Conf.styles+=symbologyId;}}
map.layer1.mergeNewParams(layer1Conf)
map.layer2.mergeNewParams({"USE_SECOND":true,"SLD_BODY":sldText})
map.updateSize();map.outlineExtent=overallExtent;map.layer1.setVisibility(true);map.layer2.setVisibility(true);map.zoomToExtent(map.outlineExtent);if(cmp.ownerCt.items.getCount()==cmp.ownerCt.mapNum){var minZoom=10000;cmp.ownerCt.items.each(function(mapCmp){var zoom=mapCmp.map.getZoom()
if(zoom<minZoom){minZoom=zoom}});cmp.ownerCt.items.each(function(mapCmp){var curMap=mapCmp.map;if(curMap==map){setTimeout(function(){curMap.zoomTo(minZoom);},100)}
else{curMap.zoomTo(minZoom);}});}},onExtentOutlineComplete:function(cmp){cmp.mapLoaded=true;var loaded=true;if(!cmp.ownerCt){return;}
cmp.ownerCt.items.each(function(mapCmp){if(!mapCmp.mapLoaded){loaded=false;return false;}})
if(loaded){setTimeout(function(){console.log('loadingdone');},150)}},getOptions:function(cmp){var options={projection:new OpenLayers.Projection("EPSG:900913"),displayProjection:new OpenLayers.Projection("EPSG:4326"),units:"m",numZoomLevels:22,maxExtent:new OpenLayers.Bounds(-20037508,-20037508,20037508,20037508.34),featureEvents:true,allOverlays:true,div:cmp.id};return options;},afterRender:function(cmp){var options=this.getOptions(cmp);if(cmp.type=='distantregion'){options.controls=[];if(!this.initialized){this.initialized=true;Ext.ComponentQuery.query('#regionspanel')[0].expand();}}
var map=new OpenLayers.Map(options);cmp.map=map;var el=Ext.get(cmp.id);el.on('contextmenu',function(e){return;e.stopEvent();var layerMenu=Ext.widget('layermenu',{map:map})
layerMenu.showAt(e.getXY());})
if(cmp.itemId=='map'){this.createBaseNodes();this.map1=map;this.cursor1=Ext.get('app-map').down('img')}
else if(cmp.itemId=='map2'){this.map2=map;this.cursor2=Ext.get('app-map2').down('img')}
var hybridLayer=new OpenLayers.Layer.Google('Google',{type:'hybrid',initialized:true,animationEnabled:true,visibility:false});map.defaultLayer=layer;var streetLayer=new OpenLayers.Layer.Google('Google',{type:'roadmap',animationEnabled:true,initialized:true,visibility:false});var terrainLayer=new OpenLayers.Layer.Google('Google',{type:'terrain',animationEnabled:true,initialized:true,visibility:true});var osmLayer=new OpenLayers.Layer.OSM('OSM',null,{initialized:true,visibility:false});var baseNode=Ext.StoreMgr.lookup('layers').getRootNode().findChild('type','basegroup');var baseNodes=baseNode.childNodes
var nodes=[];for(var i=0;i<baseNodes.length;i++){var node=baseNodes[i];var layer=null;var type=node.get('type');switch(type){case'hybrid':layer=hybridLayer;break;case'roadmap':layer=streetLayer;break;case'terrain':layer=terrainLayer;break;case'osm':layer=osmLayer;break;}
var nodeProp=cmp.itemId=='map'?'layer1':'layer2';if(cmp.type=='distantregion'){var distantLayers=node.get('distantLayers')||[];distantLayers.push(layer);node.set('distantLayers',distantLayers);continue;}
node.set(nodeProp,layer);}
map.drawnLayer=new OpenLayers.Layer.Vector('',{style:{fillOpacity:0,strokeWidth:3,strokeColor:'#ff8800',strokeOpacity:0.8,pointRadius:2}})
map.size=map.getCurrentSize();map.addLayers([terrainLayer,streetLayer,hybridLayer,osmLayer]);if(cmp.id=='map'){Ext.StoreMgr.lookup('selectedlayers').loadData(nodes,true);}
map.events.register('moveend',this,function(e){this.onMapMove(e.object);})
map.events.register('mousemove',this,function(e){this.onMouseMove(e);})
map.events.register('mouseout',this,function(e){this.onMouseOut(e);})
map.updateSize();if(cmp.type=='distantregion'){}
var params={transparent:true,format:'image/png',info_format:'application/vnd.ogc.gml'}
map.selectInMapLayer=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',params,{visibility:true});map.selectInMapLayer.projection=map.projection;map.getFeatureInfoLayer=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',params,{visibility:true});map.getFeatureInfoLayer.projection=map.projection;var infoControls={click:new OpenLayers.Control.WMSGetFeatureInfo({url:Config.url+'/api/proxy/wms',vendorParams:{propertyName:'gid'},layers:[map.selectInMapLayer]}),hover:new OpenLayers.Control.WMSGetFeatureInfo({url:Config.url+'/api/proxy/wms',vendorParams:{propertyName:'gid',buffer:1},layers:[map.selectInMapLayer],hover:true})};map.featureInfoControl=new OpenLayers.Control.WMSGetFeatureInfo({url:Config.url+'/api/proxy/wms',vendorParams:{propertyName:'gid',buffer:1,completeLayer:true},layers:[map.getFeatureInfoLayer]})
map.drawPolygonControl=new OpenLayers.Control.DrawFeature(map.drawnLayer,OpenLayers.Handler.Polygon)
map.drawPointControl=new OpenLayers.Control.DrawFeature(map.drawnLayer,OpenLayers.Handler.Point)
map.selectControl=new OpenLayers.Control.SelectFeature(map.drawnLayer,{highlightOnly:true})
map.dragControl=new OpenLayers.Control.DragFeature(map.drawnLayer,{geometryTypes:['OpenLayers.Geometry.Point']})
var me=this;var measureCallbacks={'modify':function(point,feature){me.handleMeasureModify(point,feature,this);}}
map.measurePolyControl=new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,{geodesic:true,persist:true,callbacks:measureCallbacks});map.measureLineControl=new OpenLayers.Control.Measure(OpenLayers.Handler.Path,{geodesic:true,persist:true,callbacks:measureCallbacks});map.addControls([map.drawPolygonControl,map.drawPointControl,map.selectControl,map.dragControl,map.featureInfoControl,map.measurePolyControl,map.measureLineControl]);map.dragControl.onComplete=function(feature){me.getController('UserPolygon').onFeatureDragged(feature);}
for(var i in infoControls){infoControls[i].events.register("getfeatureinfo",this,this.onFeatureSelected);map.addControl(infoControls[i]);}
if(cmp.type=='distantregion'){infoControls.click.activate();}
map.featureInfoControl.events.register('beforegetfeatureinfo',this,function(){return this.updateFeatureInfoControl()});map.featureInfoControl.events.register("getfeatureinfo",this,function(response){return this.onFeatureInfo(response);});map.measureLineControl.events.register('measurepartial',this,function(obj){return this.onMeasurePartial(obj);});map.measurePolyControl.events.register('measurepartial',this,function(obj){return this.onMeasurePartial(obj);});map.infoControls=infoControls},onMeasurePartial:function(evt){var html=(evt.order==1?'Length':'Area')+': ';if(evt.measure==0)return;var fixedNum=evt.measure<10000?1:0;fixedNum=evt.measure<100?2:fixedNum;html+=evt.measure.toFixed(fixedNum);html+=' ';html+=evt.units;html+=evt.order==2?'<sup>2</sup>':'';var cmp=Ext.WindowManager.get('measureWindow').down('#measure');cmp.el.update(html)},onFeatureInfo:function(response){var data=JSON.parse(response.text).data;if(!data||!data.length){return;}
var window=Ext.WindowManager.get('featureinfowindow');if(!window){window=Ext.widget('window',{layout:'fit',width:400,maxHeight:600,id:'featureinfowindow',items:[{xtype:'treepanel',rootVisible:false,columns:[{xtype:'treecolumn',flex:1,dataIndex:'name',renderer:function(val,metaData,record){if(record.get('attrSet')==-1){metaData.style='font-weight:bold'}
return val;},header:'Name'},{dataIndex:'value',flex:1,header:'Value'}],store:Ext.create('Ext.data.TreeStore',{fields:['name','value','attrSet']})}]})}
var store=window.items.get(0).store;store.getRootNode().removeAll(false,true);store.getRootNode().appendChild(data);window.show();},updateFeatureInfoControl:function(){var store=Ext.StoreMgr.lookup('layers');var root=store.getRootNode();var layerRefMap=this.getController('Area').areaTemplateMap;var layers=[];return;root.cascadeBy(function(node){if(!node.get('checked'))return;var at=node.get('bindAt');var layerRef=layerRefMap[at];if(!layerRef||!layerRef.fidColumn){at=node.get('at');}
layerRef=layerRefMap[at];var layerName=node.get('layerName');if(!layerName||(!layerRef||!layerRef.fidColumn)&&at!=-1)return;var layerName=(layerRef?'layer_'+layerRef._id:layerName);if(!layerName)return;layers.push('puma:'+layerName)})
if(!layers.length){return false;}
this.map1.getFeatureInfoLayer.params['LAYERS']=layers;this.map2.getFeatureInfoLayer.params['LAYERS']=layers;},updateGetFeatureControl:function(){var layers1=[];var layers2=[];var controller=this.getController('Area');var areaTemplates=controller.areaTemplates;var areaTemplateMap=controller.areaTemplateMap;var years=Ext.ComponentQuery.query('#selyear')[0].getValue();if(!years.length){return;}
var locations=this.getController('Area').getTreeLocations();var lrMap={};for(var i=0;i<areaTemplates.length;i++){var at=areaTemplates[i]
if(at==-1){var location=Ext.ComponentQuery.query('initialbar #locationcontainer button[pressed=true]')[0].objId;var year=Ext.ComponentQuery.query('initialbar #yearcontainer button[pressed=true]')[0].objId;var layer='puma:#userpolygon#layer_user_#userid#_loc_'+location+'_y_'+year;}
var atMap=areaTemplateMap[at]||{};for(var j=0;j<locations.length;j++){var loc=locations[j];var locMap=areaTemplateMap[loc]||{};var atMap=locMap[at]||{};var lr1=atMap[years[0]];var lr2=years.length>1?atMap[years[1]]:null;if(lr1){lrMap[lr1._id]={at:at,loc:loc};var layer='puma:layer_'+lr1._id;layers1.push(layer)}
if(lr2){lrMap[lr2._id]={at:at,loc:loc};var layer='puma:layer_'+lr2._id;layers2.push(layer)}}}
this.lrMap=lrMap;this.map1.selectInMapLayer.params['LAYERS']=layers1.join(',');this.map2.selectInMapLayer.params['LAYERS']=layers2.join(',');var distantRegions=Ext.ComponentQuery.query('component[type=distantregion]')
for(var i=0;i<distantRegions.length;i++){var distantRegion=distantRegions[i];distantRegion.map.selectInMapLayer.params['LAYERS']=layers1.join(',');}},onFeatureSelected:function(evt){var features=JSON.parse(evt.text).features;if(features&&features.length){var controller=this.getController('Area')
var areaTemplates=controller.areaTemplates;var areaTemplateMap=controller.areaTemplateMap;var lrs=[];features.reverse();var root=Ext.StoreMgr.lookup('area').getRootNode();var gid=null;var at=null;var loc=null;for(var i=0;i<features.length;i++){var feature=features[i];gid=feature.properties.gid;var layerName=feature.id.split('.')[0];var lr=null;if(layerName.indexOf('user')>=0){at=-1;break;}
else{lr=parseInt(layerName.split('_')[1]);}
var featureAt=this.lrMap[lr].at;var featureLoc=this.lrMap[lr].loc;var found=false;root.cascadeBy(function(node){if(!node.isVisible())return;if(node.get('at')==featureAt&&node.get('gid')==gid&&node.get('loc')==featureLoc){found=true;at=node.get('at');loc=node.get('loc')
return false;}})
if(found){break;}}
var selected=[];if(at&&loc&&gid){selected.push({at:at,gid:gid,loc:loc})}
var add=evt.object.handler.evt.ctrlKey;var hover=evt.object.hover;this.getController('Select').select(selected,add,hover);}
else{var add=evt.object.handler.evt.ctrlKey;var hover=evt.object.hover;this.getController('Select').select([],add,hover);}},onResize:function(cmp){if(cmp.map){if(cmp.type!='distantregion'){cmp.setWidth(cmp.container.getWidth());cmp.setHeight(cmp.container.getHeight());}
cmp.map.updateSize();if(!cmp.initialZoom){if(cmp.zoomTo){var bounds84=new OpenLayers.Bounds(cmp.zoomTo);var bounds=bounds84.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913"));cmp.map.zoomToExtent(bounds);cmp.initialZoom=true;return;}
cmp.map.zoomToExtent(cmp.map.outlineExtent||this.initialExtent);cmp.initialZoom=true;}}},handleMeasureModify:function(point,feature,control){var geometry=feature.geometry;if(geometry.components[0].components){geometry.components[0].addComponent(point);}
else{geometry.addPoint(point);}
OpenLayers.Control.Measure.prototype.measure.apply(control,[geometry,'measurepartial']);},});Ext.define('PumaMain.controller.LocationTheme',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){this.control({'#initialdataset':{change:this.onDatasetChange},'#initialscope':{change:this.onScopeChange},'#initialtheme':{change:this.onThemeChange},'#seldataset':{change:this.onDatasetChange},'#selscope':{change:this.onScopeChange},'#seltheme':{change:this.onThemeChange},'#selyear':{change:this.onYearChange},'#selindicator':{change:this.onIndicatorChange},'#selvisualization':{change:this.onVisChange},'#initialconfirm':{click:this.onConfirm},'discretetimeline':{change:this.testTimeline}})
Ext.Ajax.request({url:Config.url+'/api/theme/getAttrConf',scope:this,method:'POST',success:function(response){this.attrConf=JSON.parse(response.responseText).data;}})
this.wasMulti=false;},testTimeline:function(slider,value){console.log(value);},onDatasetChange:function(cnt,val){if(cnt.eventsSuspended){return;}
var themeStore=Ext.StoreMgr.lookup('theme4sel');var themes=this.attrConf[val]||[];themeStore.clearFilter();themeStore.filter([function(rec){return Ext.Array.contains(themes,rec.get('_id'))}])
var themeComboId=cnt.initial?'#initialtheme':'#seltheme'
var themeCombo=Ext.ComponentQuery.query(themeComboId)[0];var themeVal=themeCombo.getValue();if(!themeVal){themeCombo.suspendEvents();var themeFirst=themeStore.getAt(0);if(!themeFirst){Ext.ComponentQuery.query('#initialindicator')[0].setValue(null);return;}
themeVal=themeFirst.get('_id')
themeCombo.setValue(themeVal)
themeCombo.resumeEvents();this.themeChanged=true;}
var theme=Ext.StoreMgr.lookup('theme').getById(themeVal);var topic=theme.get('topics')[0];var attrStore=Ext.StoreMgr.lookup('attribute4sel');var attrSet=Ext.StoreMgr.lookup('attributeset').queryBy(function(rec){return rec.get('topic')==topic&&rec.get('dataset')==val;}).first();this.attrSet=attrSet.get('_id');var attributes=attrSet.get('attributes');if(!cnt.initial){var attrCombo=Ext.ComponentQuery.query('#selindicator')[0]
attrCombo.suspendEvents();}
attrStore.clearFilter();attrStore.filter([function(rec){return Ext.Array.contains(attributes,rec.get('_id'))}])
attrStore.sorters.clear();attrStore.sort([function(a,b){var arr=[407,406,408,409,410];arr.reverse();var idx1=Ext.Array.indexOf(arr,a.get('_id'))
var idx2=Ext.Array.indexOf(arr,b.get('_id'))
if(idx1==idx2){var i1=Ext.Array.indexOf(attributes,a.get('_id'));var i2=Ext.Array.indexOf(attributes,b.get('_id'));return i1>i2?1:-1;}
return idx1<idx2?1:-1;}])
if(cnt.initial){return;}
var attrVal=attrCombo.getValue();if(!attrVal){attrVal=attrStore.getAt(0).get('_id')
attrCombo.setValue(attrVal)
this.indicatorChanged=true;}
attrCombo.resumeEvents();this.getController('DomManipulation').activateLoadingMask();this.datasetChanged=true;var changed=this.changeYears(themeVal,val);if(changed)return;this.onYearChange(cnt)},changeYears:function(themeVal,datasetVal){var theme=Ext.StoreMgr.lookup('theme').getById(themeVal);var topics=theme.get('topics');var attrSet=Ext.StoreMgr.lookup('attributeset').queryBy(function(rec){return Ext.Array.contains(topics,rec.get('topic'))&&rec.get('dataset')==datasetVal&&rec.get('attributes')&&rec.get('attributes').length;}).getAt(0);var years=attrSet.get('years');var year=attrSet.get('year');var yearStore=Ext.StoreMgr.lookup('year');yearStore.clearFilter();var yearCombo=Ext.ComponentQuery.query('#selyear')[0]
var currentYears=yearCombo.getValue();var changed=false;if(year&&currentYears&&currentYears.length&&!Ext.Array.contains(currentYears,year)){changed=true;yearCombo.setValue(year);}
else if(years&&years.length&&currentYears&&currentYears.length&&!Ext.Array.intersect(years,currentYears)){changed=true;}
else if(year&&(!currentYears||!currentYears.length)){changed=true;yearCombo.setValue(year);}
if(years&&years.length){yearStore.filter([function(rec){return Ext.Array.contains(years,rec.get('_id'))}])}
return changed;},onScopeChange:function(cnt,val){if(cnt.eventsSuspended){return;}
var scopeObj=Ext.StoreMgr.lookup('scope').getById(val);var datasetStore=Ext.StoreMgr.lookup('dataset4sel');var datasetCombo=Ext.ComponentQuery.query('#seldataset')[0];if(datasetCombo)datasetCombo.suspendEvents();datasetStore.clearFilter();datasetStore.filter([function(rec){return Ext.Array.contains(scopeObj.get('datasets'),rec.get('_id'));}])
if(datasetCombo)datasetCombo.resumeEvents();var first=datasetStore.getAt(0);if(cnt.initial||!first)return;datasetCombo.setValue(parseInt(first.get('_id')));},onIndicatorChange:function(cnt,val){if(cnt.eventsSuspended){return;}
this.reconfigureChartComboValues(this.attrSet)
this.getController('Chart').reconfigureAll();var layerStore=Ext.StoreMgr.lookup('layers');var nodes=layerStore.getRootNode().findChild('type','choroplethgroup').childNodes;for(var i=0;i<nodes.length;i++){var node=nodes[i];if(node.get('attribute')==val){node.set('checked',true);this.getController('Layers').onCheckChange(node,true);}}},onLocationChange:function(cnt,val){if((val=='custom'||val=='Custom'||!val)&&!cnt.initial&&this.locationInitialized){this.forceInit=true;this.updateLayerContext();this.forceInit=false;}
if(!cnt.initial){this.locationInitialized=true;}
if(cnt.eventsSuspended||cnt.initial||val=='custom'||val=='Custom'||!val){return;}
var locObj=this.getController('Area').getLocationObj();if(this.datasetChanged){this.locationChanged=true;this.onYearChange(cnt);return;}
var areaRoot=Ext.StoreMgr.lookup('area').getRootNode();var nodesToCollapse=[];var nodeToExpand=null;for(var i=0;i<areaRoot.childNodes.length;i++){var node=areaRoot.childNodes[i];if(node.get('loc')==locObj.location&&node.get('gid')==locObj.locGid){nodeToExpand=node;}
else{nodesToCollapse.push(node);}}
for(var i=0;i<nodesToCollapse.length;i++){var node=nodesToCollapse[i];if(nodeToExpand||i!=nodesToCollapse.length-1){node.suppress=true;}
node.collapse();node.suppress=false;}
if(nodeToExpand){var loaded=nodeToExpand.get('loaded')||nodeToExpand.isLeaf();if(!loaded){this.locationChanged=true;}
nodeToExpand.expand();if(loaded){this.getController('Area').scanTree();if(nodesToCollapse.length){var selController=this.getController('Select');this.getController('Area').colourTree(selController.colorMap);this.getController('Layers').colourMap(selController.colorMap);}
this.getController('Chart').reconfigureAll();this.getController('Layers').reconfigureAll();this.getController('Area').zoomToLocation();}}
else{this.getController('Area').scanTree();if(nodesToCollapse.length){var selController=this.getController('Select');this.getController('Area').colourTree(selController.colorMap);this.getController('Layers').colourMap(selController.colorMap);this.getController('Chart').reconfigureAll();this.getController('Layers').reconfigureAll();}
this.getController('Area').zoomToLocation();}
this.forceInit=true;this.updateLayerContext();this.forceInit=false;},onConfirm:function(){var val=Ext.ComponentQuery.query('#initialtheme')[0].getValue();this.datasetChanged=true;this.onThemeChange({switching:true},val)},onThemeChange:function(cnt,val){if(cnt.eventsSuspended||cnt.initial||!val){return;}
this.themeChanged=true;var themeCombo=null;if(cnt.switching){Ext.suspendLayouts();this.getController('DomManipulation').activateLoadingMask();this.getController('DomManipulation').renderApp();this.getController('Render').renderApp();themeCombo=Ext.ComponentQuery.query('#seltheme')[0];var datasetVal=Ext.ComponentQuery.query('#initialdataset')[0].getValue();var datasetCombo=Ext.ComponentQuery.query('#seldataset')[0];var scopeVal=Ext.ComponentQuery.query('#initialscope')[0].getValue();var scopeCombo=Ext.ComponentQuery.query('#selscope')[0];var indicatorVal=Ext.ComponentQuery.query('#initialindicator')[0].getValue();var indicatorCombo=Ext.ComponentQuery.query('#selindicator')[0];var yearCombo=Ext.ComponentQuery.query('#selyear')[0];datasetCombo.suspendEvents();scopeCombo.suspendEvents();themeCombo.suspendEvents();yearCombo.suspendEvents();indicatorCombo.suspendEvents();datasetCombo.setValue(datasetVal);scopeCombo.setValue(scopeVal);themeCombo.setValue(val);indicatorCombo.setValue(indicatorVal);yearCombo.refresh();datasetCombo.resumeEvents();scopeCombo.resumeEvents();themeCombo.resumeEvents();indicatorCombo.resumeEvents();yearCombo.resumeEvents();var chartController=this.getController('Chart');chartController.addChart({type:'grid',title:'Grid'},true);chartController.addChart({type:'columnchart',title:'Column',aggregate:'avg'},true);chartController.addChart({type:'scatterchart',title:'Scatter'},true);}
themeCombo=themeCombo||Ext.ComponentQuery.query('#seltheme')[0];yearCombo=yearCombo||Ext.ComponentQuery.query('#selyear')[0];var changed=this.changeYears(val,datasetVal||Ext.ComponentQuery.query('#seldataset')[0].getValue());if(changed)return;var yearVal=yearCombo.getValue();if(!yearVal||!yearVal.length){yearCombo.setValue([Ext.StoreMgr.lookup('year').getAt(0)]);}
else{this.onYearChange(themeCombo);}},onYearChange:function(cnt){var val=Ext.ComponentQuery.query('#selyear')[0].getValue();if(!val.length||cnt.eventsSuspended){this.getController('DomManipulation').deactivateLoadingMask();return;}
if(cnt.itemId=='selyear'){this.yearChanged=true;}
var isFilter=cnt.itemId=='filter'||cnt.itemId=='selectfilter';var detailLevelChanged=cnt.itemId=='detaillevel';var theme=Ext.ComponentQuery.query('#seltheme')[0].getValue();var dataset=Ext.ComponentQuery.query('#seldataset')[0].getValue();var years=Ext.ComponentQuery.query('#selyear')[0].getValue();var params={theme:theme,years:JSON.stringify(years),dataset:dataset}
var areaController=this.getController('Area');var cntId=cnt.itemId
var root=Ext.StoreMgr.lookup('area').getRootNode();params['refreshLayers']=(this.themeChanged||this.datasetChanged)?true:null;params['refreshAreas']=(this.datasetChanged||detailLevelChanged||isFilter)?true:false;if(params['refreshLayers']){params['queryTopics']=this.getQueryTopics(theme);}
if(detailLevelChanged){var parentGids=this.getController('Area').detailLevelParents;params['parentgids']=JSON.stringify(parentGids);params['artifexpand']=true;}
if(Config.cfg){params['expanded']=JSON.stringify(Config.cfg.expanded);}
var me=this;Ext.Ajax.request({url:Config.url+'/api/theme/getThemeYearConf',params:params,scope:this,originatingCnt:cnt,visChanged:this.visChanged,themeChanged:this.themeChanged,datasetChanged:this.datasetChanged,locationChanged:this.locationChanged,yearChanged:this.yearChanged,success:this.onThemeLocationConfReceived,failure:function(){me.getController('DomManipulation').deactivateLoadingMask();}})
this.datasetChanged=null;this.locationChanged=null;this.visChanged=null;this.themeChanged=null;this.yearChanged=null;},onVisChange:function(cnt){if(cnt.eventsSuspended){return;}
var val=Ext.ComponentQuery.query('#selvisualization')[0].getValue();this.getController('Chart').loadVisualization(val);this.getController('Layers').loadVisualization(val);this.getController('Chart').reconfigureAll();this.getController('Layers').checkVisibilityAndStyles();},refreshVisualization:function(){this.onVisChange({});},refreshTheme:function(){var val=Ext.ComponentQuery.query('#seltheme')[0].getValue()
this.onThemeChange({},val);},onFilter:function(){var filterCmp=null;this.onYearChange(filterCmp)},getQueryTopics:function(theme){var layerRoot=Ext.StoreMgr.lookup('layers').getRootNode();var children=layerRoot.childNodes;var presentTopics=[];for(var i=0;i<children.length;i++){var node=children[i];var topic=node.get('topic');if(topic){presentTopics.push(topic);}}
var themeTopics=Ext.StoreMgr.lookup('theme').getById(theme).get('topics');var queryTopics=Ext.Array.difference(themeTopics,presentTopics);if(themeTopics.length!=queryTopics.length){return queryTopics;}},addAreas:function(areasToAdd){var areaRoot=Ext.StoreMgr.lookup('area').getRootNode();var tree=Ext.ComponentQuery.query('#areatree')[0];tree.view.dontRefreshSize=true;areaRoot.removeAll();tree.view.dontRefreshSize=false;var data=[];var currentLevel=[];var parentLevel=null;var level=null;this.addAreasToAreaMap(areasToAdd);var leafMap={};this.lastLevel=areasToAdd.length?areasToAdd[0].at:null;for(var i=0;i<areasToAdd.length;i++){var area=areasToAdd[i];level=level||area.at;if(area.at!=level){level=area.at;this.lastLevel=area.at;parentLevel=currentLevel;currentLevel=[];}
area.filterAttrs={};for(var key in area){if(key.search('as_')>-1&&area[key]){area.filterAttrs[key]=area[key].split(',');}}
if(!area.leaf){area.expandable=true;area.children=[];}
else{leafMap[area.loc]=leafMap[area.loc]||{};leafMap[area.loc][area.at]=leafMap[area.loc][area.at]||[];leafMap[area.loc][area.at].push(area.gid)}
area.id=area.at+'_'+area.gid;area.expandable=false;var node=Ext.create('Puma.model.Area',area);node.updateInfo=function(){}
if(!area.parentgid){data.push(node);}
else{for(var j=0;j<parentLevel.length;j++){if(parentLevel[j].get('joingid')==area.parentgid){parentLevel[j].set('expanded',true);parentLevel[j].appendChild(node)}}}
currentLevel.push(node);}
for(var i=0;i<data.length;i++){areaRoot.appendChild(data[i],true);}},addAreasToAreaMap:function(addedAreas){},refreshAreas:function(add,remove){var root=Ext.StoreMgr.lookup('area').getRootNode();var changed=false;var nodesToDestroy=[];this.addAreasToAreaMap(add);var tree=Ext.ComponentQuery.query('#areatree')[0];tree.suspendEvents();tree.view.dontRefreshSize=true;for(var loc in remove){var locRoot=root.findChild('loc',loc);for(var at in remove[loc]){locRoot.cascadeBy(function(node){if(node.get('at')!=at)return;if(Ext.Array.contains(remove[loc][at],node.get('gid'))){nodesToDestroy.push(node);changed=true;}});}}
for(var i=0;i<nodesToDestroy.length;i++){var node=nodesToDestroy[i]
node.set('id',node.get('at')+'_'+node.get('gid'));node.parentNode.removeChild(node,false);}
var datasetId=Ext.ComponentQuery.query('#seldataset')[0].getValue();var featureLayers=Ext.StoreMgr.lookup('dataset').getById(datasetId).get('featureLayers');for(var i=0;i<add.length;i++){var area=add[i];var loc=area.loc;var at=area.at;var atIndex=Ext.Array.indexOf(featureLayers,at);var prevAtIndex=atIndex>0?atIndex-1:null;var prevAt=featureLayers[prevAtIndex];var parentgid=area.parentgid;var foundNode=null;root.cascadeBy(function(node){if(!parentgid&&node==root){foundNode=node;return false;}
if(node==root)return;if(node.get('loc')==loc&&node.get('at')==prevAt&&(node.get('gid')==parentgid||node.get('joingid')==parentgid)){foundNode=node;return false;}})
if(foundNode){changed=true;area.id=area.at+'_'+area.gid;foundNode.appendChild(area);}}
tree.resumeEvents();tree.view.dontRefreshSize=false;if(changed){tree.view.refresh();}
return changed;},updateLayerContext:function(){var cfg=this.layerRefMap;var mapController=this.getController('Map');var years=Ext.ComponentQuery.query('#selyear')[0].getValue()
var map1Year=mapController.map1.year;var map2Year=mapController.map2.year;mapController.map1.year=years.length>1?years[years.length-2]:years[years.length-1];mapController.map2.year=years.length>1?years[years.length-1]:null;var map1Change=map1Year!=mapController.map1.year?true:false;var map2Change=(map2Year!=mapController.map2.year&&mapController.map2.year)?true:false
var yearStore=Ext.StoreMgr.lookup('year');Ext.get('app-map-map-label').setHTML(yearStore.getById(mapController.map1.year).get('name'));Ext.get('app-map-map2-label').setHTML(mapController.map2.year?yearStore.getById(mapController.map2.year).get('name'):'');var me=this;if(map1Change||map2Change){var colorMap=this.getController('Select').colorMap
this.getController('Layers').colourMap(colorMap,!map1Change,!map2Change);}
Ext.StoreMgr.lookup('layers').getRootNode().cascadeBy(function(node){if(node.get('type')!='topiclayer'){return;}
var layer1=node.get('layer1');var layer2=node.get('layer2');me.initializeLayer(node,layer1,mapController.map1.year,cfg)
me.initializeLayer(node,layer2,mapController.map2.year,cfg)})},initializeLayer:function(node,layer,year,cfg){var at=node.get('at');var symbologyId=node.get('symbologyId');symbologyId=symbologyId=='#blank#'?'':symbologyId;var atCfg=cfg[at];var layers=[];var symbologies=[];for(var loc in atCfg){var locCfg=atCfg[loc][year]||[];for(var i=0;i<locCfg.length;i++){layers.push(locCfg[i].layer);symbologies.push(symbologyId||'');}}
layer.initialized=layers.length>0
layers.sort();if(layers.length>0){layer.mergeNewParams({layers:layers.join(','),styles:symbologies.join(',')})}
var src=this.getController('Layers').getLegendUrl(layers[0],null,symbologyId);node.set('src',src)
var distantLayers=node.get('layer1')==layer?node.get('distantLayers'):[];for(var i=0;i<distantLayers.length;i++){var distantLayer=distantLayers[i];distantLayer.initialized=layers.length>0;if(layers.length>0){distantLayer.mergeNewParams({layers:layers.join(','),styles:symbologies.join(',')})}
if(!layers.length){distantLayer.setVisibility(false);}
if(node.get('checked')&&layers.length){distantLayer.setVisibility(true);}}
if(!layers.length){layer.setVisibility(false);}
if(node.get('checked')&&layers.length){layer.setVisibility(true);}},removeLayers:function(){var themeId=Ext.ComponentQuery.query('#seltheme')[0].getValue();var topics=Ext.StoreMgr.lookup('theme').getById(themeId).get('topics');var thematicNode=Ext.StoreMgr.lookup('layers').getRootNode().findChild('type','thematicgroup');var mapController=this.getController('Map');var nodesToDestroy=[]
for(var i=0;i<thematicNode.childNodes.length;i++){var node=thematicNode.childNodes[i];var topic=node.get('topic');if(topic&&!Ext.Array.contains(topics,parseInt(topic))){mapController.map1.removeLayer(node.get('layer1'))
mapController.map2.removeLayer(node.get('layer2'))
var distantLayers=node.get('distantLayers')
for(var k=0;k<distantLayers.length;k++){var distantLayer=distantLayers[k];distantLayer.map.removeLayer(distantLayer);}
nodesToDestroy.push(node);}}
for(var i=0;i<nodesToDestroy.length;i++){nodesToDestroy[i].destroy();}},appendLayers:function(layerNodes){layerNodes=layerNodes||[];this.topics=this.topics||[];var topics=[];var nodesToAdd=[];for(var i=0;i<layerNodes.length;i++){var topic=layerNodes[i].topic;Ext.Array.include(topics,topic);if(Ext.Array.contains(this.topics,topic)){continue;}
nodesToAdd.push(layerNodes[i])}
this.topics=topics;var root=Ext.StoreMgr.lookup('layers').getRootNode();var childNodes=root.childNodes;var areaLayerNode=null;var selectedLayerNode=null;var systemNode=null;var thematicNode=null;var treeView=Ext.ComponentQuery.query('layerpanel')[0].view;if(treeView){treeView.dontRefreshSize=true;}
for(var i=0;i<childNodes.length;i++){var node=childNodes[i];var type=node.get('type');if(type=='systemgroup'){systemNode=node;}
if(type=='thematicgroup'){thematicNode=node;}}
if(nodesToAdd.length){thematicNode.appendChild(nodesToAdd);}
if(!systemNode.childNodes.length){selectedLayerNode={type:'selectedareas',name:'Selected areas',sortIndex:0,checked:false,leaf:true}
selectedLayerFilledNode={type:'selectedareasfilled',name:'Selected areas filled',sortIndex:0,checked:true,leaf:true}
areaLayerNode={type:'areaoutlines',sortIndex:1,name:'Area outlines',checked:false,leaf:true}
systemNode.appendChild([selectedLayerNode,selectedLayerFilledNode,areaLayerNode]);}
var layersToAdd=[];var layerDefaults=this.getController('Layers').getWmsLayerDefaults();var mapController=this.getController('Map');for(var i=0;i<root.childNodes.length;i++){var node=root.childNodes[i];if(node.get('type')=='thematicgroup'||node.get('type')=='systemgroup'){for(var j=0;j<node.childNodes.length;j++){var layerNode=node.childNodes[j];if(layerNode.get('layer1'))
continue;if(node.get('type')=='thematicgroup'&&!Ext.Array.contains(topics,layerNode.get('topic')))
continue;Ext.Array.include(layersToAdd,layerNode);var params=Ext.clone(layerDefaults.params);var layerParams=Ext.clone(layerDefaults.layerParams);if(node.get('type')=='thematicgroup'){params.tiled=true;delete layerParams.singleTile;layerParams.tileSize=new OpenLayers.Size(256,256)
layerParams.removeBackBufferDelay=0;layerParams.transitionEffect=null;}
var layer1=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.clone(params),Ext.clone(layerParams));var layer2=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.clone(params),Ext.clone(layerParams));if(node.get('type')=='thematicgroup'){layer1.events.register('visibilitychanged',{layer:layer1,me:this},function(a,b,c){this.me.getController('Layers').onLayerLegend(null,this.layer.nodeRec,this.layer.visibility);})}
mapController.map1.addLayers([layer1]);mapController.map2.addLayers([layer2]);layerNode.set('layer1',layer1);layerNode.set('layer2',layer2);layer1.nodeRec=layerNode;layer2.nodeRec=layerNode;var distantRegionsCmps=Ext.ComponentQuery.query('[type=distantregion]');for(var k=0;k<distantRegionsCmps.length;k++){var distantMap=distantRegionsCmps[k].map;var layerDistant=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.clone(params),Ext.clone(layerParams));distantMap.addLayers([layerDistant]);layerDistant.nodeRec=layerNode;var distantLayers=layerNode.get('distantLayers')||[];distantLayers.push(layerDistant);layerNode.set('distantLayers',distantLayers);}}}}
Ext.StoreMgr.lookup('selectedlayers').loadData(layersToAdd,true);if(treeView){treeView.dontRefreshSize=false;treeView.refreshSize();}
var layerController=this.getController('Layers');layerController.resetIndexes();layerController.onLayerDrop();},updateLeafs:function(leafMap){var root=Ext.StoreMgr.lookup('area').getRootNode();root.cascadeBy(function(node){var loc=node.get('loc');var at=node.get('at');var gid=node.get('gid');if(leafMap[loc]&&leafMap[loc][at]&&leafMap[loc][at][gid]){node.set('leaf',true);node.set('expanded',false)}
else if(node.get('leaf')){node.set('leaf',false)}})},refreshFilters:function(){var filtersPanel=Ext.ComponentQuery.query('#codefilters')[0];if(this.initialized){Ext.suspendLayouts();}
var dataset=Ext.ComponentQuery.query('#seldataset')[0].getValue();var layer=this.lastLevel;var filtersObj=Ext.StoreMgr.lookup('datasetlayerfilters').queryBy(function(rec){if(rec.get('featureLayer')==layer&&rec.get('dataset')==dataset)return true;}).first();var attrs=[];if(filtersObj){attrs=filtersObj.get('filters')}
var presentAttrs=[];var itemsToRemove=[];filtersPanel.items.each(function(cont){if(!Ext.Array.contains(attrs,cont.attrId)){itemsToRemove.push(cont);}
else{presentAttrs.push(cont.attrId);}})
for(var i=0;i<itemsToRemove.length;i++){filtersPanel.remove(itemsToRemove[i]);}
var attrStore=Ext.StoreMgr.lookup('attribute');var attrMap={};for(var i=0;i<attrs.length;i++){var code='as_'+this.filterAttrSet+'_attr_'+attrs[i];attrMap[code]=[];}
if(attrs.length){Ext.StoreMgr.lookup('area').getRootNode().cascadeBy(function(rec){var filterAttrs=rec.get('filterAttrs');for(var code in filterAttrs){attrMap[code]=Ext.Array.merge(attrMap[code],filterAttrs[code]);}})}
else{attrs.push('no');}
console.log(attrMap)
for(var i=0;i<attrs.length;i++){var attr=attrs[i];if(Ext.Array.contains(presentAttrs,attr)){continue;}
var attrRec=attrStore.getById(attr);var code='as_'+this.filterAttrSet+'_attr_'+attr;var values=attrMap[code]||[];values.sort();var cont={defaults:{margin:2},xtype:'container',attrId:attr,attrCode:code,margin:(i==attrs.length-1)?'8 8 36 8':8,items:[{xtype:'component',html:'<b>'+(attrRec?attrRec.get('name'):'No filters available')+'</b>'}]}
for(var j=0;j<values.length;j++){var value=values[j];cont.items.push({xtype:'button',tooltip:value,maxWidth:214,text:value,enableToggle:true})}
filtersPanel.insert(i,cont);}
if(this.initialized){Ext.resumeLayouts(true);}},onThemeLocationConfReceived:function(response){var conf=JSON.parse(response.responseText).data;if(response.request.options.originatingCnt.itemId=='selectfilter'){this.getController('Select').selectInternal(conf.areas,false,false,1);return;}
var years=Ext.ComponentQuery.query('#selyear')[0].getValue();var multiMapBtn=Ext.ComponentQuery.query('maptools #multiplemapsbtn')[0];multiMapBtn.leftYearsUnchanged=true;var multiMapPressed=multiMapBtn.pressed;if(years.length>1!=this.wasMulti){this.getController('Map').onMultipleYearsToggle(multiMapBtn,years.length>1);}
this.wasMulti=years.length>1;if(!conf.layerRefMap){conf={add:conf}}
if(conf.layerRefMap){this.getController('Area').areaTemplateMap=conf.auRefMap;}
if(conf.areas){this.addAreas(conf.areas);if(!this.initialAdd){this.initialAdd=true;}}
if(conf.add||conf.remove){var changed=this.refreshAreas(conf.add,conf.remove);}
if(response.request.options.datasetChanged||this.treeChanged){this.filterAttributes=conf.filterAttributes;this.filterAttrSet=conf.filterAttrSet;this.refreshFilters(conf);}
if(Config.cfg){Ext.StoreMgr.lookup('paging').currentPage=Config.cfg.page;var selController=this.getController('Select');selController.selMap=Config.cfg.selMap;selController.colorMap=selController.prepareColorMap();this.getController('Area').colourTree(selController.colorMap);}
if(true){this.removeLayers();this.appendLayers(conf.layerNodes);Ext.StoreMgr.lookup('layers4outline').load();}
if(conf.layerRefMap){this.layerRefMap=conf.layerRefMap;}
if(conf.layerRefMap||response.request.options.locationChanged){this.updateLayerContext();}
if(conf.leafMap&&conf.add){this.updateLeafs(conf.leafMap)}
if(conf.areas||((conf.add||conf.remove)&&changed)){this.getController('Area').scanTree();if(response.request.options.datasetChanged){this.getController('Layers').colourMap();}}
else if(response.request.options.yearChanged){this.getController('Layers').refreshOutlines();this.getController('Filter').reconfigureFiltersCall();}
if(conf.attrSets){this.checkFeatureLayers();this.checkAttrSets(conf.attrSets);}
this.getController('Chart').reconfigureAll();this.getController('Layers').reconfigureAll();if(response.request.options.visChanged){this.getController('Layers').checkVisibilityAndStyles();}
if(Config.cfg&&Config.cfg.multipleMaps){multiMapBtn.toggle(true);}
this.treeChanged=false;if(!this.initialized){Ext.resumeLayouts(true);this.initialized=true;}
this.getController('DomManipulation').deactivateLoadingMask();delete Config.cfg;},checkFeatureLayers:function(){var themeId=Ext.ComponentQuery.query('#seltheme')[0].getValue();var theme=Ext.StoreMgr.lookup('theme').getById(themeId);var topics=theme.get('topics');var store=Ext.StoreMgr.lookup('layertemplate2choose');store.clearFilter(true);store.filter([function(rec){return Ext.Array.contains(topics,rec.get('topic'));}]);},reconfigureChartComboValues:function(attrSetId){var combos=Ext.ComponentQuery.query('pumacombo[attributeCombo=1]');var attr=Ext.ComponentQuery.query('#selindicator')[0].getValue();for(var i=0;i<combos.length;i++){var combo=combos[i];var val=combo.getValue();if(combo.cfgType=='columnchart'){combo.setValue(attr);}
if(combo.cfgType=='scatterchart'&&!combo.alternative){combo.setValue(attr)}
if(combo.cfgType=='scatterchart'&&combo.alternative){combo.setValue(attr)}
if(combo.cfgType!='boxplotchart'){continue;}
var first=combo.store.getAt(0);var second=combo.store.getAt(1);if(!combo.alternative){combo.setValue(attr);}
if(combo.alternative){combo.setValue(attr);}}},checkAttrSets:function(attrSets){var chartController=this.getController('Chart')
chartController.attrSet=null;chartController.attrSetId=null;var attrSetStore=Ext.StoreMgr.lookup('attributeset')
var attrSetId=null;var attrSet=null;for(var i=0;i<attrSets.length;i++){var attrSet=attrSetStore.getById(attrSets[i])
if(attrSet.get('attributes')&&attrSet.get('attributes').length){attrSetId=attrSets[i];break;}}
var visualization=Ext.StoreMgr.lookup('visualization').findRecord('attrSet',attrSetId);var attributes=attrSet.get('attributes');var store=Ext.StoreMgr.lookup('attribute4set');store.clearFilter(true);store.filter([function(rec){return Ext.Array.contains(attributes,rec.get('_id'));}])
this.reconfigureChartComboValues(attrSetId);chartController.visualization=visualization;chartController.attrSet=attrSet;chartController.attrSetId=attrSetId;var choroAttrs=[];for(var i=0;i<attributes.length;i++){var attr=attributes[i];choroAttrs.push({attr:attr,as:attrSetId,attrName:store.getById(attr).get('name'),numCategories:5,classType:'quantiles'})}
var me=this;var layers=visualization?visualization.get('layers'):null;if(layers){var topicLayerGroup=Ext.StoreMgr.lookup('layers').getRootNode().findChild('type','thematicgroup');for(var i=0;i<layers.length;i++){var atSymb=layers[i].at+'_'+layers[i].symbologyId;var layer=topicLayerGroup.findChild('atWithSymbology',atSymb);if(layer){window.setTimeout(function(){layer.set('checked',true);me.getController('Layers').onCheckChange(layer,true);},1000)}}}
this.getController('Layers').reconfigureChoropleths({attrs:choroAttrs},visualization);this.getController('Filter').reconfigureFilters({attrs:choroAttrs})},checkUserPolygons:function(years,analysis,callback){Ext.Ajax.request({url:Config.url+'/api/userpolygon/checkAnalysis',params:{analysis:JSON.stringify(analysis||[955]),years:JSON.stringify(years||[277])},success:callback})},onVisualizationChange:function(btn,value,forceVisReinit){if(!value)return;var itemId=btn.ownerCt.itemId;var visChanged=false;if(forceVisReinit===true||itemId=='visualizationcontainer'){var vis=Ext.ComponentQuery.query('initialbar #visualizationcontainer button[pressed=true]')[0].objId;if(vis=='custom')return;this.getController('Chart').loadVisualization(vis);visChanged=true;}
var preserveVis=false;var selController=this.getController('Select')
if(Config.cfg){selController.selMap=Config.cfg.selMap
selController.colorMap=selController.prepareColorMap(selController.selMap);}
this.getController('Chart').reconfigureAll();if(forceVisReinit===true||itemId=='visualizationcontainer'){this.getController('Layers').checkVisibilityAndStyles(!visChanged,preserveVis);}
if(Config.cfg){this.getController('Area').colourTree(selController.colorMap);this.getController('Layers').colourMap(selController.colorMap);var map=this.getController('Map').map1;if(Config.cfg.multipleMaps){Ext.ComponentQuery.query('initialbar #multiplemapsbtn')[0].toggle();}
map.setCenter([Config.cfg.mapCfg.center.lon,Config.cfg.mapCfg.center.lat],Config.cfg.mapCfg.zoom);}
delete Config.cfg;}});Ext.define('PumaMain.controller.Area',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){this.control({"#areatree":{beforeselect:this.onBeforeSelect,itemclick:this.onItemClick,itemmouseenter:this.onItemMouseEnter,itemexpand:this.onNodeExpanded,itemcollapse:this.onNodeCollapsed},'#areatree #areacollapse':{click:this.onCollapseAll},"chartbar chartcmp":{beforeselect:this.onBeforeSelect,itemclick:this.onItemClick,itemmouseenter:this.onItemMouseEnter},'#areaslider':{changecomplete:this.onSliderSlide,beforechange:this.onBeforeSliderSlide},'#areamoredetails':{click:this.onShowMoreDetailed},'#codefilters button':{toggle:this.onFilterChange},'#arealessdetails':{click:this.onShowLessDetailed},'#codefilters tool[type=poweron]':{click:this.changeFilterState},'#codefilters tool[type=add]':{click:this.onAddAllFilters},'#codefilters tool[type=unselectall]':{click:this.onClearAllFilters}})
this.areaMap={};this.areaTemplates=[];this.areaTemplateMap={};this.allAreas={};this.lowestAreas={};this.highestAreas={};this.oldSliderVal=0;this.filterActive=true;},changeFilterState:function(btn){if(!btn||!btn.xtype||btn.xtype!='tool'){var active=btn;btn=Ext.ComponentQuery.query('#codefilters tool[type=poweron]')[0];if(active){$(btn.el.dom).addClass('tool-active');}
else{$(btn.el.dom).removeClass('tool-active');}
this.filterActive=$(btn.el.dom).hasClass('tool-active');}
else{$(btn.el.dom).toggleClass('tool-active');}
this.filterActive=$(btn.el.dom).hasClass('tool-active');if(this.filterActive){this.scanTree({xtype:'button'});}},onAddAllFilters:function(){this.onAllFilters(true);},onClearAllFilters:function(){this.onAllFilters(false);},onAllFilters:function(add){var btns=Ext.ComponentQuery.query('#codefilters button');for(var i=0;i<btns.length;i++){btns[i].toggle(add,true);}
this.onFilterChange();},onFilterChange:function(){if(this.filterActive){this.scanTree({xtype:'button'});}},getLocationObj:function(){var rec=null;return{location:rec?rec.get('location'):null,locGid:rec?rec.get('locGid'):null,at:rec?rec.get('at'):null,obj:rec}},onShowMoreDetailed:function(){var toExpand={};var needQuery=false;var needChange=false;this.getController('DomManipulation').activateLoadingMask();var tree=Ext.ComponentQuery.query('#areatree')[0];tree.suspendEvents();var areaRoot=Ext.StoreMgr.lookup('area').getRootNode();var lastAt=null;for(var loc in this.lowestMap){for(var at in this.lowestMap[loc]){lastAt=at;break;}
break;}
if(!lastAt){this.getController('DomManipulation').deactivateLoadingMask();return;}
tree.view.dontRefreshSize=true;areaRoot.cascadeBy(function(node){var at=node.get('at')
if(node.get('leaf')||at!=lastAt||!node.parentNode.get('expanded'))return;needChange=true;if(!node.get('loaded')){node.set('loaded',true);var loc=node.get('loc');var gid=node.get('joingid');toExpand[loc]=toExpand[loc]||{};toExpand[loc][at]=toExpand[loc][at]||[];toExpand[loc][at].push(gid);needQuery=true;}
node.suppress=true;node.expand();node.suppress=false});tree.view.dontRefreshSize=false;tree.resumeEvents();if(needQuery||needChange){var datasetId=Ext.ComponentQuery.query('#seldataset')[0].getValue();var dataset=Ext.StoreMgr.lookup('dataset').getById(datasetId);var layers=dataset.get('featureLayers');var lastIndex=Ext.Array.indexOf(layers,parseInt(lastAt));this.getController('LocationTheme').lastLevel=layers[lastIndex+1];}
if(needQuery){this.detailLevelParents=toExpand;this.getController('LocationTheme').treeChanged=true;this.getController('LocationTheme').onYearChange({itemId:'detaillevel'});this.detailLevelParents=null;}
else if(needChange){this.getController('LocationTheme').refreshFilters();this.scanTree();this.getController('DomManipulation').deactivateLoadingMask();this.getController('Chart').reconfigureAll();this.getController('Layers').reconfigureAll();}
else{this.getController('DomManipulation').deactivateLoadingMask();}},onShowLessDetailed:function(){var nodesToCollapse=[]
var tree=Ext.ComponentQuery.query('#areatree')[0];tree.suspendEvents();var areaRoot=Ext.StoreMgr.lookup('area').getRootNode();var lastAt=null;for(var loc in this.lowestMap){for(var at in this.lowestMap[loc]){lastAt=at;break;}
break;}
if(!lastAt)return;this.getController('LocationTheme').treeChanged=true;this.getController('DomManipulation').activateLoadingMask();areaRoot.cascadeBy(function(node){var at=node.get('at')
if(at!=lastAt||!node.parentNode.get('expanded')||!node.parentNode.get('gid'))return;nodesToCollapse.push(node.parentNode);});tree.view.dontRefreshSize=true;for(var i=0;i<nodesToCollapse.length;i++){nodesToCollapse[i].suppress=true;nodesToCollapse[i].collapse();nodesToCollapse[i].suppress=false}
tree.view.dontRefreshSize=false;tree.resumeEvents();if(nodesToCollapse.length){var datasetId=Ext.ComponentQuery.query('#seldataset')[0].getValue();var dataset=Ext.StoreMgr.lookup('dataset').getById(datasetId);var layers=dataset.get('featureLayers');var lastIndex=Ext.Array.indexOf(layers,parseInt(lastAt));this.getController('LocationTheme').lastLevel=layers[lastIndex-1];this.getController('LocationTheme').refreshFilters();this.afterCollapse(tree);this.getController('DomManipulation').deactivateLoadingMask();}
else{this.getController('DomManipulation').activateLoadingMask();}},onCollapseAll:function(){var tree=Ext.ComponentQuery.query('#areatree')[0];tree.suspendEvents();var areaRoot=Ext.StoreMgr.lookup('area').getRootNode();var nodes=areaRoot.childNodes;for(var i=0;i<nodes.length;i++){nodes[i].suppress=true;nodes[i].collapse();nodes[i].suppress=false}
tree.resumeEvents();this.afterCollapse(tree);},afterCollapse:function(tree){tree.view.refresh();this.scanTree();var selController=this.getController('Select');this.colourTree(selController.colorMap);this.getController('Layers').colourMap(selController.colorMap);this.getController('Chart').reconfigureAll();this.getController('Layers').reconfigureAll();},applyTestFilter:function(from,to){this.areaFilter={areaTemplates:{281:true},filters:[{as:321,attr:299,normType:'area',min:from,max:to}]}
if(from==null){this.areaFilter=null;}
this.getController('LocationTheme').onYearChange({itemId:'filter'})},zoomToLocation:function(){var areaRoot=Ext.StoreMgr.lookup('area').getRootNode();var locObj=this.getLocationObj();var loc=locObj.location;var locGid=locObj.locGid;var areas=[];for(var i=0;i<areaRoot.childNodes.length;i++){var node=areaRoot.childNodes[i];if(!loc||(node.get('loc')==loc&&node.get('gid')==locGid)){areas.push(node);}}
if(areas.length){this.getController('Map').onZoomSelected(null,areas);}},getArea:function(area){var store=Ext.StoreMgr.lookup('area');var foundNode=store.getRootNode().findChildBy(function(node){return(node.get('at')==area.at&&node.get('loc')==area.loc&&node.get('gid')==area.gid)},this,true);return foundNode},onBeforeSelect:function(){return false;},getExpandedAndFids:function(){var expanded={};var loaded={};var fids={};var root=Ext.StoreMgr.lookup('area').getRootNode();root.cascadeBy(function(node){if(node==root)return;var loc=node.get('loc');var at=node.get('at');var gid=node.get('gid');if(node.isLoaded()){loaded[loc]=loaded[loc]||{};loaded[loc][at]=loaded[loc][at]||[];loaded[loc][at].push(gid);}
if(node.isExpanded()){expanded[loc]=expanded[loc]||{};expanded[loc][at]=expanded[loc][at]||[];expanded[loc][at].push(gid);}
fids[loc]=fids[loc]||{};fids[loc][at]=fids[loc][at]||[];fids[loc][at].push(gid);})
return{expanded:expanded,fids:fids,loaded:loaded};},onItemClick:function(tree,rec,item,index,evt){var selected=[{at:rec.get('at'),gid:rec.get('gid'),loc:rec.get('loc')}];var add=evt.ctrlKey;var hover=false;if(tree.xtype=='gridview'){this.getController('Select').fromChart=true;}
this.getController('Select').select(selected,add,hover);},onItemMouseEnter:function(tree,rec,item,index,evt){if(!this.hovering)return;var selected=[{at:rec.get('at'),gid:rec.get('gid'),loc:rec.get('loc')}];var add=false;var hover=true;this.getController('Select').select(selected,add,hover);},colourTree:function(selectMap){var areaTree=Ext.ComponentQuery.query('#areatree')[0];var view=areaTree.getView();areaTree.getRootNode().cascadeBy(function(node){var oldCls=node.get('cls');var notPassed='';if(oldCls.search('notpassed')>-1){notPassed='notpassed'}
var at=node.get('at');var loc=node.get('loc')
if(!at||!loc)return;var gid=node.get('gid');var hasColor=selectMap[loc]&&selectMap[loc][at]&&selectMap[loc][at][gid];if(!hasColor&&oldCls!=''){node.data['cls']=notPassed;view.onUpdate(node.store,node);}
if(hasColor&&oldCls!='select_'+selectMap[loc][at][gid]){node.data['cls']='select_'+selectMap[loc][at][gid]+(notPassed?',notpassed':'');view.onUpdate(node.store,node);}})},onBeforeLoad:function(store,options){var node=options.node;var years=Ext.ComponentQuery.query('#selyear')[0].getValue();var dataset=Ext.ComponentQuery.query('#seldataset')[0].getValue();if(!years||!years.length){return;}
if(this.areaFilter){options.params['filter']=JSON.stringify(this.areaFilter);}
var gid=node.get('joingid');var loc=node.get('loc');var at=node.get('at')
var parentGids={};parentGids[loc]={};parentGids[loc][at]=[gid];options.params['refreshAreas']=true;options.params['dataset']=dataset;options.params['years']=JSON.stringify(years);options.params['parentgids']=JSON.stringify(parentGids)},onLoad:function(store,node,records){for(var i=0;i<records.length;i++){var rec=records[i];var at=rec.get('at');var gid=rec.get('gid');var loc=rec.get('loc');this.areaMap[loc]=this.areaMap[loc]||{};this.areaMap[loc][at]=this.areaMap[loc][at]||{};this.areaMap[loc][at][gid]=rec;}},onNodeExpanded:function(node){if(!node.isLoaded()||!node.childNodes.length||node.suppress){return;}
this.scanTree();var locThemeController=this.getController('LocationTheme');if(locThemeController.locationChanged){this.zoomToLocation();var selController=this.getController('Select');this.colourTree(selController.colorMap)
this.getController('Layers').colourMap(selController.colorMap);locThemeController.locationChanged=false;}
this.getController('Chart').reconfigure('expand');this.getController('Layers').reconfigureAll();},onNodeCollapsed:function(node){if(!node.isLoaded()||!node.get('at')||node.suppress){return;}
this.scanTree();var selController=this.getController('Select');this.colourTree(selController.colorMap)
this.getController('Layers').colourMap(selController.colorMap);this.getController('Chart').reconfigure('expand');this.getController('Layers').reconfigureAll();},getTreeLocations:function(){var locations=[];var locNodes=Ext.StoreMgr.lookup('area').getRootNode().childNodes;for(var i=0;i<locNodes.length;i++){Ext.Array.include(locations,locNodes[i].get('loc'))}
return locations;},scanTree:function(src){var me=this;var root=Ext.StoreMgr.lookup('area').getRootNode();var areaTemplates=[];var leafMap={};var allMap={};var lowestMap={};var lastMap={};var highestMap={};var parent=null;var lowestCount=0;var containsLower=false;var lowestNoLeafs=true;var changeLocToCustom=false;var atLeastOneLoc=false;var maxDepth=0;this.placeNode=null;var datasetId=Ext.ComponentQuery.query('#seldataset')[0].getValue();var dataset=Ext.StoreMgr.lookup('dataset').getById(datasetId);var featureLayers=dataset.get('featureLayers');var lastDatasetTemplate=featureLayers[featureLayers.length-1];var filterMap={};var pressed=this.filterActive?Ext.ComponentQuery.query('#codefilters button[pressed=true]'):[];var canShowMore=true;for(var i=0;i<pressed.length;i++){var btn=pressed[i];var code=btn.ownerCt.attrCode;var attr=code.split('_attr_')[1];filterMap[attr]=filterMap[attr]||[];Ext.Array.include(filterMap[attr],btn.text);}
var attrSet=this.getController('LocationTheme').filterAttrSet
root.cascadeBy(function(node){var at=node.get('at');var loc=node.get('loc');if(!at||!loc||!node.isVisible()||node==root)
return;var passed=true;if(pressed.length){var filterAttrs=node.get('filterAttrs');for(var code in filterMap){var fullCode='as_'+attrSet+'_attr_'+code;var intersection=Ext.Array.intersect(filterMap[code],filterAttrs[fullCode]||[])
if(!intersection.length){passed=false;break;}}
if(!passed){}
else{}}
var depth=node.getDepth();maxDepth=Math.max(depth,maxDepth);if(node.parentNode==root){if(root.childNodes.length==1){parent=node;}
else{highestMap[loc]=highestMap[loc]||{}
highestMap[loc][at]=highestMap[loc][at]||[];highestMap[loc][at].push(gid);}}
else{containsLower=true;}
if(parent&&node.parentNode==parent){highestMap[loc]=highestMap[loc]||{}
highestMap[loc][at]=highestMap[loc][at]||[];highestMap[loc][at].push(gid);}
Ext.Array.include(areaTemplates,at);var gid=node.get('gid');if(!node.isExpanded()||!node.hasChildNodes()){lastMap[loc]=lastMap[loc]||{}
lastMap[loc][at]=lastMap[loc][at]||[];if(passed){lastMap[loc][at].push(gid);lowestCount++;}}
if(canShowMore&&at==lastDatasetTemplate&&node.isVisible()){canShowMore=false;}
allMap[loc]=allMap[loc]||{}
allMap[loc][at]=allMap[loc][at]||[];allMap[loc][at].push(gid);if(node.isLeaf()){leafMap[loc]=leafMap[loc]||{}
leafMap[loc][at]=true;}})
this.areaTemplates=areaTemplates;this.lastAt=areaTemplates[areaTemplates.length-1];lowestMap=Ext.clone(lastMap);this.getController('Map').updateGetFeatureControl();this.lowestCount=lowestCount;this.allMap=allMap;this.lowestMap=lowestMap;for(var loc in lowestMap){for(var at in lowestMap[loc]){if(at!=this.lastAt){delete lowestMap[loc][at]}}}
this.highestMap=highestMap;this.lastMap=lastMap;var selPlaceObj=this.getLocationObj().obj
var selPlace=selPlaceObj?selPlaceObj.get('id'):null;for(var loc in lastMap){for(var layerTemplate in lastMap[loc]){this.lastTemplate=layerTemplate;}}
var showMore=Ext.ComponentQuery.query('#areamoredetails')[0];var showLess=Ext.ComponentQuery.query('#arealessdetails')[0];showMore.setDisabled(!canShowMore);showLess.setDisabled(!containsLower)
var selMap=this.getController('Select').selMap;var outerCount=0;var overallCount=0;for(var color in selMap){var objsToRemove=[];for(var i=0;i<selMap[color].length;i++){var obj=selMap[color][i];overallCount++;if(lowestMap[obj.loc]&&lowestMap[obj.loc][obj.at]&&Ext.Array.contains(lowestMap[obj.loc][obj.at],obj.gid)){}
else if(allMap[obj.loc]&&allMap[obj.loc][obj.at]&&Ext.Array.contains(allMap[obj.loc][obj.at],obj.gid)){outerCount++;}
else{Ext.Array.include(objsToRemove,obj);}}
selMap[color]=Ext.Array.difference(selMap[color],objsToRemove)}
this.getController('Select').prepareColorMap();this.getController('Select').overallCount=overallCount;this.getController('Select').outerCount=outerCount;if(overallCount==0){this.getController('Select').switchToAllAreas();}
var onlySel=false;var count=onlySel?(overallCount):(lowestCount+outerCount)
Ext.StoreMgr.lookup('paging').setCount(count);this.getController('Layers').refreshOutlines();if(src&&src.xtype=='button'){this.getController('Chart').reconfigureAll();this.getController('Layers').reconfigureAll();var selController=this.getController('Select');this.getController('Layers').colourMap(selController.colorMap);}},reinitializeTree:function(preserveSelection){var root=Ext.StoreMgr.lookup('area').getRootNode();root.removeAll(false);root.collapse();root.loaded=false;root.set('loaded',false);root.initialized=true;root.expand();this.getController('Select').clearSelections();}});Ext.define('PumaMain.controller.Screenshot',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){this.control({"screenshotview":{screenshotremove:this.onScreenshotRemove,screenshotexpand:this.onScreenshotExpand,screenshotexport:this.onScreenshotExport},'chartbar #screenshotpanel':{afterrender:this.onPanelReady}})
$(document).on('load','.screenshotimg',function(){})},onPanelReady:function(panel){window.setTimeout(function(){panel.hide();},100);},onScreenshotRemove:function(view,rec){if(rec.get('large'))return;rec.destroy();var count=Ext.StoreMgr.lookup('screenshot').getCount();if(count<1){var snapshotPanel=Ext.ComponentQuery.query('chartbar #screenshotpanel')[0];snapshotPanel.collapse();snapshotPanel.hide();}},onScreenshotExpand:function(view,rec,el){var isLarge=rec.get('large')?true:false;Ext.StoreMgr.lookup('screenshot').each(function(r){if(r==rec){r.set('large',!isLarge);}
else{r.set('visible',isLarge?1:0);}})
Ext.ComponentQuery.query('screenshotview')[0].refresh()},onScreenshotExport:function(view,rec){var url=rec.get('src');var id=url.split('id=')[1];Puma.util.Msg.msg('Snapshot creation started','','r');this.getController('Chart').onUrlCallback(id,true);}})
Ext.define('PumaMain.controller.Help',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){this.control({'#contexthelp':{toggle:this.onContextHelpToggle}})},statics:{onHelpOver:function(e){var el=Ext.get((e.currentTarget&&e.currentTarget!=document)?e.currentTarget:e.target);var res=PumaMain.controller.Help.getHelpId(el,true);if(res.helpId){var fc=function(){this.removeCls('help-over');}
if(PumaMain.controller.Help.overEl){PumaMain.controller.Help.overEl.removeCls('help-over');PumaMain.controller.Help.overEl.un('mouseout',PumaMain.controller.Help.overEl.fc);}
PumaMain.controller.Help.overEl=res.el;PumaMain.controller.Help.overEl.addCls('help-over');PumaMain.controller.Help.overEl.on('mouseout',fc,null,{single:true});PumaMain.controller.Help.overEl.fc=fc;}},onHelpClick:function(e){var el=Ext.get(e.currentTarget||e.target);e.preventDefault();e.stopPropagation();var res=PumaMain.controller.Help.getHelpId(el);if(res.helpId){window.open('http://geonode.gisat.cz/app/public/help/'+res.helpId+'.html',"_blank");}
else{}},getHelpId:function(el,bypassItself){var helpId=null;var cmp=null;while(!helpId&&el){cmp=Ext.getCmp(el.id);if(cmp){if(cmp.itemId=='contexthelp'&&!bypassItself){cmp.toggle(false);return;}
else if(cmp.helpId){helpId=cmp.helpId;break;}}
el=el.up('');}
return{el:el,helpId:helpId,cmp:cmp};}},onContextHelpToggle:function(cmp,pressed){if(pressed){Config.contextHelp=true;}
else{Config.contextHelp=false;if(PumaMain.controller.Help.overEl){PumaMain.controller.Help.overEl.removeCls('help-over');PumaMain.controller.Help.overEl.un('mouseout',PumaMain.controller.Help.overEl.fc);}}}});Ext.define('PumaMain.controller.Login',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){var me=this;this.getApplication().on('login',function(){me.onLogin();})},onLogin:function(){var isAdmin=false;var isUser=false;if(Config.auth){isUser=true;}
if(Config.auth&&Ext.Array.contains(Config.auth.groups,'admingroup')){Config.auth.isAdmin=true;isAdmin=true;}
var saveVis=Ext.ComponentQuery.query('#savevisualization')[0];if(!saveVis)return;var saveView=Ext.ComponentQuery.query('#savedataview')[0];var manageView=Ext.ComponentQuery.query('#managedataview')[0];var shareView=Ext.ComponentQuery.query('#sharedataview')[0];saveVis.setVisible(isAdmin);saveView.setVisible(isUser);manageView.setVisible(isUser);shareView.setVisible(isUser);Ext.StoreMgr.lookup('dataview').load();}})
Ext.define('PumaMain.controller.Select',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){this.control({'#hoverbtn':{toggle:this.onToggleHover},'toptoolspanel #selectinmapbtn':{toggle:this.onToggleSelectInMap},'#selectcolorpicker':{select:this.onChangeColor},'#useselectedcolorpicker':{select:this.onChangeChartColor},'tool[type=unselect]':{click:this.clearSelections},'tool[type=unselectall]':{click:this.clearSelectionsAll}})
this.selMap={'ff4c39':[]};this.colorMap={};this.hoverMap=[];this.actualColor='ff4c39';this.defaultColor='ff4c39';},onAfterUnselectRender:function(){},select:function(areas,add,hover){if(!this.actualColor)return;if(hover){this.fromChart=null;}
if(this.task){this.task.cancel();}
this.task=new Ext.util.DelayedTask();this.task.delay(hover?100:1,this.selectInternal,this,arguments);},onToggleHover:function(btn,value){var infoControls1=this.getController('Map').map1.infoControls;var infoControls2=this.getController('Map').map2.infoControls;this.getController('Area').hovering=value;this.getController('Chart').hovering=value;if(value){infoControls1.hover.activate();infoControls2.hover.activate();}
else{infoControls1.hover.deactivate();infoControls2.hover.deactivate();}
if(this.hoverMap.length){this.hoverMap=[];this.selectInternal([],true,false);}},onToggleSelectInMap:function(btn,value){var hoverBtn=Ext.ComponentQuery.query('#hoverbtn')[0];var infoControls1=this.getController('Map').map1.infoControls;var infoControls2=this.getController('Map').map2.infoControls;var fn1=value?infoControls1.click.activate:infoControls1.click.deactivate;fn1.call(infoControls1.click);var fn2=value?infoControls2.click.activate:infoControls2.click.deactivate;fn2.call(infoControls2.click);if(value){Puma.util.Msg.msg('Hold CTRL button for mutliple selection','','l');}},onChangeChartColor:function(picker,value){this.updateCounts();this.selectDelayed(null,null,null,true);},onChangeColor:function(picker,value){this.actualColor=value;this.selMap[value]=this.selMap[value]||[];if(this.hoverMap.length){this.hoverMap=[];this.selectInternal([],true,false);}},selectInternal:function(areas,add,hover,delay){if(!hover){var sel=this.selMap[this.actualColor];}
else{var sel=this.hoverMap;}
var newSel=[];if(!add||hover){areas=areas.concat([]);for(var i=0;i<areas.length;i++){areas[i].equals=function(b){return this.gid===b.gid&&this.at===b.at&&this.loc===b.loc}}
newSel=areas;}
else{for(var i=0;i<areas.length;i++){areas[i].equals=function(b){return this.gid===b.gid&&this.at===b.at&&this.loc===b.loc}}
var diff=this.arrDifference(sel,areas);var add=this.arrDifference(areas,sel);newSel=Ext.Array.merge(diff,add);}
if(!hover){this.selMap[this.actualColor]=newSel;for(var col in this.selMap){if(col==this.actualColor)continue;var diff=this.arrDifference(this.selMap[col],newSel);this.selMap[col]=diff;}}
else{this.hoverMap=newSel;}
this.colorMap=this.prepareColorMap();this.getController('Area').colourTree(this.colorMap);this.getController('Chart').reconfigure('immediate');this.updateCounts();if(this.selectTask){this.selectTask.cancel();}
this.selectTask=new Ext.util.DelayedTask();this.selectTask.delay(delay||500,this.selectDelayed,this,arguments);},updateCounts:function(){var lowestMap=this.getController('Area').lowestMap;var outerCount=0;var overallCount=0;var picker=Ext.ComponentQuery.query('#useselectedcolorpicker')[0]
var selectColors=picker.xValue||picker.value;selectColors=Ext.isArray(selectColors)?selectColors:[selectColors]
for(var color in this.selMap){if(!Ext.Array.contains(selectColors,color)){continue;}
for(var i=0;i<this.selMap[color].length;i++){var obj=this.selMap[color][i];overallCount++;if(lowestMap[obj.loc]&&lowestMap[obj.loc][obj.at]&&Ext.Array.contains(lowestMap[obj.loc][obj.at],obj.gid)){}
else{this.outerSelect=true;outerCount++;}}}
this.outerCount=outerCount;this.overallCount=overallCount;if(overallCount==0){this.switchToAllAreas();}},switchToAllAreas:function(){var cmp=Ext.ComponentQuery.query('#areapager #onlySelected')[0];cmp.suspendEvents();cmp.toggle(false);cmp.resumeEvents();},selectDelayed:function(areas,add,hover,bypassMapColor){if(!bypassMapColor){this.getController('Layers').colourMap(this.colorMap);}
if(!hover){var lowestCount=this.getController('Area').lowestCount;var onlySel=Ext.ComponentQuery.query('#areapager #onlySelected')[0].pressed;var count=onlySel?(this.overallCount):(lowestCount+this.outerCount)
Ext.StoreMgr.lookup('paging').setCount(count);var outer=!this.fromChart||this.outerSelect||(!this.outerSelect&&this.prevOuterSelect)||onlySel;var type=outer?'outer':'inner';if(outer&&this.fromScatterChart&&!this.fromChart)type='outerscatter';this.getController('Chart').reconfigure(type);this.fromChart=null;this.fromScatterChart=null;}
this.prevOuterSelect=this.outerSelect
this.outerSelect=false;},arrDifference:function(arrayA,arrayB){var clone=Ext.Array.slice(arrayA,0),ln=clone.length,i,j,lnB;for(i=0,lnB=arrayB.length;i<lnB;i++){for(j=0;j<ln;j++){clone[j].equals=clone[j].equals||function(b){return this.gid===b.gid&&this.at===b.at&&this.loc===b.loc}
if(clone[j].equals(arrayB[i])){Ext.Array.erase(clone,j,1);j--;ln--;}}}
return clone;},clearSelectionsAll:function(){this.selMap={'ff4c39':[]};this.hoverMap=[];this.colorMap={};this.getController('Area').colourTree(this.colorMap);this.updateCounts();this.selectDelayed();},clearSelections:function(){this.selMap[this.actualColor]=[];this.prepareColorMap();this.getController('Area').colourTree(this.colorMap);this.getController('Chart').reconfigure('immediate');this.updateCounts();this.selectDelayed();},prepareColorMap:function(){var resultMap={};for(var color in this.selMap){var actual=this.selMap[color];for(var i=0;i<actual.length;i++){var area=actual[i];resultMap[area.loc]=resultMap[area.loc]||{};resultMap[area.loc][area.at]=resultMap[area.loc][area.at]||{};resultMap[area.loc][area.at][area.gid]=color;}}
for(var i=0;i<this.hoverMap.length;i++){var area=this.hoverMap[i];resultMap[area.loc]=resultMap[area.loc]||{};resultMap[area.loc][area.at]=resultMap[area.loc][area.at]||{};resultMap[area.loc][area.at][area.gid]=this.actualColor;}
this.colorMap=resultMap;return resultMap;}});Ext.define('PumaMain.view.TopTools',{extend:'Ext.container.Container',alias:'widget.toptoolspanel',height:'100%',width:'100%',initComponent:function(){this.layout={type:'hbox'}
this.defaults={height:'100%'}
this.items=[{xtype:'button',flex:1,enableToggle:true,toggleGroup:'mapmodal',itemId:'selectinmapbtn',helpId:'Selectingunitsinmap',text:'Select in map',icon:'images/icons/map-select.png',cls:'custom-button btn-map-select',listeners:{toggle:{fn:function(btn,active){if(active){btn.addCls("toggle-active");}
else{btn.removeCls("toggle-active");}}}}},{xtype:'button',flex:1,hidden:true,text:'Snapshot',icon:'images/icons/snapshot.png',itemId:'mapsnapshotbtn',helpId:'Creatingsnapshots',cls:'custom-button btn-snapshot'}]
this.callParent();}})
Ext.define('Gisatlib.container.StoreContainer',{extend:'Ext.container.Container',alias:'widget.storecontainer',mixins:['Ext.util.Bindable','Ext.form.field.Field'],initComponent:function(){if(this.store){this.bindStore(this.store);}
this.layout={type:'hbox'}
this.defaults={margin:'0 2 0 0'}
this.displayField=this.displayField||'name';this.valueField=this.valueField||'_id';this.type=this.type||'button';this.callParent();this.addEvents('change');},getStoreListeners:function(){return{datachanged:this.refresh}},refresh:function(){var me=this;if(!me.store){return;}
var recs=this.store.getRange();var presentRecs=[];var cmpsToDelete=[];var cmpsToAdd=[];var changed=false;var containsPressed=false;this.items.each(function(cmp){var value=me.type=='button'?cmp.pressed:cmp.value
if(!Ext.Array.contains(recs,cmp.rec)){cmpsToDelete.push(cmp);if(value){changed=true;}}
else{presentRecs.push(cmp.rec);if(value){containsPressed=true;}}})
for(var i=0;i<cmpsToDelete.length;i++){this.remove(cmpsToDelete[i])}
this.store.each(function(rec,i){if(!Ext.Array.contains(presentRecs,rec)){var cmp=me.createCmp(rec);me.insert(i,cmp)}})
if(this.forceSelection&&!containsPressed){var cmp=this.items.getAt(0);if(cmp){this.setCmpValue(cmp,true);changed=true;}}
if(changed){this.fireEvent('change',this,this.getValue());}},getValue:function(){var recs=this.getRecords();var ids=[];for(var i=0;i<recs.length;i++){ids.push(recs[i].get(this.valueField))}
return ids;},getRecords:function(){var recs=[];var me=this;this.items.each(function(cmp){var value=me.type=='button'?cmp.pressed:cmp.value;if(value){recs.push(cmp.rec)}})
return recs;},setValue:function(value){value=Ext.isArray(value)?value:[value];var me=this;var changed=false;this.items.each(function(cmp){var cmpValue=me.type=='button'?cmp.pressed:cmp.value;var desiredValue=Ext.Array.contains(value,cmp.rec.get(me.valueField));if(cmpValue!=desiredValue){me.setCmpValue(cmp,desiredValue);changed=true;}})
if(changed){this.fireEvent('change',this,this.getValue());}},createCmp:function(rec){var cmp=null;var me=this;if(this.type=='button'){cmp=Ext.widget('button',{text:rec.get(this.displayField),rec:rec,enableToggle:true})
cmp.on('toggle',me.onChange,me);cmp.onClick=function(e){me.e=e;this.__proto__.onClick.apply(this,arguments)}}
else{cmp=Ext.widget('checkbox',{boxLabel:rec.get('name'),rec:rec,inputValue:rec.get(this.valueField)})
cmp.onBoxClick=function(e){me.e=e;this.__proto__.onBoxClick.apply(this,arguments)}
cmp.on('change',me.onChange,me);}
return cmp;},setCmpValue:function(cmp,val){cmp.suspendEvents();if(this.type=='button'){cmp.toggle(val);}
else{cmp.setValue(val);}
cmp.resumeEvents();},onChange:function(cmp,val){var me=this;var changed=false;var multiValue=this.getValue();if((!this.multi||(this.multiCtrl&&!me.e.ctrlKey))){if(this.multi&&!val&&multiValue.length){this.items.each(function(item){if(item==cmp){me.setCmpValue(item,true);}
else{me.setCmpValue(item,false);}})
changed=true;}
else if(val){this.items.each(function(item){if(item==cmp)
return;me.setCmpValue(item,false);})
changed=true;}
else{me.setCmpValue(cmp,true);}}
else{if(!multiValue.length){me.setCmpValue(cmp,true);}
else{changed=true;}}
if(changed){this.fireEvent('change',this,this.getValue());}}})
Ext.define('Puma.model.LayerServer',{extend:'Ext.data.Model',fields:['_id','name','referenced','isWms'],idProperty:'_id',proxy:{type:'ajax',url:Config.url+'/api/layers/getLayers',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Aggregated',{extend:'Ext.data.Model',fields:['_id','name'],idProperty:'_id',proxy:'memory'});Ext.define('Puma.model.MappedAttribute',{extend:'Ext.data.Model',fields:['_id','name','index','attribute','attributeSet'],idProperty:'_id',proxy:'memory'});Ext.define('Puma.model.Screenshot',{extend:'Ext.data.Model',fields:['src','large','visible'],proxy:'memory'});Ext.define('Gisatlib.data.SlaveStore',{extend:'Ext.data.Store',slave:true,load:function(){var masterStore=this.findMaster();if(!masterStore){this.callParent();return;}
if(masterStore.getRange){var records=masterStore.getRange();}
else{var records=[];masterStore.getRootNode().cascadeBy(function(node){records.push(node);})}
this.loadRecords(records);this.filter();this.fireEvent('load',this,records,true);},findMaster:function(){var model=this.model.$className;var stores=Ext.StoreMgr.getRange();for(var i=0;i<stores.length;i++){var store=stores[i];if(store.model.$className==model&&!store.slave){return store;}}}});Ext.define('Puma.model.MappedChartAttribute',{extend:'Ext.data.Model',fields:['as','attr','normType','normAs','normAttr','normYear','attrName','attrNameNormalized','asName','checked','numCategories','classType','zeroesAsNull','name',{name:'attrName',convert:function(value,record){var attrStore=Ext.StoreMgr.lookup('attribute');var attr=attrStore.getById(record.get('attr'));return attr.get('name');}},{name:'asName',convert:function(value,record){var attrSetStore=Ext.StoreMgr.lookup('attributeset');var attrSet=attrSetStore.getById(record.get('as'));return attrSet.get('name');}}],idProperty:'_id',proxy:'memory'});Ext.define('Gisatlib.data.AggregatedStore',{extend:'Ext.data.Store',load:function(){var me=this;for(var i=0;i<this.stores.length;i++){var store=this.stores[i];var recs=store.getRange();if(!recs||!recs.length){store.on('load',function(st){var records=st.getRange();this.loadRecords(records,{addRecords:true});this.filter();},this)}
else{this.loadRecords(recs,true);this.filter();}
store.on('add',function(st,records){for(var j=0;j<records.length;j++){this.addSorted(records[j]);}},this)}}});Ext.define('PumaMain.view.LayerMenu',{extend:'Ext.menu.Menu',alias:'widget.layermenu',initComponent:function(){this.items=[{text:'Opacity',hidden:this.layerName==null,itemId:'opacity'},{text:'Config',hidden:this.bindChart==null,itemId:'config'},{text:'Remove',hidden:this.bindChart==null,itemId:'remove'},{text:'Export PNG',hidden:this.map==null,itemId:'exportpng'},{text:'URL',hidden:this.map==null,itemId:'url'}]
this.callParent();}})
Ext.define('Puma.util.Color',{requires:['Ext.draw.Color'],statics:{determineColorRange:function(color){var hsl=Ext.draw.Color.fromString(color).getHSL();var fromColor=Ext.draw.Color.fromHSL(hsl[0],0.8+0.2*hsl[1],0.95+0.05*hsl[2]).toString();var toColor=Ext.draw.Color.fromHSL(hsl[0],0.8+0.2*hsl[1],0.25+0.1*hsl[2]).toString();return[fromColor,toColor];},determineColorFromRange:function(colorFrom,colorTo,ratio){var rgbFrom=Ext.draw.Color.fromString(colorFrom).getRGB();var rgbTo=Ext.draw.Color.fromString(colorTo).getRGB();var rgbRatio=[rgbFrom[0]+ratio*(rgbTo[0]-rgbFrom[0]),rgbFrom[1]+ratio*(rgbTo[1]-rgbFrom[1]),rgbFrom[2]+ratio*(rgbTo[2]-rgbFrom[2])];return new Ext.draw.Color(rgbRatio[0],rgbRatio[1],rgbRatio[2]).toString();}}});Ext.define('Puma.util.Msg',{requires:[],statics:{init:function(){if(!this.msgCt){this.msgCt=Ext.DomHelper.insertFirst(document.body,{id:'msg-div'},true);}},msg:function(title,format,align){if(!this.msgCt){this.msgCt=Ext.DomHelper.insertFirst(document.body,{id:'msg-div'},true);}
function createBox(t,str){return'<div class="msg"><h3>'+t+'</h3><p>'+str+'</p></div>';}
if(align=='l'){this.msgCt.addCls('left').removeCls('right');}
else{this.msgCt.addCls('right').removeCls('left');}
var s=Ext.String.format.apply(String,Array.prototype.slice.call(arguments,1));var m=Ext.core.DomHelper.append(this.msgCt,createBox(title,s),true);m.hide();m.slideIn(align||'r').ghost(align||"r",{delay:3000,remove:true});}}});Ext.define('PumaMain.view.CommonMngGrid',{extend:'Ext.grid.Panel',alias:'widget.commonmnggrid',autoScroll:true,requires:[],initComponent:function(){var me=this;var actionItems=[{icon:'images/icons/up.png',tooltip:'Up',hidden:!this.allowReorder,width:16,height:16,handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('recmoved',me,record,true)}},{icon:'images/icons/down.png',tooltip:'Down',hidden:!this.allowReorder,width:16,height:16,handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('recmoved',me,record,false)}},{icon:'images/icons/view.png',tooltip:'Open',hidden:this.allowReorder?true:false,width:16,height:16,handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('urlopen',me,record)}},{icon:'images/icons/remove-16.png',tooltip:'Remove',width:16,height:16,handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('recdeleted',me,record)}}]
if(!me.allowReorder){actionItems=actionItems.slice(2);}
else{actionItems=[actionItems[0],actionItems[1],actionItems[3]]}
this.columns=[{dataIndex:'name',flex:1,resizable:false,menuDisabled:true,sortable:false,text:'Name',},{xtype:'actioncolumn',width:this.allowReorder?72:50,items:actionItems}]
this.callParent();this.addEvents('recmoved','recdeleted','urlopen');}})
Ext.define('PumaMain.view.CommonSaveForm',{extend:'Ext.form.Panel',alias:'widget.commonsaveform',frame:true,initComponent:function(){this.items=[{xtype:'textfield',fieldLabel:'Name',name:'name',itemId:'name',allowBlank:false}]
this.buttons=[{text:'Save',itemId:'save'}]
this.callParent();}})
Ext.define('Ext.layout.container.CheckboxGroup',{extend:'Ext.layout.container.Container',alias:['layout.checkboxgroup'],autoFlex:true,type:'checkboxgroup',createsInnerCt:true,childEls:['innerCt'],renderTpl:['<table id="{ownerId}-innerCt" role="presentation" style="{tableStyle}"><tbody><tr>','<tpl for="columns">','<td class="{parent.colCls}" valign="top" style="{style}">','{% this.renderColumn(out,parent,xindex-1) %}','</td>','</tpl>','</tr></tbody></table>'],lastOwnerItemsGeneration:null,beginLayout:function(ownerContext){var me=this,columns,numCols,i,width,cwidth,totalFlex=0,flexedCols=0,autoFlex=me.autoFlex,innerCtStyle=me.innerCt.dom.style;me.callParent(arguments);columns=me.columnNodes;ownerContext.innerCtContext=ownerContext.getEl('innerCt',me);if(!ownerContext.widthModel.shrinkWrap){numCols=columns.length;if(me.columnsArray){for(i=0;i<numCols;i++){width=me.owner.columns[i];if(width<1){totalFlex+=width;flexedCols++;}}
for(i=0;i<numCols;i++){width=me.owner.columns[i];if(width<1){cwidth=((width/totalFlex)*100)+'%';}else{cwidth=width+'px';}
columns[i].style.width=cwidth;}}
else{for(i=0;i<numCols;i++){cwidth=autoFlex?(1/numCols*100)+'%':'';columns[i].style.width=cwidth;flexedCols++;}}
if(!flexedCols){innerCtStyle.tableLayout='fixed';innerCtStyle.width='';}else if(flexedCols<numCols){innerCtStyle.tableLayout='fixed';innerCtStyle.width='100%';}else{innerCtStyle.tableLayout='auto';if(autoFlex){innerCtStyle.width='100%';}else{innerCtStyle.width='';}}}else{innerCtStyle.tableLayout='auto';innerCtStyle.width='';}},cacheElements:function(){var me=this;me.callParent();me.rowEl=me.innerCt.down('tr');me.columnNodes=me.rowEl.dom.childNodes;},calculate:function(ownerContext){var me=this,targetContext,widthShrinkWrap,heightShrinkWrap,shrinkWrap,table,targetPadding;if(!ownerContext.getDomProp('containerChildrenDone')){me.done=false;}else{targetContext=ownerContext.innerCtContext;widthShrinkWrap=ownerContext.widthModel.shrinkWrap;heightShrinkWrap=ownerContext.heightModel.shrinkWrap;shrinkWrap=heightShrinkWrap||widthShrinkWrap;table=targetContext.el.dom;targetPadding=shrinkWrap&&targetContext.getPaddingInfo();if(widthShrinkWrap){ownerContext.setContentWidth(table.offsetWidth+targetPadding.width,true);}
if(heightShrinkWrap){ownerContext.setContentHeight(table.offsetHeight+targetPadding.height,true);}}},doRenderColumn:function(out,renderData,columnIndex){var me=renderData.$layout,owner=me.owner,columnCount=renderData.columnCount,items=owner.items.items,itemCount=items.length,item,itemIndex,rowCount,increment,tree;if(owner.vertical){rowCount=Math.ceil(itemCount/columnCount);itemIndex=columnIndex*rowCount;itemCount=Math.min(itemCount,itemIndex+rowCount);increment=1;}else{itemIndex=columnIndex;increment=columnCount;}
for(;itemIndex<itemCount;itemIndex+=increment){item=items[itemIndex];me.configureItem(item);tree=item.getRenderTree();Ext.DomHelper.generateMarkup(tree,out);}},getColumnCount:function(){var me=this,owner=me.owner,ownerColumns=owner.columns;if(me.columnsArray){return ownerColumns.length;}
if(Ext.isNumber(ownerColumns)){return ownerColumns;}
return owner.items.length;},getItemSizePolicy:function(item){return this.autoSizePolicy;},getRenderData:function(){var me=this,data=me.callParent(),owner=me.owner,i,columns=me.getColumnCount(),width,column,cwidth,autoFlex=me.autoFlex,totalFlex=0,flexedCols=0;if(me.columnsArray){for(i=0;i<columns;i++){width=me.owner.columns[i];if(width<1){totalFlex+=width;flexedCols++;}}}
data.colCls=owner.groupCls;data.columnCount=columns;data.columns=[];for(i=0;i<columns;i++){column=(data.columns[i]={});if(me.columnsArray){width=me.owner.columns[i];if(width<1){cwidth=((width/totalFlex)*100)+'%';}else{cwidth=width+'px';}
column.style='width:'+cwidth;}else{column.style='width:'+(1/columns*100)+'%';flexedCols++;}}
data.tableStyle=!flexedCols?'table-layout:fixed;':(flexedCols<columns)?'table-layout:fixed;width:100%':(autoFlex)?'table-layout:auto;width:100%':'table-layout:auto;';return data;},initLayout:function(){var me=this,owner=me.owner;me.columnsArray=Ext.isArray(owner.columns);me.autoColumns=!owner.columns||owner.columns==='auto';me.vertical=owner.vertical;me.callParent();},isValidParent:function(){return true;},setupRenderTpl:function(renderTpl){this.callParent(arguments);renderTpl.renderColumn=this.doRenderColumn;},renderChildren:function(){var me=this,generation=me.owner.items.generation;if(me.lastOwnerItemsGeneration!==generation){me.lastOwnerItemsGeneration=generation;me.renderItems(me.getLayoutItems());}},renderItems:function(items){var me=this,itemCount=items.length,i,item,rowCount,columnCount,rowIndex,columnIndex;if(itemCount){Ext.suspendLayouts();if(me.autoColumns){me.addMissingColumns(itemCount);}
columnCount=me.columnNodes.length;rowCount=Math.ceil(itemCount/columnCount);for(i=0;i<itemCount;i++){item=items[i];rowIndex=me.getRenderRowIndex(i,rowCount,columnCount);columnIndex=me.getRenderColumnIndex(i,rowCount,columnCount);if(!item.rendered){me.renderItem(item,rowIndex,columnIndex);}else if(!me.isItemAtPosition(item,rowIndex,columnIndex)){me.moveItem(item,rowIndex,columnIndex);}}
if(me.autoColumns){me.removeExceedingColumns(itemCount);}
Ext.resumeLayouts(true);}},isItemAtPosition:function(item,rowIndex,columnIndex){return item.el.dom===this.getNodeAt(rowIndex,columnIndex);},getRenderColumnIndex:function(itemIndex,rowCount,columnCount){if(this.vertical){return Math.floor(itemIndex/rowCount);}else{return itemIndex%columnCount;}},getRenderRowIndex:function(itemIndex,rowCount,columnCount){var me=this;if(me.vertical){return itemIndex%rowCount;}else{return Math.floor(itemIndex/columnCount);}},getNodeAt:function(rowIndex,columnIndex){return this.columnNodes[columnIndex].childNodes[rowIndex];},addMissingColumns:function(itemsCount){var me=this,existingColumnsCount=me.columnNodes.length,missingColumnsCount,row,cls,i;if(existingColumnsCount<itemsCount){missingColumnsCount=itemsCount-existingColumnsCount;row=me.rowEl;cls=me.owner.groupCls;for(i=0;i<missingColumnsCount;i++){row.createChild({cls:cls,tag:'td',vAlign:'top'});}}},removeExceedingColumns:function(itemsCount){var me=this,existingColumnsCount=me.columnNodes.length,exceedingColumnsCount,row,i;if(existingColumnsCount>itemsCount){exceedingColumnsCount=existingColumnsCount-itemsCount;row=me.rowEl;for(i=0;i<exceedingColumnsCount;i++){row.last().remove();}}},renderItem:function(item,rowIndex,columnIndex){var me=this;me.configureItem(item);item.render(Ext.get(me.columnNodes[columnIndex]),rowIndex);me.afterRenderItem(item);},moveItem:function(item,rowIndex,columnIndex){var me=this,column=me.columnNodes[columnIndex],targetNode=column.childNodes[rowIndex];column.insertBefore(item.el.dom,targetNode||null);}});Ext.define('PumaMain.view.MapTools',{extend:'Ext.panel.Panel',alias:'widget.maptools',columns:2,helpId:'Maptools',initComponent:function(){this.defaults={height:90,width:120}
this.layout={type:'table',columns:2}
this.items=[{xtype:'button',enableToggle:true,hidden:true,itemId:'selectinmap',helpId:'Selectingunitsinmap',text:'Select in map',iconAlign:'top',icon:'images/icons/map-select.png',cls:'custom-button btn-map-tool btn-tool-select'},{xtype:'button',enableToggle:true,itemId:'hoverbtn',helpId:'Selectiononhover',text:'Hover',iconAlign:'top',icon:'images/icons/tools-hover.png',cls:'custom-button btn-map-tool btn-tool-hover'},{xtype:'button',itemId:'zoomselectedbtn',helpId:'Zoomingtoselectedunits',text:'Zoom selected',iconAlign:'top',icon:'images/icons/tools-zoom.png',cls:'custom-button btn-map-tool btn-tool-zoom-selected'},{xtype:'button',enableToggle:true,helpId:'Measuringdistance',toggleGroup:'mapmodal',itemId:'measurelinebtn',text:'Measure line',iconAlign:'top',icon:'images/icons/tools-measure-line.png',cls:'custom-button btn-map-tool btn-tool-measure-line'},{xtype:'button',enableToggle:true,toggleGroup:'mapmodal',itemId:'measurepolygonbtn',helpId:'Measuringpolygonarea',text:'Measure polygon',iconAlign:'top',icon:'images/icons/tools-measure-polygon.png',cls:'custom-button btn-map-tool btn-tool-measure-polygon'},{xtype:'button',itemId:'multiplemapsbtn',helpId:'Multiplemaps',enableToggle:false,text:'Zoom to full',iconAlign:'top',icon:'images/icons/tools-maps-multiple.png',cls:'custom-button btn-map-tool btn-tool-multiple-maps'},{xtype:'button',text:'Save as image',itemId:'savemapbtn',helpId:'Savingmapasimage',icon:'images/icons/tools-save.png',iconAlign:'top',cls:'custom-button btn-map-tool btn-tool-save-image'},{xtype:'button',enableToggle:false,itemId:'snapshot',helpId:'Creatingsnapshots',text:'Snapshot',iconAlign:'top',icon:'images/icons/snapshot.png',cls:'custom-button btn-map-tool btn-tool-snapshot'}]
this.callParent();}})
Ext.define('PumaMain.view.ScreenshotView',{extend:'Ext.view.View',alias:'widget.screenshotview',overItemCls:'screenshotover',initComponent:function(){this.store=Ext.StoreMgr.lookup('screenshot');this.itemSelector='div.screenshot';this.style={overflowY:'auto'}
this.tpl=['<tpl for=".">','<div class="screenshot" style="display:<tpl if="visible==1">inline-block<tpl else>none</tpl>;width:<tpl if="large">536px<tpl else>172px</tpl>;height:<tpl if="large">350px<tpl else>118px</tpl>">','<img class="screenshotimg" height=<tpl if="large">350<tpl else>118</tpl> width=<tpl if="large">536<tpl else>172</tpl> src="{src}"/>','<div>','</div>','<img class="screenshoticon screenshotpng" height=30 width=30 src="images/icons/snapshot-download.png" />','<tpl if="!large"><img class="screenshoticon screenshotremove" height=30 width=30 src="images/icons/snapshot-delete.png" /></tpl>','<img class="screenshoticon screenshotenlarge" height=36 width=36 src="images/icons/snapshot-enlarge.png" />','</div>','</tpl>']
this.callParent();var me=this;this.addEvents('screenshotexport','screenshotremove','screenshotexpand')
this.on('itemclick',function(view,rec,domEl,d,e){var className=e.target.className;if(className.indexOf('screenshotpng')>-1){me.fireEvent('screenshotexport',me,rec)}
else if(className.indexOf('screenshotremove')>-1){me.fireEvent('screenshotremove',me,rec)}
else{me.fireEvent('screenshotexpand',me,rec,Ext.get(domEl))}})}})
Ext.define('Ext.slider.Thumb',{requires:['Ext.dd.DragTracker','Ext.util.Format'],topZIndex:10000,constructor:function(config){var me=this;Ext.apply(me,config||{},{cls:Ext.baseCSSPrefix+'slider-thumb',constrain:false});me.callParent([config]);},render:function(){var me=this;me.el=me.slider.innerEl.insertFirst(me.getElConfig());me.onRender();},onRender:function(){if(this.disabled){this.disable();}
this.initEvents();},getElConfig:function(){var me=this,slider=me.slider,style={};style[slider.vertical?'bottom':'left']=slider.calculateThumbPosition(slider.normalizeValue(me.value))+'%';return{style:style,id:this.id,cls:this.cls};},move:function(v,animate){var el=this.el,styleProp=this.slider.vertical?'bottom':'left',to,from;v+='%';if(!animate){el.dom.style[styleProp]=v;}else{to={};to[styleProp]=v;if(!Ext.supports.GetPositionPercentage){from={};from[styleProp]=el.dom.style[styleProp];}
new Ext.fx.Anim({target:el,duration:350,from:from,to:to});}},bringToFront:function(){this.el.setStyle('zIndex',this.topZIndex);},sendToBack:function(){this.el.setStyle('zIndex','');},enable:function(){var me=this;me.disabled=false;if(me.el){me.el.removeCls(me.slider.disabledCls);}},disable:function(){var me=this;me.disabled=true;if(me.el){me.el.addCls(me.slider.disabledCls);}},initEvents:function(){var me=this,el=me.el;me.tracker=new Ext.dd.DragTracker({onBeforeStart:Ext.Function.bind(me.onBeforeDragStart,me),onStart:Ext.Function.bind(me.onDragStart,me),onDrag:Ext.Function.bind(me.onDrag,me),onEnd:Ext.Function.bind(me.onDragEnd,me),tolerance:3,autoStart:300,overCls:Ext.baseCSSPrefix+'slider-thumb-over'});me.tracker.initEl(el);},onBeforeDragStart:function(e){if(this.disabled){return false;}else{this.slider.promoteThumb(this);return true;}},onDragStart:function(e){var me=this;me.el.addCls(Ext.baseCSSPrefix+'slider-thumb-drag');me.dragging=me.slider.dragging=true;me.dragStartValue=me.value;me.slider.fireEvent('dragstart',me.slider,e,me);},onDrag:function(e){var me=this,slider=me.slider,index=me.index,newValue=me.getValueFromTracker(),above,below;if(newValue!==undefined){if(me.constrain){above=slider.thumbs[index+1];below=slider.thumbs[index-1];if(below!==undefined&&newValue<=below.value){newValue=below.value;}
if(above!==undefined&&newValue>=above.value){newValue=above.value;}}
slider.setValue(index,newValue,false);slider.fireEvent('drag',slider,e,me);}},getValueFromTracker:function(){var slider=this.slider,trackPoint=slider.getTrackpoint(this.tracker.getXY());if(trackPoint!==undefined){return slider.reversePixelValue(trackPoint);}},onDragEnd:function(e){var me=this,slider=me.slider,value=me.value;me.el.removeCls(Ext.baseCSSPrefix+'slider-thumb-drag');me.dragging=slider.dragging=false;slider.fireEvent('dragend',slider,e);if(me.dragStartValue!=value){slider.fireEvent('changecomplete',slider,value,me);}},destroy:function(){Ext.destroy(this.tracker);}});Ext.define('Ext.slider.Tip',{extend:'Ext.tip.Tip',minWidth:10,alias:'widget.slidertip',offsets:null,align:null,position:'',defaultVerticalPosition:'left',defaultHorizontalPosition:'top',isSliderTip:true,init:function(slider){var me=this,align,offsets;if(!me.position){me.position=slider.vertical?me.defaultVerticalPosition:me.defaultHorizontalPosition;}
switch(me.position){case'top':offsets=[0,-10];align='b-t?';break;case'bottom':offsets=[0,10];align='t-b?';break;case'left':offsets=[-10,0];align='r-l?';break;case'right':offsets=[10,0];align='l-r?';}
if(!me.align){me.align=align;}
if(!me.offsets){me.offsets=offsets;}
slider.on({scope:me,dragstart:me.onSlide,drag:me.onSlide,dragend:me.hide,destroy:me.destroy});},onSlide:function(slider,e,thumb){var me=this;me.show();me.update(me.getText(thumb));me.el.alignTo(thumb.el,me.align,me.offsets);},getText:function(thumb){return String(thumb.value);}});Ext.define('Ext.layout.component.field.Slider',{alias:['layout.sliderfield'],extend:'Ext.layout.component.field.Field',type:'sliderfield',beginLayout:function(ownerContext){this.callParent(arguments);ownerContext.endElContext=ownerContext.getEl('endEl');ownerContext.innerElContext=ownerContext.getEl('innerEl');ownerContext.bodyElContext=ownerContext.getEl('bodyEl');},publishInnerHeight:function(ownerContext,height){var innerHeight=height-this.measureLabelErrorHeight(ownerContext),endElPad,inputPad;if(this.owner.vertical){endElPad=ownerContext.endElContext.getPaddingInfo();inputPad=ownerContext.inputContext.getPaddingInfo();ownerContext.innerElContext.setHeight(innerHeight-inputPad.height-endElPad.height);}else{ownerContext.bodyElContext.setHeight(innerHeight);}},publishInnerWidth:function(ownerContext,width){if(!this.owner.vertical){var endElPad=ownerContext.endElContext.getPaddingInfo(),inputPad=ownerContext.inputContext.getPaddingInfo();ownerContext.innerElContext.setWidth(width-inputPad.left-endElPad.right-ownerContext.labelContext.getProp('width'));}},beginLayoutFixed:function(ownerContext,width,suffix){var me=this,ieInputWidthAdjustment=me.ieInputWidthAdjustment;if(ieInputWidthAdjustment){me.owner.bodyEl.setStyle('padding-right',ieInputWidthAdjustment+'px');}
me.callParent(arguments);}});Ext.define('Ext.data.proxy.Rest',{extend:'Ext.data.proxy.Ajax',alternateClassName:'Ext.data.RestProxy',alias:'proxy.rest',actionMethods:{create:'POST',read:'GET',update:'PUT',destroy:'DELETE'},appendId:true,batchActions:false,buildUrl:function(request){var me=this,operation=request.operation,records=operation.records||[],record=records[0],format=me.format,url=me.getUrl(request),id=record?record.getId():operation.id;if(me.appendId&&id){if(!url.match(/\/$/)){url+='/';}
url+=id;}
if(format){if(!url.match(/\.$/)){url+='.';}
url+=format;}
request.url=url;return me.callParent(arguments);}});Ext.define('Ext.data.TreeModel',{extend:'Ext.data.Model',requires:['Ext.data.NodeInterface']},function(){Ext.data.NodeInterface.decorate(this);});Ext.define('Ext.ux.data.PagingMemoryProxy',{extend:'Ext.data.proxy.Memory',alias:'proxy.pagingmemory',alternateClassName:'Ext.data.PagingMemoryProxy',read:function(operation,callback,scope){var reader=this.getReader(),result=reader.read(this.data),sorters,filters,sorterFn,records;scope=scope||this;filters=operation.filters;if(filters.length>0){records=[];Ext.each(result.records,function(record){var isMatch=true,length=filters.length,i;for(i=0;i<length;i++){var filter=filters[i],fn=filter.filterFn,scope=filter.scope;isMatch=isMatch&&fn.call(scope,record);}
if(isMatch){records.push(record);}},this);result.records=records;result.totalRecords=result.total=records.length;}
sorters=operation.sorters;if(sorters.length>0){sorterFn=function(r1,r2){var result=sorters[0].sort(r1,r2),length=sorters.length,i;for(i=1;i<length;i++){result=result||sorters[i].sort.call(this,r1,r2);}
return result;};result.records.sort(sorterFn);}
if(operation.start!==undefined&&operation.limit!==undefined){result.records=result.records.slice(operation.start,operation.start+operation.limit);result.count=result.records.length;}
Ext.apply(operation,{resultSet:result});operation.setCompleted();operation.setSuccessful();Ext.Function.defer(function(){Ext.callback(callback,scope,[operation]);},10);}});Ext.define('Ext.ux.CheckColumn',{extend:'Ext.grid.column.Column',alias:'widget.checkcolumnwithheader',disableColumn:false,disableFunction:null,disabledColumnDataIndex:null,columnHeaderCheckbox:false,autoCommit:true,constructor:function(config){var me=this;if(config.columnHeaderCheckbox)
{var store=config.store;store.on("datachanged",function(){me.updateColumnHeaderCheckbox(me);});store.on("update",function(){me.updateColumnHeaderCheckbox(me);});config.text=me.getHeaderCheckboxImage(store,config.dataIndex);}
me.addEvents('beforecheckchange','checkchange');me.callParent(arguments);},updateColumnHeaderCheckbox:function(column){var image=column.getHeaderCheckboxImage(column.store,column.dataIndex);column.setText(image);},toggleSortState:function(){var me=this;if(me.columnHeaderCheckbox)
{var store=me.up('tablepanel').store;var isAllChecked=me.getStoreIsAllChecked(store,me.dataIndex);store.each(function(record){record.set(me.dataIndex,!isAllChecked);record.commit();});}
else
me.callParent(arguments);},getStoreIsAllChecked:function(store,dataIndex){var allTrue=true;store.each(function(record){if(!record.get(dataIndex))
allTrue=false;});return allTrue;},getHeaderCheckboxImage:function(store,dataIndex){var allTrue=this.getStoreIsAllChecked(store,dataIndex);var cssPrefix=Ext.baseCSSPrefix,cls=[cssPrefix+'grid-checkheader'];if(allTrue){cls.push(cssPrefix+'grid-checkheader-checked');}
return'<div class="'+cls.join(' ')+'">&#160;</div>'},processEvent:function(type,view,cell,recordIndex,cellIndex,e){if(type=='mousedown'||(type=='keydown'&&(e.getKey()==e.ENTER||e.getKey()==e.SPACE))){var record=view.panel.store.getAt(recordIndex),dataIndex=this.dataIndex,checked=!record.get(dataIndex),column=view.panel.columns[cellIndex];if(!(column.disableColumn||record.get(column.disabledColumnDataIndex)||(column.disableFunction&&column.disableFunction(checked,record))))
{if(this.fireEvent('beforecheckchange',this,recordIndex,checked,record))
{record.set(dataIndex,checked);if(this.autoCommit){record.commit();}
this.fireEvent('checkchange',this,recordIndex,checked,record);}}
return false;}else{return this.callParent(arguments);}},renderer:function(value,metaData,record,rowIndex,colIndex,store,view){var disabled="",column=view.panel.columns[colIndex];if(column.disableColumn||column.disabledColumnDataIndex||(column.disableFunction&&column.disableFunction(value,record)))
disabled="-disabled";var cssPrefix=Ext.baseCSSPrefix,cls=[cssPrefix+'grid-checkheader'+disabled];if(value){cls.push(cssPrefix+'grid-checkheader-checked'+disabled);}
return'<div class="'+cls.join(' ')+'">&#160;</div>';}});Ext.define('PumaMain.view.ChoroplethForm',{extend:'Ext.form.Panel',alias:'widget.choroplethform',frame:true,header:false,initComponent:function(){this.bodyStyle={padding:'0px'}
this.items=[{xtype:'pumacombo',forChoro:1,store:Ext.StoreMgr.lookup('classificationtype'),fieldLabel:'Class. type',itemId:'classType',name:'classType',value:'quantiles',valueField:'type'},{xtype:'numberfield',fieldLabel:'Num categories',name:'numCategories',forChoro:1,value:5,minValue:2,allowDecimals:false,itemId:'numCategories'}]
this.buttons=[{text:'Apply',itemId:'apply'},{text:'Back',itemId:'back'}]
this.callParent();}})
Ext.define('PumaMain.view.NormalizeForm',{extend:'Ext.form.Panel',alias:'widget.normalizeform',frame:true,initComponent:function(){this.attrStore=Ext.create('Gisatlib.data.SlaveStore',{slave:true,autoLoad:true,filters:[function(rec){return false;}],model:'Puma.model.Attribute'})
this.bodyStyle={padding:'0px'}
this.items=[{xtype:'pumacombo',store:Ext.StoreMgr.lookup(this.formType=='chart'?'normalization4chart':'normalization4chartlimited'),fieldLabel:'Norm type',name:'normType',valueField:'type',itemId:'normType'},{xtype:'pumacombo',store:Ext.StoreMgr.lookup('attributeset2choose'),fieldLabel:'Norm Attr set',name:'normAttributeSet',hidden:true,itemId:'normAttributeSet'},{xtype:'pumacombo',store:this.attrStore,fieldLabel:'Norm Attribute',name:'normAttribute',hidden:true,itemId:'normAttribute'}]
this.buttons=[{text:'Change normalization',itemId:'normalize'},{text:'Remove normalization',itemId:'dontnormalize'},{text:'Back',itemId:'back'}]
this.callParent();}})
Ext.define('Ext.layout.component.field.FieldContainer',{extend:'Ext.layout.component.field.Field',alias:'layout.fieldcontainer',type:'fieldcontainer',waitForOuterHeightInDom:true,waitForOuterWidthInDom:true,beginLayout:function(ownerContext){this.callParent(arguments);ownerContext.hasRawContent=true;ownerContext.target.bodyEl.setStyle('height','');},measureContentHeight:function(ownerContext){return ownerContext.hasDomProp('containerLayoutDone')?this.callParent(arguments):NaN;},measureContentWidth:function(ownerContext){return ownerContext.hasDomProp('containerLayoutDone')?this.callParent(arguments):NaN;},publishInnerWidth:function(ownerContext,width){var bodyContext=ownerContext.bodyCellContext;bodyContext.setWidth(bodyContext.el.getWidth(),false);},publishInnerHeight:function(ownerContext,height){var bodyContext=ownerContext.bodyCellContext;bodyContext.setHeight(height-this.measureLabelErrorHeight(ownerContext));}});Ext.define('Ext.ux.grid.filter.StringFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.string',iconCls:'ux-gridfilter-text-icon',emptyText:'Enter Filter Text...',selectOnFocus:true,width:125,init:function(config){Ext.applyIf(config,{enableKeyEvents:true,iconCls:this.iconCls,hideLabel:true,listeners:{scope:this,keyup:this.onInputKeyUp,el:{click:function(e){e.stopPropagation();}}}});this.inputItem=Ext.create('Ext.form.field.Text',config);this.menu.add(this.inputItem);this.updateTask=Ext.create('Ext.util.DelayedTask',this.fireUpdate,this);},getValue:function(){return this.inputItem.getValue();},setValue:function(value){this.inputItem.setValue(value);this.fireEvent('update',this);},isActivatable:function(){return this.inputItem.getValue().length>0;},getSerialArgs:function(){return{type:'string',value:this.getValue()};},validateRecord:function(record){var val=record.get(this.dataIndex);if(typeof val!='string'){return(this.getValue().length===0);}
return val.toLowerCase().indexOf(this.getValue().toLowerCase())>-1;},onInputKeyUp:function(field,e){var k=e.getKey();if(k==e.RETURN&&field.isValid()){e.stopEvent();this.menu.hide();return;}
this.updateTask.delay(this.updateBuffer);}});Ext.define('Ext.layout.container.Card',{extend:'Ext.layout.container.Fit',alternateClassName:'Ext.layout.CardLayout',alias:'layout.card',type:'card',hideInactive:true,deferredRender:false,getRenderTree:function(){var me=this,activeItem=me.getActiveItem();if(activeItem){if(activeItem.hasListeners.beforeactivate&&activeItem.fireEvent('beforeactivate',activeItem)===false){activeItem=me.activeItem=me.owner.activeItem=null;}
else if(activeItem.hasListeners.activate){activeItem.on({boxready:function(){activeItem.fireEvent('activate',activeItem);},single:true});}
if(me.deferredRender){if(activeItem){return me.getItemsRenderTree([activeItem]);}}else{return me.callParent(arguments);}}},renderChildren:function(){var me=this,active=me.getActiveItem();if(!me.deferredRender){me.callParent();}else if(active){me.renderItems([active],me.getRenderTarget());}},isValidParent:function(item,target,position){var itemEl=item.el?item.el.dom:Ext.getDom(item);return(itemEl&&itemEl.parentNode===(target.dom||target))||false;},getActiveItem:function(){var me=this,result=me.parseActiveItem(me.activeItem||(me.owner&&me.owner.activeItem));if(result&&me.owner.items.indexOf(result)!=-1){me.activeItem=result;}else{me.activeItem=null;}
return me.activeItem;},parseActiveItem:function(item){if(item&&item.isComponent){return item;}else if(typeof item=='number'||item===undefined){return this.getLayoutItems()[item||0];}else{return this.owner.getComponent(item);}},configureItem:function(item){if(item===this.getActiveItem()){item.hidden=false;}else{item.hidden=true;}
this.callParent(arguments);},onRemove:function(component){var me=this;if(component===me.activeItem){me.activeItem=null;}},getAnimation:function(newCard,owner){var newAnim=(newCard||{}).cardSwitchAnimation;if(newAnim===false){return false;}
return newAnim||owner.cardSwitchAnimation;},getNext:function(){var wrap=arguments[0],items=this.getLayoutItems(),index=Ext.Array.indexOf(items,this.activeItem);return items[index+1]||(wrap?items[0]:false);},next:function(){var anim=arguments[0],wrap=arguments[1];return this.setActiveItem(this.getNext(wrap),anim);},getPrev:function(){var wrap=arguments[0],items=this.getLayoutItems(),index=Ext.Array.indexOf(items,this.activeItem);return items[index-1]||(wrap?items[items.length-1]:false);},prev:function(){var anim=arguments[0],wrap=arguments[1];return this.setActiveItem(this.getPrev(wrap),anim);},setActiveItem:function(newCard){var me=this,owner=me.owner,oldCard=me.activeItem,rendered=owner.rendered,newIndex;newCard=me.parseActiveItem(newCard);newIndex=owner.items.indexOf(newCard);if(newIndex==-1){newIndex=owner.items.items.length;Ext.suspendLayouts();newCard=owner.add(newCard);Ext.resumeLayouts();}
if(newCard&&oldCard!=newCard){if(newCard.fireEvent('beforeactivate',newCard,oldCard)===false){return false;}
if(oldCard&&oldCard.fireEvent('beforedeactivate',oldCard,newCard)===false){return false;}
if(rendered){Ext.suspendLayouts();if(!newCard.rendered){me.renderItem(newCard,me.getRenderTarget(),owner.items.length);}
if(oldCard){if(me.hideInactive){oldCard.hide();oldCard.hiddenByLayout=true;}
oldCard.fireEvent('deactivate',oldCard,newCard);}
if(newCard.hidden){newCard.show();}
if(!newCard.hidden){me.activeItem=newCard;}
Ext.resumeLayouts(true);}else{me.activeItem=newCard;}
newCard.fireEvent('activate',newCard,oldCard);return me.activeItem;}
return false;}});Ext.define('Ext.grid.feature.RowBody',{extend:'Ext.grid.feature.Feature',alias:'feature.rowbody',rowBodyHiddenCls:Ext.baseCSSPrefix+'grid-row-body-hidden',rowBodyTrCls:Ext.baseCSSPrefix+'grid-rowbody-tr',rowBodyTdCls:Ext.baseCSSPrefix+'grid-cell-rowbody',rowBodyDivCls:Ext.baseCSSPrefix+'grid-rowbody',eventPrefix:'rowbody',eventSelector:'.'+Ext.baseCSSPrefix+'grid-rowbody-tr',init:function(){var me=this,selModel=me.view.getSelectionModel();me.grid.mon(me.view,{element:'el',mousedown:me.onMouseDown,scope:me});if(!selModel.isCellModel){me.grid.mon(selModel,{select:me.onSelect,deselect:me.onDeselect,scope:me});}
me.callParent(arguments);},onMouseDown:function(e){var me=this,tableRow=e.getTarget('tr.'+me.rowBodyTrCls);if(tableRow&&Ext.fly(tableRow=tableRow.previousSibling).is(me.view.rowSelector)){e.target=tableRow;me.view.handleEvent(e);}},onSelect:function(selModel,record,rowIndex){var me=this,view=me.view,selectedRow=view.getNode(rowIndex);if(selectedRow){selectedRow=Ext.fly(selectedRow.nextSibling);if(selectedRow&&selectedRow.is(me.rowBodySelector)){selectedRow.addCls(view.selectedItemCls);}}},onDeselect:function(selModel,record,rowIndex){var me=this,view=me.view,selectedRow=view.getNode(rowIndex);if(selectedRow){selectedRow=Ext.fly(selectedRow.nextSibling);if(selectedRow&&selectedRow.is(me.rowBodySelector)){selectedRow.removeCls(view.selectedItemCls);}}},getRowBody:function(values){return['<tr class="'+this.rowBodyTrCls+' {rowBodyCls}">','<td class="'+this.rowBodyTdCls+'" colspan="{rowBodyColspan}">','<div class="'+this.rowBodyDivCls+'">{rowBody}</div>','</td>','</tr>'].join('');},getMetaRowTplFragments:function(){return{getRowBody:this.getRowBody,rowBodyTrCls:this.rowBodyTrCls,rowBodyTdCls:this.rowBodyTdCls,rowBodyDivCls:this.rowBodyDivCls};},mutateMetaRowTpl:function(metaRowTpl){metaRowTpl.push('{[this.getRowBody(values)]}');},getAdditionalData:function(data,idx,record,orig){var headerCt=this.view.headerCt,colspan=headerCt.getColumnCount();return{rowBody:"",rowBodyCls:this.rowBodyCls,rowBodyColspan:colspan};}},function(){this.prototype.rowBodySelector='tr.'+this.prototype.rowBodyTrCls});Ext.define('Ext.grid.feature.RowWrap',{extend:'Ext.grid.feature.Feature',alias:'feature.rowwrap',hasFeatureEvent:false,init:function(){if(!this.disabled){this.enable();}},getRowSelector:function(){return'tr:has(> '+this.view.cellSelector+')';},enable:function(){var me=this,view=me.view;me.callParent();me.savedRowSelector=view.rowSelector;view.rowSelector=me.getRowSelector();view.getComponentLayout().getColumnSelector=me.getColumnSelector;},disable:function(){var me=this,view=me.view,saved=me.savedRowSelector;me.callParent();if(saved){view.rowSelector=saved;}
delete me.savedRowSelector;},mutateMetaRowTpl:function(metaRowTpl){var prefix=Ext.baseCSSPrefix;metaRowTpl[0]=metaRowTpl[0].replace(prefix+'grid-row','');metaRowTpl[0]=metaRowTpl[0].replace("{[this.embedRowCls()]}","");metaRowTpl.unshift('<table class="'+prefix+'grid-table '+prefix+'grid-table-resizer" style="width: {[this.embedFullWidth()]}px;">');metaRowTpl.unshift('<tr class="'+prefix+'grid-row {[this.embedRowCls()]}"><td colspan="{[this.embedColSpan()]}"><div class="'+prefix+'grid-rowwrap-div">');metaRowTpl.push('</table>');metaRowTpl.push('</div></td></tr>');},embedColSpan:function(){return'{colspan}';},embedFullWidth:function(){return'{fullWidth}';},getAdditionalData:function(data,idx,record,orig){var headerCt=this.view.headerCt,colspan=headerCt.getColumnCount(),fullWidth=headerCt.getFullWidth(),items=headerCt.query('gridcolumn'),itemsLn=items.length,i=0,o={colspan:colspan,fullWidth:fullWidth},id,tdClsKey,colResizerCls;for(;i<itemsLn;i++){id=items[i].id;tdClsKey=id+'-tdCls';colResizerCls=Ext.baseCSSPrefix+'grid-col-resizer-'+id;o[tdClsKey]=colResizerCls+" "+(orig[tdClsKey]?orig[tdClsKey]:'');o[id+'-tdAttr']=" style=\"width: "+(items[i].hidden?0:items[i].getDesiredWidth())+"px;\" ";if(orig[id+'-tdAttr']){o[id+'-tdAttr']+=orig[id+'-tdAttr'];}}
return o;},getMetaRowTplFragments:function(){return{embedFullWidth:this.embedFullWidth,embedColSpan:this.embedColSpan};},getColumnSelector:function(header){var s=Ext.baseCSSPrefix+'grid-col-resizer-'+header.id;return'th.'+s+',td.'+s;}});Ext.define('Ext.grid.plugin.Editing',{alias:'editing.editing',extend:'Ext.AbstractPlugin',requires:['Ext.grid.column.Column','Ext.util.KeyNav'],mixins:{observable:'Ext.util.Observable'},clicksToEdit:2,triggerEvent:undefined,defaultFieldXType:'textfield',editStyle:'',constructor:function(config){var me=this;me.addEvents('beforeedit','edit','validateedit','canceledit');me.callParent(arguments);me.mixins.observable.constructor.call(me);me.on("edit",function(editor,e){me.fireEvent("afteredit",editor,e);});},init:function(grid){var me=this;me.grid=grid;me.view=grid.view;me.initEvents();me.mon(grid,'reconfigure',me.onReconfigure,me);me.onReconfigure();grid.relayEvents(me,['beforeedit','edit','validateedit','canceledit']);grid.isEditable=true;grid.editingPlugin=grid.view.editingPlugin=me;},onReconfigure:function(){this.initFieldAccessors(this.view.getGridColumns());},destroy:function(){var me=this,grid=me.grid;Ext.destroy(me.keyNav);me.removeFieldAccessors(grid.getView().getGridColumns());me.clearListeners();delete me.grid.editingPlugin;delete me.grid.view.editingPlugin;delete me.grid;delete me.view;delete me.editor;delete me.keyNav;},getEditStyle:function(){return this.editStyle;},initFieldAccessors:function(columns){columns=[].concat(columns);var me=this,c,cLen=columns.length,column;for(c=0;c<cLen;c++){column=columns[c];Ext.applyIf(column,{getEditor:function(record,defaultField){return me.getColumnField(this,defaultField);},setEditor:function(field){me.setColumnField(this,field);}});}},removeFieldAccessors:function(columns){columns=[].concat(columns);var c,cLen=columns.length,column;for(c=0;c<cLen;c++){column=columns[c];delete column.getEditor;delete column.setEditor;}},getColumnField:function(columnHeader,defaultField){var field=columnHeader.field;if(!field&&columnHeader.editor){field=columnHeader.editor;delete columnHeader.editor;}
if(!field&&defaultField){field=defaultField;}
if(field){if(Ext.isString(field)){field={xtype:field};}
if(!field.isFormField){field=Ext.ComponentManager.create(field,this.defaultFieldXType);}
columnHeader.field=field;Ext.apply(field,{name:columnHeader.dataIndex});return field;}},setColumnField:function(column,field){if(Ext.isObject(field)&&!field.isFormField){field=Ext.ComponentManager.create(field,this.defaultFieldXType);}
column.field=field;},initEvents:function(){var me=this;me.initEditTriggers();me.initCancelTriggers();},initCancelTriggers:Ext.emptyFn,initEditTriggers:function(){var me=this,view=me.view;if(me.triggerEvent=='cellfocus'){me.mon(view,'cellfocus',me.onCellFocus,me);}else if(me.triggerEvent=='rowfocus'){me.mon(view,'rowfocus',me.onRowFocus,me);}else{if(view.selModel.isCellModel){view.onCellFocus=Ext.Function.bind(me.beforeViewCellFocus,me);}
me.mon(view,me.triggerEvent||('cell'+(me.clicksToEdit===1?'click':'dblclick')),me.onCellClick,me);}
me.initAddRemoveHeaderEvents()
view.on('render',me.initKeyNavHeaderEvents,me,{single:true});},beforeViewCellFocus:function(position){if(this.view.selModel.keyNavigation||!this.editing||!this.isCellEditable||!this.isCellEditable(position.row,position.columnHeader)){this.view.focusCell.apply(this.view,arguments);}},onRowFocus:function(record,row,rowIdx){this.startEdit(row,0);},onCellFocus:function(record,cell,position){this.startEdit(position.row,position.column);},onCellClick:function(view,cell,colIdx,record,row,rowIdx,e){if(!view.expanderSelector||!e.getTarget(view.expanderSelector)){this.startEdit(record,view.getHeaderAtIndex(colIdx));}},initAddRemoveHeaderEvents:function(){var me=this;me.mon(me.grid.headerCt,{scope:me,add:me.onColumnAdd,remove:me.onColumnRemove});},initKeyNavHeaderEvents:function(){var me=this;me.keyNav=Ext.create('Ext.util.KeyNav',me.view.el,{enter:me.onEnterKey,esc:me.onEscKey,scope:me});},onColumnAdd:function(ct,column){if(column.isHeader){this.initFieldAccessors(column);}},onColumnRemove:function(ct,column){if(column.isHeader){this.removeFieldAccessors(column);}},onEnterKey:function(e){var me=this,grid=me.grid,selModel=grid.getSelectionModel(),record,pos,columnHeader=grid.headerCt.getHeaderAtIndex(0);if(selModel.getCurrentPosition){pos=selModel.getCurrentPosition();if(pos){record=grid.getView().getStore().getAt(pos.row);columnHeader=grid.headerCt.getHeaderAtIndex(pos.column);}}
else{record=selModel.getLastSelected();}
if(record&&columnHeader){me.startEdit(record,columnHeader);}},onEscKey:function(e){return this.cancelEdit();},beforeEdit:Ext.emptyFn,startEdit:function(record,columnHeader){var me=this,context=me.getEditingContext(record,columnHeader);if(context==null||me.beforeEdit(context)===false||me.fireEvent('beforeedit',me,context)===false||context.cancel||!me.grid.view.isVisible(true)){return false;}
me.context=context;me.editing=true;},getEditingContext:function(record,columnHeader){var me=this,grid=me.grid,view=grid.getView(),node=view.getNode(record),rowIdx,colIdx;if(!node){return;}
columnHeader=grid.headerCt.getVisibleHeaderClosestToIndex(Ext.isNumber(columnHeader)?columnHeader:columnHeader.getIndex());if(!columnHeader){return;}
colIdx=columnHeader.getIndex();if(Ext.isNumber(record)){rowIdx=record;record=view.getRecord(node);}else{rowIdx=view.indexOf(node);}
if(!record){return;}
return{grid:grid,record:record,field:columnHeader.dataIndex,value:record.get(columnHeader.dataIndex),row:view.getNode(rowIdx),column:columnHeader,rowIdx:rowIdx,colIdx:colIdx};},cancelEdit:function(){var me=this;me.editing=false;me.fireEvent('canceledit',me,me.context);},completeEdit:function(){var me=this;if(me.editing&&me.validateEdit()){me.fireEvent('edit',me,me.context);}
delete me.context;me.editing=false;},validateEdit:function(){var me=this,context=me.context;return me.fireEvent('validateedit',me,context)!==false&&!context.cancel;}});Ext.define('Ext.layout.component.Tab',{extend:'Ext.layout.component.Button',alias:'layout.tab',beginLayout:function(ownerContext){var me=this,closable=me.owner.closable;if(me.lastClosable!==closable){me.lastClosable=closable;me.clearTargetCache();}
me.callParent(arguments);}});Ext.define('Ext.layout.container.Editor',{alias:'layout.editor',extend:'Ext.layout.container.Container',autoSizeDefault:{width:'field',height:'field'},getItemSizePolicy:function(item){var me=this,autoSize=me.owner.autoSize;return me.sizePolicy||(me.sizePolicy={setsWidth:autoSize&&autoSize.width==='boundEl'?1:0,setsHeight:autoSize&&autoSize.height==='boundEl'?1:0});},calculate:function(ownerContext){var me=this,owner=me.owner,autoSize=owner.autoSize,fieldWidth,fieldHeight;if(autoSize===true){autoSize=me.autoSizeDefault;}
if(autoSize){fieldWidth=me.getDimension(owner,autoSize.width,'getWidth',owner.width);fieldHeight=me.getDimension(owner,autoSize.height,'getHeight',owner.height);}
ownerContext.childItems[0].setSize(fieldWidth,fieldHeight);ownerContext.setWidth(fieldWidth);ownerContext.setHeight(fieldHeight);ownerContext.setContentSize(fieldWidth||owner.field.getWidth(),fieldHeight||owner.field.getHeight());},getDimension:function(owner,type,getMethod,ownerSize){switch(type){case'boundEl':return owner.boundEl[getMethod]();case'field':return undefined;default:return ownerSize;}}});Ext.define('PumaMain.controller.Layers',{extend:'Ext.app.Controller',views:[],requires:['PumaMain.view.LayerMenu','Puma.util.Color'],init:function(){this.control({'#layerpanel':{itemclick:this.onLayerClick,checkchange:this.onCheckChange,},'#layerpanel tool[type=gear]':{click:this.onConfigure},'layerpanel':{choroplethreconfigure:this.onChoroplethReconfigureBtnClick,choroplethremove:this.onChoroplethRemove,checkchange:this.onCheckChange,layerup:this.onLayerUp,layerdown:this.onLayerDown,layerremove:this.onLayerRemove,layeropacity:this.openOpacityWindow,layerlegend:this.onLayerLegend,showmetadata:this.onShowMetadata},'slider[itemId=opacity]':{change:this.onOpacityChange},'#layerselectedpanel gridview':{drop:this.onLayerDrop,beforedrop:this.onBeforeLayerDrop},'choroplethpanel #numCategories':{change:this.onNumCategoriesChange},'choroplethpanel #classType':{change:this.onClassTypeChange},'choroplethpanel #useAttributeColors':{change:this.onUseAttrColorsChange},'choroplethpanel #fillbtn':{click:this.onFillColors},'choroplethpanel #addbtn':{click:this.onChoroplethAdd},'choroplethpanel #reconfigurebtn':{click:this.onChoroplethReconfigure},})
this.scaleBorderCnst=100000000;this.scaleBorder=100000000;},onConfigure:function(){this.getController('AttributeConfig').onConfigureClick({itemId:'configurelayers'});},onLayerLegend:function(panel,rec,checked){if(checked&&!rec.get('legend')){var img=Ext.widget('image',{src:rec.get('src'),margin:'5 0 0 0'})
var window=Ext.widget('window',{autoScroll:true,collapsible:true,collapseLeft:true,minWidth:260,leftMargin:1,titleCollapse:true,islegend:1,items:[img],factor:Ext.ComponentQuery.query('window[islegend=1]').length,title:rec.get('name')})
img.on('resize',function(i){i.el.on('load',function(a,dom){this.show();this.setSize(dom.clientWidth+32,dom.clientHeight+52);var leftPanel=Ext.ComponentQuery.query('toolspanel')[0];var heightDiff=Ext.get('app-map').getBox().bottom-Ext.get('sidebar-tools').getBox().bottom;this.showBy(leftPanel,'bl-br',[50*this.factor+21,-50*this.factor+heightDiff]);this.el.setOpacity(0.85)},this)},window,{single:true})
window.showAt(1,1);window.hide();window.rec=rec;window.on('close',function(win){win.rec.set('legend',null);})
rec.set('legend',window);}
if(!checked&&rec.get('legend')){rec.get('legend').destroy();rec.set('legend',null);}},reconfigureChoropleths:function(cfg,visualization){this.getController('AttributeConfig').layerConfig=cfg.attrs;var root=Ext.StoreMgr.lookup('layers').getRootNode();var chartNodes=[];root.cascadeBy(function(node){if(node.get('type')=='chartlayer'){chartNodes.push(node);}})
var nodesToRemove=[];var attrs=Ext.clone(cfg.attrs);var attrs2=Ext.Array.clone(attrs);var attrStore=Ext.StoreMgr.lookup('attribute');var checkedAttrs=[];for(var i=0;i<chartNodes.length;i++){var node=chartNodes[i];var attr=node.get('attribute');var as=node.get('attributeSet');var cfgAttr=node.get('cfg').attrs[0];var normType=cfgAttr.normType
var normAs=cfgAttr.normAs
var normAttr=cfgAttr.normAttr
var attrObj=null;var found=false;for(var j=0;j<attrs2.length;j++){attrObj=attrs2[j];if(attrObj.as==as&&attrObj.attr==attr&&attrObj.normType==normType&&attrObj.normAs==normAs&&attrObj.normAttr==normAttr){found=true;break;}}
if(!found){nodesToRemove.push(node)}
else{if(node.get('checked')){checkedAttrs.push(attr);}
Ext.Array.remove(attrs,attrObj);node.initialized=false;var oneCfg={attrs:[attrObj]};oneCfg.numCategories=attrObj.numCategories||5;oneCfg.classType=attrObj.classType||'quantiles';oneCfg.zeroesAsNull=attrObj.zeroesAsNull!==false;oneCfg.useAttributeColors=true;var params=this.getController('Chart').getParams(oneCfg);params.dotChart=node.get('dotChart');node.set('params',params);node.set('cfg',oneCfg);if(attrObj.name){node.set('name',attrObj.name)}
this.initChartLayer(node);}}
for(var i=0;i<nodesToRemove.length;i++){var node=nodesToRemove[i];this.onChoroplethRemove(null,node);}
var autoActivated=false;var visAttr=visualization?visualization.get('choroAttr'):null;if(this.getController('LocationTheme').initialized){Ext.suspendLayouts();}
var treeView=Ext.ComponentQuery.query('layerpanel')[0].view;if(treeView){treeView.dontRefreshSize=true;}
var selAttr=Ext.ComponentQuery.query('#selindicator')[0].getValue();for(var i=0;i<attrs.length;i++){var attr=attrs[i];var oneCfg=Ext.clone(cfg);var attrRec=attrStore.getById(attr.attr);oneCfg.attrs=[attr];oneCfg.numCategories=attr.numCategories||5;oneCfg.classType=attr.classType||'quantiles';oneCfg.zeroesAsNull=attr.zeroesAsNull||true;oneCfg.useAttributeColors=true;oneCfg.visDotChart=attrRec.get('layerMode')=='circle';var autoActivate=selAttr==attr.attr;this.addChoropleth(oneCfg,autoActivate);}
if(this.getController('LocationTheme').initialized){Ext.resumeLayouts(true);}
if(treeView){treeView.dontRefreshSize=false;treeView.refreshSize();}},onFillColors:function(btn){var store=btn.up('grid').store;var count=store.getCount();if(count<3)
return;try{var first=store.getAt(0).get('color');var last=store.getAt(count-1).get('color');}
catch(e){return;}
for(var i=1;i<count-1;i++){var ratio=i/(count-1);var rec=store.getAt(i);var color=Puma.util.Color.determineColorFromRange(first,last,ratio);rec.set('color',color);}},onClassTypeChange:function(combo,val){var grid=Ext.ComponentQuery.query('choroplethpanel #classgrid')[0];grid.columns[2].setVisible(val=='range');},onUseAttrColorsChange:function(chb,val){var grid=Ext.ComponentQuery.query('choroplethpanel #classgrid')[0]
grid.columns[1].setVisible(val?false:true)},onNumCategoriesChange:function(combo,val){var store=Ext.ComponentQuery.query('choroplethpanel #classgrid')[0].store;var count=store.getCount();if(val>count){var data=[];for(var i=count;i<val;i++){data.push({idx:i+1})}
store.loadData(data,true);}
if(val<count){store.removeAt(val,count-val);}},onShowMetadata:function(panel,rec){var layer1=rec.get('layer1');var layer2=rec.get('layer2');var layers=layer1.params.LAYERS.split(',');if(layer2&&layer2.params.LAYERS){layers=Ext.Array.merge(layers,layer2.params.LAYERS.split(','))}
Puma.util.Msg.msg('Search for metadata has started. Please wait.','','l');Ext.Ajax.request({url:Config.url+'/api/layers/getMetadata',rec:rec,params:{layers:JSON.stringify(layers)},scope:this,success:function(response){var name=response.request.options.rec.get('name');response=JSON.parse(response.responseText).data;var html='';var locStore=Ext.StoreMgr.lookup('location4init');var searchTitle=null;if(locStore.collect('location').length<2&&locStore.getCount()>2){var locObj=this.getController('Area').getLocationObj();if(locObj.obj){searchTitle=locObj.obj.get('name');}}
for(var i=0;i<response.length;i++){var r=response[i];if(searchTitle&&r.title.toLowerCase().search(searchTitle.toLowerCase())<0){continue;}
html+='<div class="metadata">';html+='<p class="title">Title</p>';html+='<p>'+r.title+'</p>';html+='<p class="title">Abstract</p>';html+='<p>'+r.abstract+'</p>';html+='<p class="title">Temporal extent</p>';html+='<p>'+r.temporal+'</p>';html+='<p class="title">Keywords</p>';html+='<p>'+r.keywords+'</p>';html+='<p class="title">Producer</p>';if(r.producer!=r.contact){html+='<p>'+r.producer+'<br/>';}
html+=r.contact+'<br/>';html+='<a target="_top" href="mailto:'+r.mail+'">'+r.mail+'</a></p>'
html+='<p>For more details see <a target="_blank" href="'+r.address+'">Complete Metadata</a></p>';html+='</div>';}
Ext.widget('window',{height:600,title:name,width:500,autoScroll:true,html:html}).show();}})},onBeforeLayerDrop:function(row,obj,dropPos){var type=obj.records[0].get('type');if(!Ext.Array.contains(['topiclayer','chartlayer','areaoutlines','selectedareas','selectedareasfilled'],type)){return false;}
else if(!Ext.Array.contains(['topiclayer','chartlayer','areaoutlines','selectedareas','selectedareasfilled'],dropPos.get('type'))){return false;}},onLayerRemove:function(panel,rec){rec.set('checked',false);this.onCheckChange(rec,false);},onLayerDown:function(panel,rec){this.resetIndexes();var store=Ext.StoreMgr.lookup('selectedlayers');var idx=store.indexOf(rec);var nextRec=store.getAt(idx+1);if(!nextRec||nextRec.get('sortIndex')>=1000){return;}
rec.set('sortIndex',rec.get('sortIndex')+1);nextRec.set('sortIndex',nextRec.get('sortIndex')-1);store.sort();this.onLayerDrop();},onLayerUp:function(panel,rec){this.resetIndexes();var store=Ext.StoreMgr.lookup('selectedlayers');var idx=store.indexOf(rec);var prevRec=store.getAt(idx-1);if(!prevRec){return;}
rec.set('sortIndex',rec.get('sortIndex')-1);prevRec.set('sortIndex',prevRec.get('sortIndex')+1);store.sort();this.onLayerDrop();},resetIndexes:function(){var store=Ext.StoreMgr.lookup('selectedlayers')
store.suspendEvents();var layers=store.getRange();for(var i=0;i<layers.length;i++){var layer=layers[i];var type=layer.get('type');if(type!='topiclayer'&&type!='chartlayer'&&type!='selectedareas'&&type!='selectedareasfilled'&&type!='areaoutlines'){continue;}
layer.set('sortIndex',i);}
store.resumeEvents();store.sort();},onLayerDrop:function(){var store=Ext.StoreMgr.lookup('selectedlayers');var layers=store.getRange();var map1=Ext.ComponentQuery.query('#map')[0].map;var map2=Ext.ComponentQuery.query('#map2')[0].map;layers.reverse();var layers1=[];var layers2=[];var newDistantLayers=[];for(var i=0;i<layers.length;i++){newDistantLayers[i]=[];if(layers[i].get('layer1')){layers1.push(layers[i].get('layer1'))}
if(layers[i].get('layer2')){layers2.push(layers[i].get('layer2'))}
var distantLayers=layers[i].get('distantLayers');for(var j=0;j<distantLayers.length;j++){var distantLayer=distantLayers[j];newDistantLayers[i].push(distantLayer)}}
for(var i=0;i<layers.length;i++){if(map1&&layers1[i]){if(i==0){map1.setBaseLayer(layers1[i]);}
map1.setLayerIndex(layers1[i],i);}
if(map2&&layers2[i]){if(i==0){map2.setBaseLayer(layers2[i]);}
map2.setLayerIndex(layers2[i],i);}
var distantLayers=newDistantLayers[i];for(var j=0;j<distantLayers.length;j++){var distantLayer=distantLayers[j];var map=distantLayer.map;if(i==0){map.setBaseLayer(distantLayer);}
map.setLayerIndex(distantLayer,i);}}},onOpacityChange:function(slider,value){slider.layer1.setOpacity(value/100);if(slider.layer2){slider.layer2.setOpacity(value/100);}
for(var i=0;i<slider.distantLayers.length;i++){slider.distantLayers[i].setOpacity(value/100);}},openOpacityWindow:function(panel,rec){var layer1=rec.get('layer1');var layer2=rec.get('layer2');var distantLayers=rec.get('distantLayers')||[];var window=Ext.widget('window',{layout:'fit',title:rec.get('name'),items:[{xtype:'slider',itemId:'opacity',layer1:layer1,layer2:layer2,distantLayers:distantLayers,width:200,value:layer1.opacity*100}]})
window.show();},onLayerContextMenu:function(tree,rec,item,index,e){return;var bindChart=rec.get('bindChart');if(!bindChart||rec.get('type')!='chart'){return;}
e.stopEvent();var layerMenu=Ext.widget('layermenu',{bindChart:bindChart})
layerMenu.showAt(e.getXY());},onContextMenu:function(tree,rec,item,index,e){return;e.stopEvent();var layerMenu=Ext.widget('layermenu',{layer1:rec.get('layer1'),layer2:rec.get('layer2'),layerName:rec.get('name')})
layerMenu.showAt(e.getXY());},colourMap:function(selectMap,map1NoChange,map2NoChange){var store=Ext.StoreMgr.lookup('layers');var node=store.getRootNode().findChild('type','selectedareas',true);var filledNode=store.getRootNode().findChild('type','selectedareasfilled',true);if(!node)
return;var layer1=node.get('layer1');var layer2=node.get('layer2');var filledLayer1=filledNode.get('layer1');var filledLayer2=filledNode.get('layer2');var years=Ext.ComponentQuery.query('#selyear')[0].getValue()
var areaTemplates=this.getController('Area').areaTemplateMap;var namedLayers1=[];var namedLayers2=[];var namedLayersFilled1=[];var namedLayersFilled2=[];selectMap=selectMap||{};var noSelect=true;for(var loc in selectMap){for(var at in selectMap[loc]){noSelect=false;for(var i=0;i<Math.max(2,years.length);i++){if(i==0&&map1NoChange)
continue;if(i==1&&map2NoChange)
continue;var lr=(areaTemplates[loc]&&areaTemplates[loc][at])?areaTemplates[loc][at][years[i]]:null;if(!lr&&at!=-1)
continue;var style=new OpenLayers.Style();var filledStyle=new OpenLayers.Style();var layerId=lr._id;var layerName='puma:layer_'+layerId
var defRule=new OpenLayers.Rule({symbolizer:{"Polygon":new OpenLayers.Symbolizer.Polygon({fillOpacity:0,strokeOpacity:0})}});style.addRules([defRule]);filledStyle.addRules([defRule]);var recode=['${gid}'];var filters=[];for(var gid in selectMap[loc][at]){var filter=new OpenLayers.Filter.Comparison({type:'==',property:'gid',value:gid});filters.push(filter);var color='#'+selectMap[loc][at][gid];recode.push(gid);recode.push(color);}
var recodeFc=new OpenLayers.Filter.Function({name:'Recode',params:recode});var filterFc=new OpenLayers.Filter.Logical({type:'||',filters:filters});var obj={filter:filterFc,maxScaleDenominator:this.scaleBorder,symbolizer:{"Polygon":new OpenLayers.Symbolizer.Polygon({strokeColor:recodeFc,strokeWidth:1,fillOpacity:0}),"Text":new OpenLayers.Symbolizer.Text({label:'${name}',fontFamily:'DejaVu Sans Condensed Bold',fontSize:12,fontWeight:'bold',labelAnchorPointX:0.5,labelAnchorPointY:0.5})}}
var objFilled={filter:filterFc,maxScaleDenominator:this.scaleBorder,symbolizer:{"Polygon":new OpenLayers.Symbolizer.Polygon({fillColor:recodeFc,strokeWidth:1,fillOpacity:1}),"Text":new OpenLayers.Symbolizer.Text({label:'${name}',fontFamily:'DejaVu Sans Condensed Bold',fontSize:12,fontWeight:'bold',labelAnchorPointX:0.5,labelAnchorPointY:0.5})}}
var rule2=new OpenLayers.Rule({filter:filterFc,minScaleDenominator:this.scaleBorder,symbolizer:{"Point":new OpenLayers.Symbolizer.Point({geometry:{property:'centroid'},strokeColor:recodeFc,strokeWidth:3,graphicName:'circle',pointRadius:8,fillOpacity:0})}});var rule2Filled=new OpenLayers.Rule({filter:filterFc,minScaleDenominator:this.scaleBorder,symbolizer:{"Point":new OpenLayers.Symbolizer.Point({geometry:{property:'centroid'},strokeWidth:1,strokeOpacity:1,strokeColor:'#000000',graphicName:'circle',pointRadius:8,fillColor:recodeFc,fillOpacity:1})}});var rule=new OpenLayers.Rule(obj);style.addRules([rule,rule2]);var ruleFilled=new OpenLayers.Rule(objFilled);filledStyle.addRules([ruleFilled,rule2Filled]);var namedLayers=i==0?namedLayers1:namedLayers2;var namedLayersFilled=i==0?namedLayersFilled1:namedLayersFilled2;namedLayers.push({name:layerName,userStyles:[style]})
namedLayersFilled.push({name:layerName,userStyles:[filledStyle]})}}}
if(noSelect){layer1.setVisibility(false);layer1.initialized=false;layer2.setVisibility(false);layer2.initialized=false;filledLayer1.setVisibility(false);filledLayer1.initialized=false;filledLayer2.setVisibility(false);filledLayer2.initialized=false;return;}
var namedLayersGroup=[namedLayers1,namedLayers2,namedLayersFilled1,namedLayersFilled2];for(var i=0;i<namedLayersGroup.length;i++){var namedLayer=namedLayersGroup[i];var isFilled=i>1;var layer=!isFilled?(i%2==0?layer1:layer2):(i%2==0?filledLayer1:filledLayer2);var noChange=i%2==0==0?map1NoChange:map2NoChange;if(!namedLayer.length){if(noChange){layer.setVisibility(false);layer.initialized=false;}
continue;}
var changedNode=isFilled?filledNode:node;this.saveSld(changedNode,namedLayer,layer);}},saveSld:function(node,namedLayers,layer,params,legendNamedLayers){var sldObject={name:'style',title:'Style',namedLayers:namedLayers}
var format=new OpenLayers.Format.SLD.Geoserver23();var xmlFormat=new OpenLayers.Format.XML();var sldNode=format.write(sldObject);var sldText=xmlFormat.write(sldNode);var legendSld=null;if(legendNamedLayers){var legendSldObject={name:'style',title:'Style',namedLayers:legendNamedLayers}
var legendSldNode=format.write(legendSldObject);legendSld=xmlFormat.write(legendSldNode);}
var me=this;Ext.Ajax.request({url:Config.url+'/api/proxy/saveSld',params:Ext.apply({sldBody:sldText,legendSld:legendSld||''},params||{}),layer:layer,node:node,legendLayer:legendNamedLayers&&legendNamedLayers.length?legendNamedLayers[0].name:null,success:function(response){var layer=response.request.options.layer;var node=response.request.options.node;var legendLayer=response.request.options.legendLayer;response=JSON.parse(response.responseText);var id=response.data;layer.mergeNewParams({"SLD_ID":id})
layer.initialized=true;node.initialized=true;if(legendLayer){node.set('src',me.getLegendUrl(id,legendLayer));var panel=Ext.ComponentQuery.query('layerpanel')[0];var legend=node.get('legend');if(!legend&&node.get('checked')&&node.needLegend){node.needLegend=null;panel.fireEvent('layerlegend',panel,node,true);}
if(legend){legend.down('image').el.set({src:node.get('src')});}}
if(node.get('layer1')==layer){var distantLayers=node.get('distantLayers')||[];for(var i=0;i<distantLayers.length;i++){var distantLayer=distantLayers[i];distantLayer.initialized=true;distantLayer.mergeNewParams({"SLD_ID":id})}}
if(node.get('checked')){me.onCheckChange(node,true)}},failure:function(response){var layer=response.request.options.layer;layer.initialized=false;layer.setVisibility(false);}})},refreshOutlines:function(){var store=Ext.StoreMgr.lookup('layers');var node=store.getRootNode().findChild('type','areaoutlines',true);if(!node)
return;var layer1=node.get('layer1');var layer2=node.get('layer2');var years=Ext.ComponentQuery.query('#selyear')[0].getValue();for(var i=0;i<Math.max(2,years.length);i++){var year=years[i];var filterMap=this.getTreeFilters(year);var namedLayers=[];for(var layerName in filterMap){var style=new OpenLayers.Style();var obj={filter:filterMap[layerName],maxScaleDenominator:this.scaleBorder,symbolizer:{"Polygon":new OpenLayers.Symbolizer.Polygon({strokeColor:'#333333',strokeWidth:1,fillOpacity:0.1})}}
var rule1=new OpenLayers.Rule(obj);var rule2=new OpenLayers.Rule({filter:filterMap[layerName],minScaleDenominator:this.scaleBorder,symbolizer:{"Point":new OpenLayers.Symbolizer.Point({geometry:{property:'centroid'},strokeWidth:2,strokeOpacity:1,graphicName:'circle',pointRadius:6,strokeColor:'#000000',fillColor:'#000000'})}});style.addRules([rule1,rule2]);namedLayers.push({name:layerName,userStyles:[style]})}
if(!namedLayers.length){continue;}
var layer=i==0?layer1:layer2;this.saveSld(node,namedLayers,layer);}},getTreeFilters:function(year){var allAreas=this.getController('Area').lowestMap;var areaTemplates=this.getController('Area').areaTemplateMap;var lowestAt=this.getController('Area').lastAt;var filterMap={};var filterActive=this.getController('Area').filterActive&&Ext.ComponentQuery.query('#codefilters button[pressed=true]').length;for(var loc in allAreas){for(var at in allAreas[loc]){var lr=(areaTemplates[loc]&&areaTemplates[loc][at])?areaTemplates[loc][at][year]:null;if(!lr||!allAreas[loc][at].length||at!=lowestAt)
continue;var layerName='puma:layer_'+lr._id
var filters=[];for(var i=0;i<allAreas[loc][at].length;i++){var gid=allAreas[loc][at][i];var filter=new OpenLayers.Filter.Comparison({type:'==',property:'gid',value:gid});filters.push(filter);}
if(filters.length==0)
continue;var filterFc=filters.length>1?new OpenLayers.Filter.Logical({type:'||',filters:filters}):filters[0];if(filterActive){filterMap[layerName]=filterFc;}
else{filterMap[layerName]=null;}}}
return filterMap;},getSymObj:function(params){var symbolizer=null;if(true){symbolizer={};var normalization=params['normalization'];var classConfig=params['classConfig']?JSON.parse(params['classConfig']):[];var colors=[];var thresholds=[];for(var i=0;i<classConfig.length;i++){colors.push(classConfig[i].color)
thresholds.push(classConfig[i].threshold)}
var colorRange=null;var attrs=JSON.parse(params['attrs']);if(params['useAttributeColors']){var attrStore=Ext.StoreMgr.lookup('attribute');var attrId=attrs[0].attr;var baseColor=attrStore.getById(attrId).get('color');colorRange=Puma.util.Color.determineColorRange(baseColor);}
normalization=attrs[0].normType||normalization;var normAttrSet=attrs[0].normAs||params['normalizationAttributeSet'];var normAttribute=attrs[0].normAttr||params['normalizationAttribute'];var factor=1;var attrUnits=Ext.StoreMgr.lookup('attribute').getById(attrs[0].attr).get('units')
var normAttrUnits=null;if(normalization=='attribute'||normalization=='attributeset'){normAttrUnits=Ext.StoreMgr.lookup('attribute').getById(normAttribute).get('units')}
if(normalization=='area'){normAttrUnits='m2'}
if(normalization=='select'||normalization=='year'){normAttrUnits=attrUnits;}
if(attrUnits&&attrUnits=='m2'){factor/=1000000;}
if(normAttrUnits&&normAttrUnits=='m2'){factor*=1000000;}
if((normAttrUnits=='m2'||normAttrUnits=='km2')&&(attrUnits=='m2'||attrUnits=='km2')){factor*=100;}
else if(attrUnits&&attrUnits==normAttrUnits){factor*=100;}
var props='';var filtersNull=[];var filtersNotNull=[];if(normalization&&normalization!='none'&&normalization!='year'){var normAttr=normalization=='area'?'area':'';normAttr=normalization=='attributeset'?('as_'+normAttrSet+'_attr_#attrid#'):normAttr;normAttr=normalization=='attribute'?('as_'+normAttrSet+'_attr_'+normAttribute):normAttr;normAttr=normalization=='toptree'?'#toptree#':normAttr;if(normalization!='toptree'){filtersNull.push(new OpenLayers.Filter.Comparison({type:'==',property:normAttr,value:0}))
filtersNotNull.push(new OpenLayers.Filter.Comparison({type:'!=',property:normAttr,value:0}))
normAttr='${'+normAttr+'}';}
props=new OpenLayers.Filter.Function({name:'Mul',params:[new OpenLayers.Filter.Function({name:'Div',params:['${#attr#}',normAttr]}),factor]});}
else{props=new OpenLayers.Filter.Function({name:'Mul',params:['${#attr#}',factor]});}
if(params['zeroesAsNull']){filtersNull.push(new OpenLayers.Filter.Comparison({type:'==',property:'#attr#',value:0}))
filtersNotNull.push(new OpenLayers.Filter.Comparison({type:'!=',property:'#attr#',value:0}))}
var nullFilter=new OpenLayers.Filter.Comparison({type:'NULL',property:'#attr#'})
filtersNotNull.push(new OpenLayers.Filter.Logical({type:'!',filters:[nullFilter]}))
filtersNull.push(nullFilter)
var fcParams=[props];var numCat=params['numCategories'];var legendRules=[new OpenLayers.Rule({name:'#units#',symbolizer:{'Polygon':new OpenLayers.Symbolizer.Polygon({strokeWidth:0,fillOpacity:0,strokeOpacity:0})}})];for(var i=0;i<numCat;i++){var ratio=i/(numCat-1);var legendName='';var color=colorRange?Puma.util.Color.determineColorFromRange(colorRange[0],colorRange[1],ratio):colors[i];if(params['classType']=='continuous'){fcParams.push('#minmax_'+(i+1)+'#');fcParams.push(color);legendName='#minmax_'+(i+1)+'#';}
else{fcParams.push(color);if(i<numCat-1){var val=params['classType']=='range'?thresholds[i]:('#val_'+(i+1)+'#');fcParams.push(val);}
if(i==0){legendName='< '+'#val_1#';}
else if(i==numCat-1){legendName='#val_'+i+'# >'}
else{legendName='#val_'+i+'#'+' - '+'#val_'+(i+1)+'#'}}
var legendRule=new OpenLayers.Rule({name:legendName,maxScaleDenominator:'#ms_'+(i+1)+'#',symbolizer:{'Polygon':new OpenLayers.Symbolizer.Polygon({fillColor:color,strokeColor:'#000000',strokeWidth:1})}})
legendRules.push(legendRule);if(i==0){var legendRule=new OpenLayers.Rule({name:'#val_1#',maxScaleDenominator:'#ms_999#',symbolizer:{'Polygon':new OpenLayers.Symbolizer.Polygon({fillColor:color,strokeColor:'#000000',strokeWidth:1})}})
legendRules.push(legendRule);}}
if(params['classType']=='continuous'){fcParams.push('color');}
var fcName=params['classType']=='continuous'?'Interpolate':'Categorize';var fillColor=new OpenLayers.Filter.Function({name:fcName,params:fcParams});symbolizer['Polygon']=new OpenLayers.Symbolizer.Polygon({fillColor:fillColor,strokeColor:'#000000',strokeWidth:1});if(params['dotChart']){delete symbolizer['Polygon'];legendRules=[legendRules[0]];legendRules.push(new OpenLayers.Rule({name:'Positive',symbolizer:{'Polygon':new OpenLayers.Symbolizer.Polygon({fillColor:'#ff0000',strokeColor:'#000000',strokeWidth:1})}}))
legendRules.push(new OpenLayers.Rule({name:'Negative',symbolizer:{'Polygon':new OpenLayers.Symbolizer.Polygon({fillColor:'#0000ff',strokeColor:'#000000',strokeWidth:1})}}))
var max=50;var min=5;var sizeRange=45;var valRange=new OpenLayers.Filter.Function({name:'Sub',params:['#maxval#',0]})
var valAbs=new OpenLayers.Filter.Function({name:'abs_3',params:['${#attr#}']})
var factor=new OpenLayers.Filter.Function({name:'Div',params:[valAbs,valRange]});var sizeAdd=new OpenLayers.Filter.Function({name:'Mul',params:[sizeRange,factor]});var size=new OpenLayers.Filter.Function({name:'Add',params:[min,sizeAdd]});var sizeSqrt=new OpenLayers.Filter.Function({name:'pow',params:[size,1]})
var sizeAbs=new OpenLayers.Filter.Function({name:'abs_3',params:[sizeSqrt]})
fillColor=new OpenLayers.Filter.Function({name:'Categorize',params:[fcParams[0],'#0000ff',0,'#ff0000']});symbolizer['Point']={geometry:{property:'centroid'},strokeWidth:1,strokeOpacity:1,graphicName:'circle',pointRadius:sizeAbs,strokeColor:'#222222',fillColor:fillColor,fillOpacity:1}}
else{legendRules.push(new OpenLayers.Rule({name:'No data',symbolizer:{'Polygon':new OpenLayers.Symbolizer.Polygon({fillColor:'#bbbbbb',strokeColor:'#000000',strokeWidth:1})}}))}
var rule1={filter:filtersNotNull.length>1?new OpenLayers.Filter.Logical({type:'&&',filters:filtersNotNull}):filtersNotNull[0],maxScaleDenominator:1000000000,symbolizer:symbolizer};var nullColor=params['nullColor']||'#bbbbbb';var nullSymbolizer={'Polygon':new OpenLayers.Symbolizer.Polygon({fillColor:nullColor,strokeColor:'#000000',strokeWidth:1})}
var rule3={filter:filtersNull.length>1?new OpenLayers.Filter.Logical({type:'||',filters:filtersNull}):filtersNull[0],symbolizer:nullSymbolizer};return{rules:[rule1,rule3],legend:legendRules};}
if(params['showMapChart']){symbolizer={};var max=new OpenLayers.Filter.Function({name:'env',params:['maxsize']})
var min=new OpenLayers.Filter.Function({name:'Div',params:[max,20]});var sizeRange=new OpenLayers.Filter.Function({name:'Sub',params:[max,min]});var valRange=new OpenLayers.Filter.Function({name:'Sub',params:['#maxval#','#minval#']})
var valFactor=new OpenLayers.Filter.Function({name:'Sub',params:['${#attr#}','#minval#']})
var factor=new OpenLayers.Filter.Function({name:'Div',params:[valFactor,valRange]});var sizeAdd=new OpenLayers.Filter.Function({name:'Mul',params:[sizeRange,factor]});var size=new OpenLayers.Filter.Function({name:'Add',params:[min,sizeAdd]});var sizeSqrt=new OpenLayers.Filter.Function({name:'pow',params:[size,0.5]})
var url=Config.url+'/api/chart/drawChart/#url#';symbolizer['Point']=new OpenLayers.Symbolizer.Point({externalGraphic:url,graphicFormat:'image/svg+xml',graphicWidth:sizeSqrt});var rule1={symbolizer:symbolizer};return[rule1];}},getWmsLayerDefaults:function(){var layerParams={singleTile:true,visibility:false,opacity:0.7,ratio:1.2,transitionEffect:'resize',removeBackBufferDelay:100}
var params={transparent:true,format:'image/png'}
return{layerParams:layerParams,params:params};},getChartNamedLayers:function(ruleObjs,year,forLegend){var treeFilterMap=this.getTreeFilters(year);var namedLayers=[];for(var layerName in treeFilterMap){var filter=treeFilterMap[layerName];var rules=[];for(var i=0;i<ruleObjs.length;i++){var ruleObj=ruleObjs[i];var newRuleObj={symbolizer:ruleObj.symbolizer}
if(ruleObj.filter){newRuleObj.filter=filter?new OpenLayers.Filter.Logical({type:'&&',filters:[filter,ruleObj.filter]}):ruleObj.filter}
else if(!forLegend&&filter){newRuleObj.filter=filter;}
if(ruleObj.minScaleDenominator){newRuleObj.minScaleDenominator=ruleObj.minScaleDenominator}
if(ruleObj.maxScaleDenominator){newRuleObj.maxScaleDenominator=ruleObj.maxScaleDenominator}
if(forLegend){newRuleObj.name=ruleObj.name;}
var rule=new OpenLayers.Rule(newRuleObj);rules.push(rule)}
var style=new OpenLayers.Style();style.addRules(rules);namedLayers.push({name:layerName,userStyles:[style]});if(forLegend){break;}}
return namedLayers;},onLayerClick:function(panel,rec){},addChoropleth:function(cfg,autoActivate,index){var layerStore=Ext.StoreMgr.lookup('layers');var choroplethNode=layerStore.getRootNode().findChild('type','choroplethgroup');var attr=cfg['attrs'][0];var attrObj=Ext.StoreMgr.lookup('attribute').getById(attr.attr);var attrSetObj=Ext.StoreMgr.lookup('attributeset').getById(attr.as);var layerDefaults=this.getWmsLayerDefaults();var mapController=this.getController('Map');var params=this.getController('Chart').getParams(cfg);var newParams=Ext.clone(params);newParams.dotChart=cfg.visDotChart==true;var layer1=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.clone(layerDefaults.params),Ext.clone(layerDefaults.layerParams));var layer2=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.clone(layerDefaults.params),Ext.clone(layerDefaults.layerParams));layer1.events.register('visibilitychanged',{layer:layer1,me:this},function(a,b,c){this.me.onLayerLegend(null,this.layer.nodeRec,this.layer.visibility);})
mapController.map1.addLayers([layer1]);mapController.map2.addLayers([layer2]);var autoActivateComplete=autoActivate;var nameExt='';var node=Ext.create('Puma.model.MapLayer',{name:(attr.name||(attrObj.get('name')))+nameExt,attribute:attr.attr,attributeSet:attr.as,type:'chartlayer',leaf:true,params:newParams,cfg:cfg,cls:'invisiblecomplete',dotChart:newParams.dotChart,sortIndex:1.5,layer1:layer1,layer2:layer2,checked:autoActivateComplete?true:false});layer1.nodeRec=node;layer2.nodeRec=node;var distantRegionsCmps=Ext.ComponentQuery.query('[type=distantregion]');var distantLayers=[];for(var k=0;k<distantRegionsCmps.length;k++){var distantMap=distantRegionsCmps[k].map;var layerDistant=new OpenLayers.Layer.WMS('WMS',Config.url+'/api/proxy/wms',Ext.clone(layerDefaults.params),Ext.clone(layerDefaults.layerParams));distantMap.addLayers([layerDistant]);layerDistant.nodeRec=node;distantLayers.push(layerDistant);}
node.set('distantLayers',distantLayers);if(index||index===0){choroplethNode.insertChild(index,node);}
else{choroplethNode.appendChild(node);}
Ext.StoreMgr.lookup('selectedlayers').loadData([node],true);if(autoActivateComplete){this.initChartLayer(node);}},onChoroplethAdd:function(btn){var form=btn.up('choroplethpanel');var cfg=form.getForm().getValues();this.addChoropleth(cfg,true);},onChoroplethRemove:function(panel,record){var mapController=this.getController('Map');record.get('layer1').setVisibility(false);record.get('layer2').setVisibility(false);mapController.map1.removeLayer(record.get('layer1'));mapController.map2.removeLayer(record.get('layer2'));var distantLayers=record.get('distantLayers')||[];for(var i=0;i<distantLayers.length;i++){var distantLayer=distantLayers[i];distantLayer.map.removeLayer(distantLayer);}
record.destroy();},reconfigureAll:function(){var layerStore=Ext.StoreMgr.lookup('layers');var choroplethNode=layerStore.getRootNode().findChild('type','choroplethgroup');for(var i=0;i<choroplethNode.childNodes.length;i++){var childNode=choroplethNode.childNodes[i];this.initChartLayer(childNode);}},onChoroplethReconfigure:function(btn){var form=btn.up('choroplethpanel');var cfg=form.getForm().getValues();var rec=form.chart;var params=this.getController('Chart').getParams(cfg);var attr=cfg['attrs'][0];var attrObj=Ext.StoreMgr.lookup('attribute').getById(attr.attr);rec.set('name',cfg['title']+' - '+attrObj.get('name'));rec.set('attributeSet',attr.as);rec.set('attribute',attr.attr);rec.set('cfg',cfg);rec.set('params',params);rec.commit();this.initChartLayer(rec);},onChoroplethReconfigureBtnClick:function(panel,rec){var cfg=this.getController('Chart').getChartWindowConfig(rec,true,'choroplethpanel');var window=Ext.widget('window',cfg);window.down('choroplethpanel').getForm().setValues(rec.get('cfg'));window.show();},loadVisualization:function(visId){var store=Ext.StoreMgr.lookup('visualization');var vis=store.getById(visId);if(!vis&&!Config.cfg){return;}
var attrs=Config.cfg?Config.cfg.choroplethCfg:vis.get('choroplethCfg');attrs=attrs||[];this.reconfigureChoropleths({attrs:attrs});},getLegendUrl:function(layersOrSldId,legendLayerName,symbologyId){var obj={"LAYERS":layersOrSldId,"REQUEST":'GetLegendGraphic',"FORMAT":'image/png',"SCALE":10000,"WIDTH":50};if(legendLayerName){obj['USE_SECOND']=true;obj['LAYER']=legendLayerName;delete obj['LAYERS'];obj['SLD_ID']=layersOrSldId;}
if(symbologyId){obj['STYLE']=symbologyId;}
var query=Ext.Object.toQueryString(obj);return Config.url+'/api/proxy/wms?'+query},initChartLayer:function(node){if(!node.get('checked')){return;}
var years=Ext.ComponentQuery.query('#selyear')[0].getValue();var params=node.get('params');params['areas']=JSON.stringify(this.getController('Area').lowestMap);params['showChoropleth']='true';var symObjs=this.getSymObj(node.get('params'));var ruleObjs=symObjs.rules;var legendRules=symObjs.legend;for(var i=0;i<Math.max(2,years.length);i++){var year=years[i];var namedLayers=this.getChartNamedLayers(ruleObjs,year);var layerIndex=i==0?'layer1':'layer2';var legendNamedLayers=this.getChartNamedLayers(legendRules,year,true);node.get('params')['years']=JSON.stringify([year]);if(i==0&&years.length>1){node.get('params')['altYears']=JSON.stringify([years[1]]);}
else if(i==1){node.get('params')['altYears']=JSON.stringify([years[1]]);node.get('params')['years']=JSON.stringify([years[0]]);}
else{delete node.get('params')['altYears'];}
if(!namedLayers||!namedLayers.length){node.get(layerIndex).setVisibility(false);var distantLayers=node.get('distantLayers')||[];for(var i=0;i<distantLayers.length;i++){var distantLayer=distantLayers[i];distantLayer.setVisibility(false);}
continue;}
var layer=i==0?node.get('layer1'):node.get('layer2');this.saveSld(node,namedLayers,layer,node.get('params'),legendNamedLayers);}},onCheckChange:function(node,checked){if(node.get('type')=='traffic'){var layer1=node.get('layer1');var layer2=node.get('layer2');if(layer1){layer1.setMap(checked?layer1.oldMapObj:null);}
if(layer2){layer2.setMap(checked?layer2.oldMapObj:null);}
return;}
if(!checked&&node.get('legend')){node.get('legend').destroy();}
var view=Ext.ComponentQuery.query('#layerpanel')[0].view
var multi=false;if(view.lastE&&view.lastE.ctrlKey){multi=true;}
view.lastE=null;Ext.StoreMgr.lookup('selectedlayers').filter();var layer1=node.get('layer1');var layer2=node.get('layer2');if(checked){node.set('sortIndex',node.get('sortIndex')-0.1);}
node.commit();var me=this;if(node.get('type')=='chartlayer'&&node.get('checked')&&!node.initialized){this.initChartLayer(node);return;}
var parentNode=node.parentNode;var parentType=parentNode.get('type')
var nodeType=node.get('type');if(Ext.Array.contains(['basegroup','choroplethgroup','thematicgroup','systemgroup'],parentType)&&checked&&!multi&&nodeType!='traffic'){if(nodeType=='areaoutlines'){parentNode={childNodes:[]}}
if(nodeType=='selectedareas'||nodeType=='selectedareasfilled'){var anotherNode=parentNode.findChild('type',nodeType=='selectedareas'?'selectedareasfilled':'selectedareas')
anotherNode.set('checked',false);me.onCheckChange(anotherNode,false);parentNode={childNodes:[]};}
if(parentType=='choroplethgroup'){}
for(var i=0;i<parentNode.childNodes.length;i++){var childNode=parentNode.childNodes[i];if(node!=childNode){childNode.set('checked',false);me.onCheckChange(childNode,false);}}}
if(layer1.initialized)
layer1.setVisibility(checked);if(layer2.initialized)
layer2.setVisibility(checked);var distantLayers=node.get('distantLayers')||[];for(var i=0;i<distantLayers.length;i++){var distantLayer=distantLayers[i];if(distantLayer.initialized)
distantLayer.setVisibility(checked);}
me.resetIndexes();me.onLayerDrop();},gatherVisibleLayers:function(){var store=Ext.StoreMgr.lookup('selectedlayers');var confs=[];store.each(function(rec){var conf={}
var type=rec.get('type');conf.type=type;if(type=='topiclayer'){conf.symbologyId=rec.get('symbologyId');conf.at=rec.get('at');}
if(type=='chartlayer'){conf.attr=rec.get('attribute');conf.as=rec.get('attributeSet');}
confs.push(conf)})
return confs;},checkVisibilityAndStyles:function(){var visId=Ext.ComponentQuery.query('#selvisualization')[0].getValue();var vis=Ext.StoreMgr.lookup('visualization').getById(visId);if(!vis&&!Config.cfg)return;var visibleLayers=Config.cfg?Config.cfg.layers:(vis.get('visibleLayers')||[]);var store=Ext.StoreMgr.lookup('layers');var root=store.getRootNode();var me=this;root.cascadeBy(function(node){var type=node.get('type');if(type!='topiclayer'&&type!='chartlayer'&&!Config.cfg)return;var layer1=node.get('layer1');var layer2=node.get('layer2');if(!layer1)return;var foundLayer=null;for(var i=0;i<visibleLayers.length;i++){var selLayer=visibleLayers[i];if(type=='topiclayer'&&selLayer.at==node.get('at')&&selLayer.symbologyId==node.get('symbologyId')){foundLayer=selLayer;break;}
if(type=='chartlayer'&&selLayer.attributeSet==node.get('attributeSet')&&selLayer.attribute==node.get('attribute')){foundLayer=selLayer;break;}
if(type!='chartlayer'&&type!='topiclayer'&&type==selLayer.type){foundLayer=selLayer;break;}}
if(foundLayer){if(Config.cfg){node.set('sortIndex',foundLayer.sortIndex);layer1.setOpacity(foundLayer.opacity);layer2.setOpacity(foundLayer.opacity);}
node.set('checked',true);me.onCheckChange(node,true,null,true);}
else{node.set('checked',false)
me.onCheckChange(node,false,null,true);}})
if(Config.cfg&&Config.cfg.trafficLayer){var node=root.findChild('type','livegroup').childNodes[0]
node.set('checked',true);me.onCheckChange(node,true,null,true);}
store=Ext.StoreMgr.lookup('selectedlayers')
store.sorters=new Ext.util.MixedCollection();store.sort('sortIndex','ASC');}});Ext.define('PumaMain.controller.Filter',{extend:'Ext.app.Controller',views:[],requires:['Puma.util.Msg'],init:function(){this.control({'#advancedfilters multislider':{changecomplete:this.applyFilters,change:this.onFilterChange,dragstart:this.onFilterDragStart,dragend:this.onFilterDragEnd},'#advancedfilters #instantfilter':{toggle:this.onInstantChange},'#advancedfilters #filterselect':{click:this.onSelectFilter},'#advancedfilters':{resize:this.afterAccordionLayout},'#advancedfilters #minValue':{afterrender:this.onAfterValueRender},'#advancedfilters #maxValue':{afterrender:this.onAfterValueRender},'#advancedfilters tool[type=poweron]':{click:this.changeActiveState},'#advancedfilters tool[type=refresh]':{click:this.onResetFilters},'#advancedfilters tool[type=gear]':{click:this.onConfigure},'toolspanel':{afterlayout:this.afterAccordionLayout}})},onAfterValueRender:function(obj){if(obj.cfgVal){obj.el.setHTML(obj.cfgVal);}},onResetFilters:function(btn){var me=this;var sliders=Ext.ComponentQuery.query('#advancedfilters multislider');for(var i=0;i<sliders.length;i++){var slider=sliders[i];slider.setValue([slider.minValue,slider.maxValue]);setTimeout(function(sl){me.onFilterChange(sl,sl.minValue,sl.thumbs[0]);me.onFilterChange(sl,sl.maxValue,sl.thumbs[1]);},500,slider)}},onConfigure:function(){this.getController('AttributeConfig').onConfigureClick({itemId:'configurefilters'});},afterAccordionLayout:function(slider){var sliders=Ext.ComponentQuery.query('#advancedfilters multislider');if(slider&&slider.xtype=='multislider'){sliders=[slider];}
for(var i=0;i<sliders.length;i++){var slider=sliders[i];var value=slider.getValue();this.onFilterChange(slider,value[0],slider.thumbs[0]);this.onFilterChange(slider,value[1],slider.thumbs[1]);}},onFilterChange:function(slider,value,thumb){var isFirst=slider.thumbs[0]==thumb
var id=isFirst?'thumb1':'thumb2';var label=slider.up('container').down('#'+id);var labelEl=label.el;if(!labelEl)return;labelEl.setHTML(value);var offset=0;labelEl.alignTo(thumb.el,"b-t",[0,0]);if(isFirst&&labelEl.dom.offsetLeft<2){offset=2-labelEl.dom.offsetLeft}
else if(labelEl.dom.offsetParent&&labelEl.dom.offsetLeft+labelEl.dom.offsetWidth>labelEl.dom.offsetParent.offsetWidth-2){offset=-(labelEl.dom.offsetLeft+labelEl.dom.offsetWidth-labelEl.dom.offsetParent.offsetWidth+2);}
if(offset){labelEl.alignTo(thumb.el,"b-t",[offset,0]);}
if(slider.chartEl){slider.chartEl.alignTo(slider.el,"b-t",[0,-20]);var points=slider.chart.series[0].data;var value=slider.getValue();var diff=slider.maxValue-slider.minValue;var inc=diff/points.length;var sum=0;var approx=0;for(var i=0;i<points.length;i++){var point=points[i];var hypoMin=slider.minValue+i*inc;var hypoMax=slider.minValue+i*inc+inc;var toSelect=(hypoMax>value[0]&&hypoMin<value[1]);sum+=point.y;if(toSelect){approx+=point.y;}
point.select(toSelect,true);}
var span=Ext.query('svg .highcharts-axis tspan',slider.chart.renderTo)[0];var text='approx. '+approx+'/'+sum;if(span.textContent!=null){span.textContent=text;}
else{span.innerText=text;}}},onFilterDragStart:function(slider,value,thumb){var id=slider.thumbs[0]==thumb?'thumb1':'thumb2';var label=slider.up('container').down('#'+id);var labelEl=label.el;if(!labelEl)return;labelEl.addCls('sliding');if(slider.chartEl){slider.chartEl.setDisplayed('');slider.chartEl.setStyle({visibility:'visible',zIndex:100000});slider.chartEl.down('text').setStyle({visibility:'visible'})}},onFilterDragEnd:function(slider,value,thumb){var label1=slider.up('container').down('#thumb1');var label1El=label1.el;var label2=slider.up('container').down('#thumb2');var label2El=label2.el;if(!label1El||!label2El)return;label1El.removeCls('sliding');label2El.removeCls('sliding');if(slider.chartEl){slider.chartEl.setDisplayed('none');slider.chartEl.setStyle({visibility:'hidden'});slider.chartEl.down('text').setStyle({visibility:'hidden'})}},onInstantChange:function(btn){if(btn.eventsSuspended)return;var filterSelect=Ext.ComponentQuery.query('#advancedfilters #filterselect')[0];filterSelect.setDisabled(btn.pressed);if(!btn.pressed){var sliders=Ext.ComponentQuery.query('#advancedfilters multislider');for(var i=0;i<sliders.length;i++){var slider=sliders[i];slider.setValue([slider.minValue,slider.maxValue],false)}}
this.applyFilters(null,true);},onSelectFilter:function(){this.applyFilters(null,true,true)},getFilters:function(){var sliders=Ext.ComponentQuery.query('#advancedfilters multislider');var filters=[];for(var i=0;i<sliders.length;i++){var slider=sliders[i];var obj=Ext.clone(slider.attrObj);var val=slider.getValue();obj.minOrig=val[0];obj.maxOrig=val[1];obj.min=val[0]==slider.minValue?val[0]-0.1:val[0];obj.max=val[1]==slider.maxValue?val[1]+0.1:val[1];obj.inactive=val[0]==slider.minValue&&val[1]==slider.maxValue;filters.push(obj);}
return filters;},applyFilters:function(){this.reconfigureFiltersCall(true);if(this.filterActive){this.getController('DomManipulation').activateLoadingMask();}},clearFilters:function(){this.attrs=[];this.cfg=null;this.getController('AttributeConfig').filterConfig=null;var panel=Ext.ComponentQuery.query('#advancedfilters')[0];panel.removeAll();},reconfigureFilters:function(cfg){return;var attrs=Ext.Array.clone(cfg.attrs);var oldAttrs=Ext.Array.clone(cfg.attrs);this.cfg=cfg;var filterPanel=Ext.ComponentQuery.query('#advancedfilters')[0];var sliders=Ext.ComponentQuery.query('multislider',filterPanel);for(var i=0;i<sliders.length;i++){var slider=sliders[i];var found=false;var attr=null;for(var j=0;j<attrs.length;j++){attr=attrs[j];if(slider.attrObj.as==attr.as&&slider.attrObj.attr==attr.attr&&slider.attrObj.normType==attr.normType&&slider.attrObj.normAs==attr.normAs&&slider.attrObj.normAttr==attr.normAttr){found=true;break;}}
if(!found){filterPanel.remove(slider.up('container'));}
else{Ext.Array.remove(attrs,attr);}}
var attrMap={};var attrsToRemove=[];for(var i=0;i<attrs.length;i++){var attr=attrs[i];if(attrMap[attr.as+'_'+attr.attr]){attrsToRemove.push(attr);}
attrMap[attr.as+'_'+attr.attr]=true;}
attrs=Ext.Array.difference(attrs,attrsToRemove);this.attrs=cfg.attrs;if(!this.attrs.length){this.changeActiveState(false);return;}
this.changeActiveState(true);this.reconfigureFiltersCall(false,true);},createChart:function(slider,dist){if(slider.chartEl){slider.chartEl.hide();}
var cmp=Ext.create('Ext.Component',{width:200,height:150,border:2,style:{borderColor:'#ddd',zIndex:100000,backgroundColor:'#fff',borderStyle:'solid'},floating:true})
cmp.show();cmp.hide();var chart=new Highcharts.Chart({chart:{renderTo:cmp.el.dom,animation:false,type:'column'},yAxis:{min:0,title:null,allowDecimals:false,labels:{enabled:false}},xAxis:{labels:{enabled:false},title:{text:'approx.',offset:-120,style:{fontSize:10,fontWeight:'normal',color:'#222'}},tickLength:0},credits:{enabled:false},exporting:{enabled:false},legend:{enabled:false},tooltip:{enabled:false},title:{text:null},plotOptions:{column:{pointPadding:0,groupPadding:0,borderWidth:0}},series:[{data:Ext.Array.clone(dist),color:'#ccc',states:{select:{color:'#f09999'}}}]});slider.chartEl=cmp.el;slider.chartEl.down('text').setStyle({visibility:'hidden'});slider.chart=chart;},changeActiveState:function(btn){if(!btn||!btn.xtype||btn.xtype!='tool'){var active=btn;btn=Ext.ComponentQuery.query('#advancedfilters tool[type=poweron]')[0];if(active){$(btn.el.dom).addClass('tool-active');}
else{$(btn.el.dom).removeClass('tool-active');}
this.filterActive=$(btn.el.dom).hasClass('tool-active');}
else{if(!this.attrs||!this.attrs.length){return;}
$(btn.el.dom).toggleClass('tool-active');this.filterActive=$(btn.el.dom).hasClass('tool-active');this.applyFilters();}},reconfigureFiltersCall:function(requireData){return;if(!this.attrs||!this.attrs.length)return;if(Config.cfg){this.reconfigureFiltersCallback({filterData:Config.cfg.filterData});return;}
var areas={};var placeNode=this.getController('Area').placeNode;if(placeNode){var maxAt=null;var maxDepth=0;placeNode.cascadeBy(function(node){var at=node.get('at');var depth=node.getDepth();if(depth>maxDepth){maxAt=at;maxDepth=depth;}
var loc=node.get('loc');if(!at||!loc||!node.isVisible()||(node.isExpanded()&&node.hasChildNodes()))
return;var gid=node.get('gid');areas[loc]=areas[loc]||{}
areas[loc][at]=areas[loc][at]||[];areas[loc][at].push(gid);})
for(var loc in areas){for(var at in areas[loc]){if(at!=maxAt){delete areas[loc][at];}}}}
else{areas=this.getController('Area').allMap;}
var datasetId=Ext.ComponentQuery.query('#seldataset')[0].getValue();var years=Ext.ComponentQuery.query('#selyear')[0].getValue();years=[years[years.length-1]];var params={dataset:datasetId,years:JSON.stringify(years),attrs:JSON.stringify(this.attrs),areas:JSON.stringify(areas),filters:JSON.stringify(this.getFilters())}
if(requireData){params['requireData']=1;}
Ext.Ajax.request({url:Config.url+'/api/filter/filter',params:params,scope:this,method:'GET',success:requireData?this.applyFiltersCallback:this.reconfigureFiltersCallback})},reconfigureFiltersCallback:function(response){return;var data=response.filterData||JSON.parse(response.responseText).data;this.filterData=data;if(data){this.updateDistributions(data);if(this.initialValues){for(var key in this.initialValues){var slider=Ext.ComponentQuery.query('multislider[attrname='+key+']')[0];if(!slider)continue;slider.setValue(this.initialValues[key])}
this.initialValues=null;var filterPanel=Ext.ComponentQuery.query('#advancedfilters')[0];filterPanel.doLayout();this.afterAccordionLayout();}}},applyFiltersCallback:function(response){var data=JSON.parse(response.responseText).data
var areas=data.data;this.filterData['dist']=data.dist;for(var attrName in data.dist){var slider=Ext.ComponentQuery.query('multislider[attrname='+attrName+']')[0];this.createChart(slider,data.dist[attrName]);}
if(this.filterActive){this.getController('DomManipulation').deactivateLoadingMask();this.getController('Select').selectInternal(areas||[]);}},updateDistributions:function(data){var filterPanel=Ext.ComponentQuery.query('#advancedfilters')[0];var attrCfgs=[];var attrMap=data.metaData;for(var i=0;i<this.attrs.length;i++){var attr=this.attrs[i]
var idx=Ext.Array.indexOf(this.attrs,attr);var attrName='as_'+attr.as+'_attr_'+attr.attr
if(Ext.Array.contains(attrCfgs,attrName)){continue;}
attrCfgs.push(attrName);var attrCfg=attrMap[attrName];attrCfg.attrObj=attr;attrCfg.attrName=attrName;var slider=Ext.ComponentQuery.query('multislider[attrname='+attrName+']')[0];if(slider){this.updateSlider(slider,attrCfg);this.createChart(slider,data.dist[attrName]);}
else{var cnt=this.getFilterItems([attrCfg])[0]
filterPanel.insert(idx,cnt);slider=Ext.ComponentQuery.query('multislider[attrname='+attrName+']')[0];this.createChart(slider,data.dist[attrName],true);}}
filterPanel.doLayout();this.afterAccordionLayout();},updateSlider:function(slider,cfg,sliderIsNew){var container=slider.up('container');var attrName=cfg.attrObj.attrName+' ('+cfg.units+')';slider.decimalPrecision=Math.max(0,-cfg.decimal);slider.increment=Math.pow(10,cfg.decimal);var newValue=null;if(!sliderIsNew){var val=slider.getValue();if(val[0]==slider.minValue&&val[1]==slider.maxValue){newValue=[cfg.min,cfg.max];}
else if(val[0]<cfg.min||val[1]>cfg.max){newValue=[cfg.min,cfg.max];}}
slider.setMinValue(cfg.min);slider.setMaxValue(cfg.max);container.down('#attrName').setValue(attrName);container.down('#minValue').el?container.down('#minValue').el.setHTML(String(cfg.min)):container.down('#minValue').cfgVal=String(cfg.min);container.down('#maxValue').el?container.down('#maxValue').el.setHTML(String(cfg.max)):container.down('#maxValue').cfgVal=String(cfg.max);if(newValue){slider.setValue(newValue,false);this.afterAccordionLayout(slider);}},getFilterItems:function(attrCfgs){var items=[];for(var i=0;i<attrCfgs.length;i++){var attrCfg=attrCfgs[i];var min=attrCfg.value?attrCfg.value[0]:attrCfg.min;var max=attrCfg.value?attrCfg.value[1]:attrCfg.max;var cnt={xtype:'container',margin:0,layout:{type:'vbox',align:'stretch'},items:[{xtype:'displayfield',itemId:'attrName',margin:'0 17',value:attrCfg.attrObj.attrName+' ('+attrCfg.units+')'},{xtype:'container',suspendLayout:true,layout:{type:'hbox'},items:[{xtype:'component',itemId:'thumb1',cls:'slider-thumb-label',html:min},{xtype:'component',itemId:'thumb2',cls:'slider-thumb-label',html:max}]},{xtype:'multislider',attrname:attrCfg.attrName,useTips:false,margin:'0 17',clickToChange:false,values:[min,max],attrObj:attrCfg.attrObj,units:attrCfg.units,minValue:min,maxValue:max,decimalPrecision:Math.max(0,-attrCfg.decimal),increment:Math.pow(10,attrCfg.decimal),constrainThumbs:true},{xtype:'container',margin:'0 17',layout:{type:'hbox'},items:[{xtype:'container',flex:1,items:[{itemId:'minValue',xtype:'component',cls:'slider-constraints slider-constraint-min',html:String(attrCfg.min)}],layout:{type:'hbox',pack:'start'}},{xtype:'container',flex:1,items:[{itemId:'maxValue',xtype:'component',cls:'slider-constraints slider-constraint-max',html:String(attrCfg.max)}],layout:{type:'hbox',pack:'end'}}]}]}
items.push(cnt)}
return items;}})
Ext.define('PumaMain.controller.ViewMng',{extend:'Ext.app.Controller',views:[],requires:['PumaMain.view.CommonMngGrid','PumaMain.view.CommonSaveForm'],init:function(){this.control({'commonmnggrid':{recmoved:this.onRecMoved,recdeleted:this.onDelete,urlopen:this.onUrlOpen},'commonsaveform #save':{click:this.onSave},'#savevisualization':{click:this.onVisSave},'#managevisualization':{click:this.onVisOrViewManage},'#savedataview':{click:this.onViewSave},'#managedataview':{click:this.onVisOrViewManage},'#sharedataview':{click:this.onShare},})},onUrlOpen:function(grid,rec){var url=window.location.origin+window.location.pathname+'?id='+rec.get('_id');var win=Ext.widget('window',{bodyCls:'urlwindow',title:'Data view URL',items:[{xtype:'displayfield',value:url}]})
win.show();},onRecMoved:function(grid,rec,moveUp){var store=Ext.StoreMgr.lookup('visualization4sel');var ids=store.collect('_id');var id=rec.get('_id')
var idx=Ext.Array.indexOf(ids,id);var length=ids.length;Ext.Array.remove(ids,id)
var newIdx=moveUp?(idx-1):(idx+1);if(newIdx<0||newIdx+1>length)return;Ext.Array.insert(ids,newIdx,[id]);var themeId=Ext.ComponentQuery.query('#seltheme')[0].getValue();var theme=Ext.StoreMgr.lookup('theme').getById(themeId);theme.set('visOrder',ids);theme.save();store.sort();},onDelete:function(grid,rec){rec.destroy();},onSave:function(btn){var form=btn.up('form');var name=form.getComponent('name').getValue();var rec=form.rec;rec.set('name',name);rec.save({callback:this.onSaveFinish});btn.up('window').close();},onShare:function(){var view=Ext.create('Puma.model.DataView',this.gatherViewConfig());view.save({callback:this.onSaveFinish});},onSaveFinish:function(rec,operation){var isView=rec.modelName=='Puma.model.DataView';var store=Ext.StoreMgr.lookup(isView?'dataview':'visualization');store.addWithSlaves(rec);if(isView){var url=window.location.origin+window.location.pathname+'?id='+rec.get('_id')
var win=Ext.widget('window',{bodyCls:'urlwindow',title:'Data view URL',items:[{xtype:'displayfield',value:url}]})
win.show();}},onVisOrViewManage:function(btn){var window=Ext.widget('window',{layout:'fit',width:300,title:btn.itemId=='managevisualization'?'Manage visualizations':'Manage data views',height:400,y:200,bodyCls:'manageDwWindow',items:[{xtype:'commonmnggrid',allowReorder:btn.itemId=='managevisualization',store:Ext.StoreMgr.lookup(btn.itemId=='managevisualization'?'visualization4sel':'dataview')}]})
window.show();},onDataviewLoad:function(){var yearCombo=Ext.ComponentQuery.query('#selyear')[0];var datasetCombo=Ext.ComponentQuery.query('#seldataset')[0];var themeCombo=Ext.ComponentQuery.query('#seltheme')[0];var visualizationCombo=Ext.ComponentQuery.query('#selvisualization')[0];var locationCombo=Ext.ComponentQuery.query('#sellocation')[0];yearCombo.suspendEvents();datasetCombo.suspendEvents();themeCombo.suspendEvents();visualizationCombo.suspendEvents();locationCombo.suspendEvents();datasetCombo.setValue(Config.cfg.dataset);var locStore=Ext.StoreMgr.lookup('location4init');locStore.clearFilter(true);locStore.filter([function(rec){return rec.get('dataset')==Config.cfg.dataset;}]);locationCombo.setValue(Config.cfg.location);var themeStore=Ext.StoreMgr.lookup('theme4sel');themeStore.clearFilter(true);themeStore.filter([function(rec){return rec.get('dataset')==Config.cfg.dataset;}]);themeCombo.setValue(Config.cfg.theme);var visStore=Ext.StoreMgr.lookup('visualization4sel');var yearStore=Ext.StoreMgr.lookup('year4sel');var themeYears=Ext.StoreMgr.lookup('theme').getById(Config.cfg.theme).get('years');yearStore.clearFilter(true);yearStore.filter([function(rec){return Ext.Array.contains(themeYears,rec.get('_id'))}])
yearCombo.setValue(Config.cfg.years)
visStore.clearFilter(true);visStore.filter([function(rec){return rec.get('theme')==Config.cfg.theme}]);visualizationCombo.setValue(Config.cfg.visualization);yearCombo.resumeEvents();datasetCombo.resumeEvents();themeCombo.resumeEvents();visualizationCombo.resumeEvents();locationCombo.resumeEvents();var onlySel=Ext.ComponentQuery.query('#areapager #onlySelected')[0];onlySel.suspendEvents();onlySel.toggle(Config.cfg.pagingUseSelected);onlySel.resumeEvents();var selColors=Ext.ComponentQuery.query('#useselectedcolorpicker')[0];selColors.suspendEvents();if(Config.cfg.pagingSelectedColors){selColors.select(Config.cfg.pagingSelectedColors);}
selColors.resumeEvents();onlySel.suspendEvents();onlySel.toggle(Config.cfg.pagingUseSelected)
onlySel.resumeEvents();this.getController('AttributeConfig').filterConfig=Config.cfg.filterAttrs;this.getController('Filter').attrs=Config.cfg.filterAttrs;this.getController('Filter').initialValues=Config.cfg.filterMap;this.getController('Filter').changeActiveState(Config.cfg.filterActive);var locationTheme=this.getController('LocationTheme');locationTheme.datasetChanged=true;locationTheme.visChanged=true;locationTheme.themeChanged=true;locationTheme.yearChanged=true;locationTheme.locationChanged=true;locationTheme.onYearChange({itemId:'dataview'});},gatherViewConfig:function(){var cfg={};cfg.multipleMaps=Ext.ComponentQuery.query('maptools #multiplemapsbtn')[0].pressed===true;cfg.years=Ext.ComponentQuery.query('#selyear')[0].getValue();cfg.dataset=Ext.ComponentQuery.query('#seldataset')[0].getValue();cfg.theme=Ext.ComponentQuery.query('#seltheme')[0].getValue();cfg.visualization=Ext.ComponentQuery.query('#selvisualization')[0].getValue();cfg.location=Ext.ComponentQuery.query('#sellocation')[0].getValue();cfg.expanded=this.getController('Area').getExpandedAndFids().expanded;cfg.selMap=this.getController('Select').selMap;cfg.choroplethCfg=this.getController('AttributeConfig').layerConfig
cfg.pagingUseSelected=Ext.ComponentQuery.query('#areapager #onlySelected')[0].pressed;var pagingPicker=Ext.ComponentQuery.query('#useselectedcolorpicker')[0]
cfg.pagingSelectedColors=pagingPicker.xValue||pagingPicker.value;var sliders=Ext.ComponentQuery.query('#advancedfilters multislider');var filterMap={};for(var i=0;i<sliders.length;i++){var slider=sliders[i];var val=slider.getValue();var attrName=slider.attrname;filterMap[attrName]=val;}
cfg.filterMap=filterMap;cfg.filterData=this.getController('Filter').filterData;cfg.filterAttrs=this.getController('Filter').attrs;cfg.filterActive=$(Ext.ComponentQuery.query('#advancedfilters tool[type=poweron]')[0].el.dom).hasClass('tool-active');var layers=Ext.StoreMgr.lookup('selectedlayers').getRange();this.getController('Layers').resetIndexes();var layerCfg=[];for(var i=0;i<layers.length;i++){var layer=layers[i];layerCfg.push({opacity:layer.get('layer1').opacity||1,sortIndex:layer.get('sortIndex'),type:layer.get('type'),attributeSet:layer.get('attributeSet'),attribute:layer.get('attribute'),at:layer.get('at'),symbologyId:layer.get('symbologyId')})}
cfg.layers=layerCfg;cfg.trafficLayer=Ext.StoreMgr.lookup('layers').getRootNode().findChild('type','livegroup').childNodes[0].get('checked');var store=Ext.StoreMgr.lookup('paging');cfg.page=store.currentPage;var map=Ext.ComponentQuery.query('#map')[0].map;cfg.mapCfg={center:map.center,zoom:map.zoom}
var cfgs=this.getController('Chart').gatherCfg();var queryCfgs=this.getController('Chart').gatherCfg(true);var viewCfgs=[];for(var i=0;i<cfgs.length;i++){viewCfgs.push({cfg:cfgs[i],queryCfg:queryCfgs[i]})}
cfg.cfgs=viewCfgs;return{conf:cfg}},onVisSave:function(){var chartCtrl=this.getController('Chart')
var attrSet=chartCtrl.attrSetId;if(!attrSet)return;var visualization=chartCtrl.visualization||Ext.create('Puma.model.Visualization',{attrSet:attrSet})
var cfgs=this.getController('Chart').gatherCfg();var layers=Ext.StoreMgr.lookup('selectedlayers').getRange();var visibleLayers=[];for(var i=0;i<cfgs.length;i++){var cfg=cfgs[i];if(cfg.type=='scatterchart'){visualization.set('scatterAttrs',Ext.Array.pluck(cfg.attrs,'attr'))}
if(cfg.type=='columnchart'){visualization.set('columnAttrs',Ext.Array.pluck(cfg.attrs,'attr'))}}
for(var i=0;i<layers.length;i++){var layer=layers[i];var type=layer.get('type')
if(type=='topiclayer'){visibleLayers.push({at:layer.get('at'),symbologyId:layer.get('symbologyId')})}
if(type=='chartlayer'){visualization.set('choroAttr',layer.get('attribute'))
visualization.set('dotChart',layer.get('dotChart'));}}
visualization.set('layers',visibleLayers);Ext.StoreMgr.lookup('visualization').addWithSlaves(visualization)
visualization.save();var win=Ext.widget('window',{bodyCls:'urlwindow',items:[{xtype:'displayfield',value:'Visualization saved'}]})
win.show();},onViewSave:function(){var view=Ext.create('Puma.model.DataView',this.gatherViewConfig());var window=Ext.widget('window',{layout:'fit',width:300,title:'Save data view',y:200,bodyCls:'saveaswindow',items:[{xtype:'commonsaveform',rec:view}]})
window.show();}})
Ext.define('PumaMain.controller.Chart',{extend:'Ext.app.Controller',views:[],requires:['Ext.ux.grid.FiltersFeature','PumaMain.view.Chart','PumaMain.view.VisualizationForm','Puma.util.Color','PumaMain.view.ChartPanel'],init:function(){this.control({'initialbar #visualizationsbtn':{click:this.onOpenVisualizationWindow},'initialbar #chartbtn':{click:this.onChartBtnClick},'initialbar #savevisbtn':{click:this.onVisualizationSave},'initialbar #urlbtn':{click:this.onSaveView},'visualizationform form':{beforesave:this.onBeforeVisualizationSave,aftersave:this.onAfterVisualizationSave},'attributepanel #attributeSet':{change:this.onAttrSetChange},'attributepanel #normAttributeSet':{change:this.onAttrSetChange},'attributepanel #normalizationAttributeSet':{change:this.onAttrSetChange},'attributepanel #addattrbtn':{click:this.onAddAttribute},'attributepanel #removeattrbtn':{click:this.onRemoveAttribute},'chartconfigpanel #addbtn':{click:this.onChartAdd},'chartconfigpanel #reconfigurebtn':{click:this.onChartReconfigure},'chartpanel tool[type=close]':{click:this.onChartRemove},'chartpanel tool[type=help]':{click:this.onToggleLegend},'chartpanel tool[type=collapse]':{click:this.onExportCsv},'chartpanel tool[type=search]':{click:this.onSwitchZooming},'chartpanel tool[type=print]':{click:this.onUrlClick},'chartpanel tool[type=save]':{click:this.onUrlClick},'chartpanel':{expand:this.onChartPanelExpand},'#areapager':{beforechange:this.onPageChange},'#areapager #onlySelected':{toggle:this.onToggleShowSelected},'pumacombo[attributeCombo=1]':{change:this.onAttrChange}})
Highcharts.setOptions({lang:{thousandsSep:''},chart:{style:{fontSize:'12px',fontFamily:'"Open Sans", sans-serif',color:'#000',fontWeight:'normal'}}})},onChartPanelExpand:function(panel){if(panel.cfgType!='columnchart')return;var series=panel.chart.chart.series;for(var i=0;i<series.length;i++){series[i].show();}},onAttrChange:function(combo,val){var chartCmp=combo.up('chartpanel').down('chartcmp');this.reconfigureChart(chartCmp);},onToggleShowSelected:function(btn){var selCtrl=this.getController('Select');var areaCtrl=this.getController('Area');var onlySel=btn.pressed;var count=onlySel?(selCtrl.overallCount):(areaCtrl.lowestCount+selCtrl.outerCount);Ext.StoreMgr.lookup('paging').setCount(count);this.getController('Chart').reconfigure('outer');},onToggleLegend:function(btn){var chart=btn.up('panel').chart;$(btn.el.dom).toggleClass('tool-active');chart.legendOn=chart.legendOn?false:true;this.toggleLegendState(chart.chart,chart.legendOn);},onSwitchZooming:function(btn){var chart=btn.up('panel').chart;$(btn.el.dom).toggleClass('tool-active');chart.zooming=chart.zooming?false:true;},onExportCsv:function(btn){var chart=btn.up('panel').chart;this.reconfigureChart(chart,true);},onSaveView:function(){var cfg={};cfg.chartCfg=this.gatherCfg();cfg.layerCfg=this.getController('Layers').gatherSymbologiesAndOpacities();var map=this.getController('Map').map1;cfg.mapCfg={center:map.center,size:map.size,zoom:map.zoom}
cfg.dataset=Ext.ComponentQuery.query('initialbar #datasetcontainer button[pressed=true]')[0].objId;cfg.theme=Ext.ComponentQuery.query('initialbar #themecontainer button[pressed=true]')[0].objId
cfg.years=Ext.Array.pluck(Ext.ComponentQuery.query('initialbar #yearcontainer button[pressed=true]'),'objId');cfg.visualization=Ext.ComponentQuery.query('initialbar #visualizationcontainer button[pressed=true]')[0].objId
cfg.expanded=this.getController('Area').getExpandedAndFids().expanded;cfg.selMap=this.getController('Select').selMap;Ext.Ajax.request({url:Config.url+'/api/urlview/saveView',params:{cfg:JSON.stringify(cfg)},scope:this,method:'POST',success:function(response){var id=JSON.parse(response.responseText).data;var url=window.location.origin+'/public/index2.html?id='+id;}})},onAfterVisualizationSave:function(formCmp,rec,operation){if(operation.action=='update'){var btn=Ext.ComponentQuery.query('initialbar #visualizationcontainer button[objId='+rec.get('_id')+']')[0]
if(!btn)
return;btn.setText(rec.get('name'));}
else{var container=Ext.ComponentQuery.query('initialbar #visualizationcontainer')[0];var conf={text:rec.get('name'),objId:rec.get('_id'),allowDepress:false};container.insert(container.items.length-1,conf);var btn=Ext.ComponentQuery.query('initialbar #visualizationcontainer button[objId='+rec.get('_id')+']')[0];var btns=Ext.ComponentQuery.query('initialbar #visualizationcontainer button');for(var i=0;i<btns.length;i++){btns[i].toggle(false,true);}
btn.toggle(true,true)}},onOpenVisualizationWindow:function(btn){var themeBtn=Ext.ComponentQuery.query('initialbar #themecontainer button[pressed=true]')[0]
var theme=themeBtn?themeBtn.objId:null;if(!theme)
return;var visualizationStore=Ext.StoreMgr.lookup('visualization4window');visualizationStore.clearFilter(true);visualizationStore.filter([function(rec){return rec.get('theme')==theme;}])
var window=Ext.WindowManager.get('visualizationwindow');window=window||Ext.widget('window',{layout:'fit',id:'visualizationwindow',y:200,items:[{xtype:'visualizationform',frame:true,theme:theme}]})
window.show();},onVisualizationSave:function(btn){var visBtn=Ext.ComponentQuery.query('initialbar #visualizationcontainer button[pressed=true]')[0]
if(!visBtn)
return;var vis=Ext.StoreMgr.lookup('visualization').getById(visBtn.objId);var cfg=this.gatherCfg();if(!cfg.length){return false;}
var atMap=this.getController('Layers').gatherSymbologiesAndOpacities();vis.set('atMap',atMap);vis.set('cfg',cfg);vis.save();},onBeforeVisualizationSave:function(formCmp,rec){if(!rec.stores.length){var cfg=this.gatherCfg();if(!cfg.length){return false;}
var atMap=this.getController('Layers').gatherSymbologiesAndOpacities();rec.set('atMap',atMap);rec.set('cfg',cfg);}},gatherChartCfg:function(chart,useQueryCfg){chart.cfg.chartId=chart.cfg.chartId||parseInt(Math.random()*10000000)
var cfg=useQueryCfg?{}:Ext.clone(chart.cfg);var legendItems=chart.chart&&chart.chart.legend&&useQueryCfg?chart.chart.legend.allItems:[];if(legendItems.length){cfg.invisibleAttrs=[];cfg.invisibleYears=[];}
if(chart.cfg.type=='grid'&&chart.chart&&chart.chart.store&&useQueryCfg){Ext.apply(cfg,this.getSortParamsFromGrid(chart.chart,true));}
for(var j=0;j<legendItems.length;j++){var legendItem=legendItems[j];if(legendItem.visible)
continue;if(legendItem.as){cfg.invisibleAttrs.push({as:legendItem.as,attr:legendItem.attr})}
else if(legendItem.userOptions.as){cfg.invisibleAttrs.push({as:legendItem.userOptions.as,attr:legendItem.userOptions.attr})}
else if(legendItem.userOptions.year){cfg.invisibleYears.push(legendItem.userOptions.year)}}
return cfg},gatherCfg:function(useQuery){var charts=Ext.ComponentQuery.query('chartbar chartcmp');var cfgs=[];for(var i=0;i<charts.length;i++){var chart=charts[i];var cfg=this.gatherChartCfg(chart,useQuery);cfgs.push(cfg);}
return cfgs;},onSaveVis:function(btn){if(!this.activeVis)
return;var cfg=this.gatherCfg();this.activeVis.set('cfg',cfg);this.activeVis.save();},loadVisualization:function(visId){var store=Ext.StoreMgr.lookup('visualization');var vis=Config.cfg?null:store.getById(visId);var cfg=Config.cfg?Config.cfg.cfgs:null;if(vis){cfg=vis.get('cfg');}
cfg=cfg||[];var container=Ext.ComponentQuery.query('chartbar')[0];var me=this;container.items.each(function(item){if(item.xtype=='chartpanel'){me.onChartRemove(null,item);}})
for(var i=0;i<cfg.length;i++){if(cfg.type!='filter'){if(Config.cfg){this.addChart(cfg[i].cfg,true,cfg[i].queryCfg);}
else{this.addChart(cfg[i],true);}}}},onChartAdd:function(btn){var form=btn.up('chartconfigpanel');var cfg=form.getForm().getValues();this.addChart(cfg);},addChart:function(cfg,withoutReconfigure,queryCfg){var container=Ext.ComponentQuery.query('chartbar')[0];if(cfg.type=='grid'){}
var opts={height:400,width:575,style:{},layout:'fit'};if(cfg.type=='extentoutline'){opts.layout={type:'absolute'}}
if(cfg.type=='grid'){var hasGrid=false;container.items.each(function(item){if(item.chart&&item.chart.cfg.type=='grid'){hasGrid=true;return false;}})
if(hasGrid){opts.disableSort=true;}}
var chart=Ext.widget('chartcmp',opts);var items=[chart];var cnt=Ext.widget('chartpanel',{title:cfg.title||('Anonymous '+cfg.type),cfgType:cfg.type,iconCls:'cmptype-'+cfg.type,layout:{type:'fit',reserveScrollbar:true},items:items})
container.insert(container.items.length-1,cnt);chart.cfg=cfg;chart.queryCfg=queryCfg;chart.cnt=cnt;cnt.chart=chart;if(!withoutReconfigure){this.reconfigureChart(chart,false,true);}},onChartRemove:function(btn,panel){var panel=btn?btn.up('panel'):panel;if(panel.chart.chart&&panel.chart.chart.renderTo){panel.chart.chart.destroy();}
panel.destroy();},toggleLegendState:function(chart,on){var id=chart.container.id;var selector='#'+id+' .highcharts-legend';if(on){$(selector).show();}
else{$(selector).hide();}},onChartReconfigure:function(btn){var form=btn.up('chartconfigpanel');var cfg=form.getForm().getValues();form.chart.cfg=cfg;this.reconfigureChart(form.chart);},getChartWindowConfig:function(chart,reconfiguring,type){var datasetId=Ext.ComponentQuery.query('#seldataset')[0].getValue();var dataset=Ext.StoreMgr.lookup('dataset').getById(datasetId);var areaTemplates=dataset.get('featureLayers');var store=Ext.create('Gisatlib.data.SlaveStore',{slave:true,filters:[function(rec){return Ext.Array.contains(areaTemplates,rec.get('_id'));}],model:'Puma.model.AreaTemplate'})
store.load();var cfg={layout:'fit',y:200,items:[{xtype:type,areaTemplateStore:store,chart:chart,reconfiguring:reconfiguring}]}
if(!reconfiguring){cfg['closeAction']='hide'
cfg['id']='new'+type}
return cfg;},reconfigureChart:function(chartCmp,forExport,addingNew,fromConfigPanel){var cfg=chartCmp.cfg;var chartPanel=chartCmp.up('chartpanel');chartPanel.cfgType=cfg.type;chartPanel.updateToolVisibility();if(cfg.type=='piechart'){}
if(!this.attrSet)return;var attrsFailed=false;var selAttr=Ext.ComponentQuery.query('#selindicator')[0].getValue();if(cfg.type=='grid'&&!forExport){chartCmp.cfg.attrs=[{as:this.attrSetId,attr:selAttr}];}
if(cfg.type=='scatterchart'&&!forExport){var combos=Ext.ComponentQuery.query('pumacombo',chartCmp.up('chartpanel'));chartCmp.cfg.attrs=[];var val1=combos[0].getValue();var val2=combos[1].getValue();if(!val1||!val2){attrsFailed=true;}
else{var attr1={as:this.attrSetId,attr:val1};var attr2={as:this.attrSetId,attr:val2};chartCmp.cfg.attrs=[attr1,attr2];}}
if(Ext.Array.contains(['columnchart'],cfg.type)&&!forExport){var combo=Ext.ComponentQuery.query('pumacombo',chartCmp.up('chartpanel'))[0];chartCmp.cfg.attrs=[];var val=combo.getValue();if(!val||!val.length){attrsFailed=true;}
else{for(var i=0;i<val.length;i++){var attr={as:this.attrSetId,attr:val[i]};chartCmp.cfg.attrs.push(attr);}}}
if(Ext.Array.contains(['boxplotchart'],cfg.type)&&!forExport){var combo=Ext.ComponentQuery.query('pumacombo',chartCmp.up('chartpanel'))[0];chartCmp.cfg.attrs=[];var val=combo.getValue();if(!val){attrsFailed=true;}
else{chartCmp.cfg.attrs.push(val);}}
if(attrsFailed){this.onChartReceived({cmp:chartCmp});return;}
var queryCfg=Ext.apply(chartCmp.queryCfg||{},chartCmp.cfg,this.gatherChartCfg(chartCmp,true));var areas={};if(cfg.type!='extentoutline'){areas=Ext.clone(this.getController('Area').lowestMap);}
var onlySel=Ext.ComponentQuery.query('#areapager #onlySelected')[0].pressed;if(cfg.title&&fromConfigPanel){chartCmp.up('chartpanel').setTitle(cfg.title)}
queryCfg.areas=areas;var years=Ext.ComponentQuery.query('#selyear')[0].getValue();var allYears=Ext.ComponentQuery.query('#selyear')[0].store.collect('_id');if(!years.length)
return;queryCfg.years=years;if(cfg.type=='grid'){queryCfg.years=allYears;}
if(!queryCfg.years){queryCfg.years=[];}
if(!queryCfg.years.length){queryCfg.years=[queryCfg.years]}
if(Ext.Array.contains(['grid','columnchart','piechart'],cfg.type)){var onlySel=Ext.ComponentQuery.query('#areapager #onlySelected')[0].pressed;if(onlySel){queryCfg.areas=[];}
Ext.apply(queryCfg,this.getPagingParams());}
if(cfg.type=='scatterchart'||cfg.type=='boxplotchart'){delete queryCfg['start'];delete queryCfg['limit'];}
if(cfg.type=='extentoutline'||cfg.type=='scatterchart'){var selectedAreas=this.getSelectedAreas()
queryCfg.selectedAreas=JSON.stringify(selectedAreas.selectedAreas);queryCfg.defSelectedArea=JSON.stringify(selectedAreas.defArea);}
var params=this.getParams(queryCfg);chartCmp.queryCfg=queryCfg;if(forExport){this.handleExport(chartCmp,params);return;}
if(queryCfg['start']<0){this.onChartReceived({cmp:chartCmp});return;}
Ext.Ajax.request({url:Config.url+'/api/chart/getChart',params:params,scope:this,cmp:chartCmp,success:forExport?null:this.onChartReceived,failure:forExport?null:this.onChartReceived})},getSelectedAreas:function(){var selectedAreas=[];var selMap=this.getController('Select').selMap;var defColor=this.getController('Select').defaultColor;var colors=[];var picker=Ext.ComponentQuery.query('#useselectedcolorpicker')[0];var onlySelected=Ext.ComponentQuery.query('#onlySelected')[0].pressed;var selectColors=picker.xValue||picker.value;selectColors=Ext.isArray(selectColors)?selectColors:[selectColors]
for(var color in selMap){if(!Ext.Array.contains(selectColors,color)&&onlySelected){continue;}
colors.push(color);}
var selMaps=[];var map={};var defMap=null;for(var i=0;i<colors.length;i++){var actualMap=selMap[colors[i]];if(actualMap&&actualMap.length){selMaps.push(actualMap);if(colors[i]==defColor){defMap=actualMap;}}}
var defArea=null;for(var i=0;i<selMaps.length;i++){var selMap=selMaps[i];var map={};for(var j=0;j<selMap.length;j++){var at=selMap[j].at;var gid=selMap[j].gid;var loc=selMap[j].loc;map[loc]=map[loc]||{};map[loc][at]=map[loc][at]||[];map[loc][at].push(gid);if(selMap==defMap&&!defArea){defArea={loc:loc,at:at,gid:gid}}}
selectedAreas.push(map);}
return{selectedAreas:selectedAreas,defArea:defArea};},handleExport:function(chartCmp,params){params=Ext.clone(params);delete params.start;delete params.limit;var items=[{xtype:'filefield',name:'file'}];for(var key in params){items.push({xtype:'textfield',name:key,value:params[key]})}
var form=Ext.widget('form',{items:items});form.getForm().submit({url:Config.url+'/api/chart/getGridDataCsv',success:function(){},failure:function(){}});return;},getParams:function(queryCfg){var params={};var keysToJson=['areas','attrs','years','classConfig','areaTemplates','oldAreas','invisibleAttrs','invisibleYears','activeFilters','activeSorters'];for(var key in queryCfg){if(Ext.isObject(queryCfg[key])||Ext.isArray(queryCfg[key])){params[key]=JSON.stringify(queryCfg[key])}
else{params[key]=queryCfg[key]}}
return params;},onOutlineReceived:function(data,cmp){cmp.removeAll();cmp.layout={type:'absolute'}
cmp.getLayout();data.layerRefs=data.layerRefs||[];var l=data.layerRefs.length
var width=l==1?550:264;var height=l<3?300:140;var colorMap=data.colorMap||this.getController('Select').colorMap;cmp.mapNum=data.layerRefs.length;for(var i=0;i<data.layerRefs.length;i++){var layerRefs=data.layerRefs[i];var item=layerRefs.item;var color=(colorMap[item.loc]&&colorMap[item.loc][item.at])?colorMap[item.loc][item.at][item.gid]:null;if(!color)continue;var rows=data.rows[i];var anchor='100% 100%'
var x=0;var y=0;if(i==0&&l>1){anchor='50% 100%';}
if(i==0&&l>2){anchor='50% 49%'}
if(i==1){anchor='100% 100%';if(l>2){anchor='100% 49%';}
x=285;}
if(i==2){y=200;anchor='50% 100%'}
if(i==3){x=285;y=200;}
cmp.add({xtype:'component',areaItem:item,color:color,type:'extentoutline',cls:i==0?'extentoutline-first':'extentoutline-notfirst',opacity:data.opacity,width:width,height:height,anchor:anchor,x:x,y:y,layerRefs:layerRefs,rows:rows,colSpan:data.layerRefs==1?2:1})}},createNoDataChart:function(cmp){var cfg={chart:{renderTo:cmp.el.dom},title:{text:null},credits:{enabled:false},labels:{items:[{html:'No data',style:{left:'210px',top:'180px',fontSize:34,fontFamily:'"Open Sans", sans-serif',color:'#777777'}}]}};var chart=new Highcharts.Chart(cfg);cmp.chart=chart;chart.cmp=cmp;},onChartReceived:function(response){var cmp=response.cmp||response.request.options.cmp;if(cmp.chart){try{cmp.chart.destroy();}
catch(e){}}
var data=response.responseText?JSON.parse(response.responseText).data:null;if(cmp.queryCfg&&cmp.queryCfg.type=='filter'){return;}
if(!data||data.noData){this.createNoDataChart(cmp);return;}
var singlePage=response.request.options.singlePage
cmp.noData=false;if(Ext.Array.contains(['extentoutline'],cmp.cfg.type)){if(singlePage){data.colorMap=JSON.parse(response.request.options.params.colorMap)}
this.onOutlineReceived(data,cmp);return;}
cmp.layout={type:'fit'}
cmp.getLayout();if(!Ext.Array.contains(['grid','featurecount'],cmp.cfg.type)){}
var isGrid=cmp.queryCfg.type=='grid';if(isGrid){this.onGridReceived(response);return;}
data.chart.events={};var me=this;data.chart.events.selection=function(evt){me.onScatterSelected(evt);}
if(cmp.queryCfg.type!='boxplotchart'){data.tooltip.formatter=function(){var obj=this;var type=obj.series.type;var attrConf=[];var yearName='';var areaName='';if(type=='column'){areaName=obj.point.a;yearName=obj.point.yearName;attrConf.push({name:obj.series.name,val:obj.y,units:obj.point.units})}
else if(type=='pie'){areaName=obj.series.name;yearName=obj.series.userOptions.yearName
attrConf.push({name:obj.point.swap?'Other':obj.key,val:obj.y,units:obj.point.units})}
else{areaName=obj.key;yearName=obj.series.name;attrConf.push({name:obj.point.yName,val:obj.point.y,units:obj.point.yUnits})
attrConf.push({name:obj.point.xName,val:obj.point.x,units:obj.point.xUnits})
if(obj.point.zName){attrConf.push({name:obj.point.zName,val:obj.point.z,units:obj.point.zUnits})}}
return me.getTooltipHtml(areaName,yearName,attrConf)}}
data.plotOptions=data.plotOptions||{series:{events:{}}}
data.plotOptions.series.events.click=function(evt){me.onPointClick(this.chart.cmp,evt,false)}
if(cmp.cfg.type=='piechart'){data.plotOptions.series.events.mouseOver=function(evt){me.onPointClick(this.chart.cmp,evt,true)}}
else if(cmp.cfg.type!='featurecount'&&cmp.cfg.type!='boxplotchart'){data.plotOptions.series.point.events.mouseOver=function(evt){me.onPointClick(this.series.chart.cmp,evt,true)}
if(cmp.cfg.type=='scatterchart'){data.plotOptions.series.point.events.mouseOut=function(evt){$('path[linecls=1]').hide();}}}
if(cmp.cfg.type=='piechart'){data.plotOptions.pie.point.events.legendItemClick=function(evt){evt.preventDefault();var isSingle=this.series.chart.options.chart.isPieSingle;if(!isSingle){me.onLegendToggle(this);}}}
data.exporting={enabled:false}
data.chart.renderTo=cmp.el.dom;data.chart.events.load=function(){if(this.options.chart.isPieSingle){var chart=this;var rend=chart.renderer;for(var i=0;i<chart.series.length;i++){var serie=chart.series[i];var left=chart.plotLeft+serie.center[0];var top=chart.plotTop+serie.center[1]+serie.options.pieFontShift;var text=rend.text(serie.options.pieText,left,top).attr({'style':'','text-anchor':'middle','font-size':serie.options.pieFontSize,'fill':serie.options.pieFontColor}).add();}}
if(singlePage){console.log('loadingdone')}}
if(singlePage){for(var i=0;i<data.series.length;i++){data.series[i].animation=false;}}
var chart=new Highcharts.Chart(data);cmp.chart=chart;chart.cmp=cmp;var panel=cmp.ownerCt;if(!singlePage){me.toggleLegendState(chart,cmp.legendOn);}
this.colourChart(cmp);},onUrlClick:function(btn){var chart=btn.up('panel').chart;var cfg=Ext.apply(Ext.clone(chart.queryCfg),this.gatherChartCfg(chart,true));cfg.oldAreas=chart.cfg.areas;cfg.colorMap=this.getController('Select').colorMap;var me=this;if(chart.noData){return;}
Puma.util.Msg.msg('Snapshot creation started','','r');Ext.Ajax.request({url:Config.url+'/api/urlview/saveChart',params:{cfg:JSON.stringify(cfg)},scope:this,method:'POST',success:function(response){var id=JSON.parse(response.responseText).data;me.onUrlCallback(id,btn.type=='print');}})},onUrlCallback:function(id,isPrint){if(true){var url=(window.location.origin+window.location.pathname).split('public')[0];}
if(isPrint){url=url+'print/index3.html?id='+id;var form=Ext.widget('form',{items:[{xtype:'filefield',name:'file'},{xtype:'textfield',name:'dummy',value:'dummy'}]});form.getForm().submit({url:url});}
else{url=url+'image/index3.html?id='+id;var rec=Ext.StoreMgr.lookup('screenshot').findRecord('large',true);var screenshot=Ext.create('Puma.model.Screenshot',{src:url,visible:rec?0:1})
Ext.StoreMgr.lookup('screenshot').loadData([screenshot],true);var img=Ext.DomQuery.select('img[src="'+url+'"]');Ext.get(img[0]).on('load',function(){Puma.util.Msg.msg('Snapshot done','','r');var snapshotPanel=Ext.ComponentQuery.query('chartbar #screenshotpanel')[0];snapshotPanel.show();window.setTimeout(function(){snapshotPanel.expand();},100)})}},onLegendToggle:function(point){var as=point.as;var attr=point.attr;var chart=point.series.chart;var series=chart.series;for(var i=0;i<series.length;i++){var serie=series[i];for(var j=0;j<serie.data.length;j++){var point=serie.data[j];if(point.attr==attr&&point.as==as){serie.isDirty=true;point.setVisible();break;}}}
chart.redraw();},onPointClick:function(cmp,evt,hovering){if(hovering&&!this.hovering&&cmp.cfg.type!='scatterchart')
return;var at=null;var gid=null;var loc=null;if(cmp.cfg.type=='piechart'){var serie=hovering?evt.target:evt.point.series;at=serie.options.at;loc=serie.options.loc;gid=serie.options.gid;}
else{var point=evt.point||evt.target;at=point?point.at:null;gid=point?point.gid:null;loc=point?point.loc:null;}
if(!at||!gid||!loc)
return;if(!this.hovering&&hovering&&cmp.cfg.type=='scatterchart'){var years=Ext.ComponentQuery.query('#selyear')[0].getValue();if(years.length<2)return;$('path[linecls=1]').hide();if(point.yearLines){for(var i=0;i<point.yearLines.length;i++){$(point.yearLines[i].element).show();point.yearLines[i].toFront();}}
else{var points=[];for(var i=0;i<cmp.chart.series.length;i++){points=Ext.Array.merge(points,cmp.chart.series[i].points);}
for(var i=0;i<points.length;i++){var iterPoint=points[i];if(point==iterPoint){continue;}
if(point.at==iterPoint.at&&point.gid==iterPoint.gid&&point.loc==iterPoint.loc){var xPlus=point.graphic.renderer.plotBox.x;var yPlus=point.graphic.renderer.plotBox.y;var line=point.graphic.renderer.path(['M',point.plotX+xPlus,point.plotY+yPlus,'L',iterPoint.plotX+xPlus,iterPoint.plotY+yPlus]).attr({'stroke-width':2,linecls:1,stroke:'#888'})
line.add();line.toFront();point.yearLines=point.yearLines||[];point.yearLines.push(line)}}}
if(!this.hovering){return;}}
var areas=[{at:at,gid:gid,loc:loc}]
var add=evt.originalEvent?evt.originalEvent.ctrlKey:evt.ctrlKey;var fromChart=cmp.cfg.type=='grid'||cmp.cfg.type=='piechart'||cmp.cfg.type=='columnchart';if(!Config.exportPage){this.getController('Select').fromChart=fromChart;this.getController('Select').select(areas,add,hovering);}
evt.preventDefault();},onScatterSelected:function(evt){var chart=evt.target.cmp;var zooming=chart.zooming;if(zooming||!evt.xAxis){return true;}
var xAxis=evt.xAxis[0];var yAxis=evt.yAxis[0];var xMin=xAxis.min;var yMin=yAxis.min;var xMax=xAxis.max;var yMax=yAxis.max;var atGids=[];var points=[];for(var i=0;i<xAxis.axis.series.length;i++){points=Ext.Array.merge(points,xAxis.axis.series[i].points);}
var areas=[];for(var i=0;i<points.length;i++){var point=points[i];if(point.x>xMin&&point.x<xMax&&point.y>yMin&&point.y<yMax){var atGid=point.at+'_'+point.gid+'_'+point.loc;if(!Ext.Array.contains(atGids,atGid)){areas.push({at:point.at,gid:point.gid,loc:point.loc});atGids.push(atGid)}}}
var add=evt.originalEvent.ctrlKey;if(!Config.exportPage){this.getController('Select').fromScatterChart=true;this.getController('Select').select(areas,add,false);}
evt.preventDefault();},getPagingParams:function(){var store=Ext.StoreMgr.lookup('paging');var page=store.currentPage;var chartCmps=Ext.ComponentQuery.query('chartcmp');var grid=Ext.ComponentQuery.query('grid[isGrid]')[0];var params={start:store.pageSize*(page-1),limit:store.pageSize}
if(grid){Ext.apply(params,this.getSortParamsFromGrid(grid));}
else{for(var i=0;i<chartCmps.length;i++){var cmp=chartCmps[i]
if(cmp.cfg.type=='grid'){grid=cmp;break;}}
if(grid&&grid.queryCfg){params['sort']=Ext.isString(grid.queryCfg.sort)?grid.queryCfg.sort:JSON.stringify(grid.queryCfg.sort)
params['sortNorm']=Ext.isString(grid.queryCfg.sortNorm)?grid.queryCfg.sortNorm:JSON.stringify(grid.queryCfg.sortNorm)}
else{params['sort']=null;}}
var selectedAreas=this.getSelectedAreas();params['selectedAreas']=JSON.stringify(selectedAreas.selectedAreas);params['defSelectedArea']=JSON.stringify(selectedAreas.defArea);return params;},getSortParamsFromGrid:function(grid,dontStringify){var params={};var sorters=grid.store.sorters;var sortProps=[];var cfg=grid.cmp.cfg;var sortAs=null;var sortAttr=null;sorters.each(function(sorter){sortProps.push({property:sorter.property,direction:sorter.direction})
if(sorter.property!='name'){sortAs=sorter.property.split('_')[1]
sortAttr=sorter.property.split('_')[3];}})
if(sortAs){for(var i=0;i<cfg.attrs.length;i++){var attr=cfg.attrs[i];if(attr.as==sortAs&&attr.attr==sortAttr){params['sortNorm']=dontStringify?attr:JSON.stringify(attr);}}}
if(sortProps.length){params['sort']=dontStringify?sortProps:JSON.stringify(sortProps)}
else{params['sort']=null;}
return params;},onGridReceived:function(response){var me=this;var data=JSON.parse(response.responseText).data;var cmp=response.request.options.cmp;var sorters=response.request.options.params['sort']?JSON.parse(response.request.options.params['sort']):[];var store=Ext.create('Ext.data.Store',{fields:data.fields,autoLoad:false,cmp:cmp,doSort:function(){},sorters:sorters,proxy:{type:'ajax',reader:{type:'json',root:'data'},url:Config.url+'/api/chart/getGridData',getMethod:function(){return'POST'},extraParams:response.request.options.params}});store.on('load',function(st,records,successful){if(!successful||!records||!records.length){this.onChartReceived({cmp:st.cmp});}},this)
var selectController=this.getController('Select');var me=this;for(var i=0;i<data.columns.length;i++){var column=data.columns[i];column.menuDisabled=true;column.resizable=false;column.sortable=cmp.disableSort!==true;if(column.dataIndex=='name'){if(data.columns.length>5){column.locked=true;column.width=160;column.flex=null;}
continue;}
column.renderer=function(val,metadata,rec,rowIndex,colIndex){var columns=this.view.getGridColumns();var column=columns[colIndex];var attrConf=[{name:column.fullName,val:val,units:column.units}]
var html=me.getTooltipHtml(rec.get('name'),column.yearName,attrConf)
metadata.tdAttr='data-qtip="'+html+'"';return me.formatVal(val);}}
var grid=Ext.widget('grid',{renderTo:cmp.el,height:'100%',header:false,store:store,isGrid:true,title:cmp.cfg.title,viewConfig:{getRowClass:function(record,rowIndex,rowParams,store){var colorMap=cmp.cfg.colorMap||selectController.colorMap;var at=record.get('at');var gid=record.get('gid');var loc=record.get('loc');var color='';if(colorMap[loc]&&colorMap[loc][at]){color=colorMap[loc][at][gid]||'';}
return color?('select_'+color):''}},columns:data.columns})
store.load();store.on('load',function(){window.setTimeout(function(){console.log('loadingdone');},200)})
cmp.chart=grid;grid.cmp=cmp;cmp.relayEvents(grid,['beforeselect','itemclick','itemmouseenter']);grid.on('sortchange',function(){me.reconfigure('page');})
var attrs=JSON.parse(response.request.options.params['attrs']);var years=JSON.parse(response.request.options.params['years']);grid.view.on('viewready',function(){if(years.length*attrs.length<5)
grid.view.el.setStyle({overflow:'hidden'})})},getTooltipHtml:function(areaName,yearName,attrConf){var html=areaName+' ('+yearName+')';for(var i=0;i<attrConf.length;i++){html+='<br/>'
var conf=attrConf[i];html+=conf.name+': '
html+='<b>'+this.formatVal(conf.val)+'</b> ';html+=conf.units}
return html;},formatVal:function(val){if(this.isInt(val))return val;var deci=3;if(val>1)deci=2;if(val>100)deci=1;if(val>10000)deci=0;return val!=null?val.toFixed(deci):val;},isInt:function(value){return!isNaN(parseInt(value,10))&&(parseFloat(value,10)==parseInt(value,10));},onPageChange:function(){var me=this;window.setTimeout(function(){me.reconfigure('page');},1)},reconfigure:function(type){var charts=Ext.ComponentQuery.query('chartcmp');var selCtrl=this.getController('Select')
for(var i=0;i<charts.length;i++){var chart=charts[i];if(type=='immediate'){this.colourChart(chart);}
else if(Ext.Array.contains(['expand'],type)){this.reconfigureChart(chart);}
else if(Ext.Array.contains(['outerscatter'],type)&&chart.cfg.type!='scatterchart'){this.reconfigureChart(chart);}
else if(Ext.Array.contains(['outer'],type)){this.reconfigureChart(chart);}
else if(chart.cfg.attrs&&chart.cfg.attrs.length&&chart.cfg.attrs[0].normType=='select'&&selCtrl.actualColor==selCtrl.defaultColor){this.reconfigureChart(chart);}
else if(type=='inner'&&chart.cfg.type=='extentoutline'){this.reconfigureChart(chart);}
else if(Ext.Array.contains(['page','sort'],type)&&Ext.Array.contains(['piechart','columnchart'],chart.cfg.type)){this.reconfigureChart(chart);}
else if(type=='page'&&chart.cfg.type=='grid'){var store=chart.chart.store;Ext.apply(store.proxy.extraParams,this.getPagingParams());store.load();}}},reconfigureAll:function(justMap){var charts=Ext.ComponentQuery.query('chartcmp');for(var i=0;i<charts.length;i++){var chart=charts[i];this.reconfigureChart(chart,false);}},colourChart:function(chart){if(!chart.chart||chart.cfg.type=='featurecount'||chart.cfg.typr=='boxplotchart')
return;if(chart.cfg.type=='grid'){try{chart.chart.getView().refresh();}
catch(err){}
return;}
if(!chart.chart.hasRendered||!chart.chart.series.length){return;}
var colorMap=chart.cfg.colorMap||this.getController('Select').colorMap;if(chart.cfg.type=='piechart'){for(var i=0;i<chart.chart.series.length;i++){var serie=chart.chart.series[i];var at=serie.options.at;var gid=serie.options.gid;var loc=serie.options.loc
var color=null;if(colorMap[loc]&&colorMap[loc][at]){color=colorMap[loc][at][gid]?('#'+(colorMap[loc][at][gid])):null;}
var elem=serie.borderElem;if(color){if(!elem){var bbox=serie.group.getBBox();var center=serie.userOptions.center;var size=serie.userOptions.size
elem=chart.chart.renderer.rect(center[0]-size/2+8,center[1]-size/2+18,size+24,size+24,2)}
elem.attr({'stroke-width':3,stroke:color,zIndex:1}).add();serie.borderElem=elem;}
else{if(elem){elem.destroy();}
serie.borderElem=null;}}}
if(chart.cfg.type=='columnchart'){var data=chart.chart.series[0].data;var labels=chart.chart.xAxis[0].labelGroup.element.childNodes;for(var i=0;i<data.length;i++){var at=data[i].at;var gid=data[i].gid;var loc=data[i].loc
var color=null;if(colorMap[loc]&&colorMap[loc][at]){color=colorMap[loc][at][gid]?('#'+(colorMap[loc][at][gid])):null;}
var elem=data[i].borderElem;if(color){if(!elem){var bbox=labels[i].getBBox();var elem=chart.chart.renderer.rect(bbox.x-1,bbox.y+1,bbox.width+3,bbox.height-1,2)}
elem.attr({'stroke-width':1,stroke:color,zIndex:1}).add();data[i].borderElem=elem;}
else{if(elem){elem.destroy();}
data[i].borderElem=null;}}}
if(chart.cfg.type!='scatterchart')
return;var points=[];for(var i=0;i<chart.chart.series.length;i++){points=Ext.Array.merge(points,chart.chart.series[i].points);}
var updated=false;var pointSeries=[];for(var i=0;i<points.length;i++){var point=points[i];var at=point.at;var gid=point.gid;var loc=point.loc;var actualColor=point.graphic?point.graphic.stroke.toLowerCase():1;if(colorMap[loc]&&colorMap[loc][at]){var color='#'+(colorMap[loc][at][gid]||'dddddd');color=color.toLowerCase();}
else{color='#dddddd';}
Ext.Array.include(pointSeries,point.series);if(color!=actualColor){updated=true;point.series.state='';point.series.origGetAttribs=point.series.getAttribs;point.update({lineColor:color,lineWidth:color=='#dddddd'?1:3},false)
point.series.getAttribs=point.series.origGetAttribs;}}
for(var i=0;i<pointSeries.length;i++){pointSeries[i].getAttribs();}
if(updated){chart.chart.redraw();}},onAttrSetChange:function(combo,value){var storeToFilterName=null;switch(combo.itemId){case'attributeSet':storeToFilterName='attribute4chart';break;case'normAttributeSet':storeToFilterName='normattribute4chart';break;}
var storeToFilterName=storeToFilterName||'attribute4chart4norm';var attrSetStore=Ext.StoreMgr.lookup('attributeset');var attrSet=attrSetStore.getById(value);var attributes=attrSet.get('attributes');var storeToFilter=Ext.StoreMgr.lookup(storeToFilterName);storeToFilter.clearFilter(true);storeToFilter.filter([function(rec){return Ext.Array.contains(attributes,rec.get('_id'));}])},onAddAttribute:function(btn){var panel=btn.up('panel').up('panel')
var attributeSet=Ext.ComponentQuery.query('#attributeSet',panel)[0].getValue();var grid=btn.up('grid');var sel=grid.getSelectionModel().getSelection();if(!sel||!sel.length)
return;var recsToAdd=[];var normType=Ext.ComponentQuery.query('#normType',panel)[0].getValue();var normAttrSet=Ext.ComponentQuery.query('#normAttributeSet',panel)[0].getValue();var normGrid=Ext.ComponentQuery.query('#normselgrid',panel)[0];var normAttr=normGrid.getSelectionModel().getSelection()[0];if(Ext.Array.contains(['year','area'],normType)){normAttrSet=null;normAttr=null;}
else if(normType=='attributeset'&&normAttrSet){normAttr=null}
else if(normType=='attribute'&&normAttrSet&&normAttr){}
else{normType=null;normAttrSet=null;normAttr=null;}
for(var i=0;i<sel.length;i++){var attr=sel[i];var rec=Ext.create('Puma.model.MappedChartAttribute',{as:attributeSet,attr:attr.get('_id')})
if(normType)
rec.set('normType',normType);if(normAttrSet)
rec.set('normAs',normAttrSet);if(normAttr)
rec.set('normAttr',normAttr.get('_id'));recsToAdd.push(rec);}
var addedGrid=Ext.ComponentQuery.query('#addedgrid',panel)[0]
addedGrid.store.add(recsToAdd);},onRemoveAttribute:function(btn){var grid=btn.up('grid');var sel=grid.getSelectionModel().getSelection();grid.store.remove(sel);}});Ext.define('PumaMain.view.ChartBar',{extend:'Ext.container.Container',alias:'widget.chartbar',requires:['PumaMain.view.ScreenshotView'],autoScroll:true,height:"100%",initComponent:function(){this.layout={type:'accordion',multi:true,fill:false}
this.items=[{xtype:'panel',collapsed:true,layout:{type:'fit'},iconCls:'cmptype-snapshot',collapseLeft:true,itemId:'screenshotpanel',helpId:'Snapshots',items:[{xtype:'screenshotview',}],cfgType:'screenshots',height:400,title:'Snapshots'},{xtype:'panel',title:'Regions',itemId:'regionspanel',iconCls:'cmptype-extentoutline',collapseLeft:true,collapsed:true,layout:{type:'absolute'},defaults:{xtype:'component',type:'distantregion',width:264,height:200},items:[{anchor:'50% 33%',x:0,y:0,zoomTo:[-32,35,-24,41]},{anchor:'100% 33%',x:285,y:0,zoomTo:[-20,25,-12,31]},{anchor:'50% 66%',x:0,y:203,zoomTo:[-21,30,-13,36]},{anchor:'100% 66%',x:285,y:203,zoomTo:[52,-24,60,-18]},{anchor:'50% 100%',x:0,y:406,zoomTo:[-57,1,-49,7]},{anchor:'100% 66%',x:285,y:406,zoomTo:[-66,13,-58,19]}]}]
this.callParent();}})
Ext.define('Ext.slider.Multi',{extend:'Ext.form.field.Base',alias:'widget.multislider',alternateClassName:'Ext.slider.MultiSlider',requires:['Ext.slider.Thumb','Ext.slider.Tip','Ext.Number','Ext.util.Format','Ext.Template','Ext.layout.component.field.Slider'],childEls:['endEl','innerEl'],fieldSubTpl:['<div id="{id}" class="'+Ext.baseCSSPrefix+'slider {fieldCls} {vertical}" aria-valuemin="{minValue}" aria-valuemax="{maxValue}" aria-valuenow="{value}" aria-valuetext="{value}">','<div id="{cmpId}-endEl" class="'+Ext.baseCSSPrefix+'slider-end" role="presentation">','<div id="{cmpId}-innerEl" class="'+Ext.baseCSSPrefix+'slider-inner" role="presentation">','{%this.renderThumbs(out, values)%}','</div>','</div>','</div>',{renderThumbs:function(out,values){var me=values.$comp,i=0,thumbs=me.thumbs,len=thumbs.length,thumb,thumbConfig;for(;i<len;i++){thumb=thumbs[i];thumbConfig=thumb.getElConfig();thumbConfig.id=me.id+'-thumb-'+i;Ext.DomHelper.generateMarkup(thumbConfig,out);}},disableFormats:true}],vertical:false,minValue:0,maxValue:100,decimalPrecision:0,keyIncrement:1,increment:0,clickRange:[5,15],clickToChange:true,animate:true,dragging:false,constrainThumbs:true,componentLayout:'sliderfield',useTips:true,tipText:null,ariaRole:'slider',initValue:function(){var me=this,extValue=Ext.value,values=extValue(me.values,[extValue(me.value,extValue(me.minValue,0))]),i=0,len=values.length;me.originalValue=values;for(;i<len;i++){me.addThumb(values[i]);}},initComponent:function(){var me=this,tipPlug,hasTip,p,pLen,plugins;me.thumbs=[];me.keyIncrement=Math.max(me.increment,me.keyIncrement);me.addEvents('beforechange','change','changecomplete','dragstart','drag','dragend');if(me.increment){me.maxValue=Ext.Number.snapInRange(me.maxValue,me.increment,me.minValue);me.value=me.normalizeValue(me.value);}
me.callParent();if(me.useTips){if(Ext.isObject(me.useTips)){tipPlug=Ext.apply({},me.useTips);}else{tipPlug=me.tipText?{getText:me.tipText}:{};}
plugins=me.plugins=me.plugins||[];pLen=plugins.length;for(p=0;p<pLen;p++){if(plugins[p].isSliderTip){hasTip=true;break;}}
if(!hasTip){me.plugins.push(new Ext.slider.Tip(tipPlug));}}},addThumb:function(value){var me=this,thumb=new Ext.slider.Thumb({ownerCt:me,ownerLayout:me.getComponentLayout(),value:value,slider:me,index:me.thumbs.length,constrain:me.constrainThumbs,disabled:!!me.readOnly});me.thumbs.push(thumb);if(me.rendered){thumb.render();}
return thumb;},promoteThumb:function(topThumb){var thumbs=this.thumbs,ln=thumbs.length,zIndex,thumb,i;for(i=0;i<ln;i++){thumb=thumbs[i];if(thumb==topThumb){thumb.bringToFront();}else{thumb.sendToBack();}}},getSubTplData:function(){var me=this;return Ext.apply(me.callParent(),{$comp:me,vertical:me.vertical?Ext.baseCSSPrefix+'slider-vert':Ext.baseCSSPrefix+'slider-horz',minValue:me.minValue,maxValue:me.maxValue,value:me.value});},onRender:function(){var me=this,thumbs=me.thumbs,len=thumbs.length,i=0,thumb;me.callParent(arguments);for(i=0;i<len;i++){thumb=thumbs[i];thumb.el=me.el.getById(me.id+'-thumb-'+i);thumb.onRender();}},initEvents:function(){var me=this;me.mon(me.el,{scope:me,mousedown:me.onMouseDown,keydown:me.onKeyDown});},getTrackpoint:function(xy){var me=this,result,positionProperty,sliderTrack=me.innerEl,trackLength;if(me.vertical){positionProperty='top';trackLength=sliderTrack.getHeight();}else{positionProperty='left';trackLength=sliderTrack.getWidth();}
result=Ext.Number.constrain(sliderTrack.translatePoints(xy)[positionProperty],0,trackLength);return me.vertical?trackLength-result:result;},onMouseDown:function(e){var me=this,thumbClicked=false,i=0,thumbs=me.thumbs,len=thumbs.length,trackPoint;if(me.disabled){return;}
for(;i<len;i++){thumbClicked=thumbClicked||e.target==thumbs[i].el.dom;}
if(me.clickToChange&&!thumbClicked){trackPoint=me.getTrackpoint(e.getXY());if(trackPoint!==undefined){me.onClickChange(trackPoint);}}
me.focus();},onClickChange:function(trackPoint){var me=this,thumb,index;thumb=me.getNearest(trackPoint);if(!thumb.disabled){index=thumb.index;me.setValue(index,Ext.util.Format.round(me.reversePixelValue(trackPoint),me.decimalPrecision),undefined,true);}},getNearest:function(trackPoint){var me=this,clickValue=me.reversePixelValue(trackPoint),nearestDistance=(me.maxValue-me.minValue)+5,nearest=null,thumbs=me.thumbs,i=0,len=thumbs.length,thumb,value,dist;for(;i<len;i++){thumb=me.thumbs[i];value=thumb.value;dist=Math.abs(value-clickValue);if(Math.abs(dist<=nearestDistance)){nearest=thumb;nearestDistance=dist;}}
return nearest;},onKeyDown:function(e){var me=this,k,val;if(me.disabled||me.thumbs.length!==1){e.preventDefault();return;}
k=e.getKey();switch(k){case e.UP:case e.RIGHT:e.stopEvent();val=e.ctrlKey?me.maxValue:me.getValue(0)+me.keyIncrement;me.setValue(0,val,undefined,true);break;case e.DOWN:case e.LEFT:e.stopEvent();val=e.ctrlKey?me.minValue:me.getValue(0)-me.keyIncrement;me.setValue(0,val,undefined,true);break;default:e.preventDefault();}},normalizeValue:function(v){var me=this,Num=Ext.Number,snapFn=Num[me.zeroBasedSnapping?'snap':'snapInRange'];v=snapFn.call(Num,v,me.increment,me.minValue,me.maxValue);v=Ext.util.Format.round(v,me.decimalPrecision);v=Ext.Number.constrain(v,me.minValue,me.maxValue);return v;},setMinValue:function(val){var me=this,i=0,thumbs=me.thumbs,len=thumbs.length,t;me.minValue=val;if(me.rendered){me.inputEl.dom.setAttribute('aria-valuemin',val);}
for(;i<len;++i){t=thumbs[i];t.value=t.value<val?val:t.value;}
me.syncThumbs();},setMaxValue:function(val){var me=this,i=0,thumbs=me.thumbs,len=thumbs.length,t;me.maxValue=val;if(me.rendered){me.inputEl.dom.setAttribute('aria-valuemax',val);}
for(;i<len;++i){t=thumbs[i];t.value=t.value>val?val:t.value;}
me.syncThumbs();},setValue:function(index,value,animate,changeComplete){var me=this,thumbs=me.thumbs,thumb,len,i,values;if(Ext.isArray(index)){values=index;animate=value;for(i=0,len=values.length;i<len;++i){thumb=thumbs[i];if(thumb){me.setValue(i,values[i],animate);}}
return me;}
thumb=me.thumbs[index];value=me.normalizeValue(value);if(value!==thumb.value&&me.fireEvent('beforechange',me,value,thumb.value,thumb)!==false){thumb.value=value;if(me.rendered){me.inputEl.set({'aria-valuenow':value,'aria-valuetext':value});thumb.move(me.calculateThumbPosition(value),Ext.isDefined(animate)?animate!==false:me.animate);me.fireEvent('change',me,value,thumb);me.checkDirty();if(changeComplete){me.fireEvent('changecomplete',me,value,thumb);}}}
return me;},calculateThumbPosition:function(v){var me=this,minValue=me.minValue,pos=(v-minValue)/(me.maxValue-minValue)*100;if(isNaN(pos)){pos=minValue;}
return pos;},getRatio:function(){var me=this,trackLength=this.vertical?this.innerEl.getHeight():this.innerEl.getWidth(),valueRange=this.maxValue-this.minValue;return valueRange===0?trackLength:(trackLength/valueRange);},reversePixelValue:function(pos){return this.minValue+(pos/this.getRatio());},reversePercentageValue:function(pos){return this.minValue+(this.maxValue-this.minValue)*(pos/100);},onDisable:function(){var me=this,i=0,thumbs=me.thumbs,len=thumbs.length,thumb,el,xy;me.callParent();for(;i<len;i++){thumb=thumbs[i];el=thumb.el;thumb.disable();if(Ext.isIE){xy=el.getXY();el.hide();me.innerEl.addCls(me.disabledCls).dom.disabled=true;if(!me.thumbHolder){me.thumbHolder=me.endEl.createChild({cls:Ext.baseCSSPrefix+'slider-thumb '+me.disabledCls});}
me.thumbHolder.show().setXY(xy);}}},onEnable:function(){var me=this,i=0,thumbs=me.thumbs,len=thumbs.length,thumb,el;this.callParent();for(;i<len;i++){thumb=thumbs[i];el=thumb.el;thumb.enable();if(Ext.isIE){me.innerEl.removeCls(me.disabledCls).dom.disabled=false;if(me.thumbHolder){me.thumbHolder.hide();}
el.show();me.syncThumbs();}}},syncThumbs:function(){if(this.rendered){var thumbs=this.thumbs,length=thumbs.length,i=0;for(;i<length;i++){thumbs[i].move(this.calculateThumbPosition(thumbs[i].value));}}},getValue:function(index){return Ext.isNumber(index)?this.thumbs[index].value:this.getValues();},getValues:function(){var values=[],i=0,thumbs=this.thumbs,len=thumbs.length;for(;i<len;i++){values.push(thumbs[i].value);}
return values;},getSubmitValue:function(){var me=this;return(me.disabled||!me.submitValue)?null:me.getValue();},reset:function(){var me=this,arr=[].concat(me.originalValue),a=0,aLen=arr.length,val;for(;a<aLen;a++){val=arr[a];me.setValue(a,val);}
me.clearInvalid();delete me.wasValid;},setReadOnly:function(readOnly){var me=this,thumbs=me.thumbs,len=thumbs.length,i=0;me.callParent(arguments);readOnly=me.readOnly;for(;i<len;++i){if(readOnly){thumbs[i].disable();}else{thumbs[i].enable();}}},beforeDestroy:function(){var me=this,thumbs=me.thumbs,t=0,tLen=thumbs.length,thumb;Ext.destroy(me.innerEl,me.endEl,me.focusEl);for(;t<tLen;t++){thumb=thumbs[t];Ext.destroy(thumb);}
me.callParent();}});Ext.define('Puma.model.Location',{extend:'Ext.data.Model',fields:['_id','name','active','dataset'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/location',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.AttributeSet',{extend:'Ext.data.Model',fields:['_id','name','attributes','active','description','topic','dataset','filterAttributes','otherAttributes','years','year'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/attributeset',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Attribute',{extend:'Ext.data.Model',fields:['_id','name','color','code','type','units','active','description','layerMode'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/attribute',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.AreaTemplate',{extend:'Ext.data.Model',fields:['_id','name','justVisualization','active','symbologies','topic','layerGroup'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/areatemplate',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Dataset',{extend:'Ext.data.Model',fields:['_id','name','active','featureLayers'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/dataset',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.DataView',{extend:'Ext.data.Model',fields:['_id','name','conf'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/dataview',extraParams:{justMine:true},reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Topic',{extend:'Ext.data.Model',fields:['_id','name','active','requiresFullRef'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/topic',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Symbology',{extend:'Ext.data.Model',fields:['_id','name','symbologyName','active'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/symbology',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.LayerRef',{extend:'Ext.data.Model',fields:['_id','name','joinFidColumn','joinParentColumn','columnMap','location','layer','fidColumn','isData','nameColumn','codeColumn','parentColumn','areaTemplate','attributeSet','year','wmsAddress','wmsLayers','active','reuseYears'],idProperty:'_id',proxy:{type:'rest',timeout:120000,url:Config.url+'/rest/layerref',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Theme',{extend:'Ext.data.Model',fields:['_id','name','active','topics'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/theme',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Area',{extend:'Ext.data.TreeModel',fields:['gid','name','tree','at','lr','initialized','extent','id','loc','joingid','filterAttrs','code'],proxy:{type:'ajax',url:Config.url+'/api/theme/getThemeYearConf',reader:{type:'json',root:'data'}}});Ext.define('Puma.model.Year',{extend:'Ext.data.Model',fields:['_id','name','active',{name:'shortName',convert:function(val,rec){var name=rec.get('name');return name.substring(2);}}],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/year',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Scope',{extend:'Ext.data.Model',fields:['_id','name','active','datasets'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/scope',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.MapLayer',{extend:'Ext.data.TreeModel',fields:['name','layer1','layer2','symbologyId','at','bindChart','checked','attribute','attributeSet','type','topic','params','src','sortIndex','cfg','legend','layerGroup','priority','distantLayers','dotChart',{name:'atWithSymbology',convert:function(val,rec){return rec.get('at')+'_'+rec.get('symbologyId')}}],idProperty:'id',proxy:'memory'});Ext.define('Puma.model.LayerGroup',{extend:'Ext.data.Model',fields:['_id','name','active','priority'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/layergroup',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.Visualization',{extend:'Ext.data.Model',fields:['_id','attrSet','columnAttrs','scatterAttrs','choroAttr','layers','dotChart'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/visualization',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Puma.model.DatasetLayerFilters',{extend:'Ext.data.Model',fields:['_id','name','dataset','featureLayer','filters'],idProperty:'_id',proxy:{type:'rest',url:Config.url+'/rest/datasetlayerfilters',reader:{type:'json',root:'data'},writer:{type:'json',writeAllFields:false,root:'data'}}});Ext.define('Gisatlib.paging.PhantomStore',{extend:'Ext.data.Store',requires:['Ext.ux.data.PagingMemoryProxy'],constructor:function(config){Ext.define('PhantomModel',{extend:'Ext.data.Model',fields:['id'],proxy:'pagingmemory'})
this.data=[];this.pageSize=15;this.model='PhantomModel'
this.callParent([config]);},setCount:function(count){var data=[];for(var i=0;i<count;i++){data.push({id:i})}
if(count<=(this.currentPage-1)*this.pageSize){this.currentPage=Math.ceil(count/this.pageSize);}
if(count&&this.currentPage<1){this.currentPage=1;}
this.proxy.data=data;this.load();}});Ext.define('PumaMain.controller.Store',{extend:'Ext.app.Controller',views:[],requires:['Puma.model.Location','Puma.model.AttributeSet','Puma.model.Attribute','Puma.model.AreaTemplate','Puma.model.Dataset','Puma.model.DataView','Puma.model.Topic','Puma.model.Symbology','Puma.model.LayerRef','Puma.model.LayerServer','Puma.model.Theme','Puma.model.Aggregated','Puma.model.Area','Puma.model.Year','Puma.model.Scope','Puma.model.ColumnMap','Puma.model.Column','Puma.model.MapLayer','Puma.model.LayerGroup','Puma.model.DatasetLayerFilters','Puma.model.MappedAttribute','Puma.model.Visualization','Puma.model.Screenshot','Puma.model.MappedChartAttribute','Ext.data.Store','Gisatlib.data.SlaveStore','Gisatlib.paging.PhantomStore','Gisatlib.data.AggregatedStore'],init:function(){if(Config.exportPage){return;}
this.initStores();this.initSlaveStores();this.initLocalStores();this.initAggregatedStores();this.initEvents();this.initLocations();this.getController('Dataview').checkLoading();},initLocations:function(){var store=Ext.StoreMgr.lookup('location4init');store.loading=true;Ext.Ajax.request({url:Config.url+'/api/theme/getLocationConf',scope:this,method:'GET',success:function(response){var data=JSON.parse(response.responseText).data;store.loadData(data);store.loading=false;}})},initAggregatedStores:function(){},initStores:function(){Ext.create('Ext.data.Store',{storeId:'location',autoLoad:true,model:'Puma.model.Location'})
Ext.create('Ext.data.Store',{storeId:'theme',autoLoad:true,model:'Puma.model.Theme'})
Ext.create('Ext.data.Store',{storeId:'layergroup',autoLoad:true,model:'Puma.model.LayerGroup'})
Ext.create('Ext.data.Store',{storeId:'datasetlayerfilters',autoLoad:true,model:'Puma.model.DatasetLayerFilters'})
Ext.create('Ext.data.Store',{storeId:'attributeset',autoLoad:true,model:'Puma.model.AttributeSet'})
Ext.create('Ext.data.Store',{storeId:'attribute',autoLoad:true,model:'Puma.model.Attribute'})
Ext.create('Ext.data.Store',{storeId:'visualization',autoLoad:true,model:'Puma.model.Visualization'})
Ext.create('Ext.data.Store',{storeId:'year',autoLoad:true,sorters:[{property:'name',direction:'ASC'}],model:'Puma.model.Year'})
Ext.create('Ext.data.Store',{storeId:'scope',autoLoad:true,sorters:[{sorterFn:function(r1,r2){var map={387:4,1199:3,236:1,1140:2}
return(map[r1.get('_id')]||10)-(map[r2.get('_id')]||10);}}],model:'Puma.model.Scope'})
Ext.create('Ext.data.Store',{storeId:'areatemplate',autoLoad:true,model:'Puma.model.AreaTemplate'})
Ext.create('Ext.data.Store',{storeId:'symbology',autoLoad:true,model:'Puma.model.Symbology'})
Ext.create('Ext.data.TreeStore',{model:'Puma.model.Area',root:{expanded:false,children:[{text:"Child 1",leaf:true}]},sorters:[{property:'name',direction:'ASC'}],storeId:'area'})
Ext.create('Ext.data.Store',{storeId:'dataset',autoLoad:true,model:'Puma.model.Dataset'})
Ext.create('Ext.data.Store',{storeId:'topic',autoLoad:true,model:'Puma.model.Topic'})
Ext.create('Ext.data.Store',{storeId:'dataview',autoLoad:true,filters:[function(rec){return rec.get('name');}],model:'Puma.model.DataView'})},initEvents:function(){var me=this;var areaStore=Ext.StoreMgr.lookup('area');areaStore.on('beforeload',function(store,options){me.getController('Area').onBeforeLoad(store,options);},this);areaStore.on('load',function(store,node,records){me.getController('Area').onLoad(store,node,records);},this);},initSlaveStores:function(){Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'visualization4window',model:'Puma.model.Visualization'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'activescope',filters:[function(rec){return rec.get('active')!==false;}],model:'Puma.model.Scope'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'activedataset',filters:[function(rec){return rec.get('active')!==false;}],model:'Puma.model.Dataset'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'activelocation',filters:[function(rec){return rec.get('active')!==false;}],model:'Puma.model.Location'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'activeattributeset',filters:[function(rec){return rec.get('active')!==false;}],model:'Puma.model.AttributeSet'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'theme4sel',filters:[function(rec){return false;}],model:'Puma.model.Theme'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'year4sel',filters:[function(rec){return false;}],model:'Puma.model.Year'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'attribute4sel',filters:[function(rec){return false;}],model:'Puma.model.Attribute'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'visualization4sel',filters:[function(rec){return false;}],sorters:[{sorterFn:function(o1,o2){var activeThemeCombo=Ext.ComponentQuery.query('#seltheme')[0];var activeThemeId=activeThemeCombo?activeThemeCombo.getValue():null;var theme=activeThemeId?Ext.StoreMgr.lookup('theme').getById(activeThemeId):null;var order=theme?theme.get('visOrder'):null;if(!order)return o1.get('name')>o2.get('name');var idx1=Ext.Array.indexOf(order,o1.get('_id'));var idx2=Ext.Array.indexOf(order,o2.get('_id'));if(idx1<0)return true;if(idx2<0)return false;return idx1>idx2;}}],model:'Puma.model.Visualization'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'featurelayertemplate',filters:[function(rec){return!rec.get('justVisualization')&&rec.get('active');}],model:'Puma.model.AreaTemplate'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'layertemplate',filters:[function(rec){return rec.get('justVisualization')&&rec.get('active');}],model:'Puma.model.AreaTemplate'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'layertemplate2choose',filters:[function(rec){return false;}],model:'Puma.model.AreaTemplate'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'attributeset2choose',filters:[function(rec){return false;}],model:'Puma.model.AttributeSet'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'attributeset4chart',model:'Puma.model.AttributeSet'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'attribute4chart',sorters:[{property:'code',direction:'ASC'}],filters:[function(rec){return false;}],model:'Puma.model.Attribute'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'normattribute4chart',sorters:[{property:'code',direction:'ASC'}],filters:[function(rec){return false;}],model:'Puma.model.Attribute'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'attribute4chart4norm',filters:[function(rec){return false;}],model:'Puma.model.Attribute'})
Ext.create('Gisatlib.data.SlaveStore',{slave:true,storeId:'year4chart',model:'Puma.model.Year'})
Ext.create('Gisatlib.data.SlaveStore',{model:'Puma.model.MapLayer',slave:true,filters:[function(rec){return rec.get('type')=='topiclayer';}],storeId:'layers4outline'})
Ext.create('Gisatlib.data.SlaveStore',{model:'Puma.model.Dataset',slave:true,filters:[function(rec){return false;}],storeId:'dataset4sel'})
Ext.create('Gisatlib.data.SlaveStore',{model:'Puma.model.Attribute',slave:true,filters:[function(rec){return false;}],storeId:'attribute4set'})},initLocalStores:function(){Ext.create('Gisatlib.paging.PhantomStore',{storeId:'paging'})
Ext.create('Ext.data.Store',{model:'Puma.model.MappedChartAttribute',data:[],storeId:'attributes2choose'})
Ext.create('Ext.data.TreeStore',{model:'Puma.model.MapLayer',storeId:'layers',sorters:[{sorterFn:function(o1,o2){var type1=o1.get('type');if(Ext.Array.contains(['systemgroup,choroplethgroup','themtaicgroup','basegroup'],type1)){return null;}}}],root:{expanded:true,children:[{name:'Analytical units',type:'systemgroup',expanded:true,checked:null},{name:'Thematic maps',type:'choroplethgroup',cls:'invisiblecomplete',expanded:true,children:[],checked:null},{name:'Information layers',type:'thematicgroup',expanded:true,checked:null},{name:'Background layers',type:'basegroup',expanded:true,checked:null}]}})
Ext.create('Ext.data.Store',{model:'Puma.model.MapLayer',filters:[function(rec){return rec.get('checked');}],slave:true,sorters:[{property:'sortIndex',direction:'ASC'}],storeId:'selectedlayers'})
Ext.create('Ext.data.Store',{model:'Puma.model.Screenshot',data:[],storeId:'screenshot'})
Ext.create('Ext.data.Store',{fields:['name','type'],storeId:'classificationtype',data:[{name:'Continuous',type:'continuous'},{name:'Equal',type:'equal'},{name:'Quantiles',type:'quantiles'},{name:'Range',type:'range'}]})
Ext.create('Ext.data.Store',{storeId:'charttype4chart',fields:['name','type'],data:[{name:'Table',type:'grid'},{name:'Column',type:'columnchart'},{name:'Scatter',type:'scatterchart'},{name:'Pie',type:'piechart'},{name:'Extent outline',type:'extentoutline'}]})
Ext.create('Ext.data.Store',{storeId:'stacking4chart',fields:['name','type'],data:[{name:'None',type:'none'},{name:'Percent',type:'percent'},{name:'Normal',type:'normal'},{name:'Double',type:'double'}]})
Ext.create('Ext.data.Store',{storeId:'aggregate4chart',fields:['name','type'],data:[{name:'None',type:'none'},{name:'Average',type:'avg'},{name:'All',type:'topall'},{name:'Select',type:'select'}]})
Ext.create('Ext.data.Store',{storeId:'areas4chart',fields:['name','type'],data:[{name:'Just Select',type:'select'},{name:'Tree all',type:'treeall'},{name:'Tree lowest level',type:'treelowest'}]})
Ext.create('Ext.data.Store',{storeId:'normalization4chart',fields:['name','type'],data:[{name:'Area',type:'area'},{name:'Attribute',type:'attribute'},{name:'Attribute set',type:'attributeset'},{name:'First selected',type:'select'}]})
Ext.create('Ext.data.Store',{storeId:'normalization4chartlimited',fields:['name','type'],data:[{name:'Area',type:'area'},{name:'Attribute',type:'attribute'},{name:'Attribute set',type:'attributeset'}]})
Ext.create('Ext.data.Store',{storeId:'mappedattribute4chart',model:'Puma.model.MappedChartAttribute',data:[]})
Ext.create('Ext.data.Store',{storeId:'location4init',sorters:[{sorterFn:function(r1,r2){var d1=r1.get('dataset');var d2=r2.get('dataset');if(!d1)return 1;if(!d2)return-1;return 0;}},{property:'name',direction:'ASC'}],fields:['name','locGid','location','dataset','at'],filters:[function(rec){return false;}],data:[]})}});Ext.define('Gisatlib.slider.DiscreteThumb',{extend:'Ext.slider.Thumb',alias:'widget.discretethumb',initEvents:function(){var me=this;this.el.on('click',function(evt){var el=this;var unchanged=false;var removed=false;var cont=el.up('.'+Ext.baseCSSPrefix+'slider-inner');if(evt.ctrlKey){el.toggleCls(Ext.baseCSSPrefix+'slider-thumb-drag')
var thumbEls=cont.query('.'+Ext.baseCSSPrefix+'slider-thumb');if(!thumbEls.length){el.toggleCls(Ext.baseCSSPrefix+'slider-thumb-drag');unchanged=true;}}
else{var thumbEls=cont.query('.'+Ext.baseCSSPrefix+'slider-thumb');for(var i=0;i<thumbEls.length;i++){var thumbEl=Ext.get(thumbEls[i]);var hasCls=thumbEl.hasCls(Ext.baseCSSPrefix+'slider-thumb-drag')
if(el==thumbEl){thumbEl.addCls(Ext.baseCSSPrefix+'slider-thumb-drag');if(hasCls){unchanged=true;}}
else{thumbEl.removeCls(Ext.baseCSSPrefix+'slider-thumb-drag');removed=true;}}}
if(!unchanged||removed){me.slider.fireEvent('change',me.slider,me.slider.getValue(),me)}})}})
Ext.define('Gisatlib.slider.DiscreteTimeline',{extend:'Ext.slider.Multi',alias:'widget.discretetimeline',requires:['Gisatlib.slider.DiscreteThumb'],mixins:['Ext.util.Bindable','Ext.form.field.Field'],clickToChange:false,initComponent:function(){this.fieldSubTpl[0]='<div class="timeline-labels"></div>'+this.fieldSubTpl[0];this.sortField=this.sortField||'name';this.displayField=this.displayField||'name';this.valueField=this.valueField||'_id';this.callParent();if(this.store){this.bindStore(this.store);}},getStoreListeners:function(){return{datachanged:this.refresh}},refresh:function(){var me=this;if(!me.store){return;}
var value=this.getValue();var presentValues=this.store.collect(this.valueField);var newValues=Ext.Array.intersect(value,presentValues);if(!newValues.length&&!this.allowBlank){newValues.push(presentValues[0]);}
var years=this.store.collect(this.sortField);years=Ext.Array.map(years,function(v){return parseInt(v);})
years=Ext.Array.sort(years);if(years.length<1)return;this.setMinValue(years.length>1?years[0]:years[0]-1);this.setMaxValue(years.length>1?years[years.length-1]:years[0]+1);this.syncThumbCount(years);var valueChanged=Ext.Array.difference(value,newValues).length||Ext.Array.difference(newValues,value).length
this.setValue(newValues,!valueChanged);window.setTimeout(function(){me.updateLabels();},1)},syncThumbCount:function(values){var thumbCount=this.thumbs.length
for(var i=0;i<thumbCount;i++){var thumb=this.thumbs[i];if(thumb.labelEl)thumb.labelEl.destroy();thumb.el.destroy();}
this.thumbs=[];for(var i=0;i<values.length;i++){this.addThumb(values[i]);}},addThumb:function(value){if(!this.store||!this.store.isStore){return;}
var rec=this.store.findRecord(this.sortField,value);var recValue=rec?rec.get(this.valueField):null;var displayValue=rec?rec.get(this.displayField):null;var me=this,thumb=new Gisatlib.slider.DiscreteThumb({ownerCt:me,ownerLayout:me.getComponentLayout(),value:value,recValue:recValue,displayValue:displayValue,slider:me,index:me.thumbs.length,constrain:me.constrainThumbs,disabled:!!me.readOnly});me.thumbs.push(thumb);if(me.rendered){thumb.render();}
return thumb;},updateLabels:function(){var cont=this.el.down('.timeline-labels');cont.update('');for(var i=0;i<this.thumbs.length;i++){var thumb=this.thumbs[i];var labelEl=Ext.get(Ext.DomHelper.createDom({cls:'timeline-label',tag:'span',html:thumb.displayValue}));cont.appendChild(labelEl);var offset=0;labelEl.alignTo(thumb.el,"b-t",[0,0]);if(i==0&&labelEl.dom.offsetLeft<2){offset=2-labelEl.dom.offsetLeft}
else if(labelEl.dom.offsetParent&&labelEl.dom.offsetLeft+labelEl.dom.offsetWidth>labelEl.dom.offsetParent.offsetWidth-2){offset=-(labelEl.dom.offsetLeft+labelEl.dom.offsetWidth-labelEl.dom.offsetParent.offsetWidth+2);}
if(offset){labelEl.alignTo(thumb.el,"b-t",[offset,0]);}
thumb.labelEl=labelEl;}},getValue:function(){var value=[];for(var i=0;i<this.thumbs.length;i++){var thumb=this.thumbs[i];if(thumb.el&&thumb.el.hasCls(Ext.baseCSSPrefix+'slider-thumb-drag')){value.push(thumb.recValue);}}
return value;},setValue:function(value,disableChange){value=Ext.isArray(value)?value:[value];var changed=false;for(var i=0;i<this.thumbs.length;i++){var thumb=this.thumbs[i];if(Ext.Array.contains(value,thumb.recValue)){thumb.el.addCls(Ext.baseCSSPrefix+'slider-thumb-drag');changed=true;}
else{thumb.el.removeCls(Ext.baseCSSPrefix+'slider-thumb-drag');changed=true;}}
if(!disableChange){this.fireEvent('change',this,this.getValue());}
return value;},})
Ext.define('Ext.form.FieldContainer',{extend:'Ext.container.Container',mixins:{labelable:'Ext.form.Labelable',fieldAncestor:'Ext.form.FieldAncestor'},requires:'Ext.layout.component.field.FieldContainer',alias:'widget.fieldcontainer',componentLayout:'fieldcontainer',componentCls:Ext.baseCSSPrefix+'form-fieldcontainer',combineLabels:false,labelConnector:', ',combineErrors:false,maskOnDisable:false,fieldSubTpl:'{%this.renderContainer(out,values)%}',initComponent:function(){var me=this;me.initLabelable();me.initFieldAncestor();if(me.labelAlign=='top'){me.itemNodeOffset=1;}
me.callParent();},beforeRender:function(){this.callParent(arguments);this.beforeLabelableRender();},onLabelableAdded:function(labelable){var me=this;if(Ext.isGecko&&me.layout.type==='absolute'&&!me.hideLabel&&me.labelAlign!=='top'){labelable.x+=(me.labelWidth+me.labelPad);}
me.mixins.fieldAncestor.onLabelableAdded.call(me,labelable);me.updateLabel();},onLabelableRemoved:function(labelable){var me=this;me.mixins.fieldAncestor.onLabelableRemoved.call(me,labelable);me.updateLabel();},initRenderTpl:function(){var me=this;if(!me.hasOwnProperty('renderTpl')){me.renderTpl=me.getTpl('labelableRenderTpl');}
return me.callParent();},initRenderData:function(){return Ext.applyIf(this.callParent(),this.getLabelableRenderData());},getFieldLabel:function(){var label=this.fieldLabel||'';if(!label&&this.combineLabels){label=Ext.Array.map(this.query('[isFieldLabelable]'),function(field){return field.getFieldLabel();}).join(this.labelConnector);}
return label;},getSubTplData:function(){var ret=this.initRenderData();Ext.apply(ret,this.subTplData);return ret;},getSubTplMarkup:function(){var me=this,tpl=me.getTpl('fieldSubTpl'),html;if(!tpl.renderContent){me.setupRenderTpl(tpl);}
html=tpl.apply(me.getSubTplData());return html;},updateLabel:function(){var me=this,label=me.labelEl;if(label){me.setFieldLabel(me.getFieldLabel());}},onFieldErrorChange:function(field,activeError){if(this.combineErrors){var me=this,oldError=me.getActiveError(),invalidFields=Ext.Array.filter(me.query('[isFormField]'),function(field){return field.hasActiveError();}),newErrors=me.getCombinedErrors(invalidFields);if(newErrors){me.setActiveErrors(newErrors);}else{me.unsetActiveError();}
if(oldError!==me.getActiveError()){me.doComponentLayout();}}},getCombinedErrors:function(invalidFields){var errors=[],f,fLen=invalidFields.length,field,activeErrors,a,aLen,error,label;for(f=0;f<fLen;f++){field=invalidFields[f];activeErrors=field.getActiveErrors();aLen=activeErrors.length;for(a=0;a<aLen;a++){error=activeErrors[a];label=field.getFieldLabel();errors.push((label?label+': ':'')+error);}}
return errors;},getTargetEl:function(){return this.bodyEl||this.callParent();}});Ext.define('Ext.form.CheckboxGroup',{extend:'Ext.form.FieldContainer',mixins:{field:'Ext.form.field.Field'},alias:'widget.checkboxgroup',requires:['Ext.layout.container.CheckboxGroup','Ext.form.field.Base'],columns:'auto',vertical:false,allowBlank:true,blankText:"You must select at least one item in this group",defaultType:'checkboxfield',groupCls:Ext.baseCSSPrefix+'form-check-group',fieldBodyCls:Ext.baseCSSPrefix+'form-checkboxgroup-body',layout:'checkboxgroup',initComponent:function(){var me=this;me.callParent();me.initField();},initValue:function(){var me=this,valueCfg=me.value;me.originalValue=me.lastValue=valueCfg||me.getValue();if(valueCfg){me.setValue(valueCfg);}},onFieldAdded:function(field){var me=this;if(field.isCheckbox){me.mon(field,'change',me.checkChange,me);}
me.callParent(arguments);},onFieldRemoved:function(field){var me=this;if(field.isCheckbox){me.mun(field,'change',me.checkChange,me);}
me.callParent(arguments);},isEqual:function(value1,value2){var toQueryString=Ext.Object.toQueryString;return toQueryString(value1)===toQueryString(value2);},getErrors:function(){var errors=[];if(!this.allowBlank&&Ext.isEmpty(this.getChecked())){errors.push(this.blankText);}
return errors;},getBoxes:function(query){return this.query('[isCheckbox]'+(query||''));},eachBox:function(fn,scope){Ext.Array.forEach(this.getBoxes(),fn,scope||this);},getChecked:function(){return this.getBoxes('[checked]');},isDirty:function(){var boxes=this.getBoxes(),b,bLen=boxes.length;for(b=0;b<bLen;b++){if(boxes[b].isDirty()){return true;}}},setReadOnly:function(readOnly){var boxes=this.getBoxes(),b,bLen=boxes.length;for(b=0;b<bLen;b++){boxes[b].setReadOnly(readOnly);}
this.readOnly=readOnly;},reset:function(){var me=this,hadError=me.hasActiveError(),preventMark=me.preventMark;me.preventMark=true;me.batchChanges(function(){var boxes=me.getBoxes(),b,bLen=boxes.length;for(b=0;b<bLen;b++){boxes[b].reset();}});me.preventMark=preventMark;me.unsetActiveError();if(hadError){me.updateLayout();}},resetOriginalValue:function(){var me=this,boxes=me.getBoxes(),b,bLen=boxes.length;for(b=0;b<bLen;b++){boxes[b].resetOriginalValue();}
me.originalValue=me.getValue();me.checkDirty();},setValue:function(value){var me=this,boxes=me.getBoxes(),b,bLen=boxes.length,box,name,cbValue;me.batchChanges(function(){for(b=0;b<bLen;b++){box=boxes[b];name=box.getName();cbValue=false;if(value&&value.hasOwnProperty(name)){if(Ext.isArray(value[name])){cbValue=Ext.Array.contains(value[name],box.inputValue);}else{cbValue=value[name];}}
box.setValue(cbValue);}});return me;},getValue:function(){var values={},boxes=this.getBoxes(),b,bLen=boxes.length,box,name,inputValue,bucket;for(b=0;b<bLen;b++){box=boxes[b];name=box.getName();inputValue=box.inputValue;if(box.getValue()){if(values.hasOwnProperty(name)){bucket=values[name];if(!Ext.isArray(bucket)){bucket=values[name]=[bucket];}
bucket.push(inputValue);}else{values[name]=inputValue;}}}
return values;},getSubmitData:function(){return null;},getModelData:function(){return null;},validate:function(){var me=this,errors,isValid,wasValid;if(me.disabled){isValid=true;}else{errors=me.getErrors();isValid=Ext.isEmpty(errors);wasValid=!me.hasActiveError();if(isValid){me.unsetActiveError();}else{me.setActiveError(errors);}}
if(isValid!==wasValid){me.fireEvent('validitychange',me,isValid);me.updateLayout();}
return isValid;}},function(){this.borrow(Ext.form.field.Base,['markInvalid','clearInvalid']);});Ext.define('PumaMain.view.AddAttributeGrid',{extend:'Ext.grid.Panel',alias:'widget.addattributegrid',colspan:2,border:0,header:false,autoScroll:true,requires:['Ext.ux.CheckColumn','Ext.ux.grid.filter.StringFilter'],initComponent:function(){var filters={ftype:'filters',local:true};this.store=Ext.StoreMgr.lookup('attributes2choose')
this.columns=[{xtype:'checkcolumnwithheader',store:this.store,columnHeaderCheckbox:true,width:40,menuDisabled:true,filterable:false,resizable:false,dataIndex:'checked'},{dataIndex:'attrName',flex:1,resizable:false,text:'Attribute',filter:{type:'string'}},{dataIndex:'asName',flex:1,resizable:false,text:'Attribute set',filter:{type:'string'}}]
this.buttons=[{text:'Add',itemId:'add'},{itemId:'back',text:'Back'}]
this.enableColumnHide=false;this.features=[filters]
this.callParent();}})
Ext.define('Ext.ux.RowExpander',{extend:'Ext.AbstractPlugin',lockableScope:'normal',requires:['Ext.grid.feature.RowBody','Ext.grid.feature.RowWrap'],alias:'plugin.rowexpander',rowBodyTpl:null,expandOnEnter:true,expandOnDblClick:true,selectRowOnExpand:false,rowBodyTrSelector:'.x-grid-rowbody-tr',rowBodyHiddenCls:'x-grid-row-body-hidden',rowCollapsedCls:'x-grid-row-collapsed',constructor:function(){var me=this,grid,rowBodyTpl,features;me.callParent(arguments);grid=me.getCmp();me.recordsExpanded={};if(!me.rowBodyTpl){Ext.Error.raise("The 'rowBodyTpl' config is required and is not defined.");}
me.rowBodyTpl=Ext.XTemplate.getTpl(me,'rowBodyTpl');rowBodyTpl=this.rowBodyTpl;features=[{ftype:'rowbody',lockableScope:'normal',columnId:me.getHeaderId(),recordsExpanded:me.recordsExpanded,rowBodyHiddenCls:me.rowBodyHiddenCls,rowCollapsedCls:me.rowCollapsedCls,getAdditionalData:me.getRowBodyFeatureData,getRowBodyContents:function(data){return rowBodyTpl.applyTemplate(data);}},{ftype:'rowwrap',lockableScope:'normal'},{ftype:'feature',lockableScope:'locked',getAdditionalData:function(data,idx,record,result){if(!me.recordsExpanded[record.internalId]){result.rowCls=(result.rowCls||'')+' '+me.rowCollapsedCls;}}}];if(grid.features){grid.features=Ext.Array.push(features,grid.features);}else{grid.features=features;}},init:function(grid){var me=this,reconfigurable=grid;me.callParent(arguments);me.grid=grid;me.view=grid.getView();me.addExpander();me.bindView(me.view);if(reconfigurable.ownerLockable){reconfigurable=reconfigurable.ownerLockable;me.bindView(reconfigurable.lockedGrid.getView());}
reconfigurable.on('beforereconfigure',me.beforeReconfigure,me);},beforeReconfigure:function(grid,store,columns,oldStore,oldColumns){var expander=this.getHeaderConfig();expander.locked=true;columns.unshift(expander);},addExpander:function(){var me=this,expanderGrid=me.grid,expanderHeader=me.getHeaderConfig();if(expanderGrid.ownerLockable){expanderGrid=expanderGrid.ownerLockable.lockedGrid;expanderGrid.width+=expanderHeader.width;}
expanderGrid.headerCt.insert(0,expanderHeader);},getHeaderId:function(){if(!this.headerId){this.headerId=Ext.id();}
return this.headerId;},getRowBodyFeatureData:function(data,idx,record,orig){var me=this,o=me.self.prototype.getAdditionalData.apply(this,arguments),id=me.columnId;o.rowBodyColspan=o.rowBodyColspan-1;o.rowBody=me.getRowBodyContents(data);o.rowCls=me.recordsExpanded[record.internalId]?'':me.rowCollapsedCls;o.rowBodyCls=me.recordsExpanded[record.internalId]?'':me.rowBodyHiddenCls;o[id+'-tdAttr']=' valign="top" rowspan="2" ';if(orig[id+'-tdAttr']){o[id+'-tdAttr']+=orig[id+'-tdAttr'];}
return o;},bindView:function(view){if(this.expandOnEnter){view.on('itemkeydown',this.onKeyDown,this);}
if(this.expandOnDblClick){view.on('itemdblclick',this.onDblClick,this);}},onKeyDown:function(view,record,row,rowIdx,e){if(e.getKey()==e.ENTER){var ds=view.store,sels=view.getSelectionModel().getSelection(),ln=sels.length,i=0;for(;i<ln;i++){rowIdx=ds.indexOf(sels[i]);this.toggleRow(rowIdx,sels[i]);}}},onDblClick:function(view,record,row,rowIdx,e){this.toggleRow(rowIdx,record);},toggleRow:function(rowIdx,record){var me=this,view=me.view,rowNode=view.getNode(rowIdx),row=Ext.fly(rowNode,'_rowExpander'),nextBd=row.down(me.rowBodyTrSelector,true),isCollapsed=row.hasCls(me.rowCollapsedCls),addOrRemoveCls=isCollapsed?'removeCls':'addCls',rowHeight;Ext.suspendLayouts();row[addOrRemoveCls](me.rowCollapsedCls);Ext.fly(nextBd)[addOrRemoveCls](me.rowBodyHiddenCls);me.recordsExpanded[record.internalId]=isCollapsed;view.refreshSize();view.fireEvent(isCollapsed?'expandbody':'collapsebody',row.dom,record,nextBd);if(me.grid.ownerLockable){view=me.grid.ownerLockable.lockedGrid.view;rowHeight=row.getHeight();row=Ext.fly(view.getNode(rowIdx),'_rowExpander');row.setHeight(rowHeight);row[addOrRemoveCls](me.rowCollapsedCls);view.refreshSize();}
Ext.resumeLayouts(true);},getHeaderConfig:function(){var me=this;return{id:me.getHeaderId(),width:24,lockable:false,sortable:false,resizable:false,draggable:false,hideable:false,menuDisabled:true,cls:Ext.baseCSSPrefix+'grid-header-special',renderer:function(value,metadata){metadata.tdCls=Ext.baseCSSPrefix+'grid-cell-special';return'<div class="'+Ext.baseCSSPrefix+'grid-row-expander">&#160;</div>';},processEvent:function(type,view,cell,rowIndex,cellIndex,e,record){if(type=="mousedown"&&e.getTarget('.x-grid-row-expander')){me.toggleRow(rowIndex,record);return me.selectRowOnExpand;}}};}});Ext.define('Ext.tab.Tab',{extend:'Ext.button.Button',alias:'widget.tab',requires:['Ext.layout.component.Tab','Ext.util.KeyNav'],componentLayout:'tab',isTab:true,baseCls:Ext.baseCSSPrefix+'tab',activeCls:'active',closableCls:'closable',closable:true,closeText:'Close Tab',active:false,childEls:['closeEl'],scale:false,position:'top',initComponent:function(){var me=this;me.addEvents('activate','deactivate','beforeclose','close');me.callParent(arguments);if(me.card){me.setCard(me.card);}},getTemplateArgs:function(){var me=this,result=me.callParent();result.closable=me.closable;result.closeText=me.closeText;return result;},beforeRender:function(){var me=this,tabBar=me.up('tabbar'),tabPanel=me.up('tabpanel');me.callParent();me.addClsWithUI(me.position);me.syncClosableUI();if(!me.minWidth){me.minWidth=(tabBar)?tabBar.minTabWidth:me.minWidth;if(!me.minWidth&&tabPanel){me.minWidth=tabPanel.minTabWidth;}
if(me.minWidth&&me.iconCls){me.minWidth+=25;}}
if(!me.maxWidth){me.maxWidth=(tabBar)?tabBar.maxTabWidth:me.maxWidth;if(!me.maxWidth&&tabPanel){me.maxWidth=tabPanel.maxTabWidth;}}},onRender:function(){var me=this;me.callParent(arguments);me.keyNav=new Ext.util.KeyNav(me.el,{enter:me.onEnterKey,del:me.onDeleteKey,scope:me});},enable:function(silent){var me=this;me.callParent(arguments);me.removeClsWithUI(me.position+'-disabled');return me;},disable:function(silent){var me=this;me.callParent(arguments);me.addClsWithUI(me.position+'-disabled');return me;},onDestroy:function(){var me=this;Ext.destroy(me.keyNav);delete me.keyNav;me.callParent(arguments);},setClosable:function(closable){var me=this;closable=(!arguments.length||!!closable);if(me.closable!=closable){me.closable=closable;if(me.card){me.card.closable=closable;}
me.syncClosableUI();if(me.rendered){me.syncClosableElements();me.updateLayout();}}},syncClosableElements:function(){var me=this,closeEl=me.closeEl;if(me.closable){if(!closeEl){me.closeEl=me.btnWrap.insertSibling({tag:'a',cls:me.baseCls+'-close-btn',href:'#',title:me.closeText},'after');}}else if(closeEl){closeEl.remove();delete me.closeEl;}},syncClosableUI:function(){var me=this,classes=[me.closableCls,me.closableCls+'-'+me.position];if(me.closable){me.addClsWithUI(classes);}else{me.removeClsWithUI(classes);}},setCard:function(card){var me=this;me.card=card;me.setText(me.title||card.title);me.setIconCls(me.iconCls||card.iconCls);me.setIcon(me.icon||card.icon);},onCloseClick:function(){var me=this;if(me.fireEvent('beforeclose',me)!==false){if(me.tabBar){if(me.tabBar.closeTab(me)===false){return;}}else{me.fireClose();}}},fireClose:function(){this.fireEvent('close',this);},onEnterKey:function(e){var me=this;if(me.tabBar){me.tabBar.onClick(e,me.el);}},onDeleteKey:function(e){if(this.closable){this.onCloseClick();}},activate:function(supressEvent){var me=this;me.active=true;me.addClsWithUI([me.activeCls,me.position+'-'+me.activeCls]);if(supressEvent!==true){me.fireEvent('activate',me);}},deactivate:function(supressEvent){var me=this;me.active=false;me.removeClsWithUI([me.activeCls,me.position+'-'+me.activeCls]);if(supressEvent!==true){me.fireEvent('deactivate',me);}}});Ext.define('Ext.tab.Bar',{extend:'Ext.panel.Header',alias:'widget.tabbar',baseCls:Ext.baseCSSPrefix+'tab-bar',requires:['Ext.tab.Tab'],isTabBar:true,defaultType:'tab',plain:false,childEls:['body','strip'],renderTpl:['<div id="{id}-body" class="{baseCls}-body {bodyCls}<tpl if="ui"> {baseCls}-body-{ui}<tpl for="uiCls"> {parent.baseCls}-body-{parent.ui}-{.}</tpl></tpl>"<tpl if="bodyStyle"> style="{bodyStyle}"</tpl>>','{%this.renderContainer(out,values)%}','</div>','<div id="{id}-strip" class="{baseCls}-strip<tpl if="ui"> {baseCls}-strip-{ui}<tpl for="uiCls"> {parent.baseCls}-strip-{parent.ui}-{.}</tpl></tpl>"></div>'],initComponent:function(){var me=this;if(me.plain){me.setUI(me.ui+'-plain');}
me.addClsWithUI(me.dock);me.addEvents('change');me.callParent(arguments);Ext.merge(me.layout,me.initialConfig.layout);me.layout.align=(me.orientation=='vertical')?'left':'top';me.layout.overflowHandler=new Ext.layout.container.boxOverflow.Scroller(me.layout);me.remove(me.titleCmp);delete me.titleCmp;Ext.apply(me.renderData,{bodyCls:me.bodyCls});},getLayout:function(){var me=this;me.layout.type=(me.dock==='top'||me.dock==='bottom')?'hbox':'vbox';return me.callParent(arguments);},onAdd:function(tab){tab.position=this.dock;this.callParent(arguments);},onRemove:function(tab){var me=this;if(tab===me.previousTab){me.previousTab=null;}
me.callParent(arguments);},afterComponentLayout:function(width){var me=this,needsScroll=me.needsScroll;me.callParent(arguments);me.strip.setWidth(width);if(needsScroll){me.layout.overflowHandler.scrollToItem(me.activeTab);}
delete me.needsScroll;},onClick:function(e,target){var me=this,tabEl=e.getTarget('.'+Ext.tab.Tab.prototype.baseCls),tab=tabEl&&Ext.getCmp(tabEl.id),tabPanel=me.tabPanel,isCloseClick=tab&&tab.closeEl&&(target===tab.closeEl.dom);if(isCloseClick){e.preventDefault();}
if(tab&&tab.isDisabled&&!tab.isDisabled()){if(tab.closable&&isCloseClick){tab.onCloseClick();}else{if(tabPanel){tabPanel.setActiveTab(tab.card);}else{me.setActiveTab(tab);}
tab.focus();}}},closeTab:function(toClose){var me=this,card=toClose.card,tabPanel=me.tabPanel,toActivate;if(card&&card.fireEvent('beforeclose',card)===false){return false;}
toActivate=me.findNextActivatable(toClose);Ext.suspendLayouts();if(tabPanel&&card){delete toClose.ownerCt;card.fireEvent('close',card);tabPanel.remove(card);if(!tabPanel.getComponent(card)){toClose.fireClose();me.remove(toClose);}else{toClose.ownerCt=me;Ext.resumeLayouts(true);return false;}}
if(toActivate){if(tabPanel){tabPanel.setActiveTab(toActivate.card);}else{me.setActiveTab(toActivate);}
toActivate.focus();}
Ext.resumeLayouts(true);},findNextActivatable:function(toClose){var me=this;if(toClose.active&&me.items.getCount()>1){return(me.previousTab&&me.previousTab!==toClose&&!me.previousTab.disabled)?me.previousTab:(toClose.next('tab[disabled=false]')||toClose.prev('tab[disabled=false]'));}},setActiveTab:function(tab){var me=this;if(!tab.disabled&&tab!==me.activeTab){if(me.activeTab){if(me.activeTab.isDestroyed){me.previousTab=null;}else{me.previousTab=me.activeTab;me.activeTab.deactivate();}}
tab.activate();me.activeTab=tab;me.fireEvent('change',me,tab,tab.card);me.needsScroll=true;me.updateLayout();}}});Ext.define('Ext.tab.Panel',{extend:'Ext.panel.Panel',alias:'widget.tabpanel',alternateClassName:['Ext.TabPanel'],requires:['Ext.layout.container.Card','Ext.tab.Bar'],tabPosition:'top',removePanelHeader:true,plain:false,itemCls:Ext.baseCSSPrefix+'tabpanel-child',minTabWidth:undefined,maxTabWidth:undefined,deferredRender:true,initComponent:function(){var me=this,dockedItems=[].concat(me.dockedItems||[]),activeTab=me.activeTab||(me.activeTab=0);me.layout=new Ext.layout.container.Card(Ext.apply({owner:me,deferredRender:me.deferredRender,itemCls:me.itemCls,activeItem:me.activeTab},me.layout));me.tabBar=new Ext.tab.Bar(Ext.apply({dock:me.tabPosition,plain:me.plain,border:me.border,cardLayout:me.layout,tabPanel:me},me.tabBar));dockedItems.push(me.tabBar);me.dockedItems=dockedItems;me.addEvents('beforetabchange','tabchange');me.callParent(arguments);me.activeTab=me.getComponent(activeTab);if(me.activeTab){me.activeTab.tab.activate(true);me.tabBar.activeTab=me.activeTab.tab;}},setActiveTab:function(card){var me=this,previous;card=me.getComponent(card);if(card){previous=me.getActiveTab();if(previous!==card&&me.fireEvent('beforetabchange',me,card,previous)===false){return false;}
if(!card.isComponent){Ext.suspendLayouts();card=me.add(card);Ext.resumeLayouts();}
me.activeTab=card;Ext.suspendLayouts();me.layout.setActiveItem(card);card=me.activeTab=me.layout.getActiveItem();if(card&&card!==previous){me.tabBar.setActiveTab(card.tab);Ext.resumeLayouts(true);if(previous!==card){me.fireEvent('tabchange',me,card,previous);}}
else{Ext.resumeLayouts(true);}
return card;}},getActiveTab:function(){var me=this,result=me.getComponent(me.activeTab);if(result&&me.items.indexOf(result)!=-1){me.activeTab=result;}else{me.activeTab=null;}
return me.activeTab;},getTabBar:function(){return this.tabBar;},onAdd:function(item,index){var me=this,cfg=item.tabConfig||{},defaultConfig={xtype:'tab',card:item,disabled:item.disabled,closable:item.closable,hidden:item.hidden&&!item.hiddenByLayout,tooltip:item.tooltip,tabBar:me.tabBar,closeText:item.closeText};cfg=Ext.applyIf(cfg,defaultConfig);item.tab=me.tabBar.insert(index,cfg);item.on({scope:me,enable:me.onItemEnable,disable:me.onItemDisable,beforeshow:me.onItemBeforeShow,iconchange:me.onItemIconChange,iconclschange:me.onItemIconClsChange,titlechange:me.onItemTitleChange});if(item.isPanel){if(me.removePanelHeader){if(item.rendered){if(item.header){item.header.hide();}}else{item.header=false;}}
if(item.isPanel&&me.border){item.setBorder(false);}}},onItemEnable:function(item){item.tab.enable();},onItemDisable:function(item){item.tab.disable();},onItemBeforeShow:function(item){if(item!==this.activeTab){this.setActiveTab(item);return false;}},onItemIconChange:function(item,newIcon){item.tab.setIcon(newIcon);},onItemIconClsChange:function(item,newIconCls){item.tab.setIconCls(newIconCls);},onItemTitleChange:function(item,newTitle){item.tab.setText(newTitle);},doRemove:function(item,autoDestroy){var me=this,toActivate;if(me.destroying||me.items.getCount()==1){me.activeTab=null;}
else if((toActivate=me.tabBar.items.indexOf(me.tabBar.findNextActivatable(item.tab)))!==-1){me.setActiveTab(toActivate);}
this.callParent(arguments);delete item.tab.card;delete item.tab;},onRemove:function(item,destroying){var me=this;item.un({scope:me,enable:me.onItemEnable,disable:me.onItemDisable,beforeshow:me.onItemBeforeShow});if(!me.destroying&&item.tab.ownerCt===me.tabBar){me.tabBar.remove(item.tab);}}});Ext.define('PumaMain.view.LayerPanel',{extend:'Ext.tab.Panel',alias:'widget.layerpanel',requires:['Ext.ux.RowExpander'],cls:'layerpanel',initComponent:function(){var me=this;this.tabBar={layout:{type:'hbox',align:'stretch'},defaults:{flex:1}},this.items=[{xtype:'treepanel',itemId:'layerpanel',id:'layeravailablepanel',helpId:'Availablelayers',hideHeaders:true,store:Ext.StoreMgr.lookup('layers'),displayField:'name',rootVisible:false,title:'Layers available',border:true,viewConfig:{autoScroll:false,overflowY:'auto',getRowClass:function(rec){return rec.get('type')=='topiclayer'?'has-metadata':'';}},columns:[{xtype:'treecolumn',dataIndex:'name',sortable:false,menuDisabled:true,flex:1,renderer:function(value,metadata){metadata.tdAttr='data-qtip="'+value+'"';return value;},header:'Name'}],style:{borderRadius:'0px'}},{xtype:'grid',itemId:'layerselectedpanel',helpId:'Selectedlayers',hideHeaders:true,id:'layerselectedpanel',store:Ext.StoreMgr.lookup('selectedlayers'),viewConfig:{plugins:{ptype:'gridviewdragdrop'}},displayField:'name',title:'Layers selected',bodyCls:'layers-selected',border:true,columns:[{dataIndex:'name',flex:1,sortable:false,menuDisabled:true,renderer:function(value,metadata){metadata.tdAttr='data-qtip="'+value+'"';return value;},header:'Name'},{xtype:'actioncolumn',sortable:false,menuDisabled:true,width:65,items:[{icon:'images/icons/opacity.png',tooltip:'Opacity',helpId:'Settinglayersopacity',width:16,height:16,handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('layeropacity',me,record)}},{icon:'images/icons/info.png',tooltip:'Metadata',width:16,height:16,getClass:function(v,metadata,rec){if(rec.get('type')!='topiclayer'){return'invisible'}},handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('showmetadata',me,record)}},{icon:'images/icons/legend.png',tooltip:'Open Legend',width:16,height:16,getClass:function(v,metadata,rec){if(rec.get('type')!='chartlayer'&&rec.get('type')!='topiclayer'){return'invisible'}
if(rec.get('legend')){return'invisiblecomplete';}},handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('layerlegend',me,record,true)}},{icon:'images/icons/legend-active.png',tooltip:'Close legend',width:16,height:16,getClass:function(v,metadata,rec){if(rec.get('type')!='chartlayer'&&rec.get('type')!='topiclayer'){return'invisible'}
if(!rec.get('legend')){return'invisiblecomplete';}},handler:function(grid,rowIndex,colIndex,item,e,record){me.fireEvent('layerlegend',me,record,false)}}]}],style:{borderRadius:'0px'}}]
this.callParent();this.query('#layerselectedpanel')[0].on('afterrender',function(){Ext.get('layerselectedpanel').on('click',function(e,dom){var el=Ext.get(dom);var panel=Ext.ComponentQuery.query('#layerselectedpanel')[0]
var rec=panel.getView().getRecord(el.up('.x-grid-row'))
var cls=el.getAttribute('class');var name='layeropacity';if(cls.search('legend')>-1){name='layerlegend';el.toggleCls('checked')}
else if(cls.search('metadata')>-1){name='showmetadata'}
this.fireEvent(name,this,rec,el);},this,{delegate:'.layertool'})},this)
this.query('#layerpanel')[0].on('afterrender',function(){Ext.get('layeravailablepanel').on('click',function(e,dom){var el=Ext.get(dom);var panel=Ext.ComponentQuery.query('#layerpanel')[0]
var rec=panel.getView().getRecord(el.up('.x-grid-row'))
this.fireEvent('showmetadata',this,rec,el);},this,{delegate:'.x-tree-icon-leaf'})},this)
this.addEvents('choroplethreconfigure','choroplethremove','layerremove','layeropacity','layerup','layerdown','checkchange','showmetadata','layerlegend');}})
Ext.define('PumaMain.view.Tools',{extend:'Ext.container.Container',alias:'widget.toolspanel',width:'100%',autoScroll:true,requires:['PumaMain.view.LayerPanel','PumaMain.view.MapTools','Gisatlib.slider.DiscreteTimeline'],initComponent:function(){this.layout={type:'accordion',fill:false,multi:true}
this.defaults={collapseLeft:true}
this.items=[{xtype:'panel',collapsed:false,tools:[{type:'poweron',tooltip:'',hidden:true,itemId:'poweron'},{type:'refresh',tooltip:'Reset',itemId:'refresh'},{type:'gear',tooltip:'Configure filters',hidden:true,itemId:'gear'},{type:'detach',tooltip:'Detach',cls:'detach',itemId:'undock'}],layout:{type:'vbox',align:'stretch'},itemId:'advancedfilters',hidden:true,helpId:'Filteringanalyticalunits',title:'Filter by region type',bodyCls:'tools-filters-list'},{xtype:'panel',collapsed:false,tools:[{type:'poweron',tooltip:'Activate/deactivate filtering',hidden:false,cls:'tool-active',itemId:'poweron'},{type:'add',tooltip:'Check all filters',hidden:false,itemId:'add'},{type:'unselectall',tooltip:'Reset',tooltip:'Uncheck all filters',itemId:'unselectall'},{type:'gear',tooltip:'Configure filters',hidden:true,itemId:'gear'},{type:'detach',tooltip:'Detach',cls:'detach',itemId:'undock'}],layout:{type:'vbox',align:'stretch'},itemId:'codefilters',border:false,helpId:'Filteringanalyticalunits',title:'Filter by region type',bodyCls:'tools-filters-list'},{xtype:'layerpanel',itemId:'layerpanel',helpId:'Layers',collapsed:true,tools:[{type:'gear',hidden:true,tooltip:'Configure thematic maps',itemId:'gear'},{type:'detach',cls:'detach',tooltip:'Detach',itemId:'undock'}],height:300,title:'Layers'},{xtype:'treepanel',hidden:true,title:'Areas',itemId:'areatree',helpId:'TreeofanalyticalunitsAREAS',collapsed:true,store:Ext.StoreMgr.lookup('area'),viewConfig:{animate:false},selModel:{mode:'MULTI'},tools:[{type:'areacollapse',cls:'areacollapse',hidden:true,tooltip:'Collapse all',itemId:'areacollapse'},{type:'detach',cls:'detach',tooltip:'Detach',itemId:'undock'}],rootVisible:false,displayField:'name',height:340},{xtype:'panel',title:'Selection color',itemId:'selcolor',helpId:'Multipleselectionshighlightedbyc',header:{height:60},collapsed:true,tools:[{type:'unselect',cls:'unselect',tooltip:'Unselect',itemId:'unselect'},{type:'unselectall',cls:'unselectall',tooltip:'Unselect all',itemId:'unselectall'},{type:'detach',cls:'detach',tooltip:'Detach',itemId:'undock'}],layout:{type:'hbox',align:'middle'},height:72,items:[{xtype:'colorpicker',fieldLabel:'CP',value:'ff4c39',itemId:'selectcolorpicker',height:22,margin:'0 10',flex:1,colors:['ff4c39','34ea81','39b0ff','ffde58','5c6d7e','d97dff']}]},{xtype:'maptools',collapsed:true,itemId:'maptools',helpId:'Maptools',tools:[{type:'detach',cls:'detach',tooltip:'Detach',itemId:'undock'}],title:'Map tools'}]
this.callParent();}})
Ext.define('PumaMain.controller.Render',{extend:'Ext.app.Controller',views:[],requires:['Puma.view.form.DefaultComboBox','Ext.form.CheckboxGroup','PumaMain.view.TopTools','PumaMain.view.Tools','PumaMain.view.ChartBar','Gisatlib.container.StoreContainer','Ext.slider.Multi'],init:function(){this.control({'toolspanel tool[type=detach]':{click:this.undockPanel},'window[isdetached=1]':{close:this.dockPanel},'window[isdetached=1] panel':{collapse:this.onFloatingCollapse}})},onFloatingCollapse:function(panel){window.setTimeout(function(){panel.up('window').setHeight(null);},100)},dockPanel:function(win){var panel=win.down('panel');win.remove(panel,false);var order=['advancedfilters','codefilters','layerpanel','areatree','selcolor','maptools'];var idx=0;for(var i=0;i<order.length;i++){var name=order[i];if(name==panel.itemId)break;var cmp=Ext.ComponentQuery.query('toolspanel #'+name);if(cmp.length){idx++;}}
var container=Ext.ComponentQuery.query('toolspanel')[0];panel.collapse();container.insert(idx,panel);},undockPanel:function(tool){var panel=tool.up('panel');panel.up('container').remove(panel,false);panel.el.setTop(0);var win=Ext.widget('window',{layout:'fit',width:260,maxHeight:700,resizable:true,cls:'detached-window',isdetached:1,constrainHeader:true,items:[panel]}).show();win.el.setOpacity(0.9);var el=Ext.get('sidebar-tools-toggle');var factor=Ext.ComponentQuery.query('window[isdetached=1]').length-1;win.alignTo(el,'tl-tr',[50*factor,50*factor]);panel.expand();panel.doLayout();if(panel.itemId=='advancedfilters'){this.getController('Filter').afterAccordionLayout();}},renderApp:function(){Ext.widget('pumacombo',{store:'scope',itemId:'selscope',cls:'custom-combo',listConfig:{cls:'custom-combo-list',},renderTo:'app-toolbar-scope'})
Ext.widget('pumacombo',{store:Ext.StoreMgr.lookup('dataset4sel'),itemId:'seldataset',valueField:'_id',cls:'custom-combo',listConfig:{cls:'custom-combo-list',},renderTo:'app-toolbar-teritory'})
Ext.widget('pumacombo',{store:Ext.StoreMgr.lookup('theme4sel'),itemId:'seltheme',helpId:'Selectingtheme',hidden:true,cls:'custom-combo',listConfig:{cls:'custom-combo-list',},renderTo:'app-toolbar-theme'})
Ext.widget('pumacombo',{store:Ext.StoreMgr.lookup('attribute4sel'),itemId:'selindicator',cls:'custom-combo',width:260,listConfig:{cls:'custom-combo-list',},renderTo:'app-toolbar-theme'})
Ext.widget('discretetimeline',{renderTo:'app-toolbar-year',width:335,store:Ext.StoreMgr.lookup('year'),displayField:'shortName',itemId:'selyear',helpId:'Switchingbetweenyears',})
Ext.widget('button',{renderTo:'app-toolbar-visualization-save',text:'Save',itemId:'savevisualization',width:'100%',height:'100%',hidden:!Config.auth||!Config.auth.isAdmin,cls:'custom-button btn-visualization-save'})
Ext.widget('button',{renderTo:'app-toolbar-share',text:'Share data view',itemId:'sharedataview',helpId:'Sharingdataviews',width:'100%',height:'100%',hidden:!Config.auth,icon:'images/icons/share.png',cls:'custom-button btn-share'})
Ext.widget('button',{renderTo:'app-toolbar-level-more',itemId:'areamoredetails',helpId:'Settingthelevelofdetail',text:'+',width:'100%',height:'100%',cls:'custom-button'})
Ext.widget('button',{renderTo:'app-toolbar-level-less',itemId:'arealessdetails',helpId:'Settingthelevelofdetail',text:'-',width:'100%',height:'100%',cls:'custom-button'})
Ext.widget('button',{renderTo:'app-toolbar-manage',itemId:'managedataview',helpId:'Managingdataviews',hidden:!Config.auth,icon:'images/icons/settings.png',width:'100%',height:'100%',cls:'custom-button btn-manage'})
Ext.widget('button',{renderTo:'app-toolbar-save',itemId:'savedataview',helpId:'Savingdataviews',hidden:!Config.auth,text:'Save view',icon:'images/icons/save.png',width:'100%',height:'100%',cls:'custom-button btn-save'})
Ext.widget('toptoolspanel',{renderTo:'app-tools-actions'})
Ext.widget('toolspanel',{renderTo:'app-tools-accordeon'})
Ext.widget('chartbar',{renderTo:'app-reports-accordeon',helpId:'Modifyingchartpanel'})
Ext.widget('pagingtoolbar',{renderTo:'app-reports-paging',itemId:'areapager',displayInfo:true,cls:'paging-toolbar',buttons:['-',{xtype:'splitbutton',menu:{items:[{xtype:'colorpicker',allowToggle:true,fieldLabel:'CP',itemId:'useselectedcolorpicker',padding:'2 5',height:24,width:132,colors:['ff4c39','34ea81','39b0ff','ffde58','5c6d7e','d97dff']}],showSeparator:false},itemId:'onlySelected',text:'Only selected',hidden:false,enableToggle:true,icon:'images/icons/colors.png'}],store:Ext.StoreMgr.lookup('paging')})
window.setTimeout(function(){Ext.ComponentQuery.query('#regionspanel')[0].collapse();},1)
Ext.ComponentQuery.query('#areapager #useselectedcolorpicker')[0].select(['ff4c39','34ea81','39b0ff','ffde58','5c6d7e','d97dff']);},renderMap:function(){Ext.widget('component',{renderTo:'app-map',itemId:'map',width:1920,height:900})
Ext.widget('component',{renderTo:'app-map2',itemId:'map2',hidden:true,width:1920,height:900})},renderIntro:function(){this.renderMap();Ext.widget('pumacombo',{renderTo:'app-intro-scope',initial:true,allowBlank:false,store:Ext.StoreMgr.lookup('scope'),cls:'custom-combo',listConfig:{cls:'custom-combo-list',},itemId:'initialscope'})
Ext.widget('pumacombo',{renderTo:'app-intro-teritory',initial:true,store:Ext.StoreMgr.lookup('dataset4sel'),cls:'custom-combo',listConfig:{cls:'custom-combo-list',},itemId:'initialdataset'})
Ext.widget('pumacombo',{renderTo:'app-intro-theme',initial:true,hidden:true,itemId:'initialtheme',cls:'custom-combo',listConfig:{cls:'custom-combo-list',},store:Ext.StoreMgr.lookup('theme4sel')})
Ext.widget('pumacombo',{renderTo:'app-intro-theme',initial:true,width:210,itemId:'initialindicator',cls:'custom-combo',listConfig:{cls:'custom-combo-list',},store:Ext.StoreMgr.lookup('attribute4sel')})
Ext.widget('button',{renderTo:'app-intro-confirm',itemId:'initialconfirm',text:'Confirm',width:'100%',height:'100%',cls:'custom-button btn-confirm'})}})
Ext.define('Ext.Editor',{extend:'Ext.container.Container',alias:'widget.editor',requires:['Ext.layout.container.Editor'],layout:'editor',allowBlur:true,revertInvalid:true,value:'',alignment:'c-c?',offsets:[0,0],shadow:'frame',constrain:false,swallowKeys:true,completeOnEnter:true,cancelOnEsc:true,updateEl:false,hidden:true,baseCls:Ext.baseCSSPrefix+'editor',initComponent:function(){var me=this,field=me.field=Ext.ComponentManager.create(me.field,'textfield');Ext.apply(field,{inEditor:true,msgTarget:field.msgTarget=='title'?'title':'qtip'});me.mon(field,{scope:me,blur:{fn:me.onFieldBlur,delay:1},specialkey:me.onSpecialKey});if(field.grow){me.mon(field,'autosize',me.onFieldAutosize,me,{delay:1});}
me.floating={constrain:me.constrain};me.items=field;me.callParent(arguments);me.addEvents('beforestartedit','startedit','beforecomplete','complete','canceledit','specialkey');},onFieldAutosize:function(){this.updateLayout();},afterRender:function(ct,position){var me=this,field=me.field,inputEl=field.inputEl;me.callParent(arguments);if(inputEl){inputEl.dom.name='';if(me.swallowKeys){inputEl.swallowEvent(['keypress','keydown']);}}},onSpecialKey:function(field,event){var me=this,key=event.getKey(),complete=me.completeOnEnter&&key==event.ENTER,cancel=me.cancelOnEsc&&key==event.ESC;if(complete||cancel){event.stopEvent();Ext.defer(function(){if(complete){me.completeEdit();}else{me.cancelEdit();}
if(field.triggerBlur){field.triggerBlur(event);}},10);}
me.fireEvent('specialkey',me,field,event);},startEdit:function(el,value){var me=this,field=me.field;me.completeEdit();me.boundEl=Ext.get(el);value=Ext.isDefined(value)?value:Ext.String.trim(me.boundEl.dom.innerText||me.boundEl.dom.innerHTML);if(!me.rendered){me.render(me.parentEl||document.body);}
if(me.fireEvent('beforestartedit',me,me.boundEl,value)!==false){me.startValue=value;me.show();field.suspendEvents();field.reset();field.setValue(value);field.resumeEvents();me.realign(true);field.focus(false,10);if(field.autoSize){field.autoSize();}
me.editing=true;}},realign:function(autoSize){var me=this;if(autoSize===true){me.updateLayout();}
me.alignTo(me.boundEl,me.alignment,me.offsets);},completeEdit:function(remainVisible){var me=this,field=me.field,value;if(!me.editing){return;}
if(field.assertValue){field.assertValue();}
value=me.getValue();if(!field.isValid()){if(me.revertInvalid!==false){me.cancelEdit(remainVisible);}
return;}
if(String(value)===String(me.startValue)&&me.ignoreNoChange){me.hideEdit(remainVisible);return;}
if(me.fireEvent('beforecomplete',me,value,me.startValue)!==false){value=me.getValue();if(me.updateEl&&me.boundEl){me.boundEl.update(value);}
me.hideEdit(remainVisible);me.fireEvent('complete',me,value,me.startValue);}},onShow:function(){var me=this;me.callParent(arguments);if(me.hideEl!==false){me.boundEl.hide();}
me.fireEvent('startedit',me,me.boundEl,me.startValue);},cancelEdit:function(remainVisible){var me=this,startValue=me.startValue,field=me.field,value;if(me.editing){value=me.getValue();field.suspendEvents();me.setValue(startValue);field.resumeEvents();me.hideEdit(remainVisible);me.fireEvent('canceledit',me,value,startValue);}},hideEdit:function(remainVisible){if(remainVisible!==true){this.editing=false;this.hide();}},onFieldBlur:function(field,e){var me=this,target;if(me.allowBlur===true&&me.editing&&me.selectSameEditor!==true){me.completeEdit();}
if(e&&Ext.fly(target=e.getTarget()).focusable()){target.focus();}},onHide:function(){var me=this,field=me.field;if(me.editing){me.completeEdit();return;}
if(field.hasFocus){field.blur();}
if(field.collapse){field.collapse();}
if(me.hideEl!==false){me.boundEl.show();}
me.callParent(arguments);},setValue:function(value){this.field.setValue(value);},getValue:function(){return this.field.getValue();},beforeDestroy:function(){var me=this;Ext.destroy(me.field);delete me.field;delete me.parentEl;delete me.boundEl;me.callParent(arguments);}});Ext.define('Ext.grid.CellEditor',{extend:'Ext.Editor',constructor:function(config){config=Ext.apply({},config);if(config.field){config.field.monitorTab=false;}
this.callParent([config]);},onShow:function(){var me=this,innerCell=me.boundEl.first(),lastChild,textNode;if(innerCell){lastChild=innerCell.dom.lastChild;if(lastChild&&lastChild.nodeType===3){textNode=me.cellTextNode=innerCell.dom.lastChild;me.cellTextValue=textNode.nodeValue;textNode.nodeValue=me.emptyText;}}
me.callParent(arguments);},onHide:function(){var me=this,innerCell=me.boundEl.first(),node=me.cellTextNode;if(innerCell&&node){if(node.nodeValue==me.emptyText){node.nodeValue=me.cellTextValue;}
delete me.cellTextNode;delete me.cellTextValue;}
me.callParent(arguments);},afterRender:function(){var me=this,field=me.field;me.callParent(arguments);if(field.isXType('checkboxfield')){field.mon(field.inputEl,{mousedown:me.onCheckBoxMouseDown,click:me.onCheckBoxClick,scope:me});}},onCheckBoxMouseDown:function(){this.completeEdit=Ext.emptyFn;},onCheckBoxClick:function(){delete this.completeEdit;this.field.focus(false,10);},realign:function(autoSize){var me=this,boundEl=me.boundEl,innerCell=boundEl.first(),children=innerCell.dom.childNodes,childCount=children.length,offsets=Ext.Array.clone(me.offsets),inputEl=me.field.inputEl,lastChild,leftBound,rightBound,width;if(me.isForTree&&(childCount>1||(childCount===1&&children[0].nodeType!==3))){lastChild=innerCell.last();leftBound=lastChild.getOffsetsTo(innerCell)[0]+lastChild.getWidth();rightBound=innerCell.getWidth();width=rightBound-leftBound;if(!me.editingPlugin.grid.columnLines){width--;}
offsets[0]+=leftBound;me.addCls(Ext.baseCSSPrefix+'grid-editor-on-text-node');}else{width=boundEl.getWidth()-1;}
if(autoSize===true){me.field.setWidth(width);}
me.alignTo(boundEl,me.alignment,offsets);},onEditorTab:function(e){var field=this.field;if(field.onEditorTab){field.onEditorTab(e);}},emptyText:'\u00a0',alignment:"tl-tl",hideEl:false,cls:Ext.baseCSSPrefix+"small-editor "+Ext.baseCSSPrefix+"grid-editor",shim:false,shadow:false});Ext.define('Ext.grid.plugin.CellEditing',{alias:'plugin.cellediting',extend:'Ext.grid.plugin.Editing',requires:['Ext.grid.CellEditor','Ext.util.DelayedTask'],lockableScope:'both',constructor:function(){this.callParent(arguments);this.editors=new Ext.util.MixedCollection(false,function(editor){return editor.editorId;});this.editTask=new Ext.util.DelayedTask();},onReconfigure:function(){this.editors.clear();this.callParent();},destroy:function(){var me=this;me.editTask.cancel();me.editors.each(Ext.destroy,Ext);me.editors.clear();me.callParent(arguments);},onBodyScroll:function(){var me=this,ed=me.getActiveEditor(),scroll=me.view.el.getScroll();if(ed&&ed.editing&&ed.editingPlugin===me){if(scroll.top!==me.scroll.top){if(ed.field){if(ed.field.triggerBlur){ed.field.triggerBlur();}else{ed.field.blur();}}}
else{ed.realign();}}
me.scroll=scroll;},initCancelTriggers:function(){var me=this,grid=me.grid,view=grid.view;view.addElListener('mousewheel',me.cancelEdit,me);me.mon(view,'bodyscroll',me.onBodyScroll,me);me.mon(grid,{columnresize:me.cancelEdit,columnmove:me.cancelEdit,scope:me});},isCellEditable:function(record,columnHeader){var me=this,context=me.getEditingContext(record,columnHeader);if(me.grid.view.isVisible(true)&&context){columnHeader=context.column;record=context.record;if(columnHeader&&me.getEditor(record,columnHeader)){return true;}}},startEdit:function(record,columnHeader,context){var me=this,ed;context=context||me.getEditingContext(record,columnHeader);me.completeEdit();if(!context||!me.grid.view.isVisible(true)){return false;}
record=context.record;columnHeader=context.column;if(columnHeader&&!columnHeader.getEditor(record)){return false;}
context.originalValue=context.value=record.get(columnHeader.dataIndex);if(me.beforeEdit(context)===false||me.fireEvent('beforeedit',me,context)===false||context.cancel){return false;}
ed=me.getEditor(record,columnHeader);me.grid.view.cancelFocus();me.view.focusCell({row:context.rowIdx,column:context.colIdx});if(ed){me.editTask.delay(15,me.showEditor,me,[ed,context,context.value]);return true;}
return false;},showEditor:function(ed,context,value){var me=this,record=context.record,columnHeader=context.column,sm=me.grid.getSelectionModel(),selection=sm.getCurrentPosition(),otherView=selection&&selection.view;if(otherView&&otherView!==me.view){return me.lockingPartner.showEditor(ed,context,value);}
me.setEditingContext(context);me.setActiveEditor(ed);me.setActiveRecord(record);me.setActiveColumn(columnHeader);if(sm.selectByPosition&&(!selection||selection.column!==context.colIdx||selection.row!==context.rowIdx)){sm.selectByPosition({row:context.rowIdx,column:context.colIdx,view:me.view});}
ed.startEdit(me.getCell(record,columnHeader),value,context);me.editing=true;me.scroll=me.view.el.getScroll();},completeEdit:function(){var activeEd=this.getActiveEditor();if(activeEd){activeEd.completeEdit();this.editing=false;}},setEditingContext:function(context){this.context=context;if(this.lockingPartner){this.lockingPartner.context=context;}},setActiveEditor:function(ed){this.activeEditor=ed;if(this.lockingPartner){this.lockingPartner.activeEditor=ed;}},getActiveEditor:function(){return this.activeEditor;},setActiveColumn:function(column){this.activeColumn=column;if(this.lockingPartner){this.lockingPartner.activeColumn=column;}},getActiveColumn:function(){return this.activeColumn;},setActiveRecord:function(record){this.activeRecord=record;if(this.lockingPartner){this.lockingPartner.activeRecord=record;}},getActiveRecord:function(){return this.activeRecord;},getEditor:function(record,column){var me=this,grid=column.up('tablepanel'),editors=me.editors,editorId=column.getItemId(),editor=editors.getByKey(editorId);if(!editor&&me.lockingPartner){editor=me.lockingPartner.editors.getByKey(editorId);}
if(!editor){editor=column.getEditor(record);if(!editor){return false;}
if(!(editor instanceof Ext.grid.CellEditor)){editor=new Ext.grid.CellEditor({editorId:editorId,field:editor,isForTree:me.grid.isTree});}else{editor.ownerCt=me.grid;}
editor.on({scope:me,specialkey:me.onSpecialKey,complete:me.onEditComplete,canceledit:me.cancelEdit});column.on('removed',me.cancelActiveEdit,me);editors.add(editor);}
editor.editingPlugin=me;editor.ownerCt=grid;return editor;},cancelActiveEdit:function(column){var context=this.context
if(context&&context.column===column){this.cancelEdit();}},setColumnField:function(column,field){var ed=this.editors.getByKey(column.getItemId());Ext.destroy(ed,column.field);this.editors.removeAtKey(column.getItemId());this.callParent(arguments);},getCell:function(record,column){return this.grid.getView().getCell(record,column);},onSpecialKey:function(ed,field,e){var me=this,grid=field.up('tablepanel'),sm;if(e.getKey()===e.TAB){e.stopEvent();if(ed){ed.onEditorTab(e);}
sm=grid.getSelectionModel();if(sm.onEditorTab){return sm.onEditorTab(grid===me.grid?me:me.lockingPartner,e);}}},onEditComplete:function(ed,value,startValue){var me=this,grid=me.grid,activeColumn=me.getActiveColumn(),sm=grid.getSelectionModel(),context=me.context,record;if(activeColumn){record=context.record;me.setActiveEditor(null);me.setActiveColumn(null);me.setActiveRecord(null);context.value=value;if(!me.validateEdit()){return;}
if(!record.isEqual(value,startValue)){record.set(activeColumn.dataIndex,value);}
if(sm.setCurrentPosition){sm.setCurrentPosition(sm.getCurrentPosition());}
grid.getView().getEl(activeColumn).focus();me.fireEvent('edit',me,context);me.editing=false;}},cancelEdit:function(){var me=this,activeEd=me.getActiveEditor(),viewEl=me.grid.getView().getEl(me.getActiveColumn());me.setActiveEditor(null);me.setActiveColumn(null);me.setActiveRecord(null);if(activeEd){activeEd.cancelEdit();viewEl.focus();me.callParent(arguments);return;}
return true;},startEditByPosition:function(position){position.column=this.view.getHeaderCt().getVisibleHeaderClosestToIndex(position.column).getIndex();return this.startEdit(position.row,position.column);}});Ext.define('PumaMain.view.AttributeGrid',{extend:'Ext.grid.Panel',alias:'widget.attributegrid',colspan:2,border:0,autoScroll:true,header:false,requires:['Ext.ux.CheckColumn','Ext.grid.plugin.CellEditing'],initComponent:function(){this.editing=Ext.create('Ext.grid.plugin.CellEditing');this.plugins=[this.editing];this.columns=[{xtype:'checkcolumnwithheader',store:this.store,columnHeaderCheckbox:true,width:40,menuDisabled:true,resizable:false,dataIndex:'checked'},{dataIndex:'attrName',flex:3,resizable:false,menuDisabled:true,text:'Attribute'},{dataIndex:'asName',flex:3,resizable:false,menuDisabled:true,text:'Attribute set'},{dataIndex:'normType',flex:2,resizable:false,menuDisabled:true,formType:this.formType,text:'Normalization',renderer:function(value,metadata,record){var store=Ext.StoreMgr.lookup('normalization4chart');var rec=store.findRecord('type',value)
return rec?rec.get('name'):'';}},{dataIndex:'classType',flex:2,hidden:this.formType!='layers',resizable:false,menuDisabled:true,text:'Classification',renderer:function(value,metadata,record){value=value||'quantiles'
var store=Ext.StoreMgr.lookup('classificationtype');var rec=store.findRecord('type',value)
return rec?rec.get('name'):'';}},{dataIndex:'numCategories',flex:1,hidden:this.formType!='layers',resizable:false,menuDisabled:true,text:'Cat.',renderer:function(value,metadata,record){value=value||5;return value;}},{dataIndex:'name',flex:3,hidden:this.formType!='layers',resizable:false,menuDisabled:true,text:'Name',field:{type:'textfield'}}]
this.tbar=[{xtype:'button',itemId:'add',text:'Add'},{xtype:'button',itemId:'remove',text:'Remove'},{xtype:'button',itemId:'normalize',text:'Normalize'},{xtype:'button',hidden:this.formType!='layers',itemId:'choroplethparams',text:'Choropleth params'}]
this.viewConfig={plugins:{ptype:'gridviewdragdrop'}}
this.callParent();}})
Ext.define('PumaMain.view.ConfigForm',{extend:'Ext.form.Panel',alias:'widget.configform',autoScroll:true,frame:true,header:false,requires:['Ext.ux.CheckColumn','PumaMain.view.AddAttributeGrid','PumaMain.view.ChoroplethForm','PumaMain.view.AttributeGrid','Gisatlib.container.StoreContainer','PumaMain.view.NormalizeForm'],initComponent:function(){this.attrStore=Ext.create('Ext.data.Store',{data:[],model:'Puma.model.MappedChartAttribute'})
this.items=[{xtype:'textfield',name:'title',marginLeft:5,hidden:this.formType!='chart',fieldLabel:'Name'},{xtype:'pumacombo',marginLeft:5,hidden:this.formType!='chart',store:Ext.StoreMgr.lookup('charttype4chart'),fieldLabel:'Type',valueField:'type',name:'type',itemId:'type'},{xtype:'storefield',itemId:'attrs',name:'attrs',hidden:true,store:this.attrStore},{xtype:'container',hidden:this.formType=='chart',height:300,itemId:'attributecontainer',helpId:'test',layout:'card',items:[{xtype:'attributegrid',formType:this.formType,store:this.attrStore},{xtype:'addattributegrid'},{xtype:'normalizeform',formType:this.formType},{xtype:'form',bodyStyle:{padding:'0px'},frame:true,items:[{xtype:'pumacombo',store:Ext.StoreMgr.lookup('layers4outline'),valueField:'atWithSymbology',fieldLabel:'Layer',name:'featureLayer'},{xtype:'numberfield',minValue:0,value:70,maxValue:100,fieldLabel:'Opacity',name:'featureLayerOpacity'}]},{xtype:'choroplethform'}]},{xtype:'multislider',itemId:'constrainFl',name:'constrainFl',values:[0,this.featureLayers.length-1],hidden:true,width:672,useTips:{getText:function(thumb){return thumb.slider.up('form').featureLayers[thumb.value].get('name')}},increment:1,minValue:0,maxValue:this.featureLayers.length-1,},{xtype:'fieldset',itemId:'advancedfieldset',collapsible:true,collapsed:true,hidden:true,title:'Advanced',items:[{xtype:'pumacombo',store:Ext.StoreMgr.lookup('stacking4chart'),fieldLabel:'Stacking',valueField:'type',value:'none',name:'stacking',itemId:'stacking'},{xtype:'pumacombo',store:Ext.StoreMgr.lookup('aggregate4chart'),fieldLabel:'Aggregate',valueField:'type',name:'aggregate',itemId:'aggregate'}]}];this.buttons=[{text:'Configure',itemId:'configurefinish'}]
this.callParent();}})
Ext.define('PumaMain.controller.AttributeConfig',{extend:'Ext.app.Controller',views:[],requires:['PumaMain.view.ConfigForm'],init:function(){this.control({'#testConf':{click:this.onTestConf},'attributegrid #add':{click:this.onAddAttribute},'attributegrid #remove':{click:this.onRemoveAttribute},'attributegrid #normalize':{click:this.onNormalizeAttribute},'attributegrid #choroplethparams':{click:this.onConfigureChoropleth},'addattributegrid #add':{click:this.onAttributeAdded},'addattributegrid #back':{click:this.backToInitial},'normalizeform #normalize':{click:this.onAttributeNormalized},'normalizeform #dontnormalize':{click:this.onAttributeNormalized},'normalizeform #back':{click:this.backToInitial},'normalizeform #normAttributeSet':{change:this.onNormAttrSetChange},'normalizeform #normType':{change:this.onNormTypeChange},'choroplethform #apply':{click:this.onChoroplethParamsApplied},'choroplethform #classType':{change:this.onClassTypeChanged},'choroplethform #back':{click:this.backToInitial},'configform #type':{change:this.onChartTypeChange},'chartbar panel[cfgType=add]':{beforeexpand:this.onConfigureClick},'chartpanel tool[type=gear]':{click:this.onConfigureClick},'#configurelayers':{click:this.onConfigureClick},'#configurefilters':{click:this.onConfigureClick},'configform #configurefinish':{click:this.onConfigureFinish}})},onConfigureChoropleth:function(btn){var attrStore=btn.up('[itemId=attributecontainer]').down('attributegrid').store
var recs=this.getChecked(attrStore);if(recs.length<1){return;}
this.setActiveCard(btn,4);var form=btn.up('[itemId=attributecontainer]').down('choroplethform')
if(recs.length==1){form.down('#classType').setValue(recs[0].get('classType'));form.down('#numCategories').setValue(recs[0].get('numCategories'));}
else{form.getForm().reset();}},onClassTypeChanged:function(combo,val){var categories=combo.up('panel').down('#numCategories');if(val=='continuous'){categories.setValue(5);}
categories.setVisible(val!='continuous');},onChoroplethParamsApplied:function(btn){var form=btn.up('panel');var attrStore=form.up('[itemId=attributecontainer]').down('attributegrid').store
var recs=this.getChecked(attrStore);for(var i=0;i<recs.length;i++){var rec=recs[i];rec.set('numCategories',form.getComponent('numCategories').getValue());rec.set('classType',form.getComponent('classType').getValue());rec.set('zeroesAsNull',true);rec.commit();}
this.setActiveCard(btn,0);},onConfigureFinish:function(cmp){var form=cmp.up('configform');var values=form.getForm().getValues();var attrs=values.attrs;var attrMap={};var isSelect=null
for(var i=0;i<attrs.length;i++){var attr=attrs[i];var attrName='as_'+attr.as+'_attr_'+attr.attr;if(attrMap[attrName]){Puma.util.Msg.msg('Duplicate attributes not allowed','','l');return;}
attrMap[attrName]=true;var type=attr.normType;if(isSelect===true&&type!='select'){Puma.util.Msg.msg('All attributes have to be normalized to "First selected"','','l');return;}
if(isSelect===false&&type=='select'){Puma.util.Msg.msg('All attributes have to be normalized to "First selected"','','l');return;}
isSelect=type=='select';}
delete values['normType'];delete values['normYear'];delete values['normAttribute'];delete values['normAttributeSet'];if(form.chart){form.chart.cfg=values;this.getController('Chart').reconfigureChart(form.chart,false,false,true)}
else if(form.formType=='chart'){this.getController('Chart').addChart(values);}
else if(form.formType=='layers'){this.getController('Layers').reconfigureChoropleths(values);}
else if(form.formType=='filters'){this.filterConfig=values.attrs;debugger;this.getController('Filter').reconfigureFilters(values);}
form.up('window').close();},onConfigureClick:function(cmp){var formType='chart';var cfg={attrs:[]};var chart=null;if(cmp.itemId=='configurelayers'){formType='layers'
cfg={attrs:this.layerConfig||[]};}
else if(cmp.itemId=='configurefilters'){formType='filters';cfg={attrs:this.filterConfig||[]};}
else if(cmp.xtype=='tool'){chart=cmp.up('chartpanel').chart
cfg=chart.cfg;}
var datasetId=Ext.ComponentQuery.query('#seldataset')[0].getValue();var dataset=Ext.StoreMgr.lookup('dataset').getById(datasetId);var levels=dataset.get('featureLayers');var fls=Ext.StoreMgr.lookup('layertemplate').queryBy(function(rec){return Ext.Array.contains(levels,rec.get('_id'));}).getRange();var title='Chart configuration';switch(cmp.xtype=='tool'?'tool':cmp.itemId){case'configurelayers':title='Thematic maps configuration';break;case'configurefilters':title='Filters configuration';break;case'tool':title+=' - '+cfg.title}
var window=Ext.widget('window',{layout:'fit',width:700,y:200,title:title,items:[{xtype:'configform',featureLayers:fls,chart:chart,formType:formType}]})
window.show();window.down('configform').getForm().setValues(cfg);return false;},onChartBtnClick:function(parent){},onReconfigureClick:function(btn){},onAddAttribute:function(btn){this.setActiveCard(btn,1);var store=btn.up('[itemId=attributecontainer]').down('addattributegrid').store
store.each(function(rec){rec.set('checked',false)})},onNormalizeAttribute:function(btn){var attrStore=btn.up('[itemId=attributecontainer]').down('attributegrid').store
var recs=this.getChecked(attrStore);if(recs.length<1){return;}
this.setActiveCard(btn,2);var form=btn.up('[itemId=attributecontainer]').down('normalizeform')
if(recs.length==1){form.down('#normType').setValue(recs[0].get('normType'));form.down('#normAttributeSet').setValue(recs[0].get('normAs'));form.down('#normAttribute').setValue(recs[0].get('normAttr'));}
else{form.getForm().reset();}},onRemoveAttribute:function(btn){var store=btn.up('grid').store;var recs=this.getChecked(store);store.remove(recs);},onAttributeAdded:function(btn){var store=btn.up('grid').store;var recs=this.getChecked(store);var newRecs=[];for(var i=0;i<recs.length;i++){var rec=recs[i];var newRec=Ext.create('Puma.model.MappedChartAttribute',{as:rec.get('as'),attr:rec.get('attr'),normType:'area',checked:true})
newRecs.push(newRec)}
var mainStore=btn.up('configform').down('attributegrid').store;mainStore.add(newRecs);this.setActiveCard(btn,0);},onAttributeNormalized:function(btn){var normalize=btn.itemId=='normalize';var form=btn.up('panel');var attrStore=form.up('[itemId=attributecontainer]').down('attributegrid').store
var recs=this.getChecked(attrStore);var normType=normalize?form.getComponent('normType').getValue():null;var normAttr=normalize?form.getComponent('normAttribute').getValue():null;var normAs=normalize?form.getComponent('normAttributeSet').getValue():null;for(var i=0;i<recs.length;i++){var rec=recs[i];rec.set('normType',normType);rec.set('normAttr',normAttr);rec.set('normAs',normAs);rec.commit();}
this.setActiveCard(btn,0);},onNormAttrSetChange:function(combo,val){var attrSet=val?Ext.StoreMgr.lookup('attributeset').getById(val):null;var attributes=attrSet?attrSet.get('attributes'):[];var store=combo.up('panel').down('#normAttribute').store;store.clearFilter(true);store.filter([function(rec){return Ext.Array.contains(attributes,rec.get('_id'))}])},onNormTypeChange:function(combo,val){var attrCombo=combo.up('panel').down('#normAttribute');var attrSetCombo=combo.up('panel').down('#normAttributeSet');if(val=='attributeset'){attrSetCombo.show();attrCombo.hide();}
else if(val=='attribute'){attrSetCombo.show();attrCombo.show();}
else{attrSetCombo.hide();attrCombo.hide();}},onChartTypeChange:function(combo,val){var configForm=combo.up('configform');var advanced=Ext.ComponentQuery.query('#advancedfieldset',configForm)[0];var cardContainer=Ext.ComponentQuery.query('#attributecontainer',configForm)[0];cardContainer.show();if(val!='extentoutline'){cardContainer.getLayout().setActiveItem(0);}
else{cardContainer.getLayout().setActiveItem(3);}
if(val=='columnchart'){advanced.show();}
else{advanced.hide();}},backToInitial:function(btn){this.setActiveCard(btn,0);},setActiveCard:function(cmp,idx){cmp.up('[itemId=attributecontainer]').getLayout().setActiveItem(idx);},getChecked:function(store){return store.query('checked',true).getRange();}});Ext.define('Ext.resizer.ResizeTracker',{extend:'Ext.dd.DragTracker',dynamic:true,preserveRatio:false,constrainTo:null,proxyCls:Ext.baseCSSPrefix+'resizable-proxy',constructor:function(config){var me=this,widthRatio,heightRatio,throttledResizeFn;if(!config.el){if(config.target.isComponent){me.el=config.target.getEl();}else{me.el=config.target;}}
this.callParent(arguments);if(me.preserveRatio&&me.minWidth&&me.minHeight){widthRatio=me.minWidth/me.el.getWidth();heightRatio=me.minHeight/me.el.getHeight();if(heightRatio>widthRatio){me.minWidth=me.el.getWidth()*heightRatio;}else{me.minHeight=me.el.getHeight()*widthRatio;}}
if(me.throttle){throttledResizeFn=Ext.Function.createThrottled(function(){Ext.resizer.ResizeTracker.prototype.resize.apply(me,arguments);},me.throttle);me.resize=function(box,direction,atEnd){if(atEnd){Ext.resizer.ResizeTracker.prototype.resize.apply(me,arguments);}else{throttledResizeFn.apply(null,arguments);}};}},onBeforeStart:function(e){this.startBox=this.el.getBox();},getDynamicTarget:function(){var me=this,target=me.target;if(me.dynamic){return target;}else if(!me.proxy){me.proxy=me.createProxy(target);}
me.proxy.show();return me.proxy;},createProxy:function(target){var proxy,cls=this.proxyCls,renderTo;if(target.isComponent){proxy=target.getProxy().addCls(cls);}else{renderTo=Ext.getBody();if(Ext.scopeResetCSS){renderTo=Ext.getBody().createChild({cls:Ext.resetCls});}
proxy=target.createProxy({tag:'div',cls:cls,id:target.id+'-rzproxy'},renderTo);}
proxy.removeCls(Ext.baseCSSPrefix+'proxy-el');return proxy;},onStart:function(e){this.activeResizeHandle=Ext.get(this.getDragTarget().id);if(!this.dynamic){this.resize(this.startBox,{horizontal:'none',vertical:'none'});}},onDrag:function(e){if(this.dynamic||this.proxy){this.updateDimensions(e);}},updateDimensions:function(e,atEnd){var me=this,region=me.activeResizeHandle.region,offset=me.getOffset(me.constrainTo?'dragTarget':null),box=me.startBox,ratio,widthAdjust=0,heightAdjust=0,snappedWidth,snappedHeight,adjustX=0,adjustY=0,dragRatio,horizDir=offset[0]<0?'right':'left',vertDir=offset[1]<0?'down':'up',oppositeCorner,axis,newBox,newHeight,newWidth;switch(region){case'south':heightAdjust=offset[1];axis=2;break;case'north':heightAdjust=-offset[1];adjustY=-heightAdjust;axis=2;break;case'east':widthAdjust=offset[0];axis=1;break;case'west':widthAdjust=-offset[0];adjustX=-widthAdjust;axis=1;break;case'northeast':heightAdjust=-offset[1];adjustY=-heightAdjust;widthAdjust=offset[0];oppositeCorner=[box.x,box.y+box.height];axis=3;break;case'southeast':heightAdjust=offset[1];widthAdjust=offset[0];oppositeCorner=[box.x,box.y];axis=3;break;case'southwest':widthAdjust=-offset[0];adjustX=-widthAdjust;heightAdjust=offset[1];oppositeCorner=[box.x+box.width,box.y];axis=3;break;case'northwest':heightAdjust=-offset[1];adjustY=-heightAdjust;widthAdjust=-offset[0];adjustX=-widthAdjust;oppositeCorner=[box.x+box.width,box.y+box.height];axis=3;break;}
newBox={width:box.width+widthAdjust,height:box.height+heightAdjust,x:box.x+adjustX,y:box.y+adjustY};snappedWidth=Ext.Number.snap(newBox.width,me.widthIncrement);snappedHeight=Ext.Number.snap(newBox.height,me.heightIncrement);if(snappedWidth!=newBox.width||snappedHeight!=newBox.height){switch(region){case'northeast':newBox.y-=snappedHeight-newBox.height;break;case'north':newBox.y-=snappedHeight-newBox.height;break;case'southwest':newBox.x-=snappedWidth-newBox.width;break;case'west':newBox.x-=snappedWidth-newBox.width;break;case'northwest':newBox.x-=snappedWidth-newBox.width;newBox.y-=snappedHeight-newBox.height;}
newBox.width=snappedWidth;newBox.height=snappedHeight;}
if(newBox.width<me.minWidth||newBox.width>me.maxWidth){newBox.width=Ext.Number.constrain(newBox.width,me.minWidth,me.maxWidth);if(adjustX){newBox.x=box.x+(box.width-newBox.width);}}else{me.lastX=newBox.x;}
if(newBox.height<me.minHeight||newBox.height>me.maxHeight){newBox.height=Ext.Number.constrain(newBox.height,me.minHeight,me.maxHeight);if(adjustY){newBox.y=box.y+(box.height-newBox.height);}}else{me.lastY=newBox.y;}
if(me.preserveRatio||e.shiftKey){ratio=me.startBox.width/me.startBox.height;newHeight=Math.min(Math.max(me.minHeight,newBox.width/ratio),me.maxHeight);newWidth=Math.min(Math.max(me.minWidth,newBox.height*ratio),me.maxWidth);if(axis==1){newBox.height=newHeight;}
else if(axis==2){newBox.width=newWidth;}
else{dragRatio=Math.abs(oppositeCorner[0]-this.lastXY[0])/Math.abs(oppositeCorner[1]-this.lastXY[1]);if(dragRatio>ratio){newBox.height=newHeight;}else{newBox.width=newWidth;}
if(region=='northeast'){newBox.y=box.y-(newBox.height-box.height);}else if(region=='northwest'){newBox.y=box.y-(newBox.height-box.height);newBox.x=box.x-(newBox.width-box.width);}else if(region=='southwest'){newBox.x=box.x-(newBox.width-box.width);}}}
if(heightAdjust===0){vertDir='none';}
if(widthAdjust===0){horizDir='none';}
me.resize(newBox,{horizontal:horizDir,vertical:vertDir},atEnd);},getResizeTarget:function(atEnd){return atEnd?this.target:this.getDynamicTarget();},resize:function(box,direction,atEnd){var target=this.getResizeTarget(atEnd);if(target.isComponent){target.setSize(box.width,box.height);if(target.floating){target.setPagePosition(box.x,box.y);}}else{target.setBox(box);}
target=this.originalTarget;if(target&&(this.dynamic||atEnd)){if(target.isComponent){target.setSize(box.width,box.height);if(target.floating){target.setPagePosition(box.x,box.y);}}else{target.setBox(box);}}},onEnd:function(e){this.updateDimensions(e,true);if(this.proxy){this.proxy.hide();}}});Ext.define('Ext.view.DragZone',{extend:'Ext.dd.DragZone',containerScroll:false,constructor:function(config){var me=this,view,ownerCt,el;Ext.apply(me,config);if(!me.ddGroup){me.ddGroup='view-dd-zone-'+me.view.id;}
view=me.view;ownerCt=view.ownerCt;if(ownerCt){el=ownerCt.getTargetEl().dom;}else{el=view.el.dom.parentNode;}
me.callParent([el]);me.ddel=Ext.get(document.createElement('div'));me.ddel.addCls(Ext.baseCSSPrefix+'grid-dd-wrap');},init:function(id,sGroup,config){this.initTarget(id,sGroup,config);this.view.mon(this.view,{itemmousedown:this.onItemMouseDown,scope:this});},onValidDrop:function(target,e,id){this.callParent();target.el.focus();},onItemMouseDown:function(view,record,item,index,e){if(!this.isPreventDrag(e,record,item,index)){this.view.focus();this.handleMouseDown(e);if(view.getSelectionModel().selectionMode=='MULTI'&&!e.ctrlKey&&view.getSelectionModel().isSelected(record)){return false;}}},isPreventDrag:function(e){return false;},getDragData:function(e){var view=this.view,item=e.getTarget(view.getItemSelector());if(item){return{copy:view.copy||(view.allowCopy&&e.ctrlKey),event:new Ext.EventObjectImpl(e),view:view,ddel:this.ddel,item:item,records:view.getSelectionModel().getSelection(),fromPosition:Ext.fly(item).getXY()};}},onInitDrag:function(x,y){var me=this,data=me.dragData,view=data.view,selectionModel=view.getSelectionModel(),record=view.getRecord(data.item),e=data.event;if(!selectionModel.isSelected(record)){selectionModel.select(record,true);}
data.records=selectionModel.getSelection();me.ddel.update(me.getDragText());me.proxy.update(me.ddel.dom);me.onStartDrag(x,y);return true;},getDragText:function(){var count=this.dragData.records.length;return Ext.String.format(this.dragText,count,count==1?'':'s');},getRepairXY:function(e,data){return data?data.fromPosition:false;}});Ext.define('Ext.ux.grid.filter.NumericFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.numeric',uses:['Ext.form.field.Number'],createMenu:function(config){var me=this,menu;menu=Ext.create('Ext.ux.grid.menu.RangeMenu',config);menu.on('update',me.fireUpdate,me);return menu;},getValue:function(){return this.menu.getValue();},setValue:function(value){this.menu.setValue(value);},isActivatable:function(){var values=this.getValue(),key;for(key in values){if(values[key]!==undefined){return true;}}
return false;},getSerialArgs:function(){var key,args=[],values=this.menu.getValue();for(key in values){args.push({type:'numeric',comparison:key,value:values[key]});}
return args;},validateRecord:function(record){var val=record.get(this.dataIndex),values=this.getValue(),isNumber=Ext.isNumber;if(isNumber(values.eq)&&val!=values.eq){return false;}
if(isNumber(values.lt)&&val>=values.lt){return false;}
if(isNumber(values.gt)&&val<=values.gt){return false;}
return true;}});Ext.define('Ext.ShadowPool',{singleton:true,requires:['Ext.DomHelper'],markup:(function(){return Ext.String.format('<div class="{0}{1}-shadow" role="presentation"></div>',Ext.baseCSSPrefix,Ext.isIE&&!Ext.supports.CSS3BoxShadow?'ie':'css');}()),shadows:[],pull:function(){var sh=this.shadows.shift();if(!sh){sh=Ext.get(Ext.DomHelper.insertHtml("beforeBegin",document.body.firstChild,this.markup));sh.autoBoxAdjust=false;}
return sh;},push:function(sh){this.shadows.push(sh);},reset:function(){var shadows=[].concat(this.shadows),s,sLen=shadows.length;for(s=0;s<sLen;s++){shadows[s].remove();}
this.shadows=[];}});Ext.define('Ext.view.DropZone',{extend:'Ext.dd.DropZone',indicatorHtml:'<div class="'+Ext.baseCSSPrefix+'grid-drop-indicator-left"></div><div class="'+Ext.baseCSSPrefix+'grid-drop-indicator-right"></div>',indicatorCls:Ext.baseCSSPrefix+'grid-drop-indicator',constructor:function(config){var me=this;Ext.apply(me,config);if(!me.ddGroup){me.ddGroup='view-dd-zone-'+me.view.id;}
me.callParent([me.view.el]);},fireViewEvent:function(){var me=this,result;me.lock();result=me.view.fireEvent.apply(me.view,arguments);me.unlock();return result;},getTargetFromEvent:function(e){var node=e.getTarget(this.view.getItemSelector()),mouseY,nodeList,testNode,i,len,box;if(!node){mouseY=e.getPageY();for(i=0,nodeList=this.view.getNodes(),len=nodeList.length;i<len;i++){testNode=nodeList[i];box=Ext.fly(testNode).getBox();if(mouseY<=box.bottom){return testNode;}}}
return node;},getIndicator:function(){var me=this;if(!me.indicator){me.indicator=new Ext.Component({html:me.indicatorHtml,cls:me.indicatorCls,ownerCt:me.view,floating:true,shadow:false});}
return me.indicator;},getPosition:function(e,node){var y=e.getXY()[1],region=Ext.fly(node).getRegion(),pos;if((region.bottom-y)>=(region.bottom-region.top)/2){pos="before";}else{pos="after";}
return pos;},containsRecordAtOffset:function(records,record,offset){if(!record){return false;}
var view=this.view,recordIndex=view.indexOf(record),nodeBefore=view.getNode(recordIndex+offset),recordBefore=nodeBefore?view.getRecord(nodeBefore):null;return recordBefore&&Ext.Array.contains(records,recordBefore);},positionIndicator:function(node,data,e){var me=this,view=me.view,pos=me.getPosition(e,node),overRecord=view.getRecord(node),draggingRecords=data.records,indicatorY;if(!Ext.Array.contains(draggingRecords,overRecord)&&(pos=='before'&&!me.containsRecordAtOffset(draggingRecords,overRecord,-1)||pos=='after'&&!me.containsRecordAtOffset(draggingRecords,overRecord,1))){me.valid=true;if(me.overRecord!=overRecord||me.currentPosition!=pos){indicatorY=Ext.fly(node).getY()-view.el.getY()-1;if(pos=='after'){indicatorY+=Ext.fly(node).getHeight();}
me.getIndicator().setWidth(Ext.fly(view.el).getWidth()).showAt(0,indicatorY);me.overRecord=overRecord;me.currentPosition=pos;}}else{me.invalidateDrop();}},invalidateDrop:function(){if(this.valid){this.valid=false;this.getIndicator().hide();}},onNodeOver:function(node,dragZone,e,data){var me=this;if(!Ext.Array.contains(data.records,me.view.getRecord(node))){me.positionIndicator(node,data,e);}
return me.valid?me.dropAllowed:me.dropNotAllowed;},notifyOut:function(node,dragZone,e,data){var me=this;me.callParent(arguments);delete me.overRecord;delete me.currentPosition;if(me.indicator){me.indicator.hide();}},onContainerOver:function(dd,e,data){var me=this,view=me.view,count=view.store.getCount();if(count){me.positionIndicator(view.getNode(count-1),data,e);}
else{delete me.overRecord;delete me.currentPosition;me.getIndicator().setWidth(Ext.fly(view.el).getWidth()).showAt(0,0);me.valid=true;}
return me.dropAllowed;},onContainerDrop:function(dd,e,data){return this.onNodeDrop(dd,null,e,data);},onNodeDrop:function(node,dragZone,e,data){var me=this,dropHandled=false,dropHandlers={wait:false,processDrop:function(){me.invalidateDrop();me.handleNodeDrop(data,me.overRecord,me.currentPosition);dropHandled=true;me.fireViewEvent('drop',node,data,me.overRecord,me.currentPosition);},cancelDrop:function(){me.invalidateDrop();dropHandled=true;}},performOperation=false;if(me.valid){performOperation=me.fireViewEvent('beforedrop',node,data,me.overRecord,me.currentPosition,dropHandlers);if(dropHandlers.wait){return;}
if(performOperation!==false){if(!dropHandled){dropHandlers.processDrop();}}}
return performOperation;},destroy:function(){Ext.destroy(this.indicator);delete this.indicator;this.callParent();}});Ext.define('Ext.Shadow',{requires:['Ext.ShadowPool'],constructor:function(config){var me=this,adjusts,offset,rad;Ext.apply(me,config);if(!Ext.isString(me.mode)){me.mode=me.defaultMode;}
offset=me.offset;rad=Math.floor(offset/2);me.opacity=50;switch(me.mode.toLowerCase()){case"drop":if(Ext.supports.CSS3BoxShadow){adjusts={t:offset,l:offset,h:-offset,w:-offset};}
else{adjusts={t:-rad,l:-rad,h:-rad,w:-rad};}
break;case"sides":if(Ext.supports.CSS3BoxShadow){adjusts={t:offset,l:0,h:-offset,w:0};}
else{adjusts={t:-(1+rad),l:1+rad-2*offset,h:-1,w:rad-1};}
break;case"frame":if(Ext.supports.CSS3BoxShadow){adjusts={t:0,l:0,h:0,w:0};}
else{adjusts={t:1+rad-2*offset,l:1+rad-2*offset,h:offset-rad-1,w:offset-rad-1};}
break;}
me.adjusts=adjusts;},getShadowSize:function(){var me=this,offset=me.el?me.offset:0,result=[offset,offset,offset,offset],mode=me.mode.toLowerCase();if(me.el&&mode!=='frame'){result[0]=0;if(mode=='drop'){result[3]=0;}}
return result;},offset:4,defaultMode:"drop",boxShadowProperty:(function(){var property='boxShadow',style=document.documentElement.style;if(!('boxShadow'in style)){if('WebkitBoxShadow'in style){property='WebkitBoxShadow';}
else if('MozBoxShadow'in style){property='MozBoxShadow';}}
return property;}()),show:function(target){var me=this,index;target=Ext.get(target);if(!me.el){me.el=Ext.ShadowPool.pull();if(me.el.dom.nextSibling!=target.dom){me.el.insertBefore(target);}}
index=(parseInt(target.getStyle("z-index"),10)-1)||0;me.el.setStyle("z-index",me.zIndex||index);if(Ext.isIE&&!Ext.supports.CSS3BoxShadow){me.el.dom.style.filter="progid:DXImageTransform.Microsoft.alpha(opacity="+me.opacity+") progid:DXImageTransform.Microsoft.Blur(pixelradius="+(me.offset)+")";}
me.realign(target.getLocalX(),target.getLocalY(),target.dom.offsetWidth,target.dom.offsetHeight);me.el.dom.style.display="block";},isVisible:function(){return this.el?true:false;},realign:function(l,t,targetWidth,targetHeight){if(!this.el){return;}
var adjusts=this.adjusts,d=this.el.dom,targetStyle=d.style,shadowWidth,shadowHeight,sws,shs;targetStyle.left=(l+adjusts.l)+"px";targetStyle.top=(t+adjusts.t)+"px";shadowWidth=Math.max(targetWidth+adjusts.w,0);shadowHeight=Math.max(targetHeight+adjusts.h,0);sws=shadowWidth+"px";shs=shadowHeight+"px";if(targetStyle.width!=sws||targetStyle.height!=shs){targetStyle.width=sws;targetStyle.height=shs;if(Ext.supports.CSS3BoxShadow){targetStyle[this.boxShadowProperty]='0 0 '+this.offset+'px #888';}}},hide:function(){var me=this;if(me.el){me.el.dom.style.display="none";Ext.ShadowPool.push(me.el);delete me.el;}},setZIndex:function(z){this.zIndex=z;if(this.el){this.el.setStyle("z-index",z);}},setOpacity:function(opacity){if(this.el){if(Ext.isIE&&!Ext.supports.CSS3BoxShadow){opacity=Math.floor(opacity*100/2)/100;}
this.opacity=opacity;this.el.setOpacity(opacity);}}});Ext.define('Ext.grid.ViewDropZone',{extend:'Ext.view.DropZone',indicatorHtml:'<div class="'+Ext.baseCSSPrefix+'grid-drop-indicator-left"></div><div class="'+Ext.baseCSSPrefix+'grid-drop-indicator-right"></div>',indicatorCls:Ext.baseCSSPrefix+'grid-drop-indicator',handleNodeDrop:function(data,record,position){var view=this.view,store=view.getStore(),index,records,i,len;if(data.copy){records=data.records;data.records=[];for(i=0,len=records.length;i<len;i++){data.records.push(records[i].copy());}}else{data.view.store.remove(data.records,data.view===view);}
index=store.indexOf(record);if(position!=='before'){index++;}
store.insert(index,data.records);view.getSelectionModel().select(data.records);}});Ext.define('PumaMain.controller.Dataview',{extend:'Ext.app.Controller',views:[],requires:[],init:function(){this.colorBackComp={'ff0000':'ff4c39','00ff00':'34ea81','0000ff':'39b0ff','ffff00':'ffde58','00ffff':'5c6d7e','ff00ff':'d97dff'}},checkLoading:function(){var runner=new Ext.util.TaskRunner();var task=null;var me=this;task=runner.start({run:function(){var loading=false;Ext.StoreMgr.each(function(store){if(store.isLoading()){loading=true;return false;}})
if(!loading){me.onLoadingFinished();runner.destroy();}},interval:1000})},onLoadingFinished:function(){var me=this;if(Config.dataviewId){Ext.Ajax.request({url:Config.url+'/rest/dataview/'+Config.dataviewId,scope:this,success:function(response){var respText=response.responseText
for(var oldColor in this.colorBackComp){respText=respText.replace(oldColor,this.colorBackComp[oldColor]);}
var cfg=JSON.parse(respText).data;if(!cfg.length){alert('No such dataview');return;}
Config.cfg=cfg[0].conf;me.getController('ViewMng').onDataviewLoad();}})}},onDatasetLoad:function(){var recs=Ext.StoreMgr.lookup('activedataset').getRange();var confs=[];for(var i=0;i<recs.length;i++){confs.push({text:recs[i].get('name'),objId:recs[i].get('_id'),allowDepress:false})}
var container=Ext.ComponentQuery.query('initialbar #datasetcontainer')[0]
container.add(confs);var search=window.location.search.split('?')[1];var id=search?search.split('=')[1]:null;if(id){Ext.Ajax.request({url:Config.url+'/api/urlview/getView',params:{_id:id},scope:this,success:function(response){var cfg=JSON.parse(response.responseText).data;Config.cfg=cfg;var datasetBtn=Ext.ComponentQuery.query('initialbar #datasetcontainer button[objId='+cfg.dataset+']')[0];datasetBtn.toggle();this.getController('LocationTheme').onDatasetChange();}})}},onThemeLoad:function(){}});Ext.define('Puma.view.LoginWindow',{extend:'Ext.window.Window',alias:'widget.loginwindow',requires:['Ext.button.Button','Ext.form.field.Display','Ext.form.field.Text'],padding:5,initComponent:function(){var me=this;this.form={xtype:'form',frame:true,padding:10,items:[{xtype:'textfield',fieldLabel:'User',margin:'5 0',itemId:'username'},{xtype:'textfield',fieldLabel:'Password',inputType:'password',margin:'5 0',itemId:'password'}],buttons:[{xtype:'button',text:'Login',margin:'5 0',itemId:'loginbtn'},{xtype:'button',text:'Cancel',margin:'5 0',handler:function(){me.close();}}]}
this.items=[this.form]
this.callParent();}})
Ext.define('Puma.controller.Login',{extend:'Ext.app.Controller',views:[],requires:['Ext.window.MessageBox','Puma.view.LoginWindow'],init:function(){this.control({'loginheader':{loginclick:this.onLoginClicked,logoutclick:this.onLogoutClicked},'loginwindow #loginbtn':{click:this.onLoginSubmit}})
this.checkLogin();var me=this
$('.login').click(function(){me.onLoginClicked();})
$('.signup').click(function(){if($(this).html()=='Logout'){me.onLogoutClicked();}
else{window.open(Config.signupAddress,"_blank")}})},onLoginClicked:function(btn){var window=Ext.WindowManager.get('loginwindow');if(!window){window=Ext.widget('loginwindow',{id:'loginwindow'})}
Ext.ComponentQuery.query('#password',window)[0].setValue('');window.show();},onLoginSubmit:function(btn){var form=btn.up('form');var userName=form.getComponent('username').getValue();var pass=form.getComponent('password').getValue();var me=this;Ext.Ajax.request({url:Config.url+'/api/login/login',params:{username:userName,password:pass},success:function(response){me.checkLogin(true)}})},onLogoutClicked:function(){var me=this;Ext.Ajax.request({url:Config.url+'/api/login/logout',success:function(response){Config.auth=null;me.onChangeLoginState(false);}})},checkLogin:function(fromLogin){var me=this;Ext.Ajax.request({url:Config.url+'/api/login/getLoginInfo',success:function(response){var response=JSON.parse(response.responseText);if(fromLogin&&!response.data){Ext.Msg.alert('Error','Bad credentials');Ext.ComponentQuery.query('loginwindow #password')[0].setValue('');return;}
Config.auth=response.data||null;me.onChangeLoginState(response.data?true:false);}})},onChangeLoginState:function(loggedIn){var cmp=Ext.ComponentQuery.query('loginheader #logintext')[0]
if(!cmp){var window=Ext.WindowManager.get('loginwindow');if(window){window.close();}
$('.login').html(Config.auth?Config.auth.userName:'Login')
$('.signup').html(Config.auth?'Logout':'Sign up')
this.application.fireEvent('login',loggedIn);return;}
var text='Not logged in'
if(loggedIn){text='Logged in as '+Config.auth.userName;var window=Ext.WindowManager.get('loginwindow');if(window){window.close();}}
Ext.ComponentQuery.query('loginheader #logintext')[0].update(text);Ext.ComponentQuery.query('loginheader #loginbtn')[0].setVisible(!loggedIn)
Ext.ComponentQuery.query('loginheader #logoutbtn')[0].setVisible(loggedIn);this.application.fireEvent('login',loggedIn);}});OpenLayers.Format.SLD.Geoserver23=OpenLayers.Class(OpenLayers.Format.SLD.v1_0_0_GeoServer,{namespaces:{sld:"http://www.opengis.net/sld",ogc:"http://www.opengis.net/ogc",gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},writeOgcExpression:function(value,node,props){if(value instanceof OpenLayers.Filter.Function){var child=this.writeNode("ogc:Function",value,node);;node.appendChild(child);return node;}else{return this.writers.sld._OGCExpression.call(this,null,value,props,node)}},getFilterType:function(filter){var filterType=this.filterMap[filter.type];if(!filterType){return'ogc:Function'}
return filterType;},writers:OpenLayers.Util.applyDefaults({"sld":OpenLayers.Util.applyDefaults({"_OGCExpression":function(nodeName,value,props,node){if(!node&&props){node=this.createElementNSPlus(nodeName,props);}
else if(!node){node=this.createElementNSPlus(nodeName);}
var tokens=typeof value=="string"?value.split("${"):[value];var item,last;if(tokens.length>1){item=tokens[1];last=item.indexOf("}");this.writeNode("ogc:PropertyName",{property:item.substring(0,last)},node);}
else{node.appendChild(this.createElementNSPlus("ogc:Literal",{value:value}));}
return node;},"PointSymbolizer":function(obj){var node=this.createElementNSPlus("sld:PointSymbolizer");this.writeNode("Graphic",obj,node);if(obj.geometry){this.writeNode("Geometry",obj.geometry,node);}
return node;},"CssParameter":function(obj){var nodeProps={attributes:{name:this.getCssProperty(obj.key)}}
if(!(obj.symbolizer[obj.key]instanceof OpenLayers.Filter.Function)){return this.writers.sld._OGCExpression.call(this,"sld:CssParameter",obj.symbolizer[obj.key],nodeProps);}
else{var node=this.createElementNSPlus("sld:CssParameter",nodeProps);var child=this.writeNode("ogc:Function",obj.symbolizer[obj.key],node);node.appendChild(child);return node;}},"Radius":function(value){var node=null
if(!(value instanceof OpenLayers.Filter.Function)){node=this.writers.sld._OGCExpression.call(this,"sld:Radius",value);}
else{var node=this.createElementNSPlus("sld:Radius");var child=this.writeNode("ogc:Function",value,node);node.appendChild(child);}
return node;},"Label":function(label){var node=null
if(!(label instanceof OpenLayers.Filter.Function)){node=this.writers.sld._OGCExpression.call(this,"sld:Label",label);}
else{var node=this.createElementNSPlus("sld:Label");var child=this.writeNode("ogc:Function",label,node);node.appendChild(child);}
return node},"Size":function(value){var node=null
if(!(value instanceof OpenLayers.Filter.Function)){node=this.writers.sld._OGCExpression.call(this,"sld:Size",value);}
else{var node=this.createElementNSPlus("sld:Size");var child=this.writeNode("ogc:Function",value,node);node.appendChild(child);}
return node;},"Rotation":function(value){var node=null
if(!(value instanceof OpenLayers.Filter.Function)){node=this.writers.sld._OGCExpression.call(this,"sld:Rotation",value);}
else{var node=this.createElementNSPlus("sld:Rotation");var child=this.writeNode("ogc:Function",value,node);node.appendChild(child);}
return node;},"Graphic":function(symbolizer){var node=this.createElementNSPlus("sld:Graphic");if(symbolizer.externalGraphic!=undefined){this.writeNode("ExternalGraphic",symbolizer,node);}else{this.writeNode("Mark",symbolizer,node);}
if(symbolizer.graphicOpacity!=undefined){this.writeNode("Opacity",symbolizer.graphicOpacity,node);}
if(symbolizer.pointRadius!=undefined){this.writeNode("Size",symbolizer.pointRadius,node);}else if(symbolizer.graphicWidth!=undefined){this.writeNode("Size",symbolizer.graphicWidth,node);}
if(symbolizer.rotation!=undefined){this.writeNode("Rotation",symbolizer.rotation,node);}
return node;}},OpenLayers.Format.SLD.v1.prototype.writers.sld),"ogc":OpenLayers.Util.applyDefaults({"Function":function(filter){var node=null;if(filter.name in{Div:true,Sub:true,Add:true,Mul:true}){node=this.createElementNSPlus("ogc:"+filter.name);}
else{node=this.createElementNSPlus("ogc:Function",{attributes:{name:filter.name}})};var params=filter.params;for(var i=0,len=params.length;i<len;i++){this.writeOgcExpression(params[i],node);}
return node;},"PropertyIsNull":function(filter){var node=this.createElementNSPlus("ogc:PropertyIsNull");this.writeNode("PropertyName",filter,node);return node;}},OpenLayers.Format.SLD.v1.prototype.writers.ogc)},OpenLayers.Format.SLD.v1.prototype.writers),CLASS_NAME:"OpenLayers.Format.SLD.Geoserver23"});OpenLayers.Format.Filter.v1.prototype.filterMap['NULL']="PropertyIsNull"
Ext.Loader.setConfig({enabled:true,disableCaching:false});Ext.Loader.setPath('Ext.ux','ux');Ext.Loader.setPath('Gisatlib','gisatlib');Ext.Loader.setPath('Ext','extjs-4.1.3/src');Ext.Loader.setPath('Puma.patch','patch');Ext.Loader.setPath('Puma','_common');Ext.application({name:'PumaMain',appFolder:'_main',controllers:['DomManipulation','Render','Store','Map','LocationTheme','Area','Layers','Screenshot','AttributeConfig','Help','Filter','ViewMng','Login','Select','Chart'],enableQuickTips:true,requires:['Ext.data.reader.Json','Ext.util.Point','Ext.Layer','Ext.window.Window','Ext.data.ArrayStore','Ext.data.proxy.Memory','Ext.data.reader.Array','Ext.util.Grouper','Ext.PluginManager','Ext.ComponentLoader','Ext.layout.Context','Ext.resizer.Resizer','Ext.panel.Tool','Ext.util.CSS','Ext.layout.component.Body','Ext.Img','Ext.menu.Menu','Ext.data.Batch','Ext.selection.RowModel','Ext.selection.CellModel','Ext.selection.CheckboxModel','Ext.grid.PagingScroller','Ext.grid.header.Container','Ext.grid.column.Column','Ext.grid.Lockable','Ext.view.TableLayout','Ext.view.TableChunker','Ext.data.Request','Ext.grid.column.Number','Ext.layout.container.Accordion','Ext.picker.Color','Ext.tree.Panel','Ext.grid.column.Action','Ext.grid.plugin.DragDrop','Ext.layout.container.Table','Ext.form.field.Checkbox','Ext.ux.grid.FiltersFeature','PumaMain.view.Chart','PumaMain.view.VisualizationForm','Puma.view.CommonForm','Puma.view.CommonGrid','Gisatlib.form.HiddenStoreField','Ext.form.field.Hidden','PumaMain.view.ChartPanel','Ext.ux.grid.menu.ListMenu','Ext.ux.grid.menu.RangeMenu','Ext.ux.grid.filter.BooleanFilter','Ext.picker.Date','Ext.ux.grid.filter.DateTimeFilter','Ext.picker.Month','Ext.ux.grid.filter.ListFilter'],launch:function(){window.location.origin=window.location.origin||(window.location.protocol+'//'+window.location.hostname+(window.location.port?(':'+window.location.port):''))
if(Config.exportPage){this.getController('Export').initConf();return;}
Ext.tip.QuickTipManager.init();Ext.apply(Ext.tip.QuickTipManager.getQuickTip(),{cls:'standardqtip'});this.getController('Puma.controller.Login');var search=window.location.search.split('?')[1];var afterId=search?search.split('id=')[1]:null;var id=afterId?afterId.split('&')[0]:null;Config.dataviewId=id;if(id){this.getController('DomManipulation').renderApp();this.getController('Render').renderApp();this.getController('Render').renderMap();}
else{this.getController('Render').renderIntro();}}});